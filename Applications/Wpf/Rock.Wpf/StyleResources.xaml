<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:rockWpf="clr-namespace:Rock.Wpf">

    <!--  Brushes  -->
    <SolidColorBrush x:Key="WindowBackColor" Color="#ee7725" />
    <SolidColorBrush x:Key="WindowForeColor" Color="White" />
    <SolidColorBrush x:Key="GridHighlightColor" Color="Gray" />
    <SolidColorBrush x:Key="GridAlternateColor" Color="#efefef" />
    <SolidColorBrush x:Key="HorizontalGridLinesBrush" Color="#d4d4d4" />
    <SolidColorBrush x:Key="BorderBrush" Color="#d4d4d4" />
    <SolidColorBrush x:Key="PageBackgroundBrush" Color="#efefef" />
    <SolidColorBrush x:Key="PanelHeaderBrush" Color="#f3f3f3" />
    <SolidColorBrush x:Key="FontAwesomeIconColor" Color="#797979" />
    <SolidColorBrush x:Key="PanelBackgroundBrush" Color="#ffff" />
    <SolidColorBrush x:Key="BootstrapDanger" Color="#d4442e" />
    <SolidColorBrush x:Key="LabelColor" Color="#2b2b2b" />

    <!--
        Label Styles
    -->

    <!--  Label style  -->

    <Style x:Key="labelStyle" TargetType="{x:Type Label}">
        <Setter Property="Padding" Value="4,4,0,0" />
        <Setter Property="Label.HorizontalAlignment" Value="Left" />
        <Setter Property="Label.FontWeight" Value="Normal" />
        <Setter Property="Label.FontSize" Value="14" />
        <Setter Property="Label.Foreground" Value="{StaticResource LabelColor}" />
        <Setter Property="FontFamily" Value="./resources/#Roboto-Regular" />
    </Style>

    <Style x:Key="labelStyleSmall" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Roboto" />
        <Setter Property="Padding" Value="4,4,0,0" />
        <Setter Property="Label.HorizontalAlignment" Value="Left" />
        <Setter Property="Label.FontWeight" Value="Normal" />
        <Setter Property="Label.FontSize" Value="12" />
        <Setter Property="Label.Foreground" Value="#797979" />
    </Style>

    <Style
        x:Key="labelStyleSmallError"
        BasedOn="{StaticResource labelStyleSmall}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Foreground" Value="{StaticResource BootstrapDanger}" />
    </Style>


    <!--  Label style: Bold  -->
    <Style
        x:Key="labelStyleError"
        BasedOn="{StaticResource labelStyle}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Foreground" Value="{StaticResource BootstrapDanger}" />
    </Style>

    <!--  Label style: Bold  -->
    <Style
        x:Key="labelStyleBold"
        BasedOn="{StaticResource labelStyle}"
        TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="./resources/#Roboto-Medium" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style
        x:Key="labelStyleMedium"
        BasedOn="{StaticResource labelStyle}"
        TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="./resources/#Roboto-Medium" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <!--  Label style: Caption  -->
    <Style
        x:Key="labelStyleCaption"
        BasedOn="{StaticResource labelStyle}"
        TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="./resources/#Roboto-Bold" />
        <Setter Property="Label.FontWeight" Value="Bold" />
        <Setter Property="Label.FontSize" Value="16" />
    </Style>

    <Style
        x:Key="labelStyleCaptionError"
        BasedOn="{StaticResource labelStyleCaption}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Foreground" Value="{StaticResource BootstrapDanger}" />
    </Style>


    <!--  Label style: Title  -->
    <Style x:Key="labelStylePanelTitle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="./resources/#Roboto-Bold" />
        <Setter Property="Label.Margin" Value="0,2,0,0" />
        <Setter Property="Label.HorizontalAlignment" Value="Left" />
        <Setter Property="Label.FontWeight" Value="Normal" />
        <Setter Property="Label.FontSize" Value="16" />
        <Setter Property="Label.Foreground" Value="#6A6A6A" />
    </Style>

    <!--  Label style: Title  -->
    <Style x:Key="labelStyleTitle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="./resources/##Roboto-Bold" />
        <Setter Property="Label.Margin" Value="20,0,0,10" />
        <Setter Property="Label.VerticalAlignment" Value="Center" />
        <Setter Property="Label.HorizontalAlignment" Value="Right" />
        <Setter Property="Label.FontWeight" Value="Bold" />
        <Setter Property="Label.FontSize" Value="30" />
        <Setter Property="Label.Foreground" Value="#d6d6d6" />
    </Style>

    <!--  Label style: Legend  -->
    <Style x:Key="labelStyleLegend" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="./resources/#Roboto-Medium" />
        <Setter Property="Label.Margin" Value="0,0,0,0" />
        <Setter Property="Label.VerticalAlignment" Value="Center" />
        <Setter Property="Label.HorizontalAlignment" Value="Left" />
        <Setter Property="Label.FontWeight" Value="SemiBold" />
        <Setter Property="Label.FontSize" Value="21" />
        <Setter Property="Label.Foreground" Value="#6a6a6a" />
    </Style>

    <!--  *** Banner ***  -->

    <!--  Panel Default  -->
    <Style x:Key="stackPanelDefault" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="#ffffff" />
    </Style>
    <!--  Panel Style: panelBanner  -->
    <Style x:Key="panelBanner" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="#dbd5cb" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>

    <!--  Label style: Banner Title  -->
    <Style x:Key="labelStyleBannerTitle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="./resources/#Roboto-Bold" />
        <Setter Property="Label.FontWeight" Value="Bold" />
        <Setter Property="Label.FontSize" Value="28" />
        <Setter Property="Label.Foreground" Value="#6a6a6a" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="4,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <!--  Label style: Banner Text  -->
    <Style x:Key="labelStyleBannerText" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="./resources/#Roboto-Light" />
        <Setter Property="Label.FontWeight" Value="Normal" />
        <Setter Property="Label.FontSize" Value="28" />
        <Setter Property="Label.Foreground" Value="#6a6a6a" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <!--  Grid style: PanelGrid  -->
    <Style x:Key="gridPanel" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#ffffff" />
    </Style>

    <Style x:Key="gridPanelBorderColumn" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="44" />
    </Style>

    <Style x:Key="gridPanelBorderRow" TargetType="{x:Type RowDefinition}">
        <Setter Property="Height" Value="44" />
    </Style>

    <!--  Logo style: bottom right  -->
    <Style x:Key="logoStyleBottomRight" TargetType="{x:Type Frame}">
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Padding" Value="16" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.15" ScaleY="0.15" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Label style: Alert  -->
    <Style x:Key="labelStyleAlertBase" TargetType="Label">
        <Setter Property="Padding" Value="10" />
        <Setter Property="FontFamily" Value="Roboto-Medium" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="BorderThickness" Value="0,2,0,0" />
        <Setter Property="Margin" Value="10" />
    </Style>

    <Style
        x:Key="labelStyleAlertInfo"
        BasedOn="{StaticResource labelStyleAlertBase}"
        TargetType="Label">
        <Setter Property="Background" Value="#ecf9fd" />
        <Setter Property="Foreground" Value="#31708f" />
        <Setter Property="BorderBrush" Value="#009ce3" />
    </Style>

    <Style
        x:Key="labelStyleAlertSuccess"
        BasedOn="{StaticResource labelStyleAlertBase}"
        TargetType="Label">
        <Setter Property="Background" Value="#eaf6ef" />
        <Setter Property="Foreground" Value="#108043" />
        <Setter Property="BorderBrush" Value="#16c98d" />
    </Style>

    <Style
        x:Key="labelStyleAlertWarning"
        BasedOn="{StaticResource labelStyleAlertBase}"
        TargetType="Label">
        <Setter Property="Background" Value="#fffae5" />
        <Setter Property="Foreground" Value="#8a6d3b" />
        <Setter Property="BorderBrush" Value="#ffc870" />
    </Style>

    <Style
        x:Key="labelStyleAlertDanger"
        BasedOn="{StaticResource labelStyleAlertBase}"
        TargetType="Label">
        <Setter Property="Background" Value="#fcf2f1" />
        <Setter Property="Foreground" Value="#e55235" />
        <Setter Property="BorderBrush" Value="{StaticResource BootstrapDanger}" />
    </Style>


    <!--  Label style: Grid Title  -->
    <Style
        x:Key="labelStyleGridTitle"
        BasedOn="{StaticResource labelStyleLegend}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.FontSize" Value="14" />
    </Style>

    <!--  Label style: dt (Bootstrap Definition Title)  -->
    <Style
        x:Key="labelStyleDt"
        BasedOn="{StaticResource labelStyle}"
        TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="./resources/#Roboto-Medium" />
        <Setter Property="Label.FontWeight" Value="SemiBold" />
    </Style>

    <!--  Label style: dd (Bootstrap Definition definition)  -->
    <Style
        x:Key="labelStyleDd"
        BasedOn="{StaticResource labelStyle}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Margin" Value="0,0,0,8" />
    </Style>

    <!--  Label style: Icon (FontAwesome Icon)  -->
    <Style x:Key="labelStyleIcon" TargetType="{x:Type Label}">
        <Setter Property="Padding" Value="0,0,4,0" />
        <Setter Property="Label.HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="./resources/#FontAwesome" />
        <Setter Property="Label.FontWeight" Value="Normal" />
        <Setter Property="Label.Foreground" Value="#000" />
    </Style>

    <Style
        x:Key="labelStyleIconPrimary"
        BasedOn="{StaticResource labelStyleIcon}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Foreground" Value="#fff" />
    </Style>

    <Style
        x:Key="labelStyleIconRight"
        BasedOn="{StaticResource labelStyleIcon}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Margin" Value="4,6,0,4" />
    </Style>

    <Style
        x:Key="labelStyleIconLeft"
        BasedOn="{StaticResource labelStyleIcon}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Margin" Value="0,6,0,4" />
    </Style>

    <Style
        x:Key="labelStyleIconPrimaryRight"
        BasedOn="{StaticResource labelStyleIconPrimary}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Margin" Value="4,6,0,4" />
    </Style>

    <Style
        x:Key="labelStyleIconPrimaryLeft"
        BasedOn="{StaticResource labelStyleIconPrimary}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Margin" Value="0,6,0,4" />
    </Style>

    <Style
        x:Key="labelStyleHighlight"
        BasedOn="{StaticResource labelStyleIcon}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Padding" Value="6,3,6,3" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="11" />
    </Style>

    <Style
        x:Key="labelStyleHighlightDefault"
        BasedOn="{StaticResource labelStyleHighlight}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Background" Value="#6a6a6a" />
        <Setter Property="Label.Foreground" Value="#ffffff" />
    </Style>

    <Style
        x:Key="labelStyleHighlightInfo"
        BasedOn="{StaticResource labelStyleHighlight}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Background" Value="#3bc2df" />
        <Setter Property="Label.Foreground" Value="#ffffff" />
    </Style>

    <!--  Label style: Button Text  -->
    <Style x:Key="labelStyleButtonText" TargetType="{x:Type Label}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Label.HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Label.FontWeight" Value="Normal" />
        <Setter Property="Label.Foreground" Value="#000" />
    </Style>

    <Style
        x:Key="labelStyleButtonTextPrimary"
        BasedOn="{StaticResource labelStyleButtonText}"
        TargetType="{x:Type Label}">
        <Setter Property="Label.Foreground" Value="White" />
    </Style>

    <!--  Textblock Style: Title Paragraph  -->
    <Style x:Key="textBlockStyleTitleParagraph" TargetType="{x:Type TextBlock}">
        <Setter Property="Label.Margin" Value="0,0,0,0" />
        <Setter Property="Label.VerticalAlignment" Value="Center" />
        <Setter Property="Label.HorizontalAlignment" Value="Left" />
        <Setter Property="Label.FontWeight" Value="Normal" />
        <Setter Property="Label.FontSize" Value="14" />
        <Setter Property="Label.Foreground" Value="#6a6a6a" />
    </Style>

    <!--  Textblock Style: Grid Data  -->
    <Style x:Key="textBlockStyleGridDataTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="./resources/#Roboto-Medium" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="textBlockStyleGridData" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <!--
        Grid related Styles
    -->

    <!--  Grid Style  -->
    <Style x:Key="gridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#efefef" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>



    <!--  Grid Column Header style  -->
    <Style x:Key="gridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="FontFamily" Value="./resources/#Roboto-Bold" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource LabelColor}" />
        <Setter Property="Background" Value="#efefef" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="#dddddd" />
    </Style>


    <Style
        x:Key="gridHeaderStyleWide"
        BasedOn="{StaticResource gridHeaderStyle}"
        TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Width" Value="450" />
    </Style>

    <Style
        x:Key="gridHeaderStyleNumber"
        BasedOn="{StaticResource gridHeaderStyle}"
        TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Right" />
    </Style>

    <Style
        x:Key="gridHeaderStyleDateTime"
        BasedOn="{StaticResource gridHeaderStyleNumber}"
        TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Width" Value="180" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>

    <Style
        x:Key="gridHeaderStyleCurrency"
        BasedOn="{StaticResource gridHeaderStyleNumber}"
        TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Width" Value="120" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
    </Style>

    <Style
        x:Key="gridHeaderStyleActions"
        BasedOn="{StaticResource gridHeaderStyle}"
        TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <!--  Grid Cell Style  -->
    <Style x:Key="gridCellStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#d4d4d4" />
                <Setter Property="Foreground" Value="#2b2b2b" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="MinHeight" Value="38" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />

        <!--  from http://stackoverflow.com/a/3995839/1755417  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style
        x:Key="gridCellStyleIfVariance"
        BasedOn="{StaticResource gridCellStyle}"
        TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#d4d4d4" />
                <Setter Property="Foreground" Value="{StaticResource LabelColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="gridCellStyleNumberAlignRight"
        BasedOn="{StaticResource gridCellStyle}"
        TargetType="{x:Type DataGridCell}" />
    <Style
        x:Key="gridCellStyleNumber"
        BasedOn="{StaticResource gridCellStyle}"
        TargetType="{x:Type DataGridCell}">
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <Style
        x:Key="gridCellStyleDateTime"
        BasedOn="{StaticResource gridCellStyle}"
        TargetType="{x:Type DataGridCell}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="ContentStringFormat" Value="g" />
        <Setter Property="Width" Value="180" />
    </Style>

    <Style
        x:Key="gridCellStyleAmount"
        BasedOn="{StaticResource gridCellStyle}"
        TargetType="{x:Type DataGridCell}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="ContentStringFormat" Value="g" />
        <Setter Property="Width" Value="180" />
    </Style>

    <!--
        Button styles
    -->

    <!--  Button Style  -->
    <Style x:Key="buttonStyle" TargetType="{x:Type ButtonBase}">
        <Style.Resources>
            <SolidColorBrush x:Key="focusBackgroundColor" Color="{TemplateBinding Button.Background}" />
            <SolidColorBrush x:Key="focusBorderBrush" Color="{TemplateBinding Button.BorderBrush}" />
        </Style.Resources>
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="Background" Value="#efefef" />
        <Setter Property="BorderBrush" Value="#c4c4c4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        Name="buttonBorder"
                        Padding="12,0,12,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            ToolTip="{TemplateBinding ToolTip}"
                            ToolTipService.ShowOnDisabled="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonBorder" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="buttonBorder" Property="Opacity" Value=".35" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="buttonBorder" Property="BorderBrush" Value="{DynamicResource focusBorderBrush}" />
                            <Setter TargetName="buttonBorder" Property="Background" Value="{DynamicResource focusBackgroundColor}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="#ee7624" />
                            <Setter Property="Foreground" Value="#fefefe" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Button Style: Action  -->
    <Style
        x:Key="buttonStyleAction"
        BasedOn="{StaticResource buttonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#fff" />
        <Setter Property="Background" Value="#466673" />
        <Setter Property="BorderBrush" Value="#c4c4c4" />
    </Style>

    <!--  Font Awesome Button Primary  -->
    <!--  Button Style: Primary  -->
    <Style
        x:Key="buttonFontAwesomStylePrimary"
        BasedOn="{StaticResource buttonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#797979" />
        <Setter Property="Background" Value="#efefef" />
        <Setter Property="BorderBrush" Value="#b7b7b7" />

    </Style>
    <Style
        x:Key="buttonStylePrimary"
        BasedOn="{StaticResource buttonStyle}"
        TargetType="{x:Type Button}">
        <Style.Resources>
            <SolidColorBrush x:Key="focusBackgroundColor" Color="#d05e10" />
            <SolidColorBrush x:Key="focusBorderBrush" Color="#893e0b" />
        </Style.Resources>
        <Setter Property="Foreground" Value="#fefefe" />
        <Setter Property="Background" Value="#ee7624" />
        <Setter Property="BorderBrush" Value="#c4c4c4" />
    </Style>
    <Style
        x:Key="buttonStyleAlternate"
        BasedOn="{StaticResource buttonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource LabelColor}" />
        <Setter Property="Background" Value="#fefefe" />
        <Setter Property="BorderBrush" Value="#c4c4c4" />
        <Setter Property="BorderBrush" Value="#c4c4c4" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontFamily" Value="Robot-bold" />

    </Style>

    <!--  Button Style: Secondary  -->
    <Style
        x:Key="buttonStyleSecondary"
        BasedOn="{StaticResource buttonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#007acc" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontFamily" Value="Robot-bold" />
    </Style>
    <!--  ToggleButton Style  -->
    <Style
        x:Key="toggleButtonStyle"
        BasedOn="{StaticResource buttonStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource LabelColor}" />
        <Setter Property="Background" Value="#fefefe" />
        <Setter Property="BorderBrush" Value="#c4c4c4" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="50" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontFamily" Value="Roboto-Regular" />
    </Style>

    <!--  Button Style: Mini  -->
    <Style
        x:Key="buttonStyleMini"
        BasedOn="{StaticResource buttonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <!--  Button Style: Mini Action  -->
    <Style
        x:Key="buttonStyleMiniAction"
        BasedOn="{StaticResource buttonStyleAction}"
        TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <!--  Button Style: Mini Icon  -->
    <Style
        x:Key="buttonStyleMiniIcon"
        BasedOn="{StaticResource buttonStyleMini}"
        TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="./resources/#FontAwesome" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="36" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <!--  Button Style: Mini Icon Danger  -->
    <Style
        x:Key="buttonStyleMiniIconDanger"
        BasedOn="{StaticResource buttonStyleMiniIcon}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#fff" />
        <Setter Property="Background" Value="#e03737" />
        <Setter Property="BorderBrush" Value="#982b2b" />
    </Style>

    <!--  Button Style: Primary Mini  -->
    <Style
        x:Key="buttonStylePrimaryMini"
        BasedOn="{StaticResource buttonStylePrimary}"
        TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <!--
        Border Styles
    -->

    <Style x:Key="borderStylePanelTitle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#efefef" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="BorderBrush" Value="#e2e2e2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <Style x:Key="borderStyleWell" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#ffffff" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Padding" Value="6,10" />
        <Setter Property="BorderBrush" Value="#e2e2e2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <!--
        Input Styles
    -->
    <Style x:Key="inputStyleBase" TargetType="{x:Type Control}">
        <Setter Property="Margin" Value="4,4,0,0" />
        <Setter Property="Width" Value="210" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />

    </Style>

    <!--  Checkbox Style  -->
    <Style x:Key="checkboxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Height" Value="22" />
    </Style>

    <!--  Radiobutton Style  -->
    <Style x:Key="radioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="22" />
        <Setter Property="FontFamily" Value="Roboto-Regular" />

    </Style>

    <Style x:Key="indentStyle" TargetType="FrameworkElement">
        <Setter Property="Margin" Value="16,0,0,0" />
    </Style>

    <!--  Textbox Style  -->
    <Style
        x:Key="textboxStyle"
        BasedOn="{StaticResource ResourceKey=inputStyleBase}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource WindowBackColor}" />
                            <Setter Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource WindowBackColor}" />
                            <Setter Property="BorderThickness" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="textboxStyleCurrency"
        BasedOn="{StaticResource ResourceKey=textboxStyle}"
        TargetType="{x:Type TextBox}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="30" />
    </Style>

    <Style
        x:Key="textboxStyleCurrencyError"
        BasedOn="{StaticResource ResourceKey=textboxStyle}"
        TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="{StaticResource BootstrapDanger}" />
    </Style>

    <Style
        x:Key="textboxStyleMultiline"
        BasedOn="{StaticResource ResourceKey=textboxStyle}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="48" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style
        x:Key="textboxStyleError"
        BasedOn="{StaticResource ResourceKey=textboxStyle}"
        TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="{StaticResource BootstrapDanger}" />
    </Style>

    <!--  Textbox Style: url  -->
    <Style
        x:Key="textboxStyleUrl"
        BasedOn="{StaticResource ResourceKey=textboxStyle}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="420" />
    </Style>

    <!--  Date Picker Style  -->
    <Style
        x:Key="datePickerStyle"
        BasedOn="{StaticResource ResourceKey=inputStyleBase}"
        TargetType="{x:Type DatePicker}" />
    <Style
        x:Key="datePickerErrorStyle"
        BasedOn="{StaticResource ResourceKey=inputStyleBase}"
        TargetType="{x:Type DatePicker}">
        <Setter Property="BorderBrush" Value="{StaticResource BootstrapDanger}" />
    </Style>

    <!--  ComboBox Style  -->
    <Style
        x:Key="comboBoxStyle"
        BasedOn="{StaticResource ResourceKey=inputStyleBase}"
        TargetType="ComboBox" />

    <!--  ComboBox Style XL  -->
    <Style
        x:Key="comboBoxStyleXL"
        BasedOn="{StaticResource ResourceKey=comboBoxStyle}"
        TargetType="ComboBox">
        <Setter Property="Width" Value="320" />
    </Style>

    <!--  Page Styles  -->
    <Style x:Key="pageBackground" TargetType="{x:Type Page}">
        <Setter Property="Background" Value="#efefef" />
    </Style>
    <Style x:Key="pageBackgroundGrey" TargetType="{x:Type Page}">
        <Setter Property="Background" Value="#f3f3f4" />
    </Style>
    <Style x:Key="pageBackgroundLogin" TargetType="{x:Type Page}">
        <Setter Property="Background" Value="#dbd5cb" />
    </Style>

    <!--  Menu Style  -->
    <Style x:Key="menuStyle" TargetType="Menu">
        <Setter Property="Background" Value="#dbd5cb" />
    </Style>

    <Style x:Key="rowDefinitionActions" TargetType="RowDefinition">
        <Setter Property="Height" Value="55" />
    </Style>

    <Style x:Key="rowDefinitionPanelTitle" TargetType="RowDefinition">
        <Setter Property="Height" Value="70" />
    </Style>

    <Style x:Key="WindowButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        Name="buttonBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonBorder" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="buttonBorder" Property="Opacity" Value=".35" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" Value="#ee7624" />
                            <Setter Property="Foreground" Value="#fefefe" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        Name="buttonBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0">
                        <ContentPresenter
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonBorder" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="buttonBorder" Property="Opacity" Value=".35" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" Value="#ee7624" />
                            <Setter Property="Foreground" Value="#fefefe" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00000000" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#00000000" />
        </Style.Resources>
    </Style>



    <!--  Font Awesome Icons  -->
    <!--  String values needed for Font Awesome Icons  -->
    <!--  https://fontawesome.com/cheatsheet?from=io  -->
    <FontFamily x:Key="FontAwesome">./resources/#FontAwesome</FontFamily>


</ResourceDictionary>