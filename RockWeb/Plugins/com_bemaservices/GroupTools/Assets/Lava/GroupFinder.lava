<script src="https://unpkg.com/vue"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="https://unpkg.com/vue-multiselect@2.1.0"></script>
{% page where:'Guid == "86D1DB87-021E-49F3-A547-1E096667DF63"'%}
  {% for page in pageItems %}
    {% assign linkedPage = page %}
  {% endfor %}
{% endpage %}

{% assign groupTypeId = 0 %}
{% grouptype where:'Guid == "a4f16049-2525-426e-a6e8-cdfb7b198664"' securityenabled:'false' %}
  {% for groupType in grouptypeItems %}
    {% assign groupTypeId = groupType.Id %}
  {% endfor %}
{% endgrouptype %}

{% if groupTypeId == 0 %}
  {% grouptype where:'Guid == "50FCFB30-F51A-49DF-86F4-2B176EA1820B"' securityenabled:'false' %}
    {% for groupType in grouptypeItems %}
      {% assign groupTypeId = groupType.Id %}
    {% endfor %}
  {% endgrouptype %}
{% endif %}

{% if groupTypeId == 0 %}
  {% assign groupTypeId = 25 %}
{% endif %}

{% assign campusIdString = 'Global' | PageParameter:'CampusIds' | ToString %}
{% assign campusIds = campusIdString | Split:',' %}
{% capture selectedCampuses %}
  [{% if campusIdString != '' %}
    {% campus where:'IsActive == true' %}
      {% for campus in campusItems %}
        {% assign idString = campus.Id | ToString %}
        {% for campusId in campusIds %}
          {% if campusId == idString %}
            { Id:{{campus.Id}}, Name:'{{campus.Name | Replace:"'", "\'"}}'},
          {% endif %}
        {% endfor %}
      {% endfor %}
    {% endcampus %}
  {% else %}
    {% assign person = CurrentPerson %}
    {% if person != null %}
      {% assign campus = person | Campus %}
      {% if campus != empty %}
        { Id:{{campus.Id}}, Name:'{{campus.Name | Replace:"'", "\'"}}'},
      {% endif %}
    {% endif %}
  {% endif %}]
{% endcapture %}

{% capture campusData %}
  [{% campus where:'IsActive == true' %}
    {% for campus in campusItems %}
      { Id:{{campus.Id}}, Name:'{{campus.Name | Replace:"'", "\'"}}'},
    {% endfor %}
  {% endcampus %}]
{% endcapture %}

{% assign meetingDayString = 'Global' | PageParameter:'MeetingDays' | ToString %}
{% assign meetingDays = meetingDayString | Split:',' %}
{% capture selectedMeetingDays %}
  {% if meetingDayString != '' %}
    {% for meetingDay in meetingDays %}
      {% if meetingDay == '0' %}
        { value:0, text:'Sunday'},
      {% endif %}
      {% if meetingDay == '1' %}
        { value:1, text:'Monday'},
      {% endif %}
      {% if meetingDay == '2' %}
        { value:2, text:'Tuesday'},
      {% endif %}
      {% if meetingDay == '3' %}
        { value:3, text:'Wednesday'},
      {% endif %}
      {% if meetingDay == '4' %}
        { value:4, text:'Thursday'},
      {% endif %}
      {% if meetingDay == '5' %}
        { value:5, text:'Friday'},
      {% endif %}
      {% if meetingDay == '6' %}
        { value:6, text:'Saturday'},
      {% endif %}
      {% if meetingDay == '7' %}
        { value:7, text:'Other'},
      {% endif %}
    {% endfor %}
  {% endif %}
{% endcapture %}

{% assign categoryIdString = 'Global' | PageParameter:'CategoryIds' | ToString %}
{% assign categoryIds = categoryIdString | Split:',' %}
{% capture selectedCategories %}
  [{% if categoryIdString != '' %}
    {% definedtype where:'Guid == "8BF1BECD-9B0C-4689-8204-8405327DCBCF"' %}
      {% for definedtype in definedtypeItems %}
        {% for definedValue in definedtype.DefinedValues %}
          {% assign idString = definedValue.Id | ToString %}
          {% for categoryId in categoryIds %}
            {% if categoryId == idString %}
              { Id:{{definedValue.Id}}, Value:'{{definedValue.Value | Replace:"'", "\'"}}'},
            {% endif %}
          {% endfor %}
        {% endfor %}
      {% endfor %}
    {% enddefinedtype %}
  {% endif %}]
{% endcapture %}

{% capture categoryData %}
  [{% definedtype where:'Guid == "8BF1BECD-9B0C-4689-8204-8405327DCBCF"' %}
    {% for definedtype in definedtypeItems %}
      {% for definedValue in definedtype.DefinedValues %}
        { Id:{{definedValue.Id}}, Value:'{{definedValue.Value | Replace:"'", "\'"}}'},
      {% endfor %}
    {% endfor %}
  {% enddefinedtype %}]
{% endcapture %}

<style>
fieldset[disabled] .multiselect {
	pointer-events: none
}

.multiselect__spinner {
	position: absolute;
	right: 1px;
	top: 1px;
	width: 48px;
	height: 35px;
	background: #fff;
	display: block
}

.multiselect__spinner:after,
.multiselect__spinner:before {
	position: absolute;
	content: "";
	top: 50%;
	left: 50%;
	margin: -8px 0 0 -8px;
	width: 16px;
	height: 16px;
	border-radius: 100%;
	border-color: #41b883 transparent transparent;
	border-style: solid;
	border-width: 2px;
	box-shadow: 0 0 0 1px transparent
}

.multiselect__spinner:before {
	animation: a 2.4s cubic-bezier(.41, .26, .2, .62);
	animation-iteration-count: infinite
}

.multiselect__spinner:after {
	animation: a 2.4s cubic-bezier(.51, .09, .21, .8);
	animation-iteration-count: infinite
}

.multiselect__loading-enter-active,
.multiselect__loading-leave-active {
	transition: opacity .4s ease-in-out;
	opacity: 1
}

.multiselect__loading-enter,
.multiselect__loading-leave-active {
	opacity: 0
}

.multiselect,
.multiselect__input,
.multiselect__single {
	font-family: inherit;
	font-size: 16px;
	-ms-touch-action: manipulation;
	touch-action: manipulation
}

.multiselect {
	box-sizing: content-box;
	display: block;
	position: relative;
	width: 100%;
	min-height: 40px;
	text-align: left;
	color: #35495e
}

.multiselect * {
	box-sizing: border-box
}

.multiselect:focus {
	outline: none
}

.multiselect--disabled {
	opacity: .6
}

.multiselect--active {
	z-index: 1
}

.multiselect--active .multiselect__current,
.multiselect--active .multiselect__input,
.multiselect--active .multiselect__tags {
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0
}

.multiselect--active .multiselect__select {
	transform: rotate(180deg)
}

.multiselect__input,
.multiselect__single {
	position: relative;
	display: inline-block;
	min-height: 20px;
	line-height: 20px;
	border: none;
	border-radius: 5px;
	background: #fff;
	padding: 0 0 0 5px;
	width: 100%;
	transition: border .1s ease;
	box-sizing: border-box;
	margin-bottom: 8px;
	vertical-align: top
}

.multiselect__input::-webkit-input-placeholder {
	color: #35495e
}

.multiselect__input:-ms-input-placeholder {
	color: #35495e
}

.multiselect__input::placeholder {
	color: #35495e
}

.multiselect__tag~.multiselect__input,
.multiselect__tag~.multiselect__single {
	width: auto
}

.multiselect__input:hover,
.multiselect__single:hover {
	border-color: #cfcfcf
}

.multiselect__input:focus,
.multiselect__single:focus {
	border-color: #a8a8a8;
	outline: none
}

.multiselect__single {
	padding-left: 5px;
	margin-bottom: 8px
}

.multiselect__tags-wrap {
	display: inline
}

.multiselect__tags {
	min-height: 40px;
	display: block;
	padding: 8px 40px 0 8px;
	border-radius: 5px;
	border: 1px solid #e8e8e8;
	background: #fff;
	font-size: 14px
}

.multiselect__tag {
	position: relative;
	display: inline-block;
	padding: 4px 26px 4px 10px;
	border-radius: 5px;
	margin-right: 10px;
	color: #fff;
	line-height: 1;
	background: #41b883;
	margin-bottom: 5px;
	white-space: nowrap;
	overflow: hidden;
	max-width: 100%;
	text-overflow: ellipsis
}

.multiselect__tag-icon {
	cursor: pointer;
	margin-left: 7px;
	position: absolute;
	right: 0;
	top: 0;
	bottom: 0;
	font-weight: 700;
	font-style: normal;
	width: 22px;
	text-align: center;
	line-height: 22px;
	transition: all .2s ease;
	border-radius: 5px
}

.multiselect__tag-icon:after {
	content: "\D7";
	color: #266d4d;
	font-size: 14px
}

.multiselect__tag-icon:focus,
.multiselect__tag-icon:hover {
	background: #369a6e
}

.multiselect__tag-icon:focus:after,
.multiselect__tag-icon:hover:after {
	color: #fff
}

.multiselect__current {
	min-height: 40px;
	overflow: hidden;
	padding: 8px 12px 0;
	padding-right: 30px;
	white-space: nowrap;
	border-radius: 5px;
	border: 1px solid #e8e8e8
}

.multiselect__current,
.multiselect__select {
	line-height: 16px;
	box-sizing: border-box;
	display: block;
	margin: 0;
	text-decoration: none;
	cursor: pointer
}

.multiselect__select {
	position: absolute;
	width: 40px;
	height: 38px;
	right: 1px;
	top: 1px;
	padding: 4px 8px;
	text-align: center;
	transition: transform .2s ease
}

.multiselect__select:before {
	position: relative;
	right: 0;
	top: 65%;
	color: #999;
	margin-top: 4px;
	border-style: solid;
	border-width: 5px 5px 0;
	border-color: #999 transparent transparent;
	content: ""
}

.multiselect__placeholder {
	color: #adadad;
	display: inline-block;
	margin-bottom: 10px;
	padding-top: 2px
}

.multiselect--active .multiselect__placeholder {
	display: none
}

.multiselect__content-wrapper {
	position: absolute;
	display: block;
	background: #fff;
	width: 100%;
	max-height: 240px;
	overflow: auto;
	border: 1px solid #e8e8e8;
	border-top: none;
	border-bottom-left-radius: 5px;
	border-bottom-right-radius: 5px;
	z-index: 1;
	-webkit-overflow-scrolling: touch
}

.multiselect__content {
	list-style: none;
	display: inline-block;
	padding: 0;
	margin: 0;
	min-width: 100%;
	vertical-align: top
}

.multiselect__content::webkit-scrollbar {
	display: none
}

.multiselect__element {
	display: block
}

.multiselect__option {
	display: block;
	padding: 12px;
	min-height: 40px;
	line-height: 16px;
	text-decoration: none;
	text-transform: none;
	vertical-align: middle;
	position: relative;
	cursor: pointer;
	white-space: nowrap
}

.multiselect__option:after {
	top: 0;
	right: 0;
	position: absolute;
	line-height: 40px;
	padding-right: 12px;
	padding-left: 20px;
	font-size: 13px
}

.multiselect__option--highlight {
	background: #41b883;
	outline: none;
	color: #fff
}


.multiselect__option--selected {
	background: #f3f3f3;
	color: #35495e;
	font-weight: 700
}

.multiselect__option--selected:after {
	content: attr(data-selected);
	color: silver
}

.multiselect__option--selected.multiselect__option--highlight {
	background: #ff6a6a;
	color: #fff
}

.multiselect__option--selected.multiselect__option--highlight:after {
	background: #ff6a6a;
	content: attr(data-deselect);
	color: #fff
}

.multiselect--disabled {
	background: #ededed;
	pointer-events: none
}

.multiselect--disabled .multiselect__current,
.multiselect--disabled .multiselect__select,
.multiselect__option--disabled {
	background: #ededed;
	color: #a6a6a6
}

.multiselect__option--disabled {
	cursor: text;
	pointer-events: none
}

.multiselect__option--group {
	background: #ededed;
	color: #35495e
}

.multiselect__option--group.multiselect__option--highlight {
	background: #35495e;
	color: #fff
}

.multiselect__option--group.multiselect__option--highlight:after {
	background: #35495e
}

.multiselect__option--disabled.multiselect__option--highlight {
	background: #dedede
}

.multiselect__option--group-selected.multiselect__option--highlight {
	background: #ff6a6a;
	color: #fff
}

.multiselect__option--group-selected.multiselect__option--highlight:after {
	background: #ff6a6a;
	content: attr(data-deselect);
	color: #fff
}

.multiselect-enter-active,
.multiselect-leave-active {
	transition: all .15s ease
}

.multiselect-enter,
.multiselect-leave-active {
	opacity: 0
}

.multiselect__strong {
	margin-bottom: 8px;
	line-height: 20px;
	display: inline-block;
	vertical-align: top
}

[dir=rtl] .multiselect {
	text-align: right
}

[dir=rtl] .multiselect__select {
	right: auto;
	left: 1px
}

[dir=rtl] .multiselect__tags {
	padding: 8px 8px 0 40px
}

[dir=rtl] .multiselect__content {
	text-align: right
}

[dir=rtl] .multiselect__option:after {
	right: auto;
	left: 0
}

[dir=rtl] .multiselect__clear {
	right: auto;
	left: 12px
}

[dir=rtl] .multiselect__spinner {
	right: auto;
	left: 1px
}

@keyframes a {
	0% {
		transform: rotate(0)
	}
	to {
		transform: rotate(2turn)
	}
}

.sg-card {
    position: relative;
    margin: 0 auto 16px;
    height: 210px;
    max-width: 352px;
    background: #fff;
    border: 1px solid #f8f8f8;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    -webkit-box-shadow: 0 1px 4px rgba(0,0,0,.24);
    box-shadow: 0 1px 4px rgba(0,0,0,.24);
}
.sg-card .sg-card-side-bar {
    position: absolute;
    text-align: center;
    background-color: #eee;
    top: -1px;
    right: -1px;
    display: inline-block;
    width: 88px;
    height: calc(100% + 2px);
}
.sg-card .sg-card-meta {
    border-top-right-radius: 4px;
    width: 88px;
    color: #fff;
    padding: 16px 0;
    min-height: 68px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
}
.sg-card .sg-card-meta-seperator {
    width: 10px;
    border-style: solid;
    border-width: 13px 10px 0;
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
    margin-left: 50%;
}
.sg-card .sg-card-info {
    margin-top: 14px;
    line-height: 16px;
}
.sg-card .sg-card-content {
    display: inline-block;
    height: calc(100% - 48px);
    margin-right: 100px;
    padding-left: 16px;
    width: calc(100% - 100px);
    position: relative;
    overflow-wrap: break-word;
    overflow: hidden;
}
.sg-card .sg-day-of-week {
    line-height: 21px;
}
.sg-card .sg-card-info-age, .sg-card .sg-card-info-kids {
    line-height: 14px;
    color: #777779;
}
.sg-card .sg-card-name {
    line-height: 21px;
    margin-bottom: 4px;
}
.sg-card .sg-card-campus {
    color: #777779;
}
.sg-card .sg-card-description {
    font-size: 14px;
}
.sg-card .description-fade {
    background: -webkit-gradient(linear,left bottom,left top,color-stop(36.2%,#fff),color-stop(114.1%,hsla(0,0%,100%,0)));
    background: linear-gradient(1turn,#fff 36.2%,hsla(0,0%,100%,0) 114.1%);
    position: absolute;
    height: 100px;
    width: 100%;
    bottom: -40px;
}
.sg-card .more-info-text {
    position: absolute;
    bottom: 16px;
    left: 100px;
}

.fontSize-body {
    font-size: 18px;
    font-weight: normal;
    font-stretch: normal;
    line-height: 1.56;
    letter-spacing: -0.1px;
}
.fontSize-xxs {
    font-size: 12px;
}
.fontSize-xs {
    font-size: 16px;
}
.border-radius-md {
    border-radius: 4px;
}
.p-t-1 {
    padding-top: 1rem !important;
}
.m-b-1 {
    margin-bottom: 1rem !important;
}
.m-b-half {
    margin-bottom: 0.5rem !important;
}
.multiselect__tag{
  background-color: #eee !important;
  color: black !important;
  background: #323232;
}

/*multiselect color updates */
.multselect__spinner:after, .multselect_spinner:before {
  border-color: #323232 transparent transparent;
}
.multiselect__tag-icon:focus,
.multiselect__tag-icon:hover {
  background:#f04b28
}

.multiselect__option--highlight {
  background:#323232;
}

.multiselect__option--highlight:after {
  background: #323232;
}

.multiselect__option--selected.multiselect__option--highlight{
  background:#f04b28;
}

.multiselect__option--selected.multiselect__option--highlight:after {
  background:#f04b28;
}

.multiselect__option--group-selected.multiselect__option--highlight {
  background:#f04b28;
}

.multiselect__option--group-selected.multiselect__option--highlight:after {
  background: #f04b28;

}
</style>
<div id="app">

  <div class="row margin-b-md">
    <div class="col-md-3">
      <div class="form-group">
        <label class="control-label">Location</label>
        <div class="control-wrapper">
          <multiselect v-model="campusValues" :options="campusOptions" :multiple="true" :close-on-select="false" :clear-on-select="false" :preserve-search="true" placeholder="" label="Name" track-by="Name" :preselect-first="false" @input="campusFilterChange()">
            <template slot="selection" slot-scope="{ campusValues, search, isOpen }"><span class="multiselect__single" v-if="campusValues.length &amp;&amp; !isOpen">{{ campusValues.length }} options selected</span></template>
          </multiselect>
        </div>
      </div>
    </div>

    <div class="col-md-2">
      <div class="form-group">
        <label class="control-label">Meeting Day</label>
        <div class="control-wrapper">
          <multiselect v-model="meetingDayValues" :options="meetingDayOptions" :multiple="true" :close-on-select="false" :clear-on-select="false" :preserve-search="true" placeholder="" label="text" track-by="text" :preselect-first="false" @input="meetingDayFilterChange()">
            <template slot="selection" slot-scope="{ meetingDayValues, search, isOpen }"><span class="multiselect__single" v-if="meetingDayValues.length &amp;&amp; !isOpen">{{ meetingDayValues.length }} options selected</span></template>
          </multiselect>
        </div>
      </div>
    </div>

    <div class="col-md-2">
      <div class="form-group">
        <label class="control-label">Category</label>
        <div class="control-wrapper">
          <multiselect v-model="categoryValues" :options="categoryOptions" :multiple="true" :close-on-select="false" :clear-on-select="false" :preserve-search="true" placeholder="" label="Value" track-by="Value" :preselect-first="false" @input="categoryFilterChange()">
            <template slot="selection" slot-scope="{ categoryValues, search, isOpen }"><span class="multiselect__single" v-if="categoryValues.length &amp;&amp; !isOpen">{{ categoryValues.length }} options selected</span></template>
          </multiselect>
        </div>
      </div>
    </div>

    <div class="col-md-1">
      <div class="form-group">
        <label class="control-label">Age</label>
        <div class="control-wrapper">
          <div tabindex="-1" class="multiselect">
            <div class="multiselect__tags" style='padding-right:8px !important;'>
              <input v-model.number="age" @input="ageFilterChange()" class="multiselect__input" placeholder="" type="number" autocomplete="off">
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="col-md-4">
      <div class="form-group">
        <label class="control-label">Keywords</label>
        <div class="control-wrapper">
          <div tabindex="-1" class="multiselect">
            <div class="multiselect__tags" style='padding-right:8px !important;'>
              <input v-model.number="keywords" @input="keywordFilterChange()" class="multiselect__input" placeholder="" autocomplete="off">
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <h5>{*groupCount*} Groups Found</h5>
    <div v-if="groups.length === 0 && groupCount != 0" class="loading">Loading...</div>
    <div v-for="i in Math.ceil(groups.length / 3)" class="row">
      <div v-for="group in groups.slice((i - 1) * 3, i * 3)" class="col-md-4">
          <div class="columns column-block">
            <div class="sg-card border-radius-md">
              <div class="sg-card-content p-t-1">
                <h2 class="sg-card-name fontSize-body">{*group.Name*}</h2>
                <p class="sg-card-campus fontSize-xs">{*group.Campus*}</p>
                <p class="sg-card-description">{*group.Description*}</p>
                <div class="description-fade"></div>
              </div>
              <div class="sg-card-side-bar">
                <div class="sg-card-meta" :style="'background-color:' + group.Color+';'">
                  <div class="fontSize-body sg-day-of-week">{*group.DayOfWeek*}</div>
                  <div class="fontSize-xxs">{*group.TimeOfDay*}</div>
                  <div class="fontSize-xxs">{*group.Frequency*}</div>
                </div>
                <div class="sg-card-info m-b-half" :style="'color:' + group.Color+';'">{*group.Category*}</div>
                <div v-if="group.SecondaryCategories != null && group.SecondaryCategories.length > 0">
                  <div v-for="secondaryCategory in group.SecondaryCategories.slice(0,3)" class="sg-card-info m-b-half" :style="'color:' + secondaryCategory.Color+';margin-top:0px !important;'">
                    {*secondaryCategory.Category*}
                  </div>
                </div>
                <div class="fontSize-xxs m-b-half sg-card-info-age">{*group.LifeStage*}</div>
              </div>
              <a class="more-info-text" :href="'/page/{{linkedPage.Id}}?Group=' + group.Guid" target="_blank">More Info</a>
            </div>
          </div>
      </div>
    </div>
</div>

<script>
var app = new Vue({
  el: '#app',
  delimiters: ['{*','*}'],
  components: {
    Multiselect: window.VueMultiselect.default
  },
  data () {
    return {
      bottom: false,
      groups: [],
      groupIds:[],
      limit: 10,
      groupCount: 0,
      age: "{{'Global' | PageParameter:'Age' | ToString | AsInteger }}",
      keywords: "{{'Global' | PageParameter:'Keywords' | ToString }}",
      meetingDayValues: [{{selectedMeetingDays | ReplaceLast:',','' }}],
      meetingDayOptions: [
                      { value:0, text:'Sunday'},
                      { value:1, text:'Monday'},
                      { value:2, text:'Tuesday'},
                      { value:3, text:'Wednesday'},
                      { value:4, text:'Thursday'},
                      { value:5, text:'Friday'},
                      { value:6, text:'Saturday'},
                      { value:7, text:'Other'},
                        ],
      campusValues: {{selectedCampuses | ReplaceLast:',','' }},
      campusOptions: {{ campusData | ReplaceLast:',','' }},
      categoryValues: {{ selectedCategories | ReplaceLast:',','' }},
      categoryOptions: {{ categoryData | ReplaceLast:',','' }},
    }
  },
  watch: {
    bottom(bottom) {
      if (bottom) {
        if(this.groupCount> this.groups.length){
          this.addGroups();
        }
      }
    }
  },
  created() {
    window.addEventListener('scroll', () => {
      this.bottom = this.bottomVisible()
    })
    this.getGroupCount();
    this.addGroups()
  },
  methods: {
    bottomVisible() {
    var docViewTop = $(window).scrollTop();
    var docViewBottom = docViewTop + $(window).height();
    var elemTop = $('#zone-footer').offset().top;
    var elemBottom = elemTop + $('#zone-footer').height();
    return (elemTop <= docViewBottom);
    },
    getGroupCount() {
      var url = '/api/com_bemaservices/GroupTools/GetGroupCount?GroupTypeIds={{groupTypeId}}'+ this.getFilterParameters();
      axios.get(url, {
        headers:{
          'Authorization-Token': `6FuURHoPOhKk04168thMRtAl`
        }
      })
        .then(response => {
        this.groupCount =  response.data;
        this.addGroups
      })
    },
    addGroups() {
      var url = '/api/com_bemaservices/GroupTools/GetGroups?GroupTypeIds={{groupTypeId}}&Limit=' + this.limit + '&Offset=' + this.groups.length + this.getFilterParameters();
      axios.get(url, {
        headers:{
          'Authorization-Token': `6FuURHoPOhKk04168thMRtAl`
        }
      })
        .then(response => {
          response.data.forEach((value, index) => {
            if(this.groupCount> this.groups.length){
              if(!this.groupIds.includes(value.Id)){
                  this.groupIds.push(value.Id);
                  this.groups.push(value);
                }
            }
          });
          if (this.bottomVisible()) {
            if(this.groupCount> this.groups.length){
              this.addGroups();
            }
          }
      })
    },
    insertParam(key, value) {
        if ('URLSearchParams' in window) {
          var searchParams = new URLSearchParams(window.location.search)
          searchParams.set(key,value);
          var newRelativePathQuery = window.location.pathname + '?' + searchParams.toString();
          history.pushState(null, '', newRelativePathQuery);
      }
    },
    categoryFilterChange(){
      var categoryIdsString = "";
      this.categoryValues.forEach(function(categoryValue){
        categoryIdsString += categoryValue.Id + ",";
      });

      if(categoryIdsString != ""){
        categoryIdsString = categoryIdsString.slice(0,-1);
      }

      this.insertParam("CategoryIds", categoryIdsString);
      this.filterChange();
    },
    ageFilterChange(){
      this.insertParam("Age", this.age);
      this.filterChange();
    },
    keywordFilterChange(){
      this.insertParam("Keywords", this.keywords);
      this.filterChange();
    },
    campusFilterChange(){
      var campusIdsString = "";
      this.campusValues.forEach(function(campusValue){
        campusIdsString += campusValue.Id + ",";
      });
      if(campusIdsString != ""){
        campusIdsString = campusIdsString.slice(0,-1);
      }

      this.insertParam("CampusIds", campusIdsString);
      this.filterChange();
    },
    meetingDayFilterChange(){
      var meetingDaysString = "";
      this.meetingDayValues.forEach(function(meetingDayValue){
        meetingDaysString += meetingDayValue.value + ",";
      });

      if(meetingDaysString != ""){
        meetingDaysString = meetingDaysString.slice(0,-1);
      }

      this.insertParam("MeetingDays", meetingDaysString);
      this.filterChange();
    },
    filterChange(){
      this.groups = [];
      this.groupIds = [];
      this.getGroupCount();
      this.addGroups();
    },
    getFilterParameters(){
      var url = ""

      var campusIdsString = "";
      this.campusValues.forEach(function(campusValue){
        campusIdsString += campusValue.Id + ",";
      });
      if(campusIdsString != ""){
        url += '&CampusIds='+campusIdsString.slice(0,-1);
      }

      var meetingDaysString = "";
      this.meetingDayValues.forEach(function(meetingDayValue){
        meetingDaysString += meetingDayValue.value + ",";
      });
      if(meetingDaysString != ""){
        url += '&MeetingDays='+meetingDaysString.slice(0,-1);
      }

      var categoryIdsString = "";
      this.categoryValues.forEach(function(categoryValue){
        categoryIdsString += categoryValue.Id + ",";
      });
      if(categoryIdsString != ""){
        url += '&CategoryIds='+categoryIdsString.slice(0,-1);
      }

      var ageString = "";
      ageString = this.age;
      if(ageString != ""){
        url += '&Age='+ageString;
      }

      var keywordString = "";
      keywordString = this.keywords;
      if(keywordString != ""){
        url += '&Keywords='+keywordString;
      }

      return url;
    }

  }
})
</script>
