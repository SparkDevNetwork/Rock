<style>
.sg-card {
    position: relative;
    margin: 0 auto 16px;
    height: 210px;
    max-width: 352px;
    background: #fff;
    border: 1px solid #f8f8f8;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    -webkit-box-shadow: 0 1px 4px rgba(0,0,0,.24);
    box-shadow: 0 1px 4px rgba(0,0,0,.24);
}
.sg-card .sg-card-side-bar {
    position: absolute;
    text-align: center;
    background-color: #eee;
    top: -1px;
    right: -1px;
    display: inline-block;
    width: 88px;
    height: calc(100% + 2px);
}
.sg-card .sg-card-meta {
    border-top-left-radius: 4px;
    width: 88px;
    color: #fff;
    padding: 16px 0;
    min-height: 68px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
}
.sg-card .sg-card-meta-seperator {
    width: 10px;
    border-style: solid;
    border-width: 13px 10px 0;
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
    margin-left: 50%;
}
.sg-card .sg-card-info {
    margin-top: 14px;
    font-family: proxima_novabold;
    line-height: 16px;
}
.sg-card .sg-card-content {
    display: inline-block;
    height: calc(100% - 48px);
    margin-right: 100px;
    padding-left: 16px;
    width: calc(100% - 100px);
    position: relative;
    overflow-wrap: break-word;
}
.sg-card .sg-day-of-week {
    font-family: proxima_novasemibold;
    line-height: 21px;
}
.sg-card .sg-card-info-age, .sg-card .sg-card-info-kids {
    line-height: 14px;
    color: #777779;
}
.sg-card .sg-card-name {
    line-height: 21px;
    margin-bottom: 4px;
}
.sg-card .sg-card-campus {
    color: #777779;
}
.sg-card .sg-card-description {
    font-size: 14px;
}
.sg-card .description-fade {
    background: -webkit-gradient(linear,left bottom,left top,color-stop(36.2%,#fff),color-stop(114.1%,hsla(0,0%,100%,0)));
    background: linear-gradient(1turn,#fff 36.2%,hsla(0,0%,100%,0) 114.1%);
    position: absolute;
    height: 100px;
    width: 100%;
    bottom: -40px;
}
.sg-card .more-info-text {
    position: absolute;
    bottom: 16px;
    left: 100px;
}

.fontSize-body {
    font-size: 18px;
    font-weight: normal;
    font-stretch: normal;
    line-height: 1.56;
    letter-spacing: -0.1px;
}
.fontSize-xxs {
    font-size: 12px;
}
.fontSize-xs {
    font-size: 16px;
}
.border-radius-md {
    border-radius: 4px;
}
.p-t-1 {
    padding-top: 1rem !important;
}
.m-b-1 {
    margin-bottom: 1rem !important;
}
.m-b-half {
    margin-bottom: 0.5rem !important;
}

</style>

<div id="app">
  <div class="row margin-b-md">
    <div class="col-md-3">
      <div class="form-group">
        <label class="control-label">Location</label>
        <div class="control-wrapper">
          <select @change="filterChange()" class="form-control" v-model="campusId">
            <option value="" selected="selected"></option>
            {% campus where:'IsActive == true' %}
              {% for campus in campusItems %}
                <option value="{{campus.Id}}">{{campus.Name}}</option>
              {% endfor %}
            {% endcampus %}
          </select>
        </div>
      </div>
    </div>

    <div class="col-md-3">
      <div class="form-group">
        <label class="control-label">Meeting Day</label>
        <div class="control-wrapper">
          <select @change="filterChange()" v-model="meetingDay" class="form-control">
            <option value="" selected="selected"></option>
            <option value="0">Sunday</option>
            <option value="1">Monday</option>
            <option value="2">Tuesday</option>
            <option value="3">Wednesday</option>
            <option value="4">Thursday</option>
            <option value="5">Friday</option>
            <option value="6">Saturday</option>
          </select>
        </div>
      </div>
    </div>

    <div class="col-md-3">
      <div class="form-group">
        <label class="control-label">Category</label>
        <div class="control-wrapper">
          <select @change="filterChange()" class="form-control" v-model="categoryId">
            <option value="" selected="selected"></option>
            {% campus where:'IsActive == true' %}
              {% for campus in campusItems %}
                <option value="{{campus.Id}}">{{campus.Name}}</option>
              {% endfor %}
            {% endcampus %}
          </select>
        </div>
      </div>
    </div>

    <div class="col-md-3">
      <div class="form-group">
        <label class="control-label">Age Range</label>
        <div class="control-wrapper">
          <select @change="filterChange()" class="form-control" v-model="ageRange">
            <option value="" selected="selected"></option>
            {% campus where:'IsActive == true' %}
              {% for campus in campusItems %}
                <option value="{{campus.Id}}">{{campus.Name}}</option>
              {% endfor %}
            {% endcampus %}
          </select>
        </div>
      </div>
    </div>
{%raw%}<h3>{{groupCount}} Groups Found</h3> {% endraw %}
  <ol>
    <div v-if="groups.length === 0 && groupCount != 0" class="loading">Loading...</div>
    <div v-if="groupCount === 0" class="loading">No Groups Found</div>
    <div v-for="i in Math.ceil(groups.length / 3)" class="row">
      <div v-for="group in groups.slice((i - 1) * 3, i * 3)" class="col-md-4">
        {% raw %}
          <div class="columns column-block">
            <div class="sg-card border-radius-md">
              <div class="sg-card-content p-t-1">
                <h2 class="sg-card-name fontSize-body">{{group.Name}}</h2>
                <p class="sg-card-campus fontSize-xs">{{group.Campus}}</p>
                <p class="sg-card-description">{{group.Description}}.</p>
                <div class="description-fade"></div>
              </div>
              <div class="sg-card-side-bar">
                <div class="sg-card-meta" style="background-color:{{group.Color}};">
                  <div class="fontSize-body sg-day-of-week">{{group.DayOfWeek}}</div>
                  <div class="fontSize-xxs">{{group.TimeOfDay}}</div>
                  <div class="fontSize-xxs">{{group.Frequency}}</div>
                </div>
                <div class="sg-card-meta-seperator" style="border-color: #76c24e #eee;"></div>
                <div class="sg-card-info m-b-1" style="color: #76c24e;">{{group.Category}}</div>
                <div class="fontSize-xxs m-b-half sg-card-info-age">{{group.AgeRange}}</div>
              </div>
              <a class="more-info-text" :href="'/page/367?GroupId=' + group.Id" target="_blank">More Info</a>
            </div>
          </div>
        {% endraw %}
        {% comment %}
          <div class="panel panel-default">
            <div class="panel-heading">
              <h2 class="sg-card-name fontSize-body">{{group.Name}}</h2>
            </div>
            <div class=" panel-body">
              <div class="fontSize-body sg-day-of-week">{{group.FriendlyScheduleText}}</div>
              <p class="sg-card-description">{{group.Description}}</p>
              <a class="more-info-text" :href="'/page/367?GroupId=' + group.Id" target="_blank">More Info</a>
            </div>
          </div>
        {% endcomment %}
      </div>
    </div>
  </ol>
</div>

<script>
var app = new Vue({
  el: '#app',
  data () {
    return {
      bottom: false,
      groups: [],
      campusId: "",
      meetingDay:"",
      categoryId: "",
      ageRange: "",
      limit: 10,
      groupCount: 0
    }
  },
  watch: {
    bottom(bottom) {
      if (bottom) {
        if(this.groupCount> this.groups.length){
          this.addGroups();
        }
      }
    }
  },
  created() {
    window.addEventListener('scroll', () => {
      this.bottom = this.bottomVisible()
    })
    this.getGroupCount();
    this.addGroups()
  },
  methods: {
    bottomVisible() {
      const scrollY = window.scrollY
      const visible = document.documentElement.clientHeight
      const pageHeight = document.documentElement.scrollHeight
      const bottomOfPage = visible + scrollY >= pageHeight
      return bottomOfPage || pageHeight < visible
    },
    getGroupCount() {
      var orderBy = 'Name';
      var url = '/api/com_bemaservices/GroupTools/GetGroupCount?GroupTypeIds=25'
      if(this.campusId){
        url += '&CampusIds='+this.campusId;
      }
      if(this.meetingDay){
        url += '&MeetingDays='+this.meetingDay;
      }
      axios.get(url)
        .then(response => {
        this.groupCount =  response.data;
      })
    },
    addGroups() {
      var orderBy = 'Name';
      var url = '/api/com_bemaservices/GroupTools/GetGroups?GroupTypeIds=25&Limit='+this.limit+'&Offset='+this.groups.length
      if(this.campusId){
        url += '&CampusIds='+this.campusId;
      }
      if(this.meetingDay){
        url += '&MeetingDays='+this.meetingDay;
      }
      axios.get(url)
        .then(response => {
          response.data.forEach((value, index) => {
              this.groups.push(value);
          });
          if (this.bottomVisible()) {
            if(this.groupCount> this.groups.length){
              this.addGroups();
            }
          }
      })
    },
    filterChange(){
      this.groups = [];
      this.getGroupCount();
      this.addGroups();
    }
  }
})
</script>
