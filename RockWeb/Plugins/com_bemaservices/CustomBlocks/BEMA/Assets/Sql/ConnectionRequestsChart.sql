Select CASE GROUPING(C.Name) WHEN 1 THEN 'Total' ELSE C.Name END AS 'Campus', count(0) AS [Requests] From ConnectionRequest CR Inner Join ConnectionOpportunity CO On CR.ConnectionOpportunityId = CO.Id Left Join Campus C On CR.CampusId = C.Id Where CR.CreatedDateTime > DateAdd(year, -1 ,getdate()) {% if PageParameter.Campus != null %} AND C.Guid in ('{{PageParameter.Campus | SanitizeSql }}') {% endif %} Group By C.Name With Rollup Order By Grouping(C.Name) desc, C.Name Select CASE GROUPING(C.Name) WHEN 1 THEN 'Total' ELSE C.Name END AS 'Campus', count(0) AS [Requests] From ConnectionRequest CR Inner Join ConnectionOpportunity CO On CR.ConnectionOpportunityId = CO.Id Left Join Campus C On CR.CampusId = C.Id Where CR.CreatedDateTime > DateAdd(year, -1 ,getdate()) And CR.ConnectionState In (0,2) {% if PageParameter.Campus != null %} AND C.Guid in ('{{PageParameter.Campus | SanitizeSql }}') {% endif %} Group By C.Name With Rollup Order By Grouping(C.Name) desc, C.Name Select CASE GROUPING(C.Name) WHEN 1 THEN 'Total' ELSE C.Name END AS 'Campus', count(0) AS [Requests] From ConnectionRequest CR Inner Join ConnectionOpportunity CO On CR.ConnectionOpportunityId = CO.Id Left Join Campus C On CR.CampusId = C.Id Where CR.CreatedDateTime > DateAdd(year, -1 ,getdate()) And CR.ConnectionStatusId = 5 {% if PageParameter.Campus != null %} AND C.Guid in ('{{PageParameter.Campus | SanitizeSql}}') {% endif %} Group By C.Name With Rollup Order By Grouping(C.Name) desc, C.Name Select CASE GROUPING(C.Name) WHEN 1 THEN 'Total' ELSE C.Name END AS 'Campus', AVG(DATEDIFF(day, CR.CreatedDateTime, CR.ModifiedDateTime)) AS [Average] From ConnectionRequest CR Inner Join ConnectionOpportunity CO On CR.ConnectionOpportunityId = CO.Id Left Join Campus C On CR.CampusId = C.Id Where CR.CreatedDateTime > DateAdd(year, -1 ,getdate()) And CR.ConnectionState In (1,3) {% if PageParameter.Campus != null %} AND C.Guid in ('{{PageParameter.Campus | SanitizeSql}}') {% endif %} Group By C.Name With Rollup Order By Grouping(C.Name) desc, C.Name