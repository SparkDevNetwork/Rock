<%@ Master Language="C#" AutoEventWireup="true" Inherits="Rock.Web.UI.RockMasterPage" %><%@ Import Namespace="System.Web.Optimization" %><!DOCTYPE html>
<script runat="server">
    // keep code below to call base class init method

    /// <summary>
    /// Raises the <see cref="E:System.Web.UI.Control.Init" /> event.
    /// </summary>
    /// <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    protected override void OnInit( EventArgs e )
    {
        base.OnInit( e );
    }

</script><html>
<head runat="server">
    <meta charset="utf-8">
    <title></title>

    <script src="<%# System.Web.Optimization.Scripts.Url("~/Scripts/Bundles/RockJQueryLatest" ) %>"></script>

    <!-- Set the viewport width to device width for mobile -->
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <asp:ContentPlaceHolder ID="css" runat="server" />

	<!-- Included CSS Files -->
    <link rel="stylesheet" href="<%# ResolveRockUrl("~~/Styles/bootstrap.css", true) %>"/>
	<link rel="stylesheet" href="<%# ResolveRockUrl("~~/Styles/theme.css", true) %>"/>

    <asp:ContentPlaceHolder ID="head" runat="server"></asp:ContentPlaceHolder>

</head>
<body runat="server" id="body">

    <form id="form1" runat="server">
        <Rock:Zone Name="Notification Bar" CssClass="notification-bar" runat="server" />

        <!-- Page Header -->
        <header role="banner">
            <!-- Brand Bar -->
            <nav class="navbar navbar-static-top">
                <div class="container-fluid">
			        <div class="navbar-header">
                        <Rock:Lava ID="Header" runat="server">
                        <a class="navbar-brand" href="{{ 'Global' | Attribute:'PublicApplicationRoot' }}">
                        {%- if CurrentPage.Layout.Site.SiteLogoBinaryFileId != '' -%}
                            <img src="{{ '~' | ResolveRockUrl }}GetImage.ashx?id={{ CurrentPage.Layout.Site.SiteLogoBinaryFileId }}" alt="{{ 'Global' | Attribute:'OrganizationName' }}" class="logo">
                        {%- else -%}
                            {{ 'Global' | Attribute:'OrganizationName' }}
                        {%- endif -%}
                        </a>
                        </Rock:Lava>
			        </div>
                    <div class="navbar-collapse collapse">
                        <!-- Main Navigation -->
                        <Rock:Zone Name="Login" CssClass="pull-right" runat="server" />
                        <Rock:Zone Name="Navigation" runat="server" />
			        </div>
                </div>
            </nav>
        </header>

        <asp:ContentPlaceHolder ID="main" runat="server"></asp:ContentPlaceHolder>


        <%-- controls for scriptmanager and update panel --%>
        <asp:ScriptManager ID="sManager" runat="server"/>
        <asp:UpdateProgress id="updateProgress" runat="server" DisplayAfter="800">
		        <ProgressTemplate>
		            <div class="updateprogress-status">
                        <div class="spinner">
                          <div class="rect1"></div><div class="rect2"></div><div class="rect3"></div><div class="rect4"></div><div class="rect5"></div>
                        </div>
                    </div>
                    <div class="updateprogress-bg modal-backdrop"></div>
		        </ProgressTemplate>
        </asp:UpdateProgress>

    </form>

    <script>
        Sys.Application.add_load(HandleBackForwardCache);

        // Fixes an issue with the wait spinner caused by browser Back/Forward caching.
        function HandleBackForwardCache() {
            // Forcibly hide the wait spinner, and clear the pending request if the page is being reloaded from bfcache. (Currently WebKit only)
            // Browsers that implement bfcache will otherwise trigger updateprogress because the pending request is still in the PageRequestManager state.
            // This fix is not effective for Safari browsers prior to v13, due to a known bug in the bfcache implementation.
            // (https://bugs.webkit.org/show_bug.cgi?id=156356)
            window.addEventListener('pageshow', function (e) {
                if ( e.persisted ) {
                    document.querySelector('#updateProgress').style.display = 'none';
                    // Check if the page is in postback, and if so, reset the PageRequestManager state.
                    if (Sys.WebForms.PageRequestManager.getInstance().get_isInAsyncPostBack()) {
                        // Reset the PageRequestManager state. & Manually clear the request object
                        Sys.WebForms.PageRequestManager.getInstance()._processingRequest = false;
                        Sys.WebForms.PageRequestManager.getInstance()._request = null;
                    }
                }
            });
        }

    </script>

</body>
</html>