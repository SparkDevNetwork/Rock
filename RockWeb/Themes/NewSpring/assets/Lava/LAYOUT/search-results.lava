<div id="results" class="row text-center">

</div>

{% comment %}Set search engine id to use from site attribute value{% endcomment %}
{% assign gcseid = CurrentPage.Layout.Site | Attribute:'GoogleCustomSearchEngineId' %}

<script>
document.addEventListener("DOMContentLoaded", function() {

    var initialResultsHTML = `
    <div class="col-md-12">
    {[ section title:'Not sure what to search? Start here!' ]}
        <p style="line-height: 41px;">
            {% definedvalue where:'DefinedTypeId == {{ suggestionsdefinedtypeid }}' sort:'Order' iterator:'values' %}
                {% for value in values %}
                    {[ button linktext:'{{ value.Value }}' linkurl:'/search?query={{ value.Value }}' ]}
                {% endfor %}
            {% enddefinedvalue %}
        </p>
    {[ endsection ]}
    </div>
    `

    // Find search input
    var searchInput = document.querySelector('[data-search-input]');

    // Focus on search input
    searchInput.focus();

    // Find clear button
    var searchInputClear = document.querySelector('[data-search-input-clear]');

    // Get current base url with out query strings
    var currentUrl = window.location.href.split('?')[0];

    // Get query strings
    var params = new URLSearchParams(window.location.search);

    // Define results container
    var resultsContainer = document.getElementById("results");

    // If query exists, go ahead and search
    if(params.has('query')){
        searchInputClear.classList.remove('hidden');
        var query = params.get('query').toLowerCase();
        searchInput.value = query;
        searchGoogle(query);
    } else {
        resultsContainer.innerHTML = initialResultsHTML;
    }

    // Clear search input when clear button is clicked
    searchInputClear.addEventListener('click', function (e) {
        searchInputClear.classList.add('hidden');
        resultsContainer.innerHTML = initialResultsHTML;
        searchInput.value = "";
        params.delete('query');
        Stretchy.resize(searchInput,searchInput.parentElement);
        searchInput.focus();
    });

    // Listen for window resize
    window.addEventListener('resize', function(){
        Stretchy.resize(searchInput,searchInput.parentElement);
    });


    // Listen for return key
    searchInput.addEventListener('keyup', function(e) {
        var key = e.which || e.keyCode;
        var query = searchInput.value;

        if (key === 13) { // 13 is enter

            if(query == '') {
                searchInput.parentElement.parentElement.classList.remove('bg-gray-dark');
                searchInput.parentElement.parentElement.classList.add('bg-info');
                searchInput.placeholder='Please type a word or phrase';
                Stretchy.resize(searchInput,searchInput.parentElement);
            } else {
                searchInput.blur();
                searchInput.parentElement.parentElement.classList.remove('bg-info');
                searchInput.parentElement.parentElement.classList.add('bg-gray-dark');
                searchGoogle(query);
            };

        } else {

            if(searchInput.value != '') {
                searchInputClear.classList.remove('hidden');
            } else {
                searchInputClear.classList.add('hidden');
            }

        }

    });


    function searchGoogle(query, startIndex){

        // Get current base url with out query strings
        var currentUrl = window.location.href.split('?')[0];

        if(startIndex) {
            var startIndex = '&start=' + startIndex;
        } else {
            var startIndex = '';
        }

        // Get query value
        if(query == ''){
            var query = searchInput.value;
        }

        // Delete query parameter if it already exists
        if(params.has('query')){
            searchInput.value = query;
            params.delete('query');
        }

        // Setup request
        var Http = new XMLHttpRequest();

        // Define request url
        var requestUrl = 'https://www.googleapis.com/customsearch/v1?key={{ "Global" | Attribute:"GoogleCustomSearchKey" }}&cx={{ gcseid }}&num=9&q=' + query + startIndex;

        // Open request
        Http.open("GET", requestUrl);

        // Send it
        Http.send()

        // When we get a successful response, do things
        Http.onreadystatechange=function(){
            if(this.readyState==4 && this.status==200){
                params.append('query', query);
                populateResults(JSON.parse(Http.response), query);
            }
        }
    };

    function populateResults(response, query) {

        var scroll = new SmoothScroll();

        var totalResults = response.searchInformation.totalResults;

        if(totalResults < 1) {
            resultsContainer.innerHTML = '<h2 class="h3 xs-h5 soft-half-sides soft-half-ends xs-hard-ends xs-push-half-top">No results found for <span class="text-info">'+ query +'<span></h2>'
            return false;
        }

        // Clear results container for each search
        resultsContainer.innerHTML = ''

        if (totalResults > 100) {
            totalResults = 100;
        }

        if (totalResults > 9) {
            if(response.queries.nextPage) {
                resultsContainer.innerHTML += '<h2 class="h3 xs-h5 soft-half-sides soft-half-ends xs-push-half-top xs-hard-bottom">Showing results <span class="text-info">' + (response.queries.nextPage[0].startIndex - response.queries.nextPage[0].count) + '-' + (response.queries.nextPage[0].startIndex - 1) + '</span> matching <span class="text-info">' + response.queries.request[0].searchTerms + '</span></h2>';
            } else {
                // Last Page
                resultsContainer.innerHTML += '<h2 class="h3 xs-h5 soft-half-sides soft-half-ends xs-push-half-top xs-hard-bottom">Showing results <span class="text-info">' + (response.searchInformation.totalResults - response.items.length + 1) + '-' + response.searchInformation.totalResults + '</span>  matching <span class="text-info">' + response.queries.request[0].searchTerms + '</span></h2>';
            }
        } else {
            resultsContainer.innerHTML += '<h2 class="h3 xs-h5 soft-half-sides soft-half-ends xs-push-half-top xs-hard-bottom">Showing <span class="text-info">' + response.searchInformation.formattedTotalResults + '</span> results matching <span class="text-info">' + response.queries.request[0].searchTerms + '</span></h2>';
        }

        if (response.items) {
            for (var i = 0; i < response.items.length; i++) {
                var item = response.items[i];

                if(item.pagemap && item.pagemap.cse_image && item.pagemap.cse_image[0].src != 'null'){
                    itemImage = item.pagemap.cse_image[0].src;
                } else {
                    itemImage = 'https://s3.amazonaws.com/ns.images/all/heroes/Player.Default.jpg';
                }

                var layout = `<div class="col-xs-12 col-sm-6 col-md-4 col-lg-3 search-result text-left">{[ card title:'${ item.htmlTitle }' titlesize:'h4' imageurl:'${ itemImage }' content:'<p class="push-half-bottom">${item.htmlSnippet}</p>' linkurl:'${item.link}' ]}</div>`;

                // in production code, item.htmlTitle should have the HTML entities escaped.
                resultsContainer.innerHTML += layout;
            }

            window.scrollTo(0, 0);

            var pagination = '<div class="soft-half-sides xs-push-half-top text-center" data-search-pagination-wrapper></div>';

            resultsContainer.innerHTML += pagination

            var paginationWrapper = document.querySelector('[data-search-pagination-wrapper]');

            if (response.queries.previousPage) {
                var prevButton = document.createElement('a');
                prevButton.setAttribute('data-search-prev','');
                prevButton.classList.add('btn','btn-primary','push-half-right');
                prevButton.innerHTML = '<i class="position-relative fas fa-angle-left" style="top: 2px;"></i> &nbsp;Previous'
                paginationWrapper.appendChild(prevButton);
            }

            if (response.queries.nextPage && response.queries.nextPage[0].startIndex <= 100) {
                var nextButton = document.createElement('a');
                nextButton.setAttribute('data-search-next','');
                nextButton.classList.add('btn','btn-primary');
                nextButton.innerHTML = 'Next &nbsp;<i class="position-relative fas fa-angle-right" style="top: 2px;"></i>'
                paginationWrapper.appendChild(nextButton);
            }

            var resultsSource = `
            <div class="soft-half text-center sans-serif stronger letter-spacing-condensed push-ends xs-push-half-ends">
                Results By <img src="//s3.amazonaws.com/ns.images/all/google/google-logo-full.png" width="80px" class="display-inline-block mx-auto" />
            </div>
            `
            resultsContainer.innerHTML += resultsSource;
        }

        if (response.queries.nextPage && response.queries.nextPage[0].startIndex <= 100) {
            var nextButton = document.querySelector('[data-search-next]');
            nextButton.addEventListener('click', function(e){
                searchGoogle(response.queries.nextPage[0].searchTerms, response.queries.nextPage[0].startIndex);
            });
        }

        if (response.queries.previousPage) {
            var prevButton = document.querySelector('[data-search-prev]');
            prevButton.addEventListener('click', function(e){
                searchGoogle(response.queries.previousPage[0].searchTerms, response.queries.previousPage[0].startIndex);
            });
        }

    }

});
</script>