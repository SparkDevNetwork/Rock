<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ServiceBus</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ServiceBus.Channels.ChainedCloseAsyncResult">
            <summary>
            This class closes the provided ICommunicationObjects (in parallel) then calls the begin1 and end1 delegates.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement">
            <summary>An abstract class that supplements the base 
            <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> with additional properties that are common to connection-oriented transports such as TCP and named pipes.  
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize">
            <summary>Gets and sets the size of the buffer used to transmit a 
            chunk of the serialized message on the wire from the client or service. </summary> 
            <value>The size of the connection buffer. The default value is 8192 bytes.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode">
            <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.HostNameComparisonMode" /> that determines whether the hostname is used to reach the service. The default value is StrongWildCard, which ignores the hostname and port number in the comparison.</value> 
            <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid HostnameComparisonMode. </exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize">
            <summary>Gets or sets the maximum size of the buffer to use.</summary>
            <value>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections">
            <summary>Gets or sets the maximum number of connections awaiting dispatch on the service.</summary>
            <value>The maximum number of inbound connections awaiting dispatch on the service. The default value is 10.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout">
            <summary>Gets or sets the timespan that specifies how long the channel initialization has to complete before timing out.</summary>
            <value>Returns a <see cref="T:System.TimeSpan" /> after which the initialization times out.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay">
            <summary>Gets or sets the maximum interval of time that a chunk of a 
            message or a full message can remain buffered in memory before being sent out.</summary> 
            <value>Returns a 
            <see cref="T:System.TimeSpan" /> that specifies the maximum interval of time that a chunk of a message or a full message can remain buffered in memory before being sent out. The default value is 2 seconds. This property is only meaningful if the AllowedOutputBatching property of an outgoing message is set to true. Otherwise, this value is ignored and messages are sent immediately.</value> 
            <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts">
            <summary>Gets or sets the maximum number of pending asynchronous accept 
            operations that are available for processing incoming connections to the service.</summary> 
            <value>The maximum number of connections the service can accept simultaneously. The default value is 1.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.TransferMode">
            <summary>Gets or sets a value that specifies whether the messages are buffered or streamed with the connection-oriented transport.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.TransferMode" /> which indicates whether a channel uses streamed or buffered modes of message transfer. The default is Buffered.</value> 
            <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid TransferMode.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Determines whether a channel factory of the specified type can be built.
            </summary>
            <typeparam name="TChannel"></typeparam>
            <param name="context">The BindingContext for the channel.</param>
            <returns>true if the IChannelListener&lt;TChannel&gt; of type IChannel can be built by the binding element; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Returns a value that indicates whether the binding element can build a listener for a specific type of channel.
            </summary>
            <typeparam name="TChannel"></typeparam>
            <param name="context">The binding context that provides context for the binding element.</param>
            <returns>true if the IChannelListener&lt;TChannel&gt; of type IChannel can be built by the binding element; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Retrieves properties from the binding stack, if present.
            </summary>
            <param name="context">The binding context that provides context for the binding element.</param>
            <returns>An object from the binding stack, if present, or null if not found.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Channels.DelegatingStream">
            <summary>
            A Stream that delegates all its methods to an inner Stream.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.ThreadNeutralSemaphore.Abort">
            <summary>
             Abort the ThreadNeutralSemaphore object.
             NOTE: This method is only supported for sync waiters.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.Security.RetriableCertificateValidator.ValidateUnTrustedCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Check untrust store and validation period
            </summary>
            <param name="certificate">Certificate need to validate</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.Security.RetriableCertificateValidator.PeerOrChainTrustValidate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            validate with retry
            </summary>
            <param name="certificate">The certificate need to validate</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.AsyncIOTask.Delay(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            If you're using this is there a reason not to just use Task.Delay?
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ByteUtility.EndsWithTwoAsciiNewLines(System.Byte[],System.Int32)">
            <summary>
            Check if the given buffer ends with "\r\n\r\n" without having to allocate or convert byte[] into string
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ByteUtility.IndexOfAsciiChar(System.Byte[],System.Int32,System.Int32,System.Char)">
            <summary>
            Check if the given buffer contains the specified ascii character without having to allocate or convert byte[] into string
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ByteUtility.IndexOfAsciiChars(System.Byte[],System.Int32,System.Int32,System.Char,System.Char)">
            <summary>
            Check if the given buffer contains the 2 specified ascii characters (in sequence) without having to allocate or convert byte[] into string
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Common.TaskCompletionSourceExtensions">
            <summary>Extension methods for TaskCompletionSource.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskCompletionSourceExtensions.TrySetFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task)">
            <summary>Attempts to transfer the result of a Task to the TaskCompletionSource.</summary>
            <typeparam name="TResult">Specifies the type of the result.</typeparam>
            <param name="resultSetter">The TaskCompletionSource.</param>
            <param name="task">The task whose completion results should be transfered.</param>
            <returns>Whether the transfer could be completed.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Common.TaskExtensions">
            <summary>Extensions methods for Task.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskExtensions.Then(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task})">
            <summary>Creates a task that represents the completion of a second task when a first task completes.</summary>
            <param name="task">The first task.</param>
            <param name="next">The function that produces the second task.</param>
            <returns>The task that represents the completion of both the first and second task.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskExtensions.Then``1(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>Creates a task that represents the completion of a second task when a first task completes.</summary>
            <param name="task">The first task.</param>
            <param name="next">The function that produces the second task based on the result of the first task.</param>
            <returns>The task that represents the completion of both the first and second task.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskExtensions.Then``1(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>Creates a task that represents the completion of a second task when a first task completes.</summary>
            <param name="task">The first task.</param>
            <param name="next">The function that produces the second task.</param>
            <returns>The task that represents the completion of both the first and second task.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskExtensions.Then``2(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>Creates a task that represents the completion of a second task when a first task completes.</summary>
            <param name="task">The first task.</param>
            <param name="next">The function that produces the second task based on the result of the first.</param>
            <returns>The task that represents the completion of both the first and second task.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2">
            <summary />
            <typeparam name="TKey" />
            <typeparam name="TValue" />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary />
            <param name="dictionary" />
        </member>
        <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Dictionary">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Keys">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Values">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ContainsKey(`0)">
            <summary />
            <param name="key" />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.TryGetValue(`0,`1@)">
            <summary />
            <param name="key" />
            <param name="value" />
        </member>
        <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Item(`0)">
            <summary />
            <param name="key" />
        </member>
        <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Count">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.GetEnumerator">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IEnumerable#GetEnumerator">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <summary />
            <param name="key" />
            <param name="value" />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Clear">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Contains(System.Object)">
            <summary />
            <param name="key" />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#GetEnumerator">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Remove(System.Object)">
            <summary />
            <param name="key" />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary />
            <param name="array" />
            <param name="index" />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.CopyTo(`0[],System.Int32)">
            <summary />
            <param name="array" />
            <param name="arrayIndex" />
        </member>
        <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.Count">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.GetEnumerator">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary />
            <param name="array" />
            <param name="index" />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)">
            <summary />
            <param name="array" />
            <param name="arrayIndex" />
        </member>
        <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.Count">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary />
            <param name="array" />
            <param name="index" />
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskHelpers.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)">
            <summary>
            Create a Task based on Begin/End IAsyncResult pattern.
            This is a wrapper around Task.Factory.FromAsync with the additional guarantee that if the begin delegate
            throws an Exception it will result in a Task with that exception instead of the exception being thrown from this method.
            </summary>
            <param name="begin"></param>
            <param name="end"></param>
            <param name="state"> 
            This parameter helps reduce allocations by passing state to the Funcs. e.g.:
             await TaskHelpers.FromAsync(
                 (c, s) => ((Transaction)s).BeginCommit(c, s),
                 (a) => ((Transaction)a.AsyncState).EndCommit(a),
                 transaction);
            </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskHelpers.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)">
            <summary>
            Create a Task based on Begin/End IAsyncResult pattern.
            This is a wrapper around Task.Factory.FromAsync with the additional guarantee that if the begin delegate
            throws an Exception it will result in a Task with that exception instead of the exception being thrown from this method.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskHelpers.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)">
            <summary>
            Create a Task based on Begin/End IAsyncResult pattern.
            This is a wrapper around Task.Factory.FromAsync with the additional guarantee that if the begin delegate
            throws an Exception it will result in a Task with that exception instead of the exception being thrown from this method.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskHelpers.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)">
            <summary>
            Create a Task based on Begin/End IAsyncResult pattern.
            This is a wrapper around Task.Factory.FromAsync with the additional guarantee that if the begin delegate
            throws an Exception it will result in a Task with that exception instead of the exception being thrown from this method.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskHelpers.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)">
            <summary>
            Create a Task based on Begin/End IAsyncResult pattern.
            This is a wrapper around Task.Factory.FromAsync with the additional guarantee that if the begin delegate
            throws an Exception it will result in a Task with that exception instead of the exception being thrown from this method.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskHelpers.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)">
            <summary>
            Create a Task based on Begin/End IAsyncResult pattern.
            This is a wrapper around Task.Factory.FromAsync with the additional guarantee that if the begin delegate
            throws an Exception it will result in a Task with that exception instead of the exception being thrown from this method.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskHelpers.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)">
            <summary>
            Create a Task based on Begin/End IAsyncResult pattern.
            This is a wrapper around Task.Factory.FromAsync with the additional guarantee that if the begin delegate
            throws an Exception it will result in a Task with that exception instead of the exception being thrown from this method.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskHelpers.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)">
            <summary>
            Create a Task based on Begin/End IAsyncResult pattern.
            This is a wrapper around Task.Factory.FromAsync with the additional guarantee that if the begin delegate
            throws an Exception it will result in a Task with that exception instead of the exception being thrown from this method.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskHelpers.CreateTransactionalTask(System.Transactions.Transaction,System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)">
            <summary>
            Create a Task based on Begin/End IAsyncResult pattern.
            This is a wrapper around Task.Factory.FromAsync with the additional guarantee that if the begin delegate
            throws an Exception it will result in a Task with that exception instead of the exception being thrown from this method.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskHelpers.FromException(System.Exception)">
            <summary>
            Creates a Task that has completed with a specified exception.
            Once the code has moved to .NET 4.6 just use Task.FromException;
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskHelpers.FromException``1(System.Exception)">
            <summary>
            Creates a Task&lt;TResult&gt; that's completed with a specified exception.
            Once the code has moved to .NET 4.6 just use Task.FromException&lt;TResult&gt;
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.TaskHelpers.FromResult``1(``0)">
            <summary>
            Returns a Task&lt;TResult&gt; that's completed successfully with the specified result.
            It's comparable to Task.FromResult() but doesn't allocate if T is null.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ExceptionExtensions.Rethrow(System.Exception)">
            <summary>
            Rethrow the Exception while preserving the previous throw location. The following string is inserted in the
            stack trace to indicate the restore point: "End of stack trace from the previous location where the 
            exception was thrown". This is similar to the way inner exceptions or marshaled exceptions are indicated in stack traces.
            <para />This method always throws an exception.  It has a return value in order to write calling code like below
            so that the compiler also knows the code doesn't continue after this call:
            <para/>
            throw exception.Rethrow();
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ExceptionExtensions.ThrowException(System.Exception)">
            <summary>
            ThrowException is a helper/wrapper method that simply calls "throw exception;".  This wrapper method exists so that 
            the calling method (Rethrow) will indeed get inlined (having a direct throw in Rethrow causes it to not be inlined any more).
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ExceptionTrace.AsError``1(System.Func{System.String,``0},System.String)">
            <summary>
            This overload checks for TrackingContext.Current and if found ensures that the TrackingId information is appended to the
            message passed to the Exception..ctor (if none is there already).
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ExceptionTrace.AsError``1(System.Func{System.String,``0},System.String,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary>
            This overload ensures that the TrackingId information is appended to the
            message passed to the Exception..ctor (if none is there already).
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ExceptionTrace.AsInformation``1(System.Func{System.String,``0},System.String)">
            <summary>
            This overload ensures that the TrackingId information is appended to the
            message passed to the Exception..ctor (if none is there already).
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ExceptionTrace.AsInformation``1(System.Func{System.String,``0},System.String,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary>
            This overload ensures that the TrackingId information is appended to the
            message passed to the Exception..ctor (if none is there already).
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ExceptionTrace.AsWarning``1(System.Func{System.String,``0},System.String)">
            <summary>
            This overload uses TrackingContext.Current and ensures that the TrackingId information is appended to the
            message passed to the Exception..ctor (if none is there already).
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ExceptionTrace.AsWarning``1(System.Func{System.String,``0},System.String,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary>
            This overload ensures that the TrackingId information is appended to the
            message passed to the Exception..ctor (if none is there already).
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ExceptionTrace.TraceException``1(System.Func{System.String,``0},System.String,Microsoft.ServiceBus.Tracing.TrackingContext,System.Diagnostics.Tracing.EventLevel)">
            <summary>
            This overload ensures that the TrackingId information is appended to the
            message passed to the Exception..ctor (if none there already).
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.ExceptionTrace.FormatTraceSource(System.Object)">
            <summary>
            Given a "Trace Source" object convert it to string.  If the object is a string use that.
            If the object is a System.Type use its Name property.  Otherwise call object.ToString().
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.InternalBufferManager.PreallocatedBufferManager.ReturnBuffer(System.Byte[])">
            <summary>
            Returned buffer must have been acquired via a call to TakeBuffer
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.ActionItemIsAlreadyScheduled">
            <summary>Gets localized string like: The ActionItem was scheduled for execution but has not completed yet.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.AsyncCallbackThrewException">
            <summary>Gets localized string like: An AsyncCallback threw an exception.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.AsyncResultAlreadyEnded">
            <summary>Gets localized string like: End cannot be called twice on the same AsyncResult.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.AsyncTransactionException">
            <summary>Gets localized string like: An exception was thrown from a TransactionScope used to flow a transaction into an asynchronous operation.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.BufferIsNotRightSizeForBufferManager">
            <summary>Gets localized string like: This buffer cannot be returned to the buffer manager because it is the wrong size.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.InvalidAsyncResult">
            <summary>Gets localized string like: An incorrect IAsyncResult was provided to an 'End' method. The IAsyncResult object passed to 'End' must be the one returned from the matching 'Begin' or passed to the callback provided to 'Begin'.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.InvalidAsyncResultImplementationGeneric">
            <summary>Gets localized string like: An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.InvalidNullAsyncResult">
            <summary>Gets localized string like: A null value was returned from an asynchronous 'Begin' method or passed to an AsyncCallback. Asynchronous 'Begin' implementations must return a non-null IAsyncResult and pass the same IAsyncResult object as the parameter to the AsyncCallback.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.InvalidSemaphoreExit">
            <summary>Gets localized string like: Object synchronization method was called from an unsynchronized block of code.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.MustCancelOldTimer">
            <summary>Gets localized string like: You must cancel the previous timer before setting a new one.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.EndOfInnerExceptionStackTrace">
            <summary>Gets localized string like: --- End of inner exception stack trace ---</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.AsyncSemaphoreExitCalledWithoutEnter">
            <summary>Gets localized string like: Exit() is called without successfully entering the semaphore.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.SharedAccessAuthorizationRuleKeyContainsInvalidCharacters">
            <summary>Gets localized string like: The Key Name specified for the SharedAccessAuthorizationRule contains invalid or unsupported characters.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.SharedAccessAuthorizationRuleRequiresPrimaryKey">
            <summary>Gets localized string like: A SharedAccessAuthorizationRule requires a Primary Key of non-zero length.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.SRCore.SharedAccessKeyShouldbeBase64">
            <summary>Gets localized string like: A SharedAccessAuthorizationRule supports only base64 keys.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.ArgumentNullOrEmpty(System.Object)">
            <summary>Gets localized string like: The argument {0} is null or empty.</summary>
            <param name="param0">Parameter 0 for string: The argument {0} is null or empty.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.AsyncResultCompletedTwice(System.Object)">
            <summary>Gets localized string like: The IAsyncResult implementation '{0}' tried to complete a single operation multiple times. This could be caused by an incorrect application of IAsyncResult implementation or other extensibility code, such as an IAsyncResult that returns incorrect CompletedSynchronously values, or invokes the AsyncCallback multiple times.</summary>
            <param name="param0">Parameter 0 for string: The IAsyncResult implementation '{0}' tried to complete a single operation multiple times. This could be caused by an incorrect application of IAsyncResult implementation or other extensibility code, such as an IAsyncResult that returns incorrect CompletedSynchronously values, or invokes the AsyncCallback multiple times.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.EtwAPIMaxStringCountExceeded(System.Object)">
            <summary>Gets localized string like: Number of string arguments passed to Etw WriteEvent has exceeded the maximum allowed limit of {0}.</summary>
            <param name="param0">Parameter 0 for string: Number of string arguments passed to Etw WriteEvent has exceeded the maximum allowed limit of {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.EtwMaxNumberArgumentsExceeded(System.Object)">
            <summary>Gets localized string like: Number of arguments passed to Etw WriteEvent has exceeded the maximum allowed limit of {0}.</summary>
            <param name="param0">Parameter 0 for string: Number of arguments passed to Etw WriteEvent has exceeded the maximum allowed limit of {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.EtwRegistrationFailed(System.Object)">
            <summary>Gets localized string like: Etw registration failed with error code {0}.</summary>
            <param name="param0">Parameter 0 for string: Etw registration failed with error code {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.InvalidAsyncResultImplementation(System.Object)">
            <summary>Gets localized string like: An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once. The type {0} could be the incorrect implementation.</summary>
            <param name="param0">Parameter 0 for string: An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once. The type {0} could be the incorrect implementation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.ShipAssertExceptionMessage(System.Object)">
            <summary>Gets localized string like: An unexpected failure occurred. Applications should not attempt to handle this error. For diagnostic purposes, this English message is associated with the failure: {0}.</summary>
            <param name="param0">Parameter 0 for string: An unexpected failure occurred. Applications should not attempt to handle this error. For diagnostic purposes, this English message is associated with the failure: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.TimeoutInputQueueDequeue(System.Object)">
            <summary>Gets localized string like: A de-queue operation timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout.</summary>
            <param name="param0">Parameter 0 for string: A de-queue operation timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.TimeoutMustBeNonNegative(System.Object,System.Object)">
            <summary>Gets localized string like: Argument {0} must be a non-negative timeout value. The provided value was {1}.</summary>
            <param name="param0">Parameter 0 for string: Argument {0} must be a non-negative timeout value. The provided value was {1}.</param>
            <param name="param1">Parameter 1 for string: Argument {0} must be a non-negative timeout value. The provided value was {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.TimeoutMustBePositive(System.Object,System.Object)">
            <summary>Gets localized string like: Argument {0} must be a positive timeout value. The provided value was {1}.</summary>
            <param name="param0">Parameter 0 for string: Argument {0} must be a positive timeout value. The provided value was {1}.</param>
            <param name="param1">Parameter 1 for string: Argument {0} must be a positive timeout value. The provided value was {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.TimeoutOnOperation(System.Object)">
            <summary>Gets localized string like: The operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout. For more information on exception types and proper exception handling, please refer to http://go.microsoft.com/fwlink/?LinkId=761101</summary>
            <param name="param0">Parameter 0 for string: The operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout. For more information on exception types and proper exception handling, please refer to http://go.microsoft.com/fwlink/?LinkId=761101</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.FailFastMessage(System.Object)">
            <summary>Gets localized string like: An unrecoverable error occurred. For diagnostic purposes, this English message is associated with the failure: '{0}'.</summary>
            <param name="param0">Parameter 0 for string: An unrecoverable error occurred. For diagnostic purposes, this English message is associated with the failure: '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.ResourceCountExceeded(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The maximum number of resources of type {0} has been reached or exceeded. Actual: {1}, Max allowed: {2}.</summary>
            <param name="param0">Parameter 0 for string: The maximum number of resources of type {0} has been reached or exceeded. Actual: {1}, Max allowed: {2}.</param>
            <param name="param1">Parameter 1 for string: The maximum number of resources of type {0} has been reached or exceeded. Actual: {1}, Max allowed: {2}.</param>
            <param name="param2">Parameter 2 for string: The maximum number of resources of type {0} has been reached or exceeded. Actual: {1}, Max allowed: {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.ArgumentNullOrWhiteSpace(System.Object)">
            <summary>Gets localized string like: The argument {0} is null or white space.</summary>
            <param name="param0">Parameter 0 for string: The argument {0} is null or white space.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.UnsupportedEnumerationValue(System.Object)">
            <summary>Gets localized string like: The enumeration value {0} is unsupported.</summary>
            <param name="param0">Parameter 0 for string: The enumeration value {0} is unsupported.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.UnsupportedOperation(System.Object)">
            <summary>Gets localized string like: The operation {0} is not allowed.</summary>
            <param name="param0">Parameter 0 for string: The operation {0} is not allowed.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.UnsupportedTransport(System.Object,System.Object)">
            <summary>Gets localized string like: The operation {0} is not supported for the {1} transport type.</summary>
            <param name="param0">Parameter 0 for string: The operation {0} is not supported for the {1} transport type.</param>
            <param name="param1">Parameter 1 for string: The operation {0} is not supported for the {1} transport type.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.AutoForwardToSelf(System.Object)">
            <summary>Gets localized string like: The entity {0} has an auto-forwarding policy to itself.</summary>
            <param name="param0">Parameter 0 for string: The entity {0} has an auto-forwarding policy to itself.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.NullOrEmptyConfigurationAttribute(System.Object,System.Object)">
            <summary>Gets localized string like: The attribute '{0}' for configuration element '{1}' cannot be null or empty.</summary>
            <param name="param0">Parameter 0 for string: The attribute '{0}' for configuration element '{1}' cannot be null or empty.</param>
            <param name="param1">Parameter 1 for string: The attribute '{0}' for configuration element '{1}' cannot be null or empty.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.MultipleTransportSettingConfigurationElement(System.Object)">
            <summary>Gets localized string like: Multiple transport setting elements are not allowed in '{0}' section. Make sure only one is defined.</summary>
            <param name="param0">Parameter 0 for string: Multiple transport setting elements are not allowed in '{0}' section. Make sure only one is defined.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.DictionaryKeyIsModified(System.Object)">
            <summary>Gets localized string like: Dictionary key {0} is being modified by a different transaction.</summary>
            <param name="param0">Parameter 0 for string: Dictionary key {0} is being modified by a different transaction.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.DictionaryKeyNotExist(System.Object)">
            <summary>Gets localized string like: Dictionary key {0} does not exist</summary>
            <param name="param0">Parameter 0 for string: Dictionary key {0} does not exist</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.ArgumentStringTooBig(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The argument {0} has {2} characters, it cannot exceed {1} characters</summary>
            <param name="param0">Parameter 0 for string: The argument {0} has {2} characters, it cannot exceed {1} characters</param>
            <param name="param1">Parameter 1 for string: The argument {0} has {2} characters, it cannot exceed {1} characters</param>
            <param name="param2">Parameter 2 for string: The argument {0} has {2} characters, it cannot exceed {1} characters</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.SharedAccessAuthorizationRuleKeyNameTooBig(System.Object)">
            <summary>Gets localized string like: The Key Name specified for the SharedAccessAuthorizationRule exceeds the limit of {0} characters.</summary>
            <param name="param0">Parameter 0 for string: The Key Name specified for the SharedAccessAuthorizationRule exceeds the limit of {0} characters.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.SharedAccessAuthorizationRuleKeyTooBig(System.Object)">
            <summary>Gets localized string like: The Key specified for the SharedAccessAuthorizationRule exceeds the limit of {0} characters.</summary>
            <param name="param0">Parameter 0 for string: The Key specified for the SharedAccessAuthorizationRule exceeds the limit of {0} characters.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.SharedAccessRuleAllowsFixedLengthKeys(System.Object)">
            <summary>Gets localized string like: A SharedAccessAuthorizationRule only supports keys of size {0} bytes.</summary>
            <param name="param0">Parameter 0 for string: A SharedAccessAuthorizationRule only supports keys of size {0} bytes.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.ArgumentOutOfRange(System.Object,System.Object)">
            <summary>Gets localized string like: The argument is out of range. It should be between {0} and {1}.</summary>
            <param name="param0">Parameter 0 for string: The argument is out of range. It should be between {0} and {1}.</param>
            <param name="param1">Parameter 1 for string: The argument is out of range. It should be between {0} and {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.SRCore.PartitionCountPerThroughputUnitsExceeded(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The requested partition count exceeded the maximum partitions allowed for Namespace: {0}. Maximum allowed partitions per thoughput unit: {1}. Current throughput units: {2}. Current partition count: {3}. Requested partition count: {4}, whereas, available partition count: {5}. Increase through put units of the Service Bus Namespace to be able to create more partitions.</summary>
            <param name="param0">Parameter 0 for string: The requested partition count exceeded the maximum partitions allowed for Namespace: {0}. Maximum allowed partitions per thoughput unit: {1}. Current throughput units: {2}. Current partition count: {3}. Requested partition count: {4}, whereas, available partition count: {5}. Increase through put units of the Service Bus Namespace to be able to create more partitions.</param>
            <param name="param1">Parameter 1 for string: The requested partition count exceeded the maximum partitions allowed for Namespace: {0}. Maximum allowed partitions per thoughput unit: {1}. Current throughput units: {2}. Current partition count: {3}. Requested partition count: {4}, whereas, available partition count: {5}. Increase through put units of the Service Bus Namespace to be able to create more partitions.</param>
            <param name="param2">Parameter 2 for string: The requested partition count exceeded the maximum partitions allowed for Namespace: {0}. Maximum allowed partitions per thoughput unit: {1}. Current throughput units: {2}. Current partition count: {3}. Requested partition count: {4}, whereas, available partition count: {5}. Increase through put units of the Service Bus Namespace to be able to create more partitions.</param>
            <param name="param3">Parameter 3 for string: The requested partition count exceeded the maximum partitions allowed for Namespace: {0}. Maximum allowed partitions per thoughput unit: {1}. Current throughput units: {2}. Current partition count: {3}. Requested partition count: {4}, whereas, available partition count: {5}. Increase through put units of the Service Bus Namespace to be able to create more partitions.</param>
            <param name="param4">Parameter 4 for string: The requested partition count exceeded the maximum partitions allowed for Namespace: {0}. Maximum allowed partitions per thoughput unit: {1}. Current throughput units: {2}. Current partition count: {3}. Requested partition count: {4}, whereas, available partition count: {5}. Increase through put units of the Service Bus Namespace to be able to create more partitions.</param>
            <param name="param5">Parameter 5 for string: The requested partition count exceeded the maximum partitions allowed for Namespace: {0}. Maximum allowed partitions per thoughput unit: {1}. Current throughput units: {2}. Current partition count: {3}. Requested partition count: {4}, whereas, available partition count: {5}. Increase through put units of the Service Bus Namespace to be able to create more partitions.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.IoTTokenProvider">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.IoTTokenProvider.BuildSignature(System.String)">
            <summary />
            <param name="targetUri" />
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Framing.AmqpDescribed">
            <summary>
            Descriptor is restricted to symbol and ulong
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Framing.DescribedList">
            <summary>
            Encoding of DescribedType(symbol/ulong, list) is not efficient if the
            descriptor and the list fields are pre-defined, e.g. the performatives
            and other types used by the protocol.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Framing.Multiple`1">
            <summary>
            Multiple is not an AMQP data type. It is a property of a list field
            that affects the encoding of the associated data type.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.Transport.AmqpTransportInitiator.#ctor(Microsoft.ServiceBus.Messaging.Amqp.AmqpSettings,Microsoft.ServiceBus.Messaging.Amqp.Transport.TransportSettings)">
            <summary>
            This initiator establishes a base transport using the transport settings
            Then it iterates through the security provider list in the settings to upgrade
            the transport (e.g. tcp -> tls -> sasl).
            </summary>
            <param name="settings"></param>
            <param name="transportSettings"></param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Transport.AmqpTransportListener">
            <summary>
            This listener supports protocol upgrade (e.g. tcp -> tls -> sasl)
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Transport.TlsTransportInitiator">
            <summary>
            This initiator establishes an SSL connection (no AMQP security upgrade)
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Transport.TlsTransportListener">
            <summary>
            This listener accepts SSL transport directly (no AMQP security upgrade)
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.Transport.TransportInitiator.ConnectAsync(System.TimeSpan,Microsoft.ServiceBus.Messaging.Amqp.Transport.TransportAsyncCallbackArgs)">
            <summary>
            Returns true if connect is pending, the callback is invoked upon completion.
            Returns false if connect is completed synchronously, the callback is not invoked.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Transport.TransportProvider.Versions">
            <summary>
            Supported versions in preferred order.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportManager.ConnectionHandler">
            <summary>
            The purpose of this class open/maintain the AmqpConnection
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Serialization.EncodingType">
            <summary>Enumerates the encoding type associated with the serialization.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Amqp.Serialization.EncodingType.List">
            <summary>The List encoding type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Amqp.Serialization.EncodingType.Map">
            <summary>The Map encoding type.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpMessageProperty">
            <summary>
            This WCF Message Property allows you to specify AMQP ApplicationProperties to be 
            set when the WCF Message is converted to an AMQP message.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.Sasl.SaslNegotiator.OnSaslServerMechanisms(Microsoft.ServiceBus.Messaging.Amqp.Sasl.SaslMechanisms)">
            <summary>
            Client receives the announced server mechanisms.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.Sasl.SaslNegotiator.OnSaslInit(Microsoft.ServiceBus.Messaging.Amqp.Sasl.SaslInit)">
            <summary>
            Server receives the client init that may contain the initial response message.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.Sasl.SaslNegotiator.OnSaslOutcome(Microsoft.ServiceBus.Messaging.Amqp.Sasl.SaslOutcome)">
            <summary>
            Client receives the sasl outcome from the server.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.AmqpMessageReceiver.IncrementContinuousErrorCount">
            <summary> Disable redirection if it's enabled </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings">
            <summary>Represents the Advanced Message Queuing Protocol transport settings.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.UseSslStreamSecurity">
            <summary>Gets a value that indicates whether the SSL stream uses a custom binding element.</summary>
            <value>true if the SSL stream uses a custom binding element; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.MaxFrameSize">
            <summary>Gets or sets the maximum frame size.</summary>
            <value>The maximum frame size.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.BatchFlushInterval">
            <summary>Gets or sets the batch flush interval associated with the transport.</summary>
            <value>The batch flush interval associated with the transport.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.EnableReceiverRuntimeMetric">
            <summary> Gets or sets a value indicating whether the runtime metric of a receiver is enabled. </summary>
            <value> true if a client wants to access <see cref="T:Microsoft.ServiceBus.Messaging.ReceiverRuntimeInfo"/> using <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver"/>. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.EnableLinkRedirect">
            <summary> Gets or sets a value indicating whether this transport is ready to be redirected to the server backend. </summary>
            <value> true if this transport wants to participate in redirect allowed by the server. </value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.Clone">
            <summary>Creates a new object that is a copy of the current instance.</summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpCodec">
            <summary>
            Provides a single place to encode and decode AMQP premitives
            Encode and decode AMQP framing types.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpConnection">
            <summary>
            Implements the AMQP 1.0 connection.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpConnection.Sessions">
            <summary> returns open sessions </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpConnectionBase">
            <summary>
            The base class for AMQP connection. It should be version independent.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.AmqpConnectionSettings.Clone">
            <summary> doesn't clone - RemoteSettings: HostName/ContainerId </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpConstants">
            <summary>
            Constants for the protocol stack. Extended constants should be defined in
            ClientConstants.cs
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpLink">
            <summary>
            Implements the transport-layer link, including
            link command handling and link flow control.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpMessage">
            <summary>
            Implements the AMQP MESSAGE FORMAT 0 message.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpMessage.AmqpSectionMessage">
            <summary>
            Message is composed of different sections. Sections are settable/mutable.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpMessage.AmqpClonedMessage">
            <summary>
            Allow updates in mutalble sections.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpMessage.AmqpBodyStreamMessage">
            <summary>
            Wraps a stream in the message body. The data is sent in one or more Data sections.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpMessage.AmqpBufferMessage">
            <summary>
            Message is constructed from a buffer. Sections are not settable. Though
            not strictly enforced, section properties SHOULD NOT be updated as the
            change will be lost. To update a buffer message, clone it first and update
            the cloned message instead.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.AmqpObject.Abort">
            <summary>
            Move to End state without closing
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.AmqpObject.SafeClose">
            <summary>
            Close with exception handling
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpSettings.TransportProviders">
            <summary>
            Providers should be added in preferred order.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AsyncIO.AsyncReader">
            <summary>
            A reader that pumps frames from the transport and hands it over to the handler
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AsyncIO.AsyncBufferReader">
            <summary>
            A reader that reads specified bytes and notifies caller upon completion (pull).
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AsyncIO.FrameBufferReader">
            <summary>
            A reader that reads AMQP frame buffers. Not thread safe.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AsyncIO.AsyncWriter">
            <summary>
            A writer that writes buffers. Buffer writes may be batched. Writer owns closing the transport.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AsyncIO.AsyncBufferWriter">
            <summary>
            A writer that writes fixed-size buffer and notify caller upon completion.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Encoding.AmqpEncoding">
            <summary>
            Encode and decode data within the AMQP type system.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Encoding.DecimalEncoding">
            <summary>
            Decoding from AMQP decimal to C# decimal can lose precision and 
            can also cause OverflowException.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpExtensions">
            <summary>
            make it convenient to deal with nullable types
            also set the default value if the field is null
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.HandleTable`1">
            <summary>
            Designed for session channel and link handle lookup. 
            Not for general purpose uses.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.HandleTable`1.SafeEnumerator">
            <summary>
            Use this only if the enumeration is best effort only
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.ReceivingAmqpLink.SizeBasedFlowQueue">
            <summary>
            The different this class from the normal Queue is that
            if we specify a size then we will perform Amqp Flow based on 
            the size, where:
            - When en-queuing (cache message from service) we will keep sending credit flow as long as size is not over the cache limit.
            - When de-queuing (return message to user) we will issue flow as soon as the size is below the threshold (70%).
            - When issuing credit we always issue in increment of boundedTotalLinkCredit
            - boundedTotalLinkCredit is based on [total cache size] / [max message size]
            - [total cache size] has a 90% cap to try to prevent overflow - but does not enforce it.
            - we keep updating [max message size] as we receive message in flow.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.ReceivingAmqpLink.SizeBasedFlowQueue.UpdateCreditToIssue(Microsoft.ServiceBus.Messaging.Amqp.AmqpMessage)">
            <summary>
            This method updates the credit that we will send to service to fetch more
            data based on the current average message size. Only call this method if
            we already check and cache credit is within range (&gt; 0%, &lt; 90%).
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.SequenceNumber">
            <summary>
            RFC1982: http://tools.ietf.org/html/rfc1982
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.SerializedWorker`1">
            <summary>
            Work is serialized. Each work is retried until it is completed
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.ClientEntity">
            <summary>A data structure that represents the events sent and received from an Event Hub stream.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.Finalize">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy">
            <summary />
            <value>Returns <see cref="T:Microsoft.ServiceBus.RetryPolicy" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed">
            <summary />
            <value>Returns <see cref="T:System.Boolean" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock">
            <summary />
            <value>Returns <see cref="T:System.Object" />.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.Abort">
            <summary>Performs abort functionality on the messaging entity.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.Close">
            <summary>Sends a cleanup message to Service Bus to signal the completion of the usage of an entity.</summary>
            <remarks>In the event of any exceptions, the method
            will perform an abort on the entity before throwing
            the exception.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync">
            <summary>Sends a cleanup message asynchronously to Service Bus to signal the completion of the usage of an entity.</summary>
            <remarks>In the event of any exceptions, the method will perform an abort on the entity before throwing
            the exception.</remarks>
            <returns>If an exception occurs, this method performs an abort operation on the entity before throwing the exception.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.Fault">
            <summary>For internal use only. Do not inherit from this class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)">
            <summary />
            <param name="timeout" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)">
            <summary />
            <param name="timeout" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary />
            <param name="timeout" />
            <param name="callback" />
            <param name="state" />
            <returns>Returns <see cref="T:System.IAsyncResult" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)">
            <summary />
            <param name="result" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary />
            <param name="timeout" />
            <param name="callback" />
            <param name="state" />
            <returns>Returns <see cref="T:System.IAsyncResult" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)">
            <summary />
            <param name="result" />
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventDataBatch">
            <summary>
            A helper class for creating a batch of EventData objects to be used for SendBatch or SendBatchAsync call.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventDataBatch.#ctor(System.Int64)">
            <summary>
            Creates a batch with the specified maximum size in bytes.
            </summary>
            <param name="maxSizeInBytes">The maximum size of the serialized batch message.</param>
            <remarks>
            It is recommended to call <see cref="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateBatch"/> or
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubSender.CreateBatch"/> to create an instance of this class
            because it uses the maximum message size negotiated with the service.
            When the application creates a batch using the constructor, it is responsible to ensure
            the maxSizeInBytes is permitted by the service.
            </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventDataBatch.Count">
            <summary>Gets the current event count in the batch.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventDataBatch.TryAdd(Microsoft.ServiceBus.Messaging.EventData)">
            <summary>Tries to add an event data to the batch if permitted by the batch's size limit.</summary>
            <param name="eventData">The <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> to add.</param>
            <returns>A boolean value indicating if the event data has been added to the batch or not.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the EventData is null.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown when the batch is already disposed.</exception>
            <remarks>
            This method checks the sizes of the batch, the EventData object and the specified limit to determine
            if the EventData object can be added. It does not perform other validations on the current batch and
            the EventData object. It is possible that the application may get exceptions from the send call
            if the batched EventData objects cannot be sent in a batch. For example, they contain different
            <see cref="P:Microsoft.ServiceBus.Messaging.EventData.PartitionKey"/> values.
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventDataBatch.ToEnumerable">
            <summary>Converts the batch to an IEnumerable of EventData objects that can be accepted by the
            SendBatch or SendBatchAsync method.</summary>
            <returns>Returns an IEnumerable of EventData objects.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventDataBatch.Dispose">
            <summary>Disposes the EventData objects contained in this batch.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation">
            <summary>Returns Event Hubs runtime information, which is required for creating 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubSender" /> or 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" /> objects.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.Path">
            <summary>Gets or sets the path to the Event Hub.</summary>
            <value>Returns <see cref="T:System.String" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.CreatedAt">
            <summary>Gets or sets the time at which the Event Hub was created.</summary>
            <value>Returns <see cref="T:System.DateTime" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionCount">
            <summary>Gets or sets the number of partitions in an Event Hub.</summary>
            <value>Returns <see cref="T:System.Int32" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionIds">
            <summary>Gets or sets the partition ID for an Event Hub.</summary>
            <value>Returns <see cref="T:System.String" />.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventProcessorFaultedEventArgs">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventProcessorFaultedEventArgs.#ctor(System.String,System.String)">
            <summary />
            <param name="partitinId" />
            <param name="leaseToken" />
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorFaultedEventArgs.PartitionId">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorFaultedEventArgs.LeaseToken">
            <summary />
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventProcessorOptions">
            <summary>Defines the runtime options when registering an 
            <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> interface with an 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup" />. This is also the mechanism for catching exceptions from an 
            <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> instance used by an 
            EventProcessorHost object.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventProcessorOptions.#ctor">
            <summary />
        </member>
        <member name="E:Microsoft.ServiceBus.Messaging.EventProcessorOptions.ExceptionReceived">
            <summary>
            This event fires whenever an exception is encountered when processing
            events. User can register an handler to this event for getting 
            exception notification.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize">
            <summary>Gets or sets the maximum event count that a user is willing to 
            accept for processing per receive loop. This count is on a per-Event Hub partition level.</summary> 
            <value>Returns <see cref="T:System.Int32" />.</value>
            <remarks>This corresponds to the maxCount argument in <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32,System.TimeSpan)"/></remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut">
            <summary>Gets or sets the timespan in which the user is willing to wait when the event processor is performing a receive operation.</summary>
            <value>Returns <see cref="T:System.TimeSpan" />.</value>
            <remarks>This correspond to the waitTime argument in <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32,System.TimeSpan)"/></remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.PrefetchCount">
            <summary>Gets or sets the number of events that any receiver in the 
            currently owned partition will actively cache. The default value for this property is 300.</summary> 
            <value>Returns <see cref="T:System.Int32" />.</value>
            <remarks>This property is use to set <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount"/> property on the underlying MessagingFactory
            created by host</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.InitialOffsetProvider">
            <summary>
            Gets or sets a delegate which is used to get the initial offset for a given partition to create <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver"/>.
            Delegate is invoked by passing in PartitionId and then user can return either the starting offset as string or starting UTC time
            for receiving messages.
            This is only used when <see cref="P:Microsoft.ServiceBus.Messaging.Lease.Offset"/> is not provided and receiver is being created for the very first time.
            <remarks>This corresponds to either <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,Microsoft.ServiceBus.Messaging.ReceiverOptions)"/> or 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.DateTime,Microsoft.ServiceBus.Messaging.ReceiverOptions)"/> depending on the type of return value from delegate.</remarks>
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.InvokeProcessorAfterReceiveTimeout">
            <summary>
            Enabling this option will cause <see cref="M:Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})"/> to be invoked after every ReceiveTimeout when 
            there are no more messages in the stream for a partition.
            </summary>
            <remarks>By default this option is turned off.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.DefaultOptions">
            <summary>Gets the default options, which is 10 for the 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize" />, and 1 minute for the 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut" /> property.</summary> 
            <value>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventProcessorOptions" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.EnableReceiverRuntimeMetric">
            <summary> Gets or sets a value indicating whether the runtime metric of a receiver is enabled. </summary>
            <value> true if a client wants to access <see cref="T:Microsoft.ServiceBus.Messaging.ReceiverRuntimeInfo"/> using <see cref="T:Microsoft.ServiceBus.Messaging.PartitionContext"/>. </value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.IpFilterActionType">
            <summary>
            Represent the type of action the ip that match the IpFilter is applied to.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.IpFilterActionType.Reject">
            <summary>
            If an Ip is matched, the Ip is rejected from connecting to the service.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.IpFilterActionType.Accept">
            <summary>
            If an Ip is matched, the connection is allowed.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IpFilterAuthorizationRule.#ctor">
            <summary>
            This is done to help json and other deserializers
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.ReceiverOptions">
            <summary>Represents options can be set during the creation of a event hub receiver.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ReceiverOptions.Identifier">
            <summary>Gets or sets the identifier of a receiver.</summary> 
            <value>A string representing the identifier of a receiver.  It will return null if the identifier is not set.</value>
            <exception cref="T:System.ArgumentException">Thrown if the length of the value is greater than the maximum length of 64.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ReceiverOptions.EnableReceiverRuntimeMetric">
            <summary> Gets or sets a value indicating whether the runtime metric of a receiver is enabled. </summary>
            <value> true if a client wants to access <see cref="T:Microsoft.ServiceBus.Messaging.ReceiverRuntimeInfo"/> using <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver"/>. </value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.CloseReason">
            <summary>Enumerates the reason for closing of session.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.CloseReason.Shutdown">
            <summary>Specifies that the server is shutting down.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.CloseReason.LeaseLost">
            <summary>Specifies that the current lease has been lost.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames">
            <summary>Provides the names (as fields) of all the system properties that Service Bus automatically updates.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames.Publisher">
            <summary>Specifies the publisher of the event data.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames.PartitionKey">
            <summary>Specifies the partition key for sending a transactional message to a queue or topic that is not session-aware.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames.Offset">
            <summary>Specifies the read offset of the event data.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames.SequenceNumber">
            <summary>Specifies the unique number assigned to a message by Service Bus.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames.EnqueuedTimeUtc">
            <summary>Specifies the date and time of the sent time in UTC.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventHubSender">
            <summary>A client class used in send operations for an Event Hub.
            Represents a logical sender connection to a specific Event Hub partition.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubSender.Path">
            <summary>Gets the path of the Event Hub.</summary>
            <value>The Event Hub path.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId">
            <summary>Gets the partition ID for a logical partition of an Event Hub.</summary>
            <value>The partition identifier.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubSender.CreateFromConnectionString(System.String)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.ServiceBus.Messaging.EventHubSender"/> using the supplied connection string.
            Intended to be used to send using a ConnectionString with SharedAcessSignature and Publisher.
            </summary>
            <param name="connectionString">The connection string used.</param>
            <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.EventHubSender"/></returns>
            <remarks>The connection can be obtained either from the Azure portal, or created from
            a <see cref="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder"/> instance.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubSender.CreateBatch">
            <summary>Creates a batch where event data objects can be added for later SendBatch or SendBatchAsync call.</summary>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventDataBatch" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubSender.Send(Microsoft.ServiceBus.Messaging.EventData)">
            <summary>Sends event data to the logical partition represented by 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId" />.</summary> 
            <param name="data">The <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> to send.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubSender.SendAsync(Microsoft.ServiceBus.Messaging.EventData)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubSender.Send(Microsoft.ServiceBus.Messaging.EventData)" />.</summary> 
            <param name="data">The <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> to send.</param>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubSender.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})">
            <summary>Sends a batch of event data to the logical partition represented by 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId" />.</summary> 
            <param name="eventDataList">An IEnumerable object containing event data instances.</param>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException">Thrown if the total serialized size of <paramref name="eventDataList" /> 
            exceeds the allowed size limit for one event transmission (256k by default).</exception> 
            <remarks>User should make sure the total serialized size of <paramref name="eventDataList"/> should be 
            under the size limit of one event data transmission, which is 256k by default.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubSender.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})">
            <summary>Asynchronously sends a batch of event data to the logical partition represented by 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId" />.</summary> 
            <param name="eventDataList">An IEnumerable object containing event data instances.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException">Thrown if the total serialized size of <paramref name="eventDataList" /> 
            exceeds the allowed size limit for one event transmission (256k by default).</exception> 
            <remarks>User should make sure the total serialized size of <paramref name="eventDataList"/> should be 
            under the size limit of one event data transmission, which is 256k by default.</remarks>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.ICheckpointer">
            <summary>
            An object used to checkpoint with EventHub the progress of message stream.
            This is provided through <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)"/> to user code, so it can be used to 
            checkpoint their progress with EventHub.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ICheckpointer.CheckpointAsync">
            <summary>
            Call this method to checkpoint progress with EventHub.  Make sure to call this method 
            once all the messages in a batch are processed.
            It will throw <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException"/> if the lease for partition already expired when this is called.
            </summary>
            <returns>A task to indicate Checkpoint is complete.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ICheckpointer.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)">
            <summary>
            Call this method to checkpoint progress with EventHub by providing your own offset.  This is useful if you are 
            handling off events to downstream processing asynchronously.  I throws ArgumentOutOfRangeException if <see cref="T:Microsoft.ServiceBus.Messaging.EventData"/>
            object is something we have never seen or we have already checkpointed <see cref="T:Microsoft.ServiceBus.Messaging.EventData"/> belonging to an event ahead in the stream.
            </summary>
            <param name="data">EventData to use for checkpointing the state of stream.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.ICheckpointManager">
            <summary>Provides methods for running checkpoint asynchronously. Extensibility is provided to specify host-specific storage for storing the offset. This is provided when 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorAsync``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)" /> is called, 
            to checkpoint the offset position using 
            <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)" />.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ICheckpointManager.CheckpointAsync(Microsoft.ServiceBus.Messaging.Lease,System.String,System.Int64)">
            <summary>Stores the offset of a particular partition in the host-specific store.</summary>
            <param name="lease">Partition information against which to perform a checkpoint.</param>
            <param name="offset">Current position in the stream.</param>
            <param name="sequenceNumber">The sequence number of the partition.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Lease">
            <summary>Contains partition ownership information.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Lease.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.Lease" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Lease.#ctor(Microsoft.ServiceBus.Messaging.Lease)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.Lease" /> class with the specified 
            <see cref="M:Microsoft.ServiceBus.Messaging.Lease.#ctor(Microsoft.ServiceBus.Messaging.Lease)" /> value as reference.</summary> 
            <param name="source">The specified <see cref="M:Microsoft.ServiceBus.Messaging.Lease.#ctor(Microsoft.ServiceBus.Messaging.Lease)" /> instance where its property values will be copied from.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Lease.PartitionId">
            <summary>Gets the ID of the partition to which this lease belongs.</summary>
            <value>The partition identifier.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Lease.Owner">
            <summary>Gets or sets the host owner for the partition.</summary>
            <value>The host owner of the partition.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Lease.Token">
            <summary>Gets or sets the lease token that manages concurrency between hosts. You can use this token to guarantee single access to any resource needed by the 
            <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> object.</summary> 
            <value>The lease token.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Lease.Epoch">
            <summary>Gets or sets the epoch year of the lease, which is a value 
            you can use to determine the most recent owner of a partition between competing nodes.</summary> 
            <value>The epoch year of the lease.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Lease.Offset">
            <summary>Gets or sets the current value for the offset in the stream.</summary>
            <value>The lease offset.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Lease.SequenceNumber">
            <summary>Gets or sets the last checkpointed sequence number in the stream.</summary>
            <value>Returns <see cref="T:System.Int64" />.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Lease.IsExpired">
            <summary>Determines whether the lease is expired.</summary>
            <returns>true if the lease is expired; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Lease.Equals(System.Object)">
            <summary>Determines whether this instance is equal to the specified object.</summary>
            <param name="obj">The object to compare.</param>
            <returns>true if this instance is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Lease.GetHashCode">
            <summary>Returns the hash code of the current instance.</summary>
            <returns>The hash code of the current instance.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.LeaseLostException">
            <summary>Represents an exception that occurs when the service lease has been lost.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException" /> class using default values.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.#ctor(Microsoft.ServiceBus.Messaging.Lease)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException" /> class using specified lease.</summary>
            <param name="lease">The messaging lease.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.#ctor(Microsoft.ServiceBus.Messaging.Lease,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException" /> class using specified lease and the error that caused the exception.</summary> 
            <param name="lease">The messaging lease.</param>
            <param name="innerException">The error that caused the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException" /> class using specified error message.</summary> 
            <param name="message">The message associated with the error.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException" /> class using specified error message and inner exception.</summary> 
            <param name="message">The message associated with the error.</param>
            <param name="innerException">The error that caused the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException" /> class using specified information and context.</summary> 
            <param name="info">The serialized information about the exception.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.LeaseLostException.Lease">
            <summary>Gets or sets the service lease.</summary>
            <value>The service lease.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
            <param name="context">The destination (see StreamingContext) for this serialization.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.CursorType">
            <summary>Enumerates the type of messaging cursor.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.CursorType.Server">
            <summary>The server cursor type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.CursorType.Client">
            <summary>The client cursor type.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1">
            <summary>Represents the factory for the default event processor.</summary>
            <typeparam name="T">The type of the event.</typeparam>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor(`0)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1" /> class using the specified instance.</summary> 
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)">
            <summary>Creates an event processor.</summary>
            <param name="context">The partition context.</param>
            <returns>The created event processor.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventHubClient">
            <summary>An anchor class used to send and receive events to and from an Event Hub.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubClient.PrefetchCount">
            <summary>Gets or sets the number of events that any receive operation will actively cache. By default, this value is inherited from 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> if the current instance is created from the factory method. Otherwise, the default value is 10,000.</summary> 
            <value>The number of messages that the message receiver can simultaneously request.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the value is less than the minimum required value of 10.</exception>
            <remarks> Note that setting the count too low will affect the effective performance of the Event Hub receive call.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubClient.PrefetchSizeInBytes">
            <summary>Gets or sets the maximum size (in bytes) in total that any receive operation will actively cache. The size of each event data is determined by the 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventData.SerializedSizeInBytes" /> property.</summary> 
            <value>Returns <see cref="T:System.Int64" />.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the size value is less than the minimum required value of 260K bytes.</exception>
            <remarks>The size limit is not an absolute limit, and can go over by as much as (PrefetchSizeInBytes/256kBytes) number of event worth of bytes.
            Any <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup"/> created from this 
            instance will inherit this value by default. Changes to this value will not be propagated 
            to already created consumer group, but will be used by new <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup"/> 
            created after the change. 
            Also setting this value to non-null value will set <see cref="P:Microsoft.ServiceBus.Messaging.EventHubClient.PrefetchCount"/> to zero.
            Note that setting the size too low will affect the effective performance of the Event Hub receive call.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubClient.Path">
            <summary>Gets the path of the Event Hub.</summary>
            <value>The path of the Event Hub.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubClient.DisableEntityLevelPerformanceCounters">
            <summary>
            Gets or sets a value to indicate if entity level perf counters should
            be collected in memory. Note that this only affect entity level counters,
            and namespace level counters are always collected.
            </summary>
            <remarks>By default this is set to false - meaning by default we do collect
            entity level perf counters. Setting this value will not affect existing collected
            counters, and will only stop counters from new entity being collected.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.Create(System.String)">
            <summary>Creates a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" /> instance, using a connection string from the application configuration settings.</summary> 
            <param name="path">The path to the Event Hub.</param>
            <returns>The newly created Event Hub client object.</returns>
            <remarks>This method will attempt to retrieve the connection string information
            from either app.config, or web.config files. User must supply the connection 
            string using the "AppSettings" section of the configuration. The format of the section
            is as follows:
            
            <code>
                <appSettings>
                    <!-- Service Bus specific app setings for messaging connections -->
                    <add key="Microsoft.ServiceBus.ConnectionString" 
                         value="Endpoint=sb://[your namespace].servicebus.windows.net;SharedSecretIssuer=owner;SharedSecretValue=[your secret]" />
                </appSettings>
            </code>
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateFromConnectionString(System.String,System.String)">
            <summary>Creates a new instance of the Event Hubs client using the specified connection string. Use this overload only when the connection string does not use the 
            <see cref="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.EntityPath" /> property.</summary> 
            <param name="connectionString">The connection string to be used.</param>
            <param name="path">The path to the Event Hub.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" /> object.</returns>
            <remarks>The connection can be obtained either from the Azure portal, or created from
            a <see cref="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder"/> instance.</remarks>
            <exception cref="T:System.ArgumentException">Thrown when the format of the parameters is incorrect.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateFromConnectionString(System.String)">
            <summary>Creates a new instance of the Event Hubs client using the specified connection string. You can populate the 
            <see cref="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.EntityPath" /> property with the name of the Event Hub.</summary> 
            <param name="connectionString">The connection string to use.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" /> object.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the format of the <paramref name="connectionString" /> parameter is incorrect.</exception>
            <remarks>The connection can be obtained either from the Azure portal, or created from
            a <see cref="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder"/> instance.</remarks>
            <exception cref="T:System.ArgumentException">Thrown when the format of the parameter connectionString is incorrect.</exception>
            <example> Sample showing how to populate the EntityPath in connectionString <code>
            var connectionStringBuilder = new ServiceBusConnectionStringBuilder(connectionString);
            connectionStringBuilder.EntityPath = eventHubDescription.Path;
            
            var eventHubClient = EventHubClient.CreateFromConnectionString(connectionStringBuilder.ToString());
            </code></example>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.Send(Microsoft.ServiceBus.Messaging.EventData)">
            <summary>Sends event data to an Event Hub.</summary>
            <param name="data">The event data.</param>
            <remarks>Any <see cref="T:Microsoft.ServiceBus.Messaging.EventData"/> instance send using this method must have 
            the <see cref="P:Microsoft.ServiceBus.Messaging.EventData.PartitionKey"/> set.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.SendAsync(Microsoft.ServiceBus.Messaging.EventData)">
            <summary>Asynchronously sends event data to an Event Hub.</summary>
            <param name="data">The <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> to send.</param>
            <returns>The task representing the asynchronous operation.</returns>
            <remarks>Any <see cref="T:Microsoft.ServiceBus.Messaging.EventData"/> instance send using this method must have 
            the <see cref="P:Microsoft.ServiceBus.Messaging.EventData.PartitionKey"/> set.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})">
            <summary>Sends a batch of event data.</summary>
            <param name="eventDataList">An IEnumerable object containing event data instances.</param>
            <remarks>User should make sure the total serialized size of <paramref name="eventDataList"/> should be 
            under the size limit of one event data transmission, which is 256k by default. Also note that there will be some overhead to form the batch.</remarks>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException">Thrown if the total serialized size of <paramref name="eventDataList" /> 
            exceeds the allowed size limit for one event transmission (256k by default).</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})">
            <summary>Asynchronously sends a batch of event data.</summary>
            <param name="eventDataList">An IEnumerable object containing event data instances.</param>
            <remarks>User should make sure the total serialized size of <paramref name="eventDataList"/> should be 
            under the size limit of one event data transmission, which is 256k by default. Also note that there will be some overhead to form the batch.</remarks>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException">Thrown if the total serialized size of <paramref name="eventDataList" /> 
            exceeds the allowed size limit for one event transmission (256k by default).</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateBatch">
            <summary>Creates a batch where event data objects can be added for later SendBatch or SendBatchAsync call.</summary>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventDataBatch" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateSender(System.String)">
            <summary>Creates an Event Hubs sender for the specified publisher.</summary>
            <param name="publisher">The publisher identifier.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventHubSender" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateSenderAsync(System.String)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateSender(System.String)" />.</summary>
            <param name="publisher">The publisher identifier.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreatePartitionedSender(System.String)">
            <summary>Creates an Event Hubs sender for the specified Event Hubs partition.</summary>
            <param name="partitionId">The ID of the partition.</param>
            <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubSender" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreatePartitionedSenderAsync(System.String)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreatePartitionedSender(System.String)" />.</summary>
            <param name="partitionId">The ID of the partition.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetRuntimeInformationAsync">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetRuntimeInformation" />.</summary>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetRuntimeInformation">
            <summary>Retrieves Event Hubs runtime information, which is required for creating 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubSender" /> or 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" /> objects.</summary> 
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetPartitionRuntimeInformationAsync(System.String)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetPartitionRuntimeInformation(System.String)" />.</summary> 
            <param name="partitionId">The partition ID.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetPartitionRuntimeInformation(System.String)">
            <summary>Retrieves runtime information for the specified partition of the Event Hub.</summary>
            <param name="partitionId">The partition ID.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetDefaultConsumerGroup">
            <summary>Returns the default consumer group, for the receive operation of event data.</summary>
            <returns>The default <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup" />.</returns>
            <remarks>Default ConsumerGroup cannot perform checkpoint operations. To perform
            checkpoint operations, user should create a explicit ConsumerGroup</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetConsumerGroup(System.String)">
            <summary>Returns the consumer group with the specified name, for the receive operation of event data.</summary>
            <param name="groupName">The name of the group.</param>
            <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup" /> instance, corresponding to the consumer group.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.OnAbort">
            <summary>Executes the abort action.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.OnClose(System.TimeSpan)">
            <summary>Executes the close action.</summary>
            <param name="timeout">The wait time before the operation times out.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin close action.</summary>
            <param name="timeout">The wait time before the operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. 
            This object is passed to the EndClose delegate when the operation is complete.</param> 
            <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous Close operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.OnEndClose(System.IAsyncResult)">
            <summary>Executes the end close action.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous Close operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin open action.</summary>
            <param name="timeout">The wait time before the operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. 
            This object is passed to the EndOpen delegate when the operation is complete.</param> 
            <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous Open operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.OnEndOpen(System.IAsyncResult)">
            <summary>Executes the end open action.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous Open operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateSenderAsync">
            <summary>Creates the Event Hubs sender. This method is for internal use, and not meant to be called from user code.</summary>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventHubDescription">
            <summary>Represents the metadata description of an Event Hub.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubDescription.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> class.</summary>
            <param name="path">The path of the event hub relative to the service namespace base address.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.Path">
            <summary>Gets the full path of the Event Hub.</summary>
            <value>The path of the Event Hub.</value>
            <exception cref="T:System.InvalidOperationException">Thrown if an attempt is made to set the 
            value of this property when the instance is marked as readonly.</exception> 
            <remarks>
              This is a relative path to the <see cref = "P:Microsoft.ServiceBus.NamespaceManager.Address" />.
            </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.MessageRetentionInDays">
            <summary>Gets or sets the number of days to retain the events for this Event Hub.</summary>
            <value>The retention time of the event data, in days.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.Microsoft#ServiceBus#Messaging#IResourceDescription#CollectionName">
            <summary>
              Gets the name of the collection.
            </summary>
            <value> The name of the collection. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.Authorization">
            <summary>Gets the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</summary>
            <value>The <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.ArchiveDescription">
            <summary> Gets or sets the ArchiveDescription for the EventHub. </summary>
            <value> ArchiveDescription </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.Status">
            <summary>Gets or sets the current status of the Event Hub (enabled or disabled).</summary>
            <value>The current status of the event hub.</value>
            <remarks>This status does not get updated real time.
            To get up-to-date status, refresh the description with the 
            <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetEventHub(System.String)"/> method</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.CreatedAt">
            <summary>Gets the exact time the message was created.</summary>
            <value>The exact time the message was created.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.UpdatedAt">
            <summary>Gets the exact time the message has been updated.</summary>
            <value>The time the message has been updated.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.UserMetadata">
            <summary>Gets or sets the user metadata.</summary>
            <value>The user metadata.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount">
            <summary>Gets or sets the current number of shards on the Event Hub.</summary>
            <value>Returns the number of subscriptions on the Event Hub.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the partition count value is negative.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionIds">
            <summary>Gets identifiers for partitions created for Event Hubs.</summary>
            <value>Returns <see cref="T:System.String" />.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription">
            <summary>Represents a description of the consumer group.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" /> class.</summary>
            <param name="eventHubPath">The path of the event hub.</param>
            <param name="consumerGroupName">The name of the subscription.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.EventHubPath">
            <summary>Gets or sets the path of the event hub.</summary>
            <remarks>This is a relative path to the <see cref = "P:Microsoft.ServiceBus.NamespaceManager.Address" />.
            </remarks>
            <value>The path of the Event Hub.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.Name">
            <summary>Gets the name of the consumer group description.</summary>
            <value>The name of the consumer group description.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.Microsoft#ServiceBus#Messaging#IResourceDescription#CollectionName">
            <summary>
              Gets the name of the collection.
            </summary>
            <value> The name of the collection. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.CreatedAt">
            <summary>Gets the exact time the message was created.</summary>
            <value>The exact time the message was created.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.UpdatedAt">
            <summary>Gets the exact time the message has been updated.</summary>
            <value>The time the message has been updated.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.UserMetadata">
            <summary>Gets or sets the user metadata.</summary>
            <value>The user metadata.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.EnableCheckpoint">
            <summary>
            Gets or sets the enable checkpoint flag. Setting
            this will allow receivers created from this ConsumerGroup
            to use the <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)"/> method.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventHubReceiver">
            <summary>A client class used in receive operations related to an Event Hub consumer group. 
            Represents a logical receiver connection to a specific Event Hub partition within a consumer group.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.StartingOffset">
            <summary>Gets the starting offset for this receiver. The 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive" /> method starts receiving the next event after this offset value. If the value is null, the receiver starts receiving events from the beginning of the Event Hubs event stream.</summary> 
            <value>The starting offset.</value>
            <remarks>This starting offset ties to one partition only, 
            represented by <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId"/>.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.StartingDateTimeUtc">
            <summary>Gets the starting date and time in UTC format for this receiver. The 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive" /> method starts receiving the next event after this 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.StartingDateTimeUtc" /> value. If null, the receiver starts receiving events from the beginning of the Event Hubs event stream.</summary> 
            <value>The starting date and time in UTC.</value>
            <remarks>Service only uses this datetime as an approximation when delivering next event.
            Keep in mind that there can be clock skew between client time and service time, so user application 
            should be designed to handle duplication in event delivery.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.EventHubPath">
            <summary>Gets the event hub path.</summary>
            <value>The event hub path.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Name">
            <summary>Gets the name of the Event Hub.</summary>
            <value>The name of the Event Hub.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Epoch">
            <summary>Gets the epoch value that is used to determine partition ownership during the receive operation.</summary>
            <value>Returns <see cref="T:System.Int64" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId">
            <summary>Gets the partition ID for a logical partition of an Event Hub.</summary>
            <value>The partition identifier.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.OffsetInclusive">
            <summary>Gets a value indicating whether 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.StartingOffset" /> is treated as an inclusive offset, meaning that the first event returned is the event that contains the starting offset. Normally, the first event returned is the event after the starting offset.</summary> 
            <value>Returns <see cref="T:System.Boolean" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PrefetchCount">
            <summary>Gets or sets the number of events that any receive operation will actively cache. By default, this value is inherited from 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup" />. The default value is 300.</summary> 
            <value>The number of messages that the message receiver can simultaneously request.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the value is less than the minimum required value of 10.</exception>
            <remarks> Changes to this value will be used in next receive operation, however this does not affect the 
            number of events already cached by the receiver. Setting this property to non-zero value will set
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PrefetchSizeInBytes"/> to null.
            Note that setting the count too low will affect the effective performance of the event hub receive call.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PrefetchSizeInBytes">
            <summary>Gets or sets the maximum size (in bytes) in total that any receive operation will actively cache. The size of each event data is determined by the 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventData.SerializedSizeInBytes" /> property.</summary> 
            <value>Returns <see cref="T:System.Int64" />.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the size value is less than the minimum required value of 260K bytes.</exception>
            <remarks>The size limit is not an absolute limit. the size might go over by at least 
            one event data worth of size. Changes to this value will be used in next receive operation, however this does not affect the 
            number of events already cached by the receiver. 
            Setting this property to non-null value will set <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PrefetchCount"/> to zero.
            Note that setting the size too low will affect the effective performance of the event hub receive call.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.RuntimeInfo">
            <summary>
            Gets the approximate receiver runtime information for a logical partition of an Event Hub.
            To enable the setting, refer to <see cref="T:Microsoft.ServiceBus.Messaging.ReceiverOptions"/> and <see cref="P:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.EnableReceiverRuntimeMetric"/>
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.ReceiverRuntimeMetricEnabled">
            <summary> Gets a value indicating whether the runtime metric of a receiver is enabled. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Identifier">
            <summary>Gets the identifier of a receiver which was set during the creation of the receiver.</summary> 
            <value>A string representing the identifier of a receiver. It will return null if the identifier is not set.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.EnableCheckpoint">
            <summary>
            Gets the value that indicate whether Checkpoint is enabled 
            for the ConsumerGroup that this receiver belongs to.
            </summary>
            <remarks>This boolean reflects the same value as 
            <see cref="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.EnableCheckpoint"/>. However
            keep in mind that if user recreate the ConsuemrGroup with a different
            value this property will not get updated.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive">
            <summary>Receives Event Hubs event data.</summary>
            <returns>Returns the received <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> object, or null if no event data is available.</returns>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client 
            has a problem connecting to the service.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">Thrown if the current namespace 
            is placing too much load on the system.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if another receiver with a higher 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Epoch" /> value is connected as the current receiver to the same partition specified by 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId" />.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.TimeSpan)">
            <summary>Receives Event Hubs event data with the specified timeout value.</summary>
            <param name="waitTime">The maximum time the user is willing to wait for event data to arrive.</param>
            <returns>Returns the received 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> collection, or null if there is no event data available.</returns> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client 
            has a problem connecting to the service.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">Thrown if the current namespace 
            is placing too much load on the system.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if another receiver with a higher 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Epoch" /> value is connected as the current receiver to the same partition specified by 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId" />.</exception> 
            <remarks><paramref name="waitTime"/> is not a guaranteed wait time, as API will return data as soon as it is available.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.ReceiveAsync">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive" />.</summary>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.ReceiveAsync(System.TimeSpan)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.TimeSpan)" />.</summary>
            <param name="waitTime">The maximum time the user is willing to wait for event data to arrive.</param>
            <returns>The task representing the asynchronous operation.</returns>
            <remarks><paramref name="waitTime"/> is not a guaranteed wait time, 
            as API will return data as soon as it is available.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32)">
            <summary>Receives Event Hubs event data, up to the specified count.</summary>
            <param name="maxCount">The maximum amount of event data the user is willing to accept in one call.</param>
            <returns>Returns the received 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> collection. The collection is either empty if no event is returned within the specified time, or all events up to <paramref name="maxCount" /> are returned.</returns> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client 
            has a problem connecting to the service.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">Thrown if the current namespace 
            is placing too much load on the system.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if another receiver with a higher 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Epoch" /> value is connected as the current receiver to the same partition specified by 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId" />.</exception> 
            <remarks>Service does not wait for <paramref name="maxCount"/> events to be filled before 
            returning to user. It returns as soon as there are any events available.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32,System.TimeSpan)">
            <summary>Receives Event Hubs event data, up to the specified count with the specified timeout value.</summary>
            <param name="maxCount">The maximum amount of event data the user is willing to accept in one call.</param>
            <param name="waitTime">The maximum time the user is willing to wait for event data to arrive.</param>
            <returns>Returns the received 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> collection. The collection is either empty if no event is returned within the specified time, or all events up to <paramref name="maxCount" /> are returned.</returns> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client 
            has a problem connecting to the service.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">Thrown if the current namespace 
            is placing too much load on the system.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if another receiver with a higher 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Epoch" /> value is connected as the current receiver to the same partition specified by 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId" />.</exception> 
            <remarks><paramref name="waitTime"/> is not a guaranteed wait time, 
            as API will return data as soon as it is available. Also service does not 
            wait for <paramref name="maxCount"/> events to be filled before 
            returning to user. it returns as soon as there are any events available.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.ReceiveAsync(System.Int32)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32)" />.</summary>
            <param name="maxCount">The maximum amount of event data the user is willing to accept in one call.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
            <remarks>Service does not wait for <paramref name="maxCount"/> events to be filled before 
            returning to user. It returns as soon as there are any events available.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.ReceiveAsync(System.Int32,System.TimeSpan)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32,System.TimeSpan)" />.</summary>
            <param name="maxCount">The maximum amount of event data the user is willing to accept in one call.</param>
            <param name="waitTime">The maximum time the user is willing to wait for event data to arrive.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
            <remarks><paramref name="waitTime"/> is not a guaranteed wait time, 
            as API will return data as soon as it is available. Also service does not 
            wait for <paramref name="maxCount"/> events to be filled before 
            returning to user. It returns as soon as there are any events available.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Checkpoint(Microsoft.ServiceBus.Messaging.EventData)">
            <summary>
            Checkpoint the current event data's offset. 
            This signal the system that next data delivery will
            be after this offset.
            </summary>
            <param name="data">The <see cref="T:Microsoft.ServiceBus.Messaging.EventData"/> to be checkpoint.</param>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">throws if service encounter transient error</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">throws if client has problem connecting to the service</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">throws if another receivers with higher <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Epoch"/> value has 
            connected to the same partition (as denoted by <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId"/> as this current receiver </exception>
            <exception cref="T:System.ArgumentException">throws if <paramref name="data"/> is null</exception>
            <exception cref="T:System.InvalidOperationException">throws if this receiver belongs to a ConsumerGroup that has 
            <see cref="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.EnableCheckpoint"/> set to false.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)">
            <summary>
            Checkpoint the current event data's offset. 
            This signal the system that next data delivery will
            be after this offset.
            </summary>
            <param name="data">The <see cref="T:Microsoft.ServiceBus.Messaging.EventData"/> to be checkpoint.</param>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">throws if service encounter transient error</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">throws if client has problem connecting to the service</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">throws if current user namespace is generating too much load on the system.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">throws if another receivers with higher <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Epoch"/> value has 
            connected to the same partition (as denoted by <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId"/> as this current receiver </exception>
            <exception cref="T:System.ArgumentException">throws if <paramref name="data"/> is null</exception>
            <exception cref="T:System.InvalidOperationException">throws if this receiver belongs to a ConsumerGroup that has 
            <see cref="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.EnableCheckpoint"/> set to false.</exception>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup">
            <summary>Represents the consumer group within an Event Hub. This class creates receivers for a specific consumer 
            group within an Event Hub. This can be the default consumer group or another user-created consumer group.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.DefaultGroupName">
            <summary>
            The name of the default ConsumerGroup that is pre-created when creating EventHub.
            </summary>
            <seealso cref="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetDefaultConsumerGroup"/>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.StartOfStream">
            <summary>
            The constant that denotes the start of a stream. This can be used as an offset argument in receiver creation.
            </summary>
            <seealso cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiverOptions)"/>
            
            <code>
                // the following code snippet creates a receiver that receive events
                // from the first partitions of the default consumer gorup.
                
                // assume we have obtained the description which will gives us the partition ids.
                EventHubDescription description;
                
                EventHubClient client = EventHubClient.CreateFromConnectionString(connection);
                var defaultGroup = client.GetDefaultConsumerGroup();
                var receiver = defaultGroup.CreateReceiver(
                                    description.PartitionIds.First(), 
                                    EventHubConsumerGroup.StartOfStream);
                
                var eventData = receiver.Receive();
            </code>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.EndOfStream">
            <summary>
            The constant that denotes the end of a stream. This can be used as an offset argument in receiver creation to 
            start receiving from the latest event, instead of a specific point in time/offset value.
            </summary>
            <seealso cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiverOptions)"/>
            
            <code>
                // the following code snippet creates a receiver that receive events
                // from the first partitions of the default consumer gorup.
                
                // assume we have obtained the description which will gives us the partition ids.
                EventHubDescription description;
                
                EventHubClient client = EventHubClient.CreateFromConnectionString(connection);
                var defaultGroup = client.GetDefaultConsumerGroup();
                var receiver = defaultGroup.CreateReceiver(
                                    description.PartitionIds.First(), 
                                    EventHubConsumerGroup.EndOfStream);
                
                var eventData = receiver.Receive();
            </code>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.#ctor(Microsoft.ServiceBus.Messaging.MessagingFactory,System.String,System.String,System.Int32,System.Nullable{System.Int64})">
            <summary>
            Internal constructor of the EventHubConsumerGroup. This is only for internal uses
            </summary>
            <param name="messagingFactory">The parent factory for creation</param>
            <param name="eventHubPath">path of the parent EventHub</param>
            <param name="groupName">name of the ConsumerGroup</param>
            <param name="prefetchCount">the prefetch count of ConsumerGroup which will be used by the receviers</param>
            <param name="prefetchSizeInBytes">the prefetch size of the ConsumerGroup</param>
            <remarks>Constructor is marked internal to prevent
            external assemblies inheriting from it.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.PrefetchCount">
            <summary>Gets or sets the number of events that any receive operation will actively cache. By default, this value is inherited from 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" />. The default value is 10,000.</summary> 
            <value>The number of events that the receiver can cache.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the value is less than the minimum required value of 10.</exception>
            <remarks>Any <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver"/> created from this instance will inherit this value by default.
            Changes to this value will not be propagate to already created receiver, but will be used by 
            new <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver"/> created after the change. Also setting this property to non-zero will
            set <see cref="P:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.PrefetchSizeInBytes"/> to null.
            Note that setting the count too low will affect the effective performance of the event hub receive call.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.PrefetchSizeInBytes">
            <summary>Gets or sets the maximum size (in bytes) in total that any receive operation will actively cache. The size of each event data is determined by the 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventData.SerializedSizeInBytes" /> property.</summary> 
            <value>Returns <see cref="T:System.Int64" />.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the size value is less than the minimum required value of 260K bytes.</exception>
            <remarks>The size limit is not an absolute limit. the size might go over by at least 
            one event data worth of size. Any <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver"/> created from this instance will inherit this value by default.
            Changes to this value will not be propagate to already created receiver, but will be used by 
            new <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver"/> created after the change. 
            Also, setting this property to non-null value will
            set <see cref="P:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.PrefetchCount"/> to zero.
            Note that setting the size too low will affect the effective performance of the Event Hub receive call.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.EventHubPath">
            <summary>Gets the event hub path.</summary>
            <value>The event hub path</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.GroupName">
            <summary>Gets the name of the consumer group.</summary>
            <value>The name of the consumer group.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.EnableReceiverRuntimeMetric">
            <summary> Gets or sets a value indicating whether the runtime metric of a receiver is enabled. </summary>
            <value> true if a client wants to access <see cref="T:Microsoft.ServiceBus.Messaging.ReceiverRuntimeInfo"/> using <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver"/>. </value>
            <remarks>Its default value is derived from the value of <see cref="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.EnableReceiverRuntimeMetric"/></remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)">
            <summary>Registers an implementation of 
            <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> in order to start consuming events from Event Hubs for the specified 
            <see cref="P:Microsoft.ServiceBus.Messaging.Lease.PartitionId" /> starting from 
            <see cref="P:Microsoft.ServiceBus.Messaging.Lease.Offset" />. Use this overload to create an event processor that checkpoints the message offset using a custom implementation of 
            <see cref="T:Microsoft.ServiceBus.Messaging.ICheckpointManager" />.</summary> 
            <param name="lease">Partition information.</param>
            <param name="checkpointManager">Checkpoints the offset for the specified partition when 
            <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)" /> is called.</param> 
            <typeparam name="T">Implementation of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</typeparam>
            <remarks>To perform more advanced <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor"/> creation, implement an <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessorFactory"/> 
            class which allows you to control how event processors are created.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.EventProcessorOptions)">
            <summary>Registers an implementation of 
            <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> in order to start consuming events from Event Hubs for the specified 
            <see cref="P:Microsoft.ServiceBus.Messaging.Lease.PartitionId" /> starting from 
            <see cref="P:Microsoft.ServiceBus.Messaging.Lease.Offset" />. Use this overload to create an event processor that checkpoints the message offset using a custom implementation of 
            <see cref="T:Microsoft.ServiceBus.Messaging.ICheckpointManager" />.</summary> 
            <param name="lease">Partition information.</param>
            <param name="checkpointManager">Checkpoints the offset for the specified partition when 
            <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)" /> is called.</param> 
            <param name="processorOptions">An <see cref="T:Microsoft.ServiceBus.Messaging.EventProcessorOptions" /> object.</param>
            <typeparam name="T">Implementation of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</typeparam>
            <remarks>To perform more advanced <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor"/> creation, implement an <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessorFactory"/> 
            class which allows you to control how event processors are created.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorAsync``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)" />.</summary> 
            <param name="lease">Partition information.</param>
            <param name="checkpointManager">Checkpoints the offset for the specified partition when 
            <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)" /> is called.</param> 
            <typeparam name="T">Implementation of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</typeparam>
            <returns>A task instance that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorAsync``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.EventProcessorOptions)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.EventProcessorOptions)" />.</summary> 
            <param name="lease">Partition information.</param>
            <param name="checkpointManager">Checkpoints the offset for the specified partition when 
            <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)" /> is called.</param> 
            <param name="processorOptions">An <see cref="T:Microsoft.ServiceBus.Messaging.EventProcessorOptions" /> object.</param>
            <typeparam name="T">Implementation of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</typeparam>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
            <remarks>To perform more advanced <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor"/> creation, implement an <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessorFactory"/> 
            class which allows you to control how event processors are created.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorFactory(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.IEventProcessorFactory)">
             <summary>Registers the 
             <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessorFactory" /> object used to create an instance of 
             <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> in order to start consuming events for the partition specified by 
             <see cref="P:Microsoft.ServiceBus.Messaging.Lease.PartitionId" />, starting from 
             <see cref="P:Microsoft.ServiceBus.Messaging.Lease.Offset" />. Use this overload to create an event processor that checkpoints the message offset using a custom implementation of 
             <see cref="T:Microsoft.ServiceBus.Messaging.ICheckpointManager" />.</summary> 
             <param name="lease">Partition information.</param>
             <param name="checkpointManager">Checkpoints the offset for the specified partition when 
             <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)" /> is called.</param> 
             <param name="eventProcessorFactory">Factory to create an instance of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</param>
             <code>
                 // TestEventProcessorFactory implements IEventProcessorFactory
                 var processorFactory = new TestEventProcessorFactory();
                
                 // Register event processor with each shard to start consuming messages
                 var subscriberGroup = receiveClient.GetDefaultConsumerGroup();
                 foreach (var partitionId in hubDescription.PartitionIds)
                 {
                     Lease lease = new Lease()
                     {
                         PartitionId = partitionId,
                         Offset = EventHubTestUtils.DefaultStartingOffset
                     };
            
                     subscriberGroup.RegisterProcessorFactory(lease, new TestCheckpointManager(), processorFactory);
                 }
             </code>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorFactory(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.IEventProcessorFactory,Microsoft.ServiceBus.Messaging.EventProcessorOptions)">
             <summary>Registers the 
             <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessorFactory" /> object used to create an instance of 
             <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> in order to start consuming events for the partition specified by 
             <see cref="P:Microsoft.ServiceBus.Messaging.Lease.PartitionId" />, starting from 
             <see cref="P:Microsoft.ServiceBus.Messaging.Lease.Offset" />. Use this overload to create an event processor that checkpoints the message offset using a custom implementation of 
             <see cref="T:Microsoft.ServiceBus.Messaging.ICheckpointManager" />.</summary> 
             <param name="lease">Partition information.</param>
             <param name="checkpointManager">Checkpoints the offset for the specified partition when 
             <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)" /> is called.</param> 
             <param name="eventProcessorFactory">Factory to create an instance of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</param>
             <param name="processorOptions">An <see cref="T:Microsoft.ServiceBus.Messaging.EventProcessorOptions" /> object.</param>
             <code>
                 // TestEventProcessorFactory implements IEventProcessorFactory
                 var processorFactory = new TestEventProcessorFactory();
                
                 // Register event processor with each shard to start consuming messages
                 var subscriberGroup = receiveClient.GetDefaultConsumerGroup();
                 foreach (var partitionId in hubDescription.PartitionIds)
                 {
                     Lease lease = new Lease()
                     {
                         PartitionId = partitionId,
                         Offset = EventHubTestUtils.DefaultStartingOffset
                     };
            
                     subscriberGroup.RegisterProcessorFactory(lease, new TestCheckpointManager(), processorFactory);
                 }
             </code>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorFactoryAsync(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.IEventProcessorFactory)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorFactory(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.IEventProcessorFactory)" />.</summary> 
            <param name="lease">Partition information.</param>
            <param name="checkpointManager">Checkpoints the offset for the specified partition when 
            <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)" /> is called.</param> 
            <param name="eventProcessorFactory">Factory to create an instance of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</param>
            <returns>A task instance that represents the asynchronous operation.</returns>
            <code>
                TestEventProcessorFactory processorFactory = new TestEventProcessorFactory();
            
                // Register event processor with each shard to start consuming messages
                var subscriberGroup = receiveClient.GetDefaultConsumerGroup();
                foreach (var partitionId in hubDescription.PartitionIds)
                {
                    Lease lease = new Lease()
                    {
                        PartitionId = partitionId,
                        Offset = EventHubTestUtils.DefaultStartingOffset
                    };
                
                    await subscriberGroup.RegisterProcessorFactoryAsync(lease, new TestCheckpointManager(), processorFactory);
                }
            </code>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorFactoryAsync(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.IEventProcessorFactory,Microsoft.ServiceBus.Messaging.EventProcessorOptions)">
             <summary>Asynchronous version of 
             <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorFactory(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.IEventProcessorFactory,Microsoft.ServiceBus.Messaging.EventProcessorOptions)" />.</summary> 
             <param name="lease">Partition information.</param>
             <param name="checkpointManager">Checkpoints the offset for the specified partition when 
             <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)" /> is called.</param> 
             <param name="eventProcessorFactory">Factory to create an instance of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</param>
             <param name="processorOptions">An <see cref="T:Microsoft.ServiceBus.Messaging.EventProcessorOptions" /> object.</param>
             <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
             <code>
                 // TestEventProcessorFactory implements IEventProcessorFactory
                 var processorFactory = new TestEventProcessorFactory();
                
                 // Register event processor with each shard to start consuming messages
                 var subscriberGroup = receiveClient.GetDefaultConsumerGroup();
                 foreach (var partitionId in hubDescription.PartitionIds)
                 {
                     Lease lease = new Lease()
                     {
                         PartitionId = partitionId,
                         Offset = EventHubTestUtils.DefaultStartingOffset
                     };
            
                     subscriberGroup.RegisterProcessorFactory(lease, new TestCheckpointManager(), processorFactory);
                 }
             </code>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessor(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)">
            <summary>Unregisters 
            <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> for the partition specified by 
            <see cref="P:Microsoft.ServiceBus.Messaging.Lease.PartitionId" />. This results in 
            <see cref="M:Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)" /> being called on the underlying event processor.</summary> 
            <param name="lease">Partition information.</param>
            <param name="reason">Reason for which 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessor(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)" /> was called.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessorAsync(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessor(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)" />.</summary> 
            <param name="lease">Partition information.</param>
            <param name="reason">Reason that 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessorAsync(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)" /> was called.</param> 
            <returns>A task instance that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.Int64,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Creates a new Event Hubs receiver in the specified partition, and the specified epoch value. You 
            can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
            <remarks>If the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup"/> has checkpoint enabled, then the
            receiver will get next message from the checkpoint offset. If checkpoint is disabled, 
            then receiver will get message from the start of the event stream, as determined by the 
            message retention policy of the event hub.</remarks>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client 
            has a problem connecting to the service.</exception> 
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="partitionId" /> is not within the expected range, as determined by the 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount" /> property.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Creates a new Event Hubs receiver in the specified partition. You can use the 
            created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns the 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" /> object that is tied to the given Event Hubs partition.</returns> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client 
            has a problem connecting to the service.</exception> 
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="partitionId" /> is not within the expected range, as determined by the 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount" /> property.</exception> 
            <exception cref="T:System.ServiceModel.QuotaExceededException">Thrown if the number of receivers currently connected to the partition specified 
            by <paramref name="partitionId" /> has exceeded the maximum allowed quota set by the service.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if there is currently a receiver connected to the 
            partition as specified by <paramref name="partitionId" />.</exception> 
            <remarks>If the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup"/> has checkpoint enabled, 
            this overload will always throw InvalidOperationException because checkpoint
            enabled ConsumerGroup requires epoch to work (please use the overload that 
            supply epoch as input argument). If checkpoint is disabled, 
            then receiver will get message from the start of the event stream, as determined by the 
            message retention policy of the Event Hub.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Creates a new Event Hubs receiver in the specified partition, at the specified starting offset. You 
            can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="startingOffset">The starting offset at which to start receiving messages.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="partitionId" /> is not within the expected range, as determined by the 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount" /> property.</exception> 
            <exception cref="T:System.ServiceModel.QuotaExceededException">Thrown if the number of receivers currently connected to the partition specified 
            by <paramref name="partitionId" /> has exceeded the maximum allowed quota set by the service.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if there is currently a receiver connected to the 
            partition as specified by <paramref name="partitionId" />, with an <paramref name="startingOffset" /> specified.</exception> 
            <code>
                // the following code snippet creates a receiver that receive events
                // from the first partitions of the default consumer gorup.
                
                // assume we have obtained the description which will gives us the partition ids.
                EventHubDescription description;
                
                EventHubClient client = EventHubClient.CreateFromConnectionString(connection);
                var defaultGroup = client.GetDefaultConsumerGroup();
                var receiver = defaultGroup.CreateReceiver(
                                    description.PartitionIds.First(), 
                                    EventHubConsumerGroup.StartOfStream);
                
                var eventData = receiver.Receive();
            </code>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,System.Boolean,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Creates a new Event Hubs receiver in the specified partition, at the specified starting offset. You 
            can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="startingOffset">The starting offset at which to start receiving messages.</param>
            <param name="offsetInclusive">A Boolean value that indicates whether <paramref name="startingOffset" /> is treated as an inclusive offset, meaning that the first 
            <param name="receiverOptions">Options for a event hub receiver.</param>
            event returned is the event that contains the starting offset. Normally, the first event returned is the event after the starting offset.</param> 
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
            <code>
                // the following code snippet creates a receiver that receive events
                // from the first partitions of the default consumer group. It uses
                // a previously stored offset as starting offset and return that event 
                // as the first event
                
                // assume we have obtained the description which will gives us the partition ids.
                // Also assume user has retrieved the stored offset 
                EventHubDescription description;
                string storedOffset = "2478";
                
                EventHubClient client = EventHubClient.CreateFromConnectionString(connection);
                var defaultGroup = client.GetDefaultConsumerGroup();
                var receiver = defaultGroup.CreateReceiver(
                                    description.PartitionIds.First(), 
                                    storedOffset);
                
                // eventData will have offset == storedOffset
                var eventData = receiver.Receive();
            </code>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,System.Int64,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Creates a new Event Hubs receiver in the specified partition, at the specified starting offset.</summary>
            <param name="partitionId">The ID of the partition.</param>
            <param name="startingOffset">The starting offset at which to start receiving messages. To specify the start of the stream, see 
            <see cref="F:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.StartOfStream" />.</param> 
            <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client 
            has a problem connecting to the service.</exception> 
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="partitionId" /> is not within the expected range, as determined by the 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount" /> property.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,System.Boolean,System.Int64,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Creates a new Event Hubs receiver in the specified partition, at the specified starting offset. You 
            can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="startingOffset">The starting offset at which to start receiving messages.</param>
            <param name="offsetInclusive">A Boolean value that indicates whether <paramref name="startingOffset" /> is treated as an inclusive offset, meaning that the first 
            event returned is the event that contains the starting offset. Normally, the first event returned is the event after the starting offset.</param> 
            <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.DateTime,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Creates a new Event Hubs receiver in the specified partition, starting at the specified date and time. 
            You can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="startingDateTimeUtc">The starting UTC time for receiving messages.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client 
            has a problem connecting to the service.</exception> 
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="partitionId" /> is not within the expected range, as determined by the 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount" /> property.</exception> 
            <exception cref="T:System.ServiceModel.QuotaExceededException">Thrown if the number of receivers currently connected to the partition specified 
            by <paramref name="partitionId" /> has exceeded the maximum allowed quota set by the service.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if there is currently a receiver connected to the 
            partition as specified by <paramref name="partitionId" />, with an <paramref name="startingDateTimeUtc" /> specified.</exception> 
            <remarks>Service only uses this <paramref name="startingDateTimeUtc"/> as an approximation when 
            determining next event to deliver.
            
            Keep in mind that there can be clock skew between client time and service time, so user application 
            should be designed to handle duplication in event delivery.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.DateTime,System.Int64,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Creates a new Event Hubs receiver in the specified partition, starting at the specified date and time. 
            You can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="startingDateTimeUtc">The starting UTC time for receiving messages.</param>
            <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client 
            has a problem connecting to the service.</exception> 
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="partitionId" /> is not within the expected range, as determined by the 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount" /> property.</exception> 
            <remarks>Service only uses this <paramref name="startingDateTimeUtc"/> as an approximation when 
            determining next event to deliver.
            
            Keep in mind that there can be clock skew between client time and service time, so user application 
            should be designed to handle duplication in event delivery.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.Int64,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.Int64,Microsoft.ServiceBus.Messaging.ReceiverOptions)" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
            <remarks>If the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup"/> has checkpoint enabled, then the
            receiver will get next message from the checkpoint offset. If checkpoint is disabled, 
            then receiver will get message from the start of the event stream, as determined by the 
            message retention policy of the Event Hub.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiverOptions)" />.</summary>
            <param name="partitionId">The ID of the partition.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
            <remarks>If the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup"/> has checkpoint enabled, 
            this overload will always throw InvalidOperationException because checkpoint
            enabled ConsumerGroup requires epoch to work (please use the overload that 
            supply epoch as input argument). If checkpoint is disabled, 
            then receiver will get message from the start of the event stream, as determined by the 
            message retention policy of the Event Hub.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiverOptions)" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="startingOffset">The starting offset at which to start receiving messages.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.String,System.Boolean,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,System.Boolean,Microsoft.ServiceBus.Messaging.ReceiverOptions)" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="startingOffset">The starting offset at which to start receiving messages.</param>
            <param name="offsetInclusive">A Boolean value that indicates whether <paramref name="startingOffset" /> is treated as an inclusive offset, meaning that the first 
            event returned is the event that contains the starting offset. Normally, the first event returned is the event after the starting offset.</param> 
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
            <code>
                // The following code snippet creates a receiver that receive events
                // from the first partitions of the default consumer group. It uses
                // a previously stored offset as starting offset and return that event 
                // as the first event
                
                // assume we have obtained the description which will gives us the partition ids.
                // Also assume user has retrieved the stored offset 
                EventHubDescription description;
                string storedOffset = "2478";
                
                EventHubClient client = EventHubClient.CreateFromConnectionString(connection);
                var defaultGroup = client.GetDefaultConsumerGroup();
                var receiver = defaultGroup.CreateReceiver(
                                    description.PartitionIds.First(), 
                                    storedOffset);
                
                // eventData will have offset == storedOffset
                var eventData = receiver.Receive();
            </code>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.DateTime,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.DateTime,Microsoft.ServiceBus.Messaging.ReceiverOptions)" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="startingDateTimeUtc">The starting UTC time for receiving messages.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
            <remarks>Service only use this <paramref name="startingDateTimeUtc"/> as an approximation when 
            determining next event to deliver.
            
            Keep in mind that there can be clock skew between client time and service time, so user application 
            should be designed to handle duplication in event delivery.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.String,System.Int64,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,System.Int64,Microsoft.ServiceBus.Messaging.ReceiverOptions)" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="startingOffset">The starting offset at which to start receiving messages. To specify the start of the stream, see 
            <see cref="F:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.StartOfStream" />.</param> 
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.String,System.Boolean,System.Int64,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,System.Boolean,System.Int64,Microsoft.ServiceBus.Messaging.ReceiverOptions)" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="startingOffset">The starting offset at which to start receiving messages.</param>
            <param name="offsetInclusive">A Boolean value that indicates whether <paramref name="startingOffset" /> is treated as an inclusive offset, meaning that the first 
            event returned is the event that contains the starting offset. Normally, the first event returned is the event after the starting offset.</param> 
            <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.DateTime,System.Int64,Microsoft.ServiceBus.Messaging.ReceiverOptions)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.DateTime,System.Int64,Microsoft.ServiceBus.Messaging.ReceiverOptions)" />.</summary> 
            <param name="partitionId">The ID of the partition.</param>
            <param name="startingDateTimeUtc">The starting UTC time for receiving messages.</param>
            <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
            <param name="receiverOptions">Options for a event hub receiver.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
            <remarks>Service only uses this <paramref name="startingDateTimeUtc"/> as an approximation when 
            determining next event to deliver.
            
            Keep in mind that there can be clock skew between client time and service time, so user application 
            should be designed to handle duplication in event delivery.</remarks>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.IEventProcessor">
            <summary>Provides methods for event processors. Applications must implement this interface, 
            which enables the handling of events from Event Hubs. This interface is the main extensibility point for the 
            EventProcessorHost and 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)" />.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IEventProcessor.OpenAsync(Microsoft.ServiceBus.Messaging.PartitionContext)">
            <summary>Initializes the Event Hub processor instance. This method is called before any event data is passed to this processor instance.</summary>
            <param name="context">Ownership information for the partition on which this processor instance works. Any attempt to call 
            <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" /> will fail during the Open operation.</param> 
            <returns>The task that indicates that the Open operation is complete.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})">
            <summary>Asynchronously processes the specified context and messages. This method is called when there are new messages in the 
            Event Hubs stream. Make sure to checkpoint only when you are finished processing all the events in each batch.</summary> 
            <param name="context">Ownership information for the partition on which this processor instance works.</param>
            <param name="messages">A batch of Event Hubs events.</param>
            <returns>The task that indicates that 
            <see cref="M:Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})" /> is complete.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)">
            <summary>Called when the ownership of partition moves to a different node for load-balancing purpose, or when the host is shutting down. Called in response to 
            <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessorAsync(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)" />.</summary> 
            <param name="context">Partition ownership information for the partition on which this processor instance works. You can call 
            <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" /> to checkpoint progress in the processing of messages from Event Hub streams.</param> 
            <param name="reason">The reason for calling 
            <see cref="M:Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)" />.</param> 
            <returns> A task indicating that the Close operation is complete.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.IEventProcessorFactory">
            <summary>An interface that provides a factory for creating instances of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</summary>
            <remarks>Use a factory if you need a more advance way to create <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor"/>. 
            Otherwise you can use EventHubConsumerGroup.RegisterProcessor to specify
            just the event processor type.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IEventProcessorFactory.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)">
            <summary>Creates a new instance of an event processor in the specified partition.</summary>
            <param name="context">Partition context information.</param>
            <returns>An instance of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessorFactory" />.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler">
            <summary>Represents an interface for the asynchronous handler for the message session.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Raises an event that occurs when a message has been brokered.</summary>
            <param name="session">The message session.</param>
            <param name="message">The brokered message.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
            <summary>Raises an event that occurs when the session has been asynchronously closed.</summary>
            <param name="session">The closed session.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)">
            <summary>Raises an event that occurs when the session has been lost.</summary>
            <param name="exception">The exception that occurred that caused the lost session.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory">
            <summary>Represents an interface for the handler factory associated with the message session.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Creates an instance of the handler factory.</summary>
            <param name="session">The message session.</param>
            <param name="message">The message.</param>
            <returns>The created instance.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler)">
            <summary>Releases the resources associated with the handler factory instance.</summary>
            <param name="handler">The handler instance.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionHandler">
            <summary>Represents an interface for the handler associated with the message session.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Raises an event that occurs when a message has been brokered.</summary>
            <param name="session">The current message session.</param>
            <param name="message">The brokered message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
            <summary>Raises an event that occurs when an active session closes.</summary>
            <param name="session">The closing session.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnSessionLost(System.Exception)">
            <summary>Raises an event that occurs when the session has been lost.</summary>
            <param name="exception">The error that caused the lost session.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory">
            <summary>Represents an interface for the handler factory associated with the message session.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Creates an instance of the handler factory.</summary>
            <param name="session">The message session.</param>
            <param name="message">The message.</param>
            <returns>The created instance.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionHandler)">
            <summary>Releases the resources associated with the handler factory instance.</summary>
            <param name="handler">The handler instance.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventData">
            <summary>Represents the event sent and received from an Event Hubs stream. It contains the body of the event, a user-defined property bag, and various metadata 
            describing the event, such as its offset in the partition and its number in the stream sequence. Partitions are filled with a sequence of event data.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventData.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventData.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> class that uses the argument stream as the body stream.</summary> 
            <param name="stream">A stream which is used as the body stream.</param>
            <remarks>User is expected to own the disposing of the stream when using this constructor.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventData.#ctor(System.Byte[])">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> class that uses the specified byte array as the body.</summary> 
            <param name="byteArray">The event data byte array which is used to form the body stream.</param>
            <remarks>You should treat the input byte array as immutable when
            sending EventData. 
            
            When sending the data as well as any cloning operation, 
            Service Bus will access the byte array by reference 
            rather that by deep copy of the byte array. Also disposing
            the EventData instance will only de-reference the association
            with the array. The user is responsible for the lifecycle of the
            byte-array itself.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventData.#ctor(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> class that uses the specified list of byte array segments as the body.</summary> 
            <param name="arraySegments">An IList of array segments to be 
            sent as the body of the <see cref="T:Microsoft.ServiceBus.Messaging.EventData" />.
            </param>
            <remarks>Typically user will use IList&lt;ArraySegment&lt;byte&gt;&gt;
            when using there own buffer pool for scenarios that require efficient usage
            of memory.
            
            When sending the data as well as any cloning operation, 
            Service Bus will access the array segments by reference 
            rather that by deep copy of the bytes. 
            
            Disposing the EventData instance will only de-reference the association
            with the list. User is responsible for the life cycle of the
            array segments themselves.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventData.#ctor(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
            <summary>
            Constructor which takes the input content and serializer to create
            the body stream.
            </summary>
            <param name="content">.Net object</param>
            <param name="serializer">the serializer used to serialize <paramref name="content"/></param>
            <remarks>If content is a stream and seriazlier is null, then it is equate to use
            <see cref="M:Microsoft.ServiceBus.Messaging.EventData.#ctor(System.IO.Stream)"/></remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventData.#ctor(Microsoft.ServiceBus.Messaging.Amqp.AmqpMessage,System.Boolean)">
            <summary>
            This constructor is only used in the receive path from Amqp path, 
            or in Cloning from a EventData that has serialized.
            </summary>
            <param name="amqpMessage"></param>
            <param name="ownMessage"></param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventData.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            This constructor is only used on the Gateway http path so that 
            we can clean up the stream.
            </summary>
            <param name="stream"></param>
            <param name="ownStream"></param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventData.SerializedSizeInBytes">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventData.Offset">
            <summary>Gets the offset of the data relative to the Event Hub partition stream. The offset is a marker or 
            identifier for an event within the Event Hubs stream. The identifier is unique within a partition of the Event Hubs stream.</summary> 
            <value>The read offset of the event data.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventData.PartitionKey">
            <summary>Gets or sets the key that is used to determine to which partition to send event data.</summary>
            <value>A partition key for the partition to which event data should be sent.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventData.SequenceNumber">
            <summary>Gets the logical sequence number of the event within the partition stream of the Event Hub.</summary>
            <value>The logical sequence number of the event.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventData.EnqueuedTimeUtc">
            <summary>Gets or sets the date and time of the sent time in UTC.</summary>
            <value>The enqueue time in UTC. This value represents the actual time of enqueuing the event data.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventData.Properties">
            <summary>Gets the user properties of the event data that the user explicitly added during send operations.</summary>
            <value>The user properties of the event data.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventData.SystemProperties">
            <summary>Gets or sets the system properties, including the event data.</summary>
            <value>The system properties, including the event data.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EventData.DeliveryTag">
            <summary>
            Gets or sets the deliveryTag which is used for server side checkpointing.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventData.Clone">
            <summary>Makes a deep copy of this event data.</summary>
            <returns>A copy of this event data.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventData.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventData.GetBodyStream">
            <summary>Gets or sets the underlying stream to the event data body.</summary>
            <returns>The underlying stream to the event data body.</returns>
            <remarks>This method can only be called once and afterwards method will throw <see cref="T:System.InvalidOperationException"/>.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EventData.GetBytes">
            <summary>Gets the event data bytes.</summary>
            <returns>The event data bytes.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler">
            <summary>Represents the asynchronous handler associated with the message session.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Represents an event that occurs when the session has a brokered message.</summary>
            <param name="session">The message session.</param>
            <param name="message">The brokered message.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
            <summary>Raises an event that occurs when the session has been asynchronously closed.</summary>
            <param name="session">The closed session.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnSessionLostAsync(System.Exception)">
            <summary>Raises an event that occurs when the session has been lost.</summary>
            <param name="exception">The exception occurred that caused the lost session.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Represents an event that occurs when the session has a brokered message.</summary>
            <param name="session">The message session.</param>
            <param name="message">The brokered message.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
            <summary>Raises an event that occurs when the session has been asynchronously closed.</summary>
            <param name="session">The closed session.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)">
            <summary>Raises an event that occurs when the session has been lost.</summary>
            <param name="exception">The exception occurred that caused the lost session.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessageSessionHandler">
            <summary>Represents the handler associated with the message session.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Represents an event that occurs when the session has a brokered message.</summary>
            <param name="session">The message session.</param>
            <param name="message">The brokered message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
            <summary>Raises an event that occurs when the session has been closed.</summary>
            <param name="session">The closed session.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnSessionLost(System.Exception)">
            <summary>Raises an event that occurs when the session has been lost.</summary>
            <param name="exception">The exception occurred that caused the lost session.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Represents an event that occurs when the session has a brokered message.</summary>
            <param name="session">The message session.</param>
            <param name="message">The brokered message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
            <summary>Raises an event that occurs when the session has been closed.</summary>
            <param name="session">The closed session.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.OnSessionLost(System.Exception)">
            <summary>Raises an event that occurs when the session has been lost.</summary>
            <param name="exception">The exception occurred that caused the lost session.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException">
            <summary>Represents an exception occurred when the size of the message exceeded the maximum allowed size.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSizeExceededException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException" /> class with specified exception message.</summary> 
            <param name="message">The message associated with the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSizeExceededException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException" /> class with specified exception message and the error that caused the exception.</summary> 
            <param name="message">The message associated with the exception.</param>
            <param name="innerException">The error that caused the current exception.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.OnShardMessageOptions">
            <summary>Represents the available options for the shard message.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.OnShardMessageOptions.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.OnShardMessageOptions" /> class.</summary>
        </member>
        <member name="E:Microsoft.ServiceBus.Messaging.OnShardMessageOptions.ExceptionReceived">
            <summary>Occurs when an exception was received.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.OnShardMessageOptions.MaxConcurrentCalls">
            <summary>Gets or sets the maximum number of the maximum concurrent calls.</summary>
            <value>The maximum number of the maximum concurrent calls.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.OnShardMessageOptions.AutoCheckpointTimeout">
            <summary>Gets or sets the duration of the auto checkpoint.</summary>
            <value>The duration of the auto checkpoint.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException">
            <summary>Represents the exception occurred for the paired messaging factory.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException" /> class.</summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.PartitionContext">
            <summary>Encapsulates information related to an Event Hubs partition used by 
            <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PartitionContext.#ctor">
            <summary>
            This is mainly created for unit testing IEventProcessor logic so various mocking frameworks can be used to 
            pass in a mock for PartitionContext.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionContext.EventHubPath">
            <summary>Gets or sets the path of the event hub.</summary>
            <value>The path of the event hub.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionContext.ConsumerGroupName">
            <summary>Gets or sets the name of the consumer group.</summary>
            <value>The name of the consumer group.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionContext.Lease">
            <summary>Gets or sets the messaging lease.</summary>
            <value>The messaging lease.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionContext.RuntimeInfo">
            <summary>
            Gets the approximate receiver runtime information for a logical partition of an Event Hub.
            To enable the setting, refer to <see cref="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.EnableReceiverRuntimeMetric"/>
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync">
            <summary>Checkpoints progress of an Event Hubs message stream. Make sure to 
            call this method once all the messages in a batch are processed.</summary> 
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)">
            <summary>Checkpoints progress of an Event Hubs message stream with the specified offset.</summary>
            <param name="data">An <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> object to use for checkpointing the state of the stream.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventProcessorLifecycleManager">
            <summary>
            This provides a message pump and manages the life-cycle of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation">
            <summary>Represents the approximate runtime information for a logical partition of an Event Hub.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.EventHubPath">
            <summary>Gets the path of the event hub.</summary>
            <value>The path of the event hub.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.PartitionId">
            <summary>Gets the partition ID for a logical partition of an Event Hub.</summary>
            <value>The partition identifier.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.BeginSequenceNumber">
            <summary>Gets the begin sequence number.</summary>
            <value>The begin sequence number.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.LastEnqueuedSequenceNumber">
            <summary>Gets the end sequence number.</summary>
            <value>The end sequence number.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.LastEnqueuedOffset">
            <summary>Gets the offset of the last enqueued event.</summary>
            <value>The offset of the last enqueued event.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.LastEnqueuedTimeUtc">
            <summary>Gets the enqueued UTC time of the last event.</summary>
            <value>The enqueued time of the last event.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.PublisherRevokedException">
            <summary>  Exception for signaling revoked publisher errors. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PublisherRevokedException.#ctor(System.String)">
            <summary />
            <param name="publisherName" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PublisherRevokedException.#ctor(System.String,System.Exception)">
            <summary />
            <param name="message" />
            <param name="innerException" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PublisherRevokedException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PublisherRevokedException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext,System.Exception)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
            <param name="innerException"> The inner exception. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PublisherRevokedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Constructor. </summary>
            <param name="info"> Information </param>
            <param name="context"> Context </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.RequestQuotaExceededException">
            <summary> Exception for signaling receive request quota exceeded errors. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RequestQuotaExceededException.#ctor(System.String)">
            <summary> Constructor. </summary>
            <param name="message"> The exception message included with the base exception. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RequestQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary> Exception Constructor. </summary>
            <param name="message"> The exception message included with the base exception. </param>
            <param name="innerException"> The inner exception. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RequestQuotaExceededException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RequestQuotaExceededException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext,System.Exception)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
            <param name="innerException"> The inner exception. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RequestQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Exception Constructor for additional details embedded in a serializable stream. </summary>
            <param name="info">    The serialization information object. </param>
            <param name="context"> The streaming context/source. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.RevokedPublisherDescription">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RevokedPublisherDescription.#ctor(System.String)">
            <summary />
            <param name="publisher" />
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RevokedPublisherDescription.Name">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RevokedPublisherDescription.Microsoft#ServiceBus#Messaging#IResourceDescription#CollectionName">
            <summary>
              Gets the name of the collection.
            </summary>
            <value> The name of the collection. </value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EventHubContinuationToken">
            <summary> ContinuationToken for Querying NextPage to enumerate ChildEntities under EventHub </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus">
            <summary>Enumerates the status of the entity availability.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Unknown">
            <summary>The entity is unknown.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Available">
            <summary>The entity is available.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Limited">
            <summary>The entity is limited.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Restoring">
            <summary>The entity is being restored.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Renaming">
            <summary>The entity is being renamed.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Sbmp.SbmpProtocolDefaults.SbmpConnectionProtocol">
            <summary>
            This purely is for Sbmp code path to know which protocol to use,
            and thus there is no AutoDetect "mode" per say.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Sbmp.SbmpMessageSession.CachedState">
            <summary> Gets or sets a value indicating whether the message came from cache or not. </summary>
            <value> true if came from cache, false if not. </value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Sbmp.DuplexRequestBindingElement.DuplexRequestSessionChannel.HandleMessageReceived(System.IAsyncResult)">
            <summary>
            After BeginTryReceive completes use this method to perform the EndTryReceive
            </summary>
            <param name="result">The AsyncResult</param>
            <returns>True if another TryReceive is needed, False if we're all done receiving (shutting down).</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException">
            <summary>Represents the exceptions occurred during the sending the availability for the messaging.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException.#ctor(System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException" /> class.</summary>
            <param name="innerException">The error that caused the exception.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.SessionHandlerOptions">
            <summary>Represents the options for the session handler.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SessionHandlerOptions" /> class.</summary>
        </member>
        <member name="E:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.ExceptionReceived">
            <summary>Occurs when an exception was received during session handling.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.MessageWaitTimeout">
            <summary>Gets or sets the time needed before the message waiting expires.</summary>
            <value>The time needed before the message waiting expires.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.MaxConcurrentSessions">
            <summary>Gets or sets the maximum number of existing sessions.</summary>
            <value>The maximum number of existing sessions.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.AutoComplete">
            <summary>Gets or sets whether the autocomplete option of the session handler is enabled.</summary>
            <value>true if the autocomplete option of the session handler is enabled; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.AutoRenewTimeout">
            <summary>Gets or sets the time needed before the session renew its state.</summary>
            <value>The time needed before the session renew its state.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.VolatileTopicDescription.IsAnonymousAccessible">
            <summary>
            If true, the entity can be accessed by anonymous users
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs">
            <summary>Provides data for the <see cref="E:Microsoft.ServiceBus.Messaging.OnMessageOptions.ExceptionReceived" /> event.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs.#ctor(System.Exception,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs" /> class.</summary>
            <param name="exception">The exception that this event data belongs to.</param>
            <param name="action">The action associated with the event.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs.Exception">
            <summary>Gets the parent class exception to which this event data belongs.</summary>
            <value>The exception, generated by the parent class, to which this event data belongs.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs.Action">
            <summary>Gets the action associated with the event.</summary>
            <value>The action associated with the event.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.OnMessageOptions">
            <summary>Provides options associated with message pump processing using 
            <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})" /> and 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})" />.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.OnMessageOptions.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.OnMessageOptions.MaxConcurrentCalls">
            <summary>Gets or sets the maximum number of concurrent calls to the callback the message pump should initiate.</summary>
            <value>The maximum number of concurrent calls to the callback.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoComplete">
            <summary>Gets or sets a value that indicates whether the message-pump should call 
            <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.Complete(System.Guid)" /> or 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Complete(System.Guid)" /> on messages after the callback has completed processing.</summary> 
            <value>true to complete the message processing automatically on successful execution of the operation; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoRenewTimeout">
            <summary>Gets or sets the maximum duration within which the lock will be renewed automatically. This 
            value should be greater than the longest message lock duration; for example, the LockDuration Property. </summary> 
            <value>The maximum duration during which locks are automatically renewed. The default value is 5 minutes, and if you
            set this value to <see cref="F:System.TimeSpan.Zero"/> the lock will not be automatically renewed.</value>
        </member>
        <member name="E:Microsoft.ServiceBus.Messaging.OnMessageOptions.ExceptionReceived">
            <summary>Occurs when an exception is received. Enables you to be notified of any errors encountered by the message pump.
            When errors are received calls will automatically be retried, so this is informational. </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.PairedNamespaceEventArgs">
            <summary>Represents the event arguments associated with paired namespace for the service bus messaging.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceEventArgs.Options">
            <summary>Gets or sets the options associated the paired namespace.</summary>
            <value>The options associated the paired namespace.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException">
            <summary>Represents the exception occurred during the sending of availability backlogs.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException" /> class.</summary>
            <param name="message">The message associated with the exception.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions">
            <summary>Represents the options for the paired namespace for the service bus messaging.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions" /> class.</summary>
            <param name="secondaryNamespaceManager">The secondary namespace manager.</param>
            <param name="secondaryMessagingFactory">The secondary messaging factory associated with the paired namespace.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory,System.TimeSpan)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions" /> class.</summary>
            <param name="secondaryNamespaceManager">The secondary namespace manager.</param>
            <param name="secondaryMessagingFactory">The secondary messaging factory associated with the paired namespace.</param>
            <param name="failoverInterval">The message <see cref="T:System.TimeSpan" /> interval failover.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.SecondaryNamespaceManager">
            <summary>Gets the object that manages entities, such as queues, topics, subscriptions and rules in the paired namespace.</summary>
            <value>The object that manages entities, such as queues, topics, subscriptions and rules in the paired namespace.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.SecondaryMessagingFactory">
            <summary>Gets the secondary messaging factory associated with the paired namespace.</summary>
            <value>The secondary messaging factory associated with the paired namespace.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.FailoverInterval">
            <summary>Gets the message <see cref="T:System.TimeSpan" /> interval failover.</summary>
            <value>The message <see cref="T:System.TimeSpan" /> interval failover.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.ClearPairing">
            <summary>Dissolves the pairing of the paired namespace.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.OnNotifyPrimarySendResult(System.String,System.Boolean)">
            <summary>Notifies the primary messaging on sending the result.</summary>
            <param name="path">The string of the path.</param>
            <param name="success">true if the results successfully send; otherwise, false.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions">
            <summary>Represents the options for the sending the availability of paired namespace.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions" /> class.</summary>
            <param name="secondaryNamespaceManager">The secondary namespace manager.</param>
            <param name="messagingFactory">The messaging factory.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions" /> class.</summary>
            <param name="secondaryNamespaceManager">The secondary namespace manager.</param>
            <param name="messagingFactory">The messaging factory.</param>
            <param name="backlogQueueCount">The number of backlog queue.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory,System.Int32,System.TimeSpan,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions" /> class.</summary>
            <param name="secondaryNamespaceManager">The secondary namespace manager.</param>
            <param name="messagingFactory">The messaging factory.</param>
            <param name="backlogQueueCount">The number of backlog queue.</param>
            <param name="failoverInterval">The fail over interval.</param>
            <param name="enableSyphon">true to enable syphon; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.BacklogQueueCount">
            <summary>Gets or sets the number of backlog queues.</summary>
            <value>The number of backlog queues.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.EnableSyphon">
            <summary>Gets or sets whether the syphon is enabled for this instance.</summary>
            <value>true if the syphon is enabled for this instance; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.PingPrimaryInterval">
            <summary>Gets or sets the interval of pings.</summary>
            <value>The interval of pings.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.MarkPathHealthy(System.String)">
            <summary>Marks a path as healthy.</summary>
            <param name="path">The path to be marked.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule">
            <summary>Defines the authorization rule for shared access operation.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor">
            <summary>
            This is done to help json and other deserializers
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule" /> class.</summary>
            <param name="keyName">The authorization rule key name.</param>
            <param name="rights">The list of rights.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule" /> class.</summary>
            <param name="keyName">The authorization rule key name.</param>
            <param name="primaryKey">The primary key for the authorization rule.</param>
            <param name="rights">The list of rights.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule" /> class.</summary>
            <param name="keyName">The authorization rule key name.</param>
            <param name="primaryKey">The primary key for the authorization rule.</param>
            <param name="secondaryKey">The secondary key for the authorization rule.</param>
            <param name="rights">The list of rights.</param>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.Serializer">
            <summary>
            A serializer for objects of type SharedAccessAuthorizationRule.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.OnValidate">
            <summary>Checks the validity of the authorization rule.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.KeyName">
            <summary>Gets or sets the authorization rule key name.</summary>
            <value>The authorization rule key name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.PrimaryKey">
            <summary>Gets or sets the primary key for the authorization rule.</summary>
            <value>The primary key for the authorization rule.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.SecondaryKey">
            <summary>Gets or sets the secondary key for the authorization rule.</summary>
            <value>The secondary key for the authorization rule.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.ValidateRights(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Checks the validity of the specified access rights.</summary>
            <param name="value">The access rights to check.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.IsSystemRule">
            <summary>Distinguishes system rules from non system rules. System rules are not visible to customer and their key names contain reserved characters.</summary>
            <value>If the rule is a System rule then set to true else set to false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.GenerateRandomKey">
            <summary>Generates the random key for the authorization rule.</summary>
            <returns>The random key for the authorization rule.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.GenerateSystemRule">
            <summary>Checks the validity of the specified access rights.</summary>
            <returns>A randomly generated System key.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessageBrowser">
            <summary> MessageBrowser class is used to peek messages from the message container. </summary>    
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageBrowser.Path">
            <summary> Gets the path of the queue/topic. This path is relative to MessagingFactory base address.  </summary>
            <value> The path of the queue/topic. </value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageBrowser.EndPeek(System.IAsyncResult)">
            <summary> Ends the message Peek operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageBrowser.EndPeekBatch(System.IAsyncResult)">
            <summary> Ends the message Peek operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageBrowser.OnBeginPeek(Microsoft.ServiceBus.Messaging.PeekOptions,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin Peek queue action. </summary>
            <param name="peekOptions">The PeekOptions to use.</param>
            <param name="timeout">    The timeout. </param>
            <param name="callback">   The callback. </param>
            <param name="state">      The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageBrowser.OnEndPeek(System.IAsyncResult)">
            <summary> Executes the end Peek action. </summary>
            <param name="result"> The result. </param>
            <returns> List of messages to peek. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageBrowser.GetTopMessage(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary> Gets a top message. </summary>
            <param name="messages"> The messages. </param>
            <returns> The top message. </returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.AmqpTransportSettingsElement">
            <summary> Amqp transport settings element. </summary>
            TODO: make this public when we support AMQP
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.AmqpTransportSettingsElement.#ctor">
            <summary> Default constructor. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.AmqpTransportSettingsElement.MaxFrameSize">
            <summary> Gets or sets the batch flush interval. </summary>
            <value> The batch flush interval. </value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement">
            <summary>Represents a configuration element that contains sub-elements that specify settings for using the 
            <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" /> binding.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement.#ctor">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement" /> class.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement.GetBindingCollectionElement">
            <summary> Gets the binding collection element. </summary>
            <returns> The binding collection element. </returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement">
            <summary>Represents an XML element that specifies a configuration of <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" />.</summary>
            <remarks>
            The NetMessagingBinding and NetMessagingTransportBindingElement allow
             WCF clients to easily send and receive messages to ServiceBus Messaging Entities (queues, topics, and subscriptions).  
            These message exchanges will use standard WCF programming model such as IOutputChannel, IInputChannel, IInputSessionChannel, and ReceiveContext.  
            The NetMessagingTransportBindingElement supports creating IOutputChannel, IInputChannel, IInputChannel+ReceiveContext, IInputSessionChannel, 
            and IInputSessionChannel+ReceiveContext.  The sessionful channels (IInputSessionChannel, IInputSessionChannel+ReceiveContext) are for Session/Conversation support.
            </remarks>
            <seealso cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding"/>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.#ctor">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement" /> class.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement" /> class using the specified name.</summary> 
            <param name="name">The name.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.PrefetchCount">
            <summary>Gets or sets the number of prefetch.</summary>
            <value>The number of prefetch.</value>
            <remarks> Takes effect on the next receive call to the server </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.SessionIdleTimeout">
            <summary>Gets or sets the SessionIdleTimeout.</summary>
            <value>If an IInputSessionChannel.TryReceive operation doesn’t receive any message within 
            this TimeSpan then the channel will indicate end of session.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.TransportSettings">
            <summary>Gets or sets the transport settings element for the net messaging.</summary>
            <value>The transport settings element for the net messaging.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.BindingElementType">
            <summary>
            Gets the type of binding element being used.
            </summary>
            <value> The type of binding element being used. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.Properties">
            <summary> Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance
            that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" />
            objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" />
            objects of this configuration element. </summary>
            <value> The properties. </value>
            ### <returns> A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance
            that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" />
            objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" />
            objects of this configuration element. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary> Called when the content of a specified binding element is applied to this binding
            configuration element. </summary>
            <param name="binding"> A binding. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary> Initializes this binding configuration element with the content of the specified
            binding. </summary>
            <param name="binding"> A binding. </param>
            ### <exception cref="T:System.ArgumentNullException">
            <paramref name="binding" /> is null.
            </exception>
            ### <exception cref="T:System.ArgumentException">
            The type of this binding element is different from the type specified by <paramref
            name="binding" />.
            </exception>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement">
            <summary>Represents the transport settings element for the net messaging.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.#ctor">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement" /> class.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.BatchFlushInterval">
            <summary>Gets or sets the batch flush interval.</summary>
            <value>The <see cref="T:System.TimeSpan" /> that represents the batch flush interval.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.EnableRedirect">
            <summary>Gets or set a value that indicates whether redirection is enabled.</summary>
            <value>true if redirection is enabled; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.LeaseTimeout">
            <summary />
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement">
            <summary>Represents the net messaging transport extension element.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.#ctor">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement" /> class.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.BindingElementType">
            <summary>Gets the type of binding element being used.</summary>
            <value>The type of binding element being used.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.PrefetchCount">
            <summary>Gets or sets the number of prefetch.</summary>
            <value>The number of prefetch.</value>
            <remarks> Takes effect on the next receive call to the server </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.SessionIdleTimeout">
            <summary>Gets or sets the SessionIdleTimeout.</summary>
            <value>If an IInputSessionChannel.TryReceive operation doesn’t receive any message within 
            this TimeSpan then the channel will indicate end of session.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.TransportSettings">
            <summary>Gets or sets the transport settings element for the net messaging.</summary>
            <value>The transport settings element for the net messaging.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.Properties">
            <summary>
            Gets the <seealso cref="T:System.Configuration.ConfigurationPropertyCollection"/> configuration property.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
            <summary> Applies the settings of the specified <see cref="T:
            System.ServiceModel.Channels.BindingElement" /> to this configuration element. </summary>
            <param name="bindingElement">
            The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to this configuration
            element.
            </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary> Copies the settings from the specified configuration element to this configuration
            element. </summary>
            <param name="from">
            The configuration element whose settings are to be copied to this configuration element.
            </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.CreateDefaultBindingElement">
            <summary> Returns a custom binding element object with default values. </summary>
            <returns> A custom <see cref="T:System.ServiceModel.Channels.BindingElement" /> object with
            default values. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
            <summary> Initializes this binding configuration element with the content of the specified
            binding element. </summary>
            <param name="bindingElement"> A binding element. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.DuplicateMessageException">
            <summary>Exception for signaling message duplicate errors.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.DuplicateMessageException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.DuplicateMessageException" /> class.</summary>
            <param name="message">The error message about the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.DuplicateMessageException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.DuplicateMessageException" /> class.</summary>
            <param name="message">The error message about the exception.</param>
            <param name="innerException">The inner exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.DuplicateMessageException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.DuplicateMessageException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext,System.Exception)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
            <param name="innerException"> The inner exception. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.DuplicateMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Constructor. </summary>
            <param name="info">    The information. </param>
            <param name="context"> The context. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.AccessRights">
            <summary>Specifies the possible access rights for a user.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.Manage">
            <summary>The access right is Manage.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.Send">
            <summary>The access right is Send.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.Listen">
            <summary>The access right is Listen.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.ManageNotificationHub">
            <summary />
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Filters.ActionLanguage.ScanBuff">
            <summary>
            Summary Canonical example of MPLEX automaton
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Filters.ActionLanguage.Scanner.TextBuff">
            <summary>
            This is the Buffer for UTF8 files.
            It attempts to read the encoding preamble, which for 
            this encoding should be unicode point \uFEFF which is 
            encoded as EF BB BF
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Filters.ActionLanguage.Scanner.TextBuff.NewTextBuff(System.IO.Stream)">
            <summary>
            TextBuff factory.  Reads the file preamble
            and returns a TextBuff, LittleEndTextBuff or
            BigEndTextBuff according to the result.
            </summary>
            <param name="strm">The underlying stream</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Filters.ActionLanguage.Scanner.TextBuff.GetString(System.Int32,System.Int32)">
            <summary>
            Returns the string from the buffer between
            the given file positions.  This needs to be
            done carefully, as the number of characters
            is, in general, not equal to (end - beg).
            </summary>
            <param name="beg">Begin filepos</param>
            <param name="end">End filepos</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Filters.ActionLanguage.Scanner.BigEndTextBuff">
            <summary>
            This is the Buffer for Big-endian UTF16 files.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Filters.ActionLanguage.Scanner.LittleEndTextBuff">
            <summary>
            This is the Buffer for Little-endian UTF16 files.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Filters.FilterLanguage.ScanBuff">
            <summary>
            Summary Canonical example of MPLEX automaton
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Filters.FilterLanguage.Scanner.TextBuff">
            <summary>
            This is the Buffer for UTF8 files.
            It attempts to read the encoding preamble, which for 
            this encoding should be unicode point \uFEFF which is 
            encoded as EF BB BF
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Filters.FilterLanguage.Scanner.TextBuff.NewTextBuff(System.IO.Stream)">
            <summary>
            TextBuff factory.  Reads the file preamble
            and returns a TextBuff, LittleEndTextBuff or
            BigEndTextBuff according to the result.
            </summary>
            <param name="strm">The underlying stream</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Filters.FilterLanguage.Scanner.TextBuff.GetString(System.Int32,System.Int32)">
            <summary>
            Returns the string from the buffer between
            the given file positions.  This needs to be
            done carefully, as the number of characters
            is, in general, not equal to (end - beg).
            </summary>
            <param name="beg">Begin filepos</param>
            <param name="end">End filepos</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Filters.FilterLanguage.Scanner.BigEndTextBuff">
            <summary>
            This is the Buffer for Big-endian UTF16 files.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Filters.FilterLanguage.Scanner.LittleEndTextBuff">
            <summary>
            This is the Buffer for Little-endian UTF16 files.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.AllowRuleClaimType">
            <summary>Specifies an enumeration of AllowRuleClaim type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AllowRuleClaimType.Upn">
            <summary>The type is Upn.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AllowRuleClaimType.Role">
            <summary>The type is Role.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.AllowRule">
            <summary>Represents the rule to allow.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AllowRule.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.AllowRule" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AllowRule.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Initializes a new instance of <see cref="T:Microsoft.ServiceBus.Messaging.AllowRule" /> class.</summary>
            <param name="issuerName">The <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.IssuerName" /> name of the claim issuer.</param>
            <param name="claimType">The <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimType" /> type of the claim.</param>
            <param name="claimValue">The <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimValue" /> value of the claim.</param>
            <param name="rights">The list of possible <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Rights" />.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AllowRule.#ctor(System.String,Microsoft.ServiceBus.Messaging.AllowRuleClaimType,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.AllowRule" /> class with the specified parameters.</summary>
            <param name="issuerName">The <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.IssuerName" /> name of the claim issuer.</param>
            <param name="claimType">The <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimType" /> type of the claim.</param>
            <param name="claimValue">The <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimValue" /> value of the claim.</param>
            <param name="rights">The list of possible <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Rights" />.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.AllowRule.KeyName">
            <summary>Gets or sets the allow rule key name.</summary>
            <value>The allow rule key name.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.AuthorizationRule">
            <summary>Defines the Azure Service Bus authorization rule that is used to determine whether an operation is permissible or not.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.NameIdentifierClaimType">
            <summary>The name identifier claim rule.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.ShortNameIdentifierClaimType">
            <summary>The short name identifier claim rule.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.UpnClaimType">
            <summary>The UPN claim rule.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.ShortUpnClaimType">
            <summary>The short UPN claim rule.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.RoleClaimType">
            <summary>The role role claim rule.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.RoleRoleClaimType">
            <summary>The role role claim rule.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.SharedAccessKeyClaimType">
            <summary>The shared access key claim rule.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.IssuerName">
            <summary>Gets or sets the name identifier of the issuer.</summary>
            <value>The name identifier of the issuer.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimType">
            <summary>Gets or sets the claim type.</summary>
            <value>The claim type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimValue">
            <summary>Gets or sets the claim value which is either ‘Send’, ‘Listen’, or ‘Manage’.</summary>
            <value>The claim value which is either ‘Send’, ‘Listen’, or ‘Manage’.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Rights">
            <summary>Gets or sets the list of rights.</summary>
            <value>The list of rights.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.KeyName">
            <summary>Gets or sets the authorization rule key name.</summary>
            <value>The authorization rule key name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.CreatedTime">
            <summary>Gets or sets the date and time when the authorization rule was created.</summary>
            <value>The date and time when the authorization rule was created.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ModifiedTime">
            <summary>Gets or sets the date and time when the authorization rule was modified.</summary>
            <value>The date and time when the authorization rule was modified.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Revision">
            <summary>Gets or sets the modification revision number.</summary>
            <value>The modification revision number.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.OnValidate">
            <summary>Enables derived classes to provide custom handling when validating the authorization rule.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.ValidateRights(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Checks the validity of the specified access rights.</summary>
            <param name="value">The access rights to check.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.Clone">
            <summary>Creates a copy of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />.</summary>
            <returns>A created copy of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.AuthorizationRules">
            <summary>Represents a collection of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRules.Serializer">
            <summary>Specifies the serializer for serializing and deserializing the object.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRules.innerCollection">
            <summary>Specifies the inner collection.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule})">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> class with a list of 
            <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />.</summary> 
            <param name="enumerable">The list of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetEnumerator">
            <summary>Gets the enumerator that iterates through the collection.</summary>
            <returns>The enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gets the enumerator that iterates through the collection.</summary>
            <returns>The enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
            <summary>Adds the specified <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> into the collection.</summary>
            <param name="item">The <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> to be added.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Clear">
            <summary>Clears all elements in the collection.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
            <summary>Determines whether the specified item exists in the collection.</summary>
            <param name="item">The item to search in the collection.</param>
            <returns>true if the specified item is found; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[],System.Int32)">
            <summary>Copies the elements into an array starting at the specified array index.</summary>
            <param name="array">The array to hold the copied elements.</param>
            <param name="arrayIndex">The zero-based index at which copying starts.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
            <summary>Removes the specified <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> from the collection.</summary>
            <param name="item">The item to remove.</param>
            <returns>true if the operation succeeded; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRules.Count">
            <summary>Gets or sets the number of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> contained in the collection.</summary>
            <value>The number of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> contained in the collection.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.Predicate{Microsoft.ServiceBus.Messaging.AuthorizationRule})">
            <summary>Gets the sets of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />.</summary>
            <param name="match">The authorization rule to match the specified value.</param>
            <returns>The sets of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> that match the specified value.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule(System.String,Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule@)">
            <summary>Gets the rule associated with the specified key.</summary>
            <param name="keyName">The name of the key.</param>
            <param name="rule">The rule associated with the specified key.</param>
            <returns>true if the 
            <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> contains an element with the specified key; otherwise, false.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.String)">
            <summary>Gets the set of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> that matches the specified value.</summary>
            <param name="claimValue">The value to search for.</param>
            <returns>The sets of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> that match the specified value.</returns>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRules.IsReadOnly">
            <summary>Gets or sets whether the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> is read only.</summary>
            <value>true if the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> is read only; otherwise, false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.HasEqualRuntimeBehavior(Microsoft.ServiceBus.Messaging.AuthorizationRules)">
            <summary>Determines whether the specified 
            <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> has equal runtime behavior as this current object.</summary> 
            <param name="comparand">The <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> to compare to the current object.</param>
            <returns>true if the they are the equal runtime behavior; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRules.RequiresEncryption">
            <summary>Gets a value that indicates whether the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> requires encryption.</summary>
            <value>true if the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> requires encryption; otherwise, false.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException">
            <summary>The exception that is thrown when subscription matching resulted no match.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" /> class with error message.</summary> 
            <param name="message">The error message about the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" /> class with error message and inner exception.</summary> 
            <param name="message">The error message about the exception.</param>
            <param name="innerException">The inner exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException.ToString">
            <summary>Returns the string representation of the <see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" />.</summary>
            <returns>The string representation of the <see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" />.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.RelayDescription">
            <summary>Represents a relay description.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RelayDescription.#ctor(System.String,Microsoft.ServiceBus.RelayType)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> class.</summary>
            <param name="relayPath">The path of the relay.</param>
            <param name="type">The relay type.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.Path">
            <summary>Gets or sets the path of the relay.</summary>
            <value>The path of the relay.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.CreatedAt">
            <summary>Gets or sets the exact time the relay was created.</summary>
            <value>The exact time the relay was created.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.UpdatedAt">
            <summary>Gets or sets the date when the relay was updated.</summary>
            <value>The date when the relay was updated.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.RelayType">
            <summary>Gets or sets the relay type.</summary>
            <value>The relay type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.ListenerCount">
            <summary>Gets or sets the number of listeners for this relay.</summary>
            <value>The number of listeners for this relay.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.RequiresClientAuthorization">
            <summary>Gets or sets whether client authorization is needed for this relay.</summary>
            <value>true if client authorization is needed for this relay; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.RequiresTransportSecurity">
            <summary>Gets or sets whether transport security is needed for this relay.</summary>
            <value>true if transport security is needed for this relay; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.Authorization">
            <summary>Gets the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</summary>
            <value>The <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.IsDynamic">
            <summary>Gets or sets whether the relay is dynamic.</summary>
            <value>true if the relay is dynamic; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.UserMetadata">
            <summary>Gets or sets the user metadata associated with this instance.</summary>
            <value>The user metadata associated with this instance.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.CollectionName">
            <summary>Gets or sets the name of the collection associated with the relay.</summary>
            <value>The name of the collection associated with the relay.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RelayDescription.ClearManageOnlyMembers">
            <summary>
            This is so users with Send or Listen tokens can still call GetRelay[s], just not read everything,
            especially the AuthorizationRules and any other members which require the Manage permission.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException">
            <summary>Represents an exception when the transaction size exceeds.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException" /> class.</summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException" /> class.</summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The error that caused the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext,System.Exception)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
            <param name="innerException"> The inner exception. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Exception Constructor for additional details embedded in a serializable stream. </summary>
            <param name="info">    The serialization information object. </param>
            <param name="context"> The streaming context/source. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.TileType">
            <summary>Enumerates types of messaging tile.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileSquareImage">
            <summary>A TileSquareImage type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideImage">
            <summary>A TileWideImage type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideImageAndText">
            <summary>A TileWideImageAndText type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideImageCollection">
            <summary>A TileWideImageCollection type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText01">
            <summary>A TileWideText01 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText02">
            <summary>A TileWideText02 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText03">
            <summary>A TileWideText03 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText04">
            <summary>A TileWideText04 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText05">
            <summary>A TileWideText05 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText06">
            <summary>A TileWideText06 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText07">
            <summary>A TileWideText07 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText08">
            <summary>A TileWideText08 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText09">
            <summary>A TileWideText09 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText01">
            <summary>A TileWideSmallImageAndText01 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText02">
            <summary>A TileWideSmallImageAndText02 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText03">
            <summary>A TileWideSmallImageAndText03 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText04">
            <summary>A TileWideSmallImageAndText04 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageAndText">
            <summary>A TileWidePeekImageAndText type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage01">
            <summary>A TileWidePeekImage01 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage02">
            <summary>A TileWidePeekImage02 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage03">
            <summary>A TileWidePeekImage03 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage04">
            <summary>A TileWidePeekImage04 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage05">
            <summary>A TileWidePeekImage05 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage06">
            <summary>A TileWidePeekImage06 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection01">
            <summary>A TileWidePeekImageCollection01 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection02">
            <summary>A TileWidePeekImageCollection02 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection03">
            <summary>A TileWidePeekImageCollection03 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection04">
            <summary>A TileWidePeekImageCollection04 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection05">
            <summary>A TileWidePeekImageCollection05 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection06">
            <summary>A TileWidePeekImageCollection06 type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideBlockAndText01">
            <summary>A TileWideBlockAndText01 type.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.ToastType">
            <summary>Enumerates the types of image and text for toast notification.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText01">
            <summary>Specifies the first type image and text.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText02">
            <summary>Specifies the second type image and text.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText03">
            <summary>Specifies the third type image and text.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText04">
            <summary>Specifies the fourth type image and text.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText01">
            <summary>Specifies the first type small image and text.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText02">
            <summary>Specifies the second type small image and text.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText03">
            <summary>Specifies the third type small image and text.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText04">
            <summary>Specifies the fourth type small image and text.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText01">
            <summary>Specifies the first type text.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText02">
            <summary>Specifies the second type text.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText03">
            <summary>Specifies the third type text.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText04">
            <summary>Specifies the fourth type text.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.TransportType">
            <summary>An enumeration that sets the messaging protocol to either NetMessaging (a proprietary protocol to Azure Service Bus) or AMQP (an industry standard).</summary>
            <remarks>Although NetMessaging is the default value, AMQP is the preferred protocol. No matter which transport type you select (NetMessaging or AMQP), 
            the communication occurs over the selected <see cref="T:Microsoft.ServiceBus.ConnectivityMode" />. For example, you can have AMQP occur over TCP or HTTP(S).</remarks>
            <seealso cref="T:Microsoft.ServiceBus.ConnectivityMode"/>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TransportType.NetMessaging">
            <summary>The network messaging transport type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TransportType.Amqp">
            <summary>The Advanced Message Queuing Protocol (AMQP) transport type.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EntityStatus">
            <summary>Enumerates the possible values for the status of a messaging entity.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Active">
            <summary>The status of the messaging entity is active.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Disabled">
            <summary>The status of the messaging entity is disabled.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Restoring">
            <summary>Resuming the previous status of the messaging entity.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.SendDisabled">
            <summary>The sending status of the messaging entity is disabled.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.ReceiveDisabled">
            <summary>The receiving status of the messaging entity is disabled.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Creating">
            <summary>Indicates that the resource is still being created. Any creation attempt on the same resource path will result in a 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> exception (HttpCode.Conflict 409).</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Deleting">
            <summary>Indicates that the system is still attempting cleanup of the entity. Any additional deletion call will be allowed (the system will be notified). Any additional creation call on the same resource path will result in a 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> exception (HttpCode.Conflict 409).</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Renaming">
            <summary>The messaging entity is being renamed.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Unknown">
            <summary>The status of the messaging entity is unknown.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException">
            <summary>Exception for signaling messaging entity disabled errors.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException" /> class.</summary>
            <param name="entityName">The name of the entity responsible for the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException" /> class.</summary>
            <param name="message">The error message about the exception.</param>
            <param name="innerException">The inner exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext,System.Exception)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
            <param name="innerException"> The inner exception. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Constructor. </summary>
            <param name="info">    The information. </param>
            <param name="context"> The context. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail">
            <summary>Provides the details of the messaging exception.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType">
            <summary>Enumerates the types of error level for the messaging communication.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorCode">
            <summary>Gets the error code.</summary>
            <value>The error code.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.Message">
            <summary>Gets the descriptive message about the exception.</summary>
            <value>The descriptive message about the exception.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevel">
            <summary>Gets the error level.</summary>
            <value>One of the values of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType" /> enumeration.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.UnknownDetail(System.String)">
            <summary>Returns the exception details for the unknown detail error.</summary>
            <param name="message">A descriptive message about the exception.</param>
            <returns>The exception details for the unknown detail error.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityGone(System.String)">
            <summary>Returns the exception details for the entity gone error.</summary>
            <param name="message">A descriptive message about the exception.</param>
            <returns>The exception details for the entity gone error.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityNotFound(System.String)">
            <summary>Returns the exception details for the entity not found error.</summary>
            <param name="message">A descriptive message about the exception.</param>
            <returns>The exception details for the entity not found error.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityConflict(System.String)">
            <summary>Returns the exception details for the entity conflict error.</summary>
            <param name="message">A descriptive message about the exception.</param>
            <returns>The exception details for the entity conflict error.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.PublisherRevoked(System.String)">
            <summary>Returns the exception details when an Event Hubs publisher has been revoked.</summary>
            <param name="message">A descriptive message about the exception.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ServerBusy(System.String)">
            <summary>Returns the exception details for the server busy error.</summary>
            <param name="message">A descriptive message about the exception.</param>
            <returns>The exception details for the server busy error.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.StoreLockLost(System.String)">
            <summary>Returns the exception details for the store lock lost error.</summary>
            <param name="message">A descriptive message about the exception.</param>
            <returns>The exception details for the store lock lost error.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.UnspecifiedInternalError(System.String)">
            <summary>Returns the exception details for the unspecified internal error.</summary>
            <param name="message">A descriptive message about the exception.</param>
            <returns>The exception details for the unspecified internal error.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.SqlFiltersExceeded(System.String)">
            <summary>Returns the exception details for the SQL filters exceeded error.</summary>
            <param name="message">A descriptive message about the exception.</param>
            <returns>The exception details for the SQL filters exceeded error.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.CorrelationFiltersExceeded(System.String)">
            <summary>Returns the exception details for the correlation filters exceeded error.</summary>
            <param name="message">A descriptive message about the exception.</param>
            <returns>The exception details for the correlation filters exceeded error.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.SubscriptionsExceeded(System.String)">
            <summary>Returns the exception details for the subscriptions exceeded error.</summary>
            <param name="message">A descriptive message about the exception.</param>
            <returns>The exception details for the subscriptions exceeded error.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EventHubAtFullCapacity(System.String)">
            <summary>Returns the exception details when an Event Hub is at full capacity. </summary>
            <param name="message">A descriptive message about the exception.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityUpdateConflict(System.String)">
            <summary>Returns the exception details for the entity update conflict error.</summary>
            <param name="entityName">The name of the entity.</param>
            <returns>The exception details for the entity update conflict error.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityConflictOperationInProgress(System.String)">
            <summary>Returns the exception details for an entity conflict in progress error. This can occur 
            if there is already a conflicting create or delete call pending on the entity in question.</summary> 
            <param name="entityName">The name of the messaging entity.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.DataCommunicationError(System.String)">
            <summary />
            <param name="entityName" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntityManager.Abort">
            <summary>
            This aborts all entities within the managing collection.
            </summary>
            <remarks>This method create a snapshot of the collection 
            instead of doing in-place aborts.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntityManager.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            This starts a closing of all entities within the collection.
            </summary>
            <remarks>This create a snapshot of the collection before closing 
            rather than doing in-place close of the entities.</remarks>
            <param name="timeout"></param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">
            <summary>The exception that is thrown to signal messaging communication errors.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingCommunicationException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException" /> class.</summary>
            <param name="communicationPath">The communication path.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingCommunicationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException" /> class.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The inner exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingCommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Constructor. </summary>
            <param name="info">    The information. </param>
            <param name="context"> The context. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding">
            <summary>Represents the binding that is used for net messaging.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" /> class.</summary>
            <param name="configurationName">The configuration to use for the initialization.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.TransportSettings">
            <summary>Gets or sets the transport settings for the net messaging.</summary>
            <value>The transport settings for the net messaging.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.MaxBufferPoolSize">
            <summary>Gets or sets the maximum size allowed for a buffer pool that stores TCP messages processed by the binding.</summary>
            <value>The maximum size allowed for a buffer pool that stores TCP messages processed by the binding.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.Scheme">
            <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
            <value>The URI transport scheme for the channels and listeners that are configured with this binding.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.SessionIdleTimeout">
            <summary>Gets or sets the timespan value that specifies period of inactivity that the session waits before timing out.</summary>
            <value>The timespan value that specifies period of inactivity that the session waits before timing out.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.PrefetchCount">
            <summary>Gets or sets the number of messages that the message receiver can fetch in advance.</summary>
            <value>The number of messages that the message receiver can fetch in advance.</value>
            <remarks> Takes effect on the next receive call to the server. </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.CreateBindingElements">
            <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
            <returns>The 
            <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> object which contains the ordered stack of binding elements described by the 
            <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" />. The order of the binding elements starting from the bottom is transport, encoding, and security. </returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.TryCreate(System.ServiceModel.Channels.BindingElementCollection,Microsoft.ServiceBus.Messaging.NetMessagingBinding@)">
            <summary> Try create. </summary>
            <param name="elements"> The elements. </param>
            <param name="binding">  [out] The binding. </param>
            <returns> true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.InitializeFrom(System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement)">
            <summary> Initializes from. </summary>
            <param name="binaryEncoding">      The binary encoding. </param>
            <param name="netMessagingTransport"> The service bus transport. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.IsBindingElementsMatch(System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement)">
            <summary> Query if 'binaryEncoding' is binding elements match. </summary>
            <param name="binaryEncoding">      The binary encoding. </param>
            <param name="netMessagingTransport"> The service bus transport. </param>
            <returns> true if binding elements match, false if not. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.IsTransportMatch(System.ServiceModel.Channels.BindingElement,System.ServiceModel.Channels.BindingElement)">
            <summary> Query if 'a' is transport match. </summary>
            <param name="a"> a. </param>
            <param name="b"> The. </param>
            <returns> true if transport match, false if not. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.IsEncodingMatch(System.ServiceModel.Channels.BindingElement,System.ServiceModel.Channels.BindingElement)">
            <summary> Query if 'a' is encoding match. </summary>
            <param name="a"> a. </param>
            <param name="b"> The. </param>
            <returns> true if encoding match, false if not. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.IsMessageVersionMatch(System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.MessageVersion)">
            <summary> Query if 'a' is message version match. </summary>
            <exception cref="P:Microsoft.ServiceBus.Messaging.FxTrace.Exception"> Thrown when argument null. </exception>
            <exception cref="P:Microsoft.ServiceBus.Messaging.FxTrace.Exception">      Thrown when as error. </exception>
            <param name="a"> a. </param>
            <param name="b"> The. </param>
            <returns> true if message version match, false if not. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.ApplyConfiguration(System.String)">
            <summary> Applies the configuration described by configurationName. </summary>
            <exception cref="P:Microsoft.ServiceBus.Messaging.FxTrace.Exception"> Thrown when as error. </exception>
            <param name="configurationName"> Name of the configuration. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement">
            <summary>Represents the binding element used to specify a net messaging transport for transmitting messages on the Service Bus.</summary>
            <remarks>
            The NetMessagingTransportBindingElement supports creating IOutputChannel, IInputChannel, IInputChannel+ReceiveContext, IInputSessionChannel, and IInputSessionChannel+ReceiveContext. 
             The session-aware channels (IInputSessionChannel, IInputSessionChannel+ReceiveContext) are for session support.
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.#ctor(Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement)">
            <summary>NetMessagingTransportBindingElement copy constructor. </summary>
            <param name="other"> The source class. </param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.PrefetchCount">
            <summary>Gets or sets the number of prefetch.</summary>
            <value>The number of prefetch.</value>
            <remarks> Takes effect on the next receive call to the server </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Scheme">
            <summary>Gets the URI scheme for the transport.</summary>
            <value>The URI scheme for the transport.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.SessionIdleTimeout">
            <summary>Gets or sets the timespan value that specifies period of inactivity that the session waits before timing out.</summary>
            <value>The timespan value. The default value is 1 minute.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.TransportSettings">
            <summary>Gets or sets the transport settings for the net messaging.</summary>
            <value>The transport settings for the net messaging.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary> Builds a channel factory. </summary>
            <typeparam name="TChannel"> Type of the channel. </typeparam>
            <param name="context"> The binding context. </param>
            <returns> The interface implemented by the channel factory. </returns>
            <exception cref="T:System.ArgumentException">Thrown when TChannel isn't a supported channel type </exception>
            <exception cref="T:System.ArgumentNullException"> Thrown when context is null. </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary> Builds a channel listener. </summary>
            <exception cref="T:System.ArgumentNullException"> Thrown when context is null. </exception>
            <typeparam name="TChannel"> Type of the channel. </typeparam>
            <param name="context"> The binding context. </param>
            <returns> A implemented IChannelListener interface. </returns>
            <remarks>
                     Channel listeners and their associated channels are generally used by services that receive
                      communications initiated by clients. Channel factories that implement the IChannelFactory interface, 
                      by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated. </remarks>
            <exception cref="T:System.ArgumentException">Thrown when TChannel isn't a supported channel type </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary> Queries the channel factory can build 'context'. </summary>
            <typeparam name="T"> Type of the channel. </typeparam>
            <param name="context"> The binding context. </param>
            <returns> Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel. </returns>
            <exception cref="T:System.ArgumentNullException"> Thrown when argument null. </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary> Queries if we can build channel listener 'context'. </summary>
            <typeparam name="T"> Generic type parameter. </typeparam>
            <param name="context"> The binding context. </param>
            <returns> Returns a value that indicates whether the binding element can build a channel listener for a specific type of channel. </returns>
            <exception cref="T:System.ArgumentNullException"> Thrown when argument null. </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Clone">
            <summary>Makes a deep copy of this binding element.</summary>
            <returns>A copy of this binding element.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
             <summary> Gets a specific binding element property. </summary>        
             <typeparam name="T"> Generic type parameter. </typeparam>
             <param name="context"> The binding context. </param>
             <returns> The property T </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when argument null. </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
            <summary>
            Exports a custom policy assertion about this binding.
            </summary>
            <param name="exporter">The MetadataExporter that you can use to modify the exporting process.</param>
            <param name="context">The PolicyConversionContext that you can use to insert your custom policy assertion.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.ReceiveContextSettings.#ctor">
            <summary> Default constructor. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.ReceiveContextSettings.Enabled">
            <summary> Gets or sets a value that specifies if receive context is enabled. </summary>
            <value> true if enabled, false if not. </value>
            ### <returns> true if receive context is enabled; otherwise false. </returns>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.ReceiveContextSettings.ValidityDuration">
            <summary> Gets a value that specifies a connection timeout when used with direct channels and
            message lock duration when used with queued channels. </summary>
            <value> The validity duration. </value>
            <returns> A timeout value. </returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings">
            <summary>Represents .NET messaging transport settings.</summary>
            <remarks>
            This class provides Net Messaging Protocol (SBMP) specific configuration support for the NetMessagingBinding.MessagingFactorySettings property.  
            It exposes to configuration the settings available on the MessagingFactorySettings.
            </remarks>
            <example>
            <code>
            // Create settings for the MessagingFactory (for runtime operations)
            MessagingFactorySettings factorySettings = 
            new MessagingFactorySettings()
            {
            NetMessagingTransportSettings = new NetMessagingTransportSettings(),
            Credential = 
            TransportClientCredentialBase.CreateSharedSecretCredential(IssuerName, IssuerKey),
            };
            
            // Create the MessagingFactory
            MessagingFactory factory = MessagingFactory.Create(myServiceBusNamespace, factorySettings);
            
            // Create queue client
            
            </code>         
            </example>
            <seealso cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory"/>
            <seealso cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings"/>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.BatchFlushInterval">
            <summary>Gets or sets the batch flush interval.</summary>
            <value>The batch flush interval.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.EnableRedirect">
            <summary>Gets a value that indicates whether the message redirect is enabled.</summary>
            <value>true if the message redirect is enabled; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.LeaseTimeout">
            <summary>
            Gets or sets the lease timeout value for the LeaseTimeout property within 
            the <seealso cref="P:System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings"/> class.
            Default is 5 minutes.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">throw if value is less than TimeSpan.Zero or larger than Int32.MaxValue milliseconds</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.UseSslStreamSecurity">
            <summary> Gets or sets a value indicating whether this object use ssl stream security. </summary>
            <value> true if use ssl stream security, false if not. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.GatewayMode">
            <summary> Gets or sets a value indicating whether the transport port number is to be preserved and not overridden with gateway port. </summary>
            <value> true if the client is at the gateway, false if not. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.EnablePing">
            <summary> Gets or sets a value indicating whether to enable client to server ping message. </summary>
            <value> true if the ping should be enabled, false if not. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.ClientAuthThumbprint">
            <summary> Gets or sets a value indicating the client authentication thumbprint that the server trusts. </summary>
            <value> set if client auth is enabled. null if not. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.EndpointIdentity">
            <summary>The endpoint identity of the server/servers. Override in case servers are anything other than server name</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.Clone">
            <summary>Makes a deep copy of this object.</summary>
            <returns>A copy of this object.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.AuthenticationModes">
            <summary> Bitfield of flags for specifying AuthenticationModes. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AuthenticationModes.Anonymous">
            <summary> .  </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AuthenticationModes.Windows">
            <summary> .  </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.AuthenticationModes.IssuedToken">
            <summary> .  </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.EntityDescription">
            <summary>Represents the description of an entity.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly">
            <summary>Gets or sets a value that indicates whether the entity description is read-only.</summary>
            <value>true if the entity description is read-only; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData">
            <summary>Gets or sets the structure that contains extra data.</summary>
            <value>An 
            <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> that contains data that is not recognized as belonging to the data contract.</value> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly">
            <summary>Throws an exception if the entity description is read-only.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.EntityNameHelper.SplitSubQueuePath(System.String)">
            <summary>
            Given a path, the method will attempt to return the last 
            sub-queue segment of the path and the path itself. The idea
            is to find "/$" as the indication of the subQueue segment.
            </summary>
            <param name="path"></param>
            <returns>new string[2] array where string[0] is always the path, 
            and string[1] is the subQueueName.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty">
            <summary>Represents the property bag for a <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Name">
            <summary>
            The name used for applying the property bag to a <see cref="T:System.ServiceModel.Channels.Message"/> when sending a message.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Message">
            <summary>Gets the brokered message.</summary>
            <value>The brokered message object.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ContentType">
            <summary>Gets or sets the type of the content.</summary>
            <value>The type of the content of the message body. This is a 
            content type identifier utilized by the sender and receiver for application specific logic.</value> 
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.CorrelationId">
            <summary>Gets or sets the identifier of the correlation.</summary>
            <value>The correlation identifier.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.DeliveryCount">
            <summary>Gets the number of deliveries that have been made to deliver this message.</summary>
            <value>The number of deliveries that have been made to deliver this message.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
            <exception cref="T:System.InvalidOperationException">If the message has not been delivered by ServiceBus.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ExpiresAtUtc">
            <summary>Gets the date and time in UTC at which the message is set to expire.</summary>
            <value>The message expiration time in UTC.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.SessionId">
            <summary>Gets or sets the identifier of the session.</summary>
            <value>The identifier of the session.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Label">
            <summary>Gets or sets the application specific label.</summary>
            <value>The application specific label.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.LockedUntilUtc">
            <summary>Gets the date and time in UTC until which the message will be locked in the queue/subscription.</summary>
            <value>The date and time until which the message will be locked in the queue/subscription.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
            <exception cref="T:System.InvalidOperationException">If the message was not received from the ServiceBus.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.LockToken">
            <summary>Gets the lock token assigned by Service Bus to the message.</summary>
            <value>The lock token assigned by Service Bus to the message.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
            <exception cref="T:System.InvalidOperationException">If the message was not received from the ServiceBus.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.MessageId">
            <summary>Gets or sets the identifier of the message.</summary>
            <value>The message identifier.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
            <exception cref="T:System.ArgumentException">If message identifier is null or exceeds 128 characters in length.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.PartitionKey">
            <summary>Gets or sets a partition key for sending a transactional message to a queue or topic that is not session-aware.</summary>
            <value>Returns <see cref="T:System.String" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ViaPartitionKey">
            <summary>Gets or sets a partition key value when a transaction is to be used to send messages via a transfer queue.</summary>
            <value>Returns <see cref="T:System.String" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Properties">
            <summary>Gets the properties of the brokered message.</summary>
            <value>The properties of the brokered message.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ReplyTo">
            <summary>Gets or sets the address of the queue to reply to.</summary>
            <value>The reply to queue address.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ReplyToSessionId">
            <summary>Gets or sets the session identifier to reply to.</summary>
            <value>The session identifier to reply to.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.EnqueuedTimeUtc">
            <summary>Gets or sets the date and time of the sent time in UTC.</summary>
            <value>The enqueue time in UTC. This value represents the actual time of enqueuing the message.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ScheduledEnqueueTimeUtc">
            <summary>Gets or sets the date and time in UTC at which the message will be enqueued.</summary>
            <value>The scheduled enqueue time in UTC. This value is for delayed message sending. 
            It is utilized to delay messages sending to a specific time in the future.</value> 
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the passed in value is DateTime.MaxValue.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.SequenceNumber">
            <summary>Gets the unique number assigned to a message by the Service Bus.</summary>
            <value>The unique number assigned to a message by the Service Bus.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
            <exception cref="T:System.InvalidOperationException">If the message was not received from the message server.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.TimeToLive">
            <summary>Gets or sets the message’s time to live value. This is the duration after which the message expires, starting from when the message is sent to 
            the Service Bus.Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages.</summary> 
            <value>The message’s time to live value.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the passed in value is less than or equal to TimeSpan.Zero.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.To">
            <summary>Gets or sets the send to address.</summary>
            <value>The address of the destination queue.</value>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ForcePersistence">
            <summary>Gets or sets whether to force persistence on this property.</summary>
            <value>true to force persistence on this property; otherwise, false.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.CorrelationFilter">
            <summary>Represents the correlation filter expression.</summary>
            <remarks>
            The CorrelationFilter provides an efficient shortcut for declarations of filters that deal only with correlation equality. 
            In this case the cost of the lexigraphical analysis of the expression can be avoided.  
            Not only will correlation filters be optimized at declaration time, but they will also be optimized at runtime. 
            Correlation filter matching can be reduced to a hashtable lookup, which aggregates the complexity of the set of defined correlation filters to O(1). 
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> class with default values.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> class with the specified correlation identifier.</summary> 
            <param name="correlationId">The identifier for the correlation.</param>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="correlationId" /> is null or empty.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.CorrelationId">
            <summary>Gets the identifier of the correlation.</summary>
            <value>The identifier of the correlation.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.MessageId">
            <summary>Gets the identifier of the message.</summary>
            <value>The identifier of the message.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.To">
            <summary>Gets the address to send to.</summary>
            <value>The address to send to.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.ReplyTo">
            <summary>Gets the address of the queue to reply to.</summary>
            <value>The address of the queue to reply to.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.Label">
            <summary>Gets the application specific label.</summary>
            <value>The application specific label.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.SessionId">
            <summary>Gets the session identifier.</summary>
            <value>The session identifier.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.ReplyToSessionId">
            <summary>Gets the session identifier to reply to.</summary>
            <value>The session identifier to reply to.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.ContentType">
            <summary>Gets the content type of the message. </summary>
            <value>The content type of the message.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.Properties">
            <summary>Gets the application specific properties of the message.</summary>
            <value>The application specific properties of the message.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.RequiresPreprocessing">
            <summary>Gets a value indicating whether the 
            <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> expression requires preprocessing.</summary> 
            <value>true if the 
            <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> expression requires preprocessing; otherwise, false.</value> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.Validate">
            <summary>Validates the <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> object.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.Preprocess">
            <summary>Gets the preprocessed filter expression.</summary>
            <returns>The preprocessed filter expression.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Indicates whether a message matches against the current SQL expression.</summary>
            <param name="message">The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />.</param>
            <returns>true if a message matches against the current SQL expression; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.ToString">
            <summary>Converts the value of the current instance to its equivalent string representation.</summary>
            <returns>A string representation of the current instance.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.RuleAction">
            <summary>Represents the filter actions which are allowed for the transformation 
            of a message that have been matched by a filter expression.</summary> 
            <remarks>
            Filter actions allow for the transformation of a message that have been matched by a filter expression. 
            The typical use case for filter acions is to append or update the properties that are attached to a message, 
            for example assigning a group ID based on the correlation ID of a message.
            </remarks>
            <seealso cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction"/>
            <seealso cref="T:Microsoft.ServiceBus.Messaging.EmptyRuleAction"/>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RuleAction.RequiresPreprocessing">
            <summary>Gets a value that indicates whether the rule action requires preprocessing.</summary>
            <value>true if the rule action requires preprocessing; otherwise, false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RuleAction.Preprocess">
            <summary>Preprocesses the <see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" /> object.</summary>
            <returns>The preprocessed <see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" /> object.</returns>
            <remarks>Concrete implementation of this class is free to throw InvalidOperationException is this requires preprocessing.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RuleAction.Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Executes the filter action on the supplied BrokeredMessage.</summary>
            <param name="message">Input BrokeredMessage.</param>
            <returns>The modified BrokeredMessage after executing the rule action.</returns>
            <remarks>Concrete implementation of this class is free to throw InvalidOperationException is this requires preprocessing.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RuleAction.Validate">
            <summary>Validates the rule action against the grammar. </summary>
            <remarks>Concrete implementation of this class is free to throw InvalidOperationException is this requires preprocessing.</remarks>
            <seealso cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction"/>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.RuleActionException">
            <summary>The exception that is thrown for signaling filter action errors and is thrown when a filter related operation fails.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RuleActionException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.RuleActionException" /> class with the specified error message.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RuleActionException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.RuleActionException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RuleActionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the RuleActionException with serialized data. </summary>
            <param name="info">The object that holds the serialized object data. </param>
            <param name="context"> The contextual information about the source or destination. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.FilterException">
            <summary>The exception that is thrown for signaling filter action errors.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.FilterException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.FilterException" /> class using the specified message.</summary> 
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.FilterException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.FilterException" /> class using the specified message and inner exception.</summary> 
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.FilterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Constructor. </summary>
            <param name="info">    The information. </param>
            <param name="context"> The context. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Filter">
            <summary>Describes a filter expression that is evaluated against a BrokeredMessage.</summary>
            <remarks>
            Filter is an abstract class with the following concrete implementations: 
            <list type="bullet">
            <item><b>SqlFilter</b> that represents a filter using SQL syntax. </item>
            <item><b>CorrelationFilter</b> that provides an optimization for correlation equality expressions.</item>
            </list>
            </remarks>
            <seealso cref="T:Microsoft.ServiceBus.Messaging.SqlFilter"/>
            <seealso cref="T:Microsoft.ServiceBus.Messaging.TrueFilter"/>
            <seealso cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter"/>
            <seealso cref="T:Microsoft.ServiceBus.Messaging.FalseFilter"/>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Filter.FilterType">
            <summary> Gets the type of the filter expression. </summary>
            <value> The type of the filter expression. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Filter.RequiresPreprocessing">
            <summary>Gets a value indicating whether the filter expression requires preprocessing.</summary>
            <value>true if the filter expression requires preprocessing; otherwise, false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Filter.Preprocess">
            <summary>Preprocesses the filter expression and returns a preprocessed FilterExpression.</summary>
            <returns>The preprocessed FilterExpression.</returns>
            <exception cref="T:System.InvalidOperationException">The operation is invalid with the current state of object.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Filter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Matches the BrokeredMessage against the FilterExpression.</summary>
            <param name="message">The BrokeredMessage object.</param>
            <returns>true if the BrokeredMessage matches the filtering expression; otherwise, false.</returns>
            <exception cref="T:System.InvalidOperationException">The operation is invalid with the current state of object.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.FilterException">Filter evaluation failed.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Filter.Validate">
            <summary>Validates the FilterExpression and make sure it complies with the valid grammar rules.</summary>
            <exception cref="T:Microsoft.ServiceBus.Messaging.FilterException">The filter statement is invalid or is potentially complex 
            enough to consume too much computing power when evaluating the statement.</exception> 
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.TrueFilter">
            <summary>Matches a filter expression.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.TrueFilter" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TrueFilter.RequiresPreprocessing">
            <summary>Gets a value indicating whether the SQL filter expression requires preprocessing.</summary>
            <value>true if the SQL filter expression requires preprocessing; otherwise, false. Currently always returns true.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Matches a message against the current SQL expression.</summary>
            <param name="message">The brokered message.</param>
            <returns>true if it matches; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.Validate">
            <summary>Validates the SQL expression.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.Preprocess">
            <summary>Gets the preprocessed filter expression.</summary>
            <returns>The preprocessed filter expression.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.ToString">
            <summary>Converts the value of the current instance to its equivalent string representation.</summary>
            <returns>A string representation of the current instance.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.FalseFilter">
            <summary>Represents the false filter expression.</summary>
            <remarks>The Match None expression should be used if you want to create
            a subscription that initially block all messages. Typically in this scenario is you may 
            want to create the subscription but want to enable this subscription at a later date. This filter will enable
            that scenario. </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.FalseFilter" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.FalseFilter.RequiresPreprocessing">
            <summary>Gets a value indicating whether the SQL filter expression requires preprocessing.</summary>
            <value>true if the SQL filter expression requires preprocessing; otherwise, false. Currently always returns true.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Matches a message against the current SQL expression.</summary>
            <param name="message">The brokered message.</param>
            <returns>true if it matches; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.Validate">
            <summary>Validates the SQL expression.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.Preprocess">
            <summary>Gets the preprocessed filter expression.</summary>
            <returns>The preprocessed filter expression.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.ToString">
            <summary>Converts the current instance to its string representation.</summary>
            <returns>A string representation of the current instance.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.SqlRuleAction">
            <summary>Represents set of actions written in SQL language-based syntax that is performed against a 
            <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> class with the specified SQL expression.</summary> 
            <param name="sqlExpression">The SQL expression.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> class with the specified SQL expression and compatibility level.</summary> 
            <param name="sqlExpression">The SQL expression.</param>
            <param name="compatibilityLevel">Reserved for future use. An integer value showing compatibility level. Currently hard-coded to 20.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.SqlExpression">
            <summary>Gets the SQL expression.</summary>
            <value>The SQL expression.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.CompatibilityLevel">
            <summary>This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.</summary>
            <value>An integer value showing the compatibility level</value>
            <remarks>This property is reserved for future use.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.Parameters">
            <summary>Sets the value of a rule action.</summary>
            <value>The value of a rule action.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.RequiresPreprocessing">
            <summary>Gets a value indicating whether the <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> requires preprocessing.</summary>
            <value>true if the SQL rule action requires preprocessing; otherwise, false. Currently always returns true.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.Preprocess">
            <summary>Gets the pre-processed <see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" /> expression.</summary>
            <returns>The preprocessed <see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" /> expression.</returns>
            <exception cref="T:Microsoft.ServiceBus.Messaging.RuleActionException">Thrown when the rule action statement 
            is invalid or exceeds maximum allowed number of actions.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Executes the <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> object.</summary>
            <param name="message">The 
            <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> to which the 
            <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> will be applied.</param> 
            <returns>The processed <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is not valid for the current state.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.Validate">
            <summary>Validates the SQL expression against the SQL 92 syntax and rules.</summary>
            <exception cref="T:Microsoft.ServiceBus.Messaging.RuleActionException">Thrown when the rule action statement 
            is invalid or exceeds maximum allowed number of actions.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.ToString">
            <summary>Returns a string representation of <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" />.</summary>
            <returns>The string representation of <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" />.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.SqlFilter">
            <summary>Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.SqlFilter" /> class using the specified SQL expression.</summary> 
            <param name="sqlExpression">The SQL expression.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.SqlExpression">
            <summary>Gets the SQL expression.</summary>
            <value>The SQL expression.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.CompatibilityLevel">
            <summary>This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.</summary>
            <value>The compatibility level.</value>
            <remarks>This property is reserved for future use.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.Parameters">
            <summary>Sets the value of a filter expression.</summary>
            <value>The value of a filter expression.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.RequiresPreprocessing">
            <summary>Gets a value indicating whether the SQL filter expression requires preprocessing.</summary>
            <value>true if the SQL filter expression requires preprocessing; otherwise, false. Currently always returns true.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.Validate">
            <summary>Validates the SQL expression.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.Preprocess">
            <summary>Gets the preprocessed filter expression.</summary>
            <returns>The preprocessed filter expression.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Specifies whether a message matches against the current SQL expression.</summary>
            <param name="message">The BrokeredMessage.</param>
            <returns>truea message matches against the current SQL expression; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.ToString">
            <summary>Returns a string representation of <see cref="T:Microsoft.ServiceBus.Messaging.SqlFilter" />.</summary>
            <returns>The string representation of <see cref="T:Microsoft.ServiceBus.Messaging.SqlFilter" />.</returns>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Constants.MaximumDuplicateDetectionHistoryTimeWindow">
            TODO - Document this - bug # 211769
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Constants.IoTDeviceUriSuffix">
            <summary>
            This string is used by client to match the hostname of the endpoint to see
            if this is a IoT related endpoint, and if so we treat it special
            (mainly to assume client side redirect for these endpoint).
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.IteratorAsyncResult`1.ExceptionPolicy.Transfer">
            <summary>
            ExceptionPolicy.Transfer is used if you want the async result to be completed with
            the exception when the step throws.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.IteratorAsyncResult`1.ExceptionPolicy.Continue">
            <summary>
            ExceptionPolicy.Continue is used if you want to ignore
            the exception and continue next steps. The last exception ignored can be accessed with
            LastAsyncException property.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.ManagementStrings">
            <summary>Provides string constants used in Microsoft Azure Service Bus Messaging.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Namespace">
            <summary>Specifies the value for the Namespace string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Tag">
            <summary>Specifies the value for the Tag string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Action">
            <summary>Specifies the value for the Action string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Filter">
            <summary>Specifies the value for the Filter string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Channels">
            <summary>Specifies the value for the Channels string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Registrations">
            <summary>Specifies the value for the Registrations string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CorrelationFilter">
            <summary>Specifies the value for the CorrelationFilter string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Tags">
            <summary>Specifies the value for the Tags string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PushVariables">
            <summary>Specifies the value for the PushVariables string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DefaultMessageTimeToLive">
            <summary>Specifies the value for the DefaultMessageTimeToLive string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AutoDeleteOnIdle">
            <summary>Specifies the value for the AutoDeleteOnIdle string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DefaultRuleDescription">
            <summary>Specifies the value for the DefaultRuleDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RuleAction">
            <summary>Specifies the value for the RuleAction string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmptyRuleAction">
            <summary>Specifies the value for the EmptyRuleAction string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmptyFilterAction">
            <summary>Specifies the value for the EmptyFilterAction string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubDescription">
            <summary>Specifies the value for the NotificationHubDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubCollection">
            <summary>Specifies the value for the NotificationHubCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.QueueDescription">
            <summary>Specifies the value for the QueueDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.QueueCollection">
            <summary>Specifies the value for the QueueCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AuthorizationRules">
            <summary>Specifies the value for the AuthorizationRules string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AllowRule">
            <summary>Specifies the value for the AllowRule string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SharedAccessAuthorizationRule">
            <summary>Specifies the value for the SharedAccessAuthorizationRule string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.KeyName">
            <summary>Specifies the value for the KeyName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PrimaryKey">
            <summary>Specifies the value for the PrimaryKey string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SecondaryKey">
            <summary>Specifies the value for the SecondaryKey string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsSystemRule">
            <summary>Specifies the value for the IsSystemKey string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IssuerName">
            <summary>Specifies the value for the IssuerName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClaimType">
            <summary>Specifies the value for the ClaimType string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClaimValue">
            <summary>Specifies the value for the ClaimValue string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Rights">
            <summary>Specifies the value for the Rights string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LockDuration">
            <summary>Specifies the value for the LockDuration string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DuplicateDetectionHistoryTimeWindow">
            <summary>Specifies the value for the DuplicateDetectionHistoryTimeWindow string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TrueFilter">
            <summary>Specifies the value for the TrueFilter string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FalseFilter">
            <summary>Specifies the value for the FalseFilter string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxMessageSizeInBytes">
            <summary>Specifies the value for the MaxMessageSizeInBytes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxSizeInMegabytes">
            <summary>Specifies the value for the MaxSizeInMegabytes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxSubscriptionsPerTopic">
            <summary>Specifies the value for the MaxSubscriptionsPerTopic string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxSqlFiltersPerTopic">
            <summary>Specifies the value for the MaxSqlFiltersPerTopic string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxCorrelationFiltersPerTopic">
            <summary>Specifies the value for the MaxCorrelationFiltersPerTopic string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresSession">
            <summary>Specifies the value for the RequiresSession string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RuleCollection">
            <summary>Specifies the value for the RuleCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RuleDescription">
            <summary>Specifies the value for the RuleDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Name">
            <summary>Specifies the value for the Name string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceAlias">
            <summary>Specifies the value for the NamespaceAlias string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsSecondary">
            <summary>Specifies the value for the IsSecondary string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SyncNamespace">
            <summary>Specifies the value for the SyncNamespace string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Tier">
            <summary>Specifies the value for the Tier string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Size">
            <summary>Specifies the value for the Size string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Family">
            <summary>Specifies the value for the Family string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Capacity">
            <summary>Specifies the value for the Capacity string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CursorType">
            <summary>Specifies the value for the CursorType string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageRetentionInDays">
            <summary>Specifies the value for the MessageRetentionInDays string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionCollection">
            <summary>Specifies the value for the SubscriptionCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionDescription">
            <summary>Specifies the value for the SubscriptionDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConsumerGroupCollection">
            <summary>Specifies the value for the ConsumerGroupCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConsumerGroupDescription">
            <summary>Specifies the value for the ConsumerGroupDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableCheckpoint">
            <summary>Specifies the value for the EnableCheckpoint string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PartitionDescription">
            <summary>Specifies the value for the PartitionDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationCollection">
            <summary>Specifies the value for the RegistrationCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmRegistrationDescription">
            <summary>Specifies the value for the GcmRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmTemplateRegistrationDescription">
            <summary>Specifies the value for the GcmTemplateRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduRegistrationDescription">
            <summary>Specifies the value for the BaiduRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduTemplateRegistrationDescription">
            <summary>Specifies the value for the BaiduTemplateRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmailRegistrationDescription">
            <summary>Specifies the value for the EmailRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WindowsRegistrationDescription">
            <summary>Specifies the value for the WindowsRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WindowsTemplateRegistrationDescription">
            <summary>Specifies the value for the WindowsTemplateRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AppleRegistrationDescription">
            <summary>Specifies the value for the AppleRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AppleTemplateRegistrationDescription">
            <summary>Specifies the value for the AppleTemplateRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsRegistrationDescription">
            <summary>Specifies the value for the MpnsRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsTemplateRegistrationDescription">
            <summary>Specifies the value for the MpnsTemplateRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmRegistrationDescription">
            <summary>Specifies the value for the AdmRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmTemplateRegistrationDescription">
            <summary>Specifies the value for the AdmTemplateRegistrationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsCredential">
            <summary>Specifies the value for the PnsCredential string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsCredentials">
            <summary>Specifies the value for the PnsCredentials string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmCredential">
            <summary>Specifies the value for the GcmCredential string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduCredential">
            <summary>Specifies the value for the BaiduCredential string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SmtpCredential">
            <summary>Specifies the value for the SmtpCredential string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WnsCredential">
            <summary>Specifies the value for the WnsCredential string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApnsCredential">
            <summary>Specifies the value for the ApnsCredential string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmCredential">
            <summary>Specifies the value for the AdmCredential string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ResourceTags">
            <summary>Specifies the value for the ResourceTags string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmailAddress">
            <summary>Specifies the value for the EmailAddress string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmRegistrationId">
            <summary>Specifies the value for the GcmRegistrationId string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduUserId">
            <summary>Specifies the value for the BaiduUserId string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduChannelId">
            <summary>Specifies the value for the BaiduChannelId string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsCredential">
            <summary>Specifies the value for the MpnsCredential string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsHeaders">
            <summary>Specifies the value for the MpnsHeaders string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsHeader">
            <summary>Specifies the value for the MpnsHeader string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ChannelUri">
            <summary>Specifies the value for the ChannelUri string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SecondaryTileName">
            <summary>Specifies the value for the SecondaryTileName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmRegistrationId">
            <summary>Specifies the value for the AdmRegistrationId string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeviceToken">
            <summary>Specifies the value for the DeviceToken string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Expiry">
            <summary>Specifies the value for the Expiry string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TemplateName">
            <summary>Specifies the value for the TemplateName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageType">
            <summary>Specifies the value for the MessageType string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SqlRuleAction">
            <summary>Specifies the value for the SqlRuleAction string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SqlFilter">
            <summary>Specifies the value for the SqlFilter string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresDuplicateDetection">
            <summary>Specifies the value for the RequiresDuplicateDetection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TopicCollection">
            <summary>Specifies the value for the TopicCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TopicCount">
            <summary>Specifies the value for the TopicCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.QueueCount">
            <summary>Specifies the value for the QueueCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayCount">
            <summary>Specifies the value for the RelayCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubCount">
            <summary>Specifies the value for the NotificationHubCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubCount">
            <summary>Specifies the value for the EventHubCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TopicDescription">
            <summary>Specifies the value for the TopicDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.VolatileTopicCollection">
            <summary>Specifies the value for the VolatileTopicCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.VolatileTopicDescription">
            <summary>Specifies the value for the VolatileTopicDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubCollection">
            <summary>Specifies the value for the EventHubCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PartitionCollection">
            <summary>Specifies the value for the PartitionCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubDescription">
            <summary>Specifies the value for the EventHubDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ArchiveDescription">
            <summary>Specifies the value for the ArchiveDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IntervalInSeconds">
            <summary>Specifies the value for the IntervalInSeconds string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SizeLimitInBytes">
            <summary>Specifies the value for the SizeLimitInBytes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Destination">
            <summary>Specifies the value for the Destination string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Encoding">
            <summary>Specifies the value for the Encoding string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RevokedPublisherDescription">
            <summary>Specifies the value for the RevokedPublisherDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RevokedPublisherCollection">
            <summary>Specifies the value for the RevokedPublisherCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubPartitionCount">
            <summary>Specifies the value for the EventHubPartitionCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubPartitionIds">
            <summary>Specifies the value for the EventHubPartitionIds string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RevokedPublishersStorageEntityName">
            <summary>Specifies the value for the RevokedPublishersStorageEntityName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BeginSequenceNumber">
            <summary>Specifies the value for the BeginSequenceNumber string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EndSequenceNumber">
            <summary>Specifies the value for the EndSequenceNumber string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LastEnqueuedOffset">
            <summary>Specifies the value for the LastEnqueuedOffset string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LastEnqueuedTimeUtc">
            <summary>Specifies the value for the LastEnqueuedTimeUtc string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LastCheckpoint">
            <summary>Specifies the value for the LastCheckpoint string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IncomingBytesPerSecond">
            <summary>Specifies the value for the IncomingBytesPerSecond string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutgoingBytesPerSecond">
            <summary>Specifies the value for the OutgoingBytesPerSecond string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubPath">
            <summary>Specifies the value for the EventHubPath string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConsumerGroupName">
            <summary>Specifies the value for the ConsumerGroupName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeadLetteringOnMessageExpiration">
            <summary>Specifies the value for the DeadLetteringOnMessageExpiration string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeadLetteringOnFilterEvaluationExceptions">
            <summary>Specifies the value for the DeadLetteringOnFilterEvaluationExceptions string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxDeliveryCount">
            <summary>Specifies the value for the MaxDeliveryCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableBatchedOperations">
            <summary>Specifies the value for the EnableBatchedOperations string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SizeInBytes">
            <summary>Specifies the value for the SizeInBytes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageCount">
            <summary>Specifies the value for the MessageCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FilteringMessagesBeforePublishing">
            <summary>Specifies the value for the FilteringMessagesBeforePublishing string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsAnonymousAccessible">
            <summary>Specifies the value for the IsAnonymousAccessible string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableRuleAction">
            <summary>Specifies the value for the EnableRuleAction string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsExpress">
            <summary>Specifies the value for the IsExpress string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Status">
            <summary>Specifies the value for the Status string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CountDetails">
            <summary>Specifies the value for the CountDetails string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ForwardTo">
            <summary>Specifies the value for the ForwardTo string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ForwardDeadLetteredMessagesTo">
            <summary>Specifies the value for the ForwardDeadLetteredMessagesTo string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AccessedAt">
            <summary>Specifies the value for the AccessedAt string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UpdatedAt">
            <summary>Specifies the value for the UpdatedAt string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CreateACSNamespace">
            <summary>Specifies the value for the CreateACSNamespace string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubEnabled">
            <summary>Specifies the value for the EventHubEnabled string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceTypeName">
            <summary>Specifies the value for the NamespaceTypeName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessagingSkuName">
            <summary>Specifies the value for the MessagingSkuName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessagingSkuPlan">
            <summary>Specifies the value for the MessagingSkuPlan string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ResourceGroupName">
            <summary>Specifies the value for the ResourceGroupName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CreatedAt">
            <summary>Specifies the value for the CreatedAt string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EntityStatus">
            <summary>Specifies the value for the EntityStatus string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EntityAvailabilityStatus">
            <summary>Specifies the value for the EntityAvailabilityStatus string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnablePartitioning">
            <summary>Specifies the value for the EnablePartitioning string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableSubscriptionPartitioning">
            <summary>Specifies the value for the EnableSubscriptionPartitioning string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PartitionCount">
            <summary>Specifies the value for the PartitionCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PartitionRanges">
            <summary>Specifies the value for the PartitionRanges string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageCountDetails">
            <summary>Specifies the value for the MessageCountDetails string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AccessRights">
            <summary>Specifies the value for the AccessRights string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UserMetadata">
            <summary>Specifies the value for the UserMetadata string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsHybridConnection">
            <summary>Specifies the value for the IsHybridConnection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Checkpoint">
            <summary>Specifies the value for the Checkpoint string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SupportOrdering">
            <summary>Specifies the value for the SupportOrdering string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableExpress">
            <summary>Specifies the value for the EnableExpress string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NewPath">
            <summary>Specifies the value for the NewPath string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionCount">
            <summary>Specifies the value for the SubscriptionCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayDescription">
            <summary>Specifies the value for the RelayDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayCollection">
            <summary>Specifies the value for the RelayCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HybridConnectionDescription">
            <summary>Specifies the value for the HybridConnectionDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HybridConnectionCollection">
            <summary>Specifies the value for the HybridConnectionCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Path">
            <summary>Specifies the value for the Path string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ListenerType">
            <summary>Specifies the value for the ListenerType string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ListenerCount">
            <summary>Specifies the value for the ListenerCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayType">
            <summary>Specifies the value for the RelayType string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsDynamic">
            <summary>Specifies the value for the IsDynamic string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresClientAuthorization">
            <summary>Specifies the value for the RequiresClientAuthorization string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresTransportSecurity">
            <summary>Specifies the value for the RequiresTransportSecurity string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PublishToRegistry">
            <summary>Specifies the value for the PublishToRegistry string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Publishers">
            <summary>Specifies the value for the Publishers string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceDescription">
            <summary>Specifies the value for the NamespaceDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceEntityStats">
            <summary>Specifies the value for the NamespaceEntityStats string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageContainerInfo">
            <summary>Specifies the value for the MessageContainerInfo string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SBFarmInfo">
            <summary>Specifies the value for the SBFarmInfo string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceInfo">
            <summary>Specifies the value for the ServiceInfo string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HostStatus">
            <summary>Specifies the value for the HostStatus string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HostId">
            <summary>Specifies the value for the HostId string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HostName">
            <summary>Specifies the value for the HostName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceName">
            <summary>Specifies the value for the ServiceName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Service">
            <summary>Specifies the value for the Service string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceBusFarmStatusInfo">
            <summary>Specifies the value for the ServiceBusFarmStatusInfo string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FarmType">
            <summary>Specifies the value for the FarmType string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SBFarmDBConnectionString">
            <summary>Specifies the value for the SBFarmDBConnectionString string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClusterConnectionEndpointPort">
            <summary>Specifies the value for the ClusterConnectionEndpointPort string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClientConnectionEndpointPort">
            <summary>Specifies the value for the ClientConnectionEndpointPort string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LeaseDriverEndpointPort">
            <summary>Specifies the value for the LeaseDriverEndpointPort string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceConnectionEndpointPort">
            <summary>Specifies the value for the ServiceConnectionEndpointPort string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RunAsAccount">
            <summary>Specifies the value for the RunAsAccount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdminGroup">
            <summary>Specifies the value for the AdminGroup string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GatewayDBConnectionString">
            <summary>Specifies the value for the GatewayDBConnectionString string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HttpsPort">
            <summary>Specifies the value for the HttpsPort string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TcpPort">
            <summary>Specifies the value for the TcpPort string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageBrokerPort">
            <summary>Specifies the value for the MessageBrokerPort string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AmqpsPort">
            <summary>Specifies the value for the AmqpsPort string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AmqpPort">
            <summary>Specifies the value for the AmqpPort string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FarmCertificate">
            <summary>Specifies the value for the FarmCertificate string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EncryptionCertificate">
            <summary>Specifies the value for the EncryptionCertificate string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Hosts">
            <summary>Specifies the value for the Hosts string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CertificateInfo">
            <summary>Specifies the value for the CertificateInfo string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RPHttpsPort">
            <summary>Specifies the value for the RPHttpsPort string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RPHttpsUrl">
            <summary>Specifies the value for the RPHttpsUrl string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FarmDNS">
            <summary>Specifies the value for the FarmDNS string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdminApiUserName">
            <summary>Specifies the value for the AdminApiUserName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TenantApiUserName">
            <summary>Specifies the value for the TenantApiUserName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BrokerExternalUrls">
            <summary>Specifies the value for the BrokerExternalUrls string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Id">
            <summary>Specifies the value for the Id string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Host">
            <summary>Specifies the value for the Host string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DatabaseServer">
            <summary>Specifies the value for the DatabaseServer string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DatabaseName">
            <summary>Specifies the value for the DatabaseName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EntitiesCount">
            <summary>Specifies the value for the EntitiesCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DatabaseSizeInMB">
            <summary>Specifies the value for the DatabaseSizeInMB string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Region">
            <summary>Specifies the value for the Region string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsAcsAvailable">
            <summary>Specifies the value for the IsAcsAvailable string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScaleUnitGatewayEndpoint">
            <summary>Specifies the value for the ScaleUnitGatewayEndpoint string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AcsManagementEndpoint">
            <summary>Specifies the value for the AcsManagementEndpoint string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceBusEndpoint">
            <summary>Specifies the value for the ServiceBusEndpoint string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConnectionString">
            <summary>Specifies the value for the ConnectionString string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SecondaryConnectionString">
            <summary>Specifies the value for the SecondaryConnectionString string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AuthorizationType">
            <summary>Specifies the value for the AuthorizationType string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConnectionDetail">
            <summary>Specifies the value for the ConnectionDetail string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PortalRedirect">
            <summary>Specifies the value for the PortalRedirect string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Address">
            <summary>Specifies the value for the Address string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DefaultKey">
            <summary>Specifies the value for the DefaultKey string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionId">
            <summary>Specifies the value for the SubscriptionId string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScaleUnit">
            <summary>Specifies the value for the ScaleUnit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DataCenter">
            <summary>Specifies the value for the DataCenter string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Enabled">
            <summary>Specifies the value for the Enabled string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Critical">
            <summary>Specifies the value for the Critical string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegionCodeDescription">
            <summary>Specifies the value for the RegionCodeDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConnectionInformationDescription">
            <summary>Specifies the value for the ConnectionInformationDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Code">
            <summary>Specifies the value for the Code string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FullName">
            <summary>Specifies the value for the FullName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScaleUnitKey">
            <summary>Specifies the value for the ScaleUnitKey string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceAvailability">
            <summary>Specifies the value for the NamespaceAvailability string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Result">
            <summary>Specifies the value for the Result string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ReasonDetail">
            <summary>Specifies the value for the ReasonDetail string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UserValidationResult">
            <summary>Specifies the value for the UserValidationResult string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationId">
            <summary>Specifies the value for the RegistrationId string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationTtl">
            <summary>Specifies the value for the RegistrationTtl string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ExpirationTime">
            <summary>Specifies the value for the ExpirationTime string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsCredentialName">
            <summary>Specifies the value for the PnsCredentialName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WnsHeaders">
            <summary>Specifies the value for the WnsHeaders string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BodyTemplate">
            <summary>Specifies the value for the BodyTemplate string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventSourceInfo">
            <summary>Specifies the value for the EventSourceInfo string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventSourceName">
            <summary>Specifies the value for the EventSourceName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventQueueEndpoint">
            <summary>Specifies the value for the EventQueueEndpoint string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventTableEndpoint">
            <summary>Specifies the value for the EventTableEndpoint string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputQueueName">
            <summary>Specifies the value for the EventInputQueueName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputQueueSharedAccessSignature">
            <summary>Specifies the value for the EventInputQueueSharedAccessSignature string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputTableName">
            <summary>Specifies the value for the EventInputTableName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputTableSharedAccessSignature">
            <summary>Specifies the value for the EventInputTableSharedAccessSignature string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventFeedbackQueueName">
            <summary>Specifies the value for the EventFeedbackQueueName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventFeedbackQueueSharedAccessSignature">
            <summary>Specifies the value for the EventFeedbackQueueSharedAccessSignature string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IpFilterAuthorizationRule">
            <summary>Specifies the value for the IpFilterAuthorizationRule string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IpFilterActionType">
            <summary>Specifies the value for the IpFilterActionType string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IpFilterAction">
            <summary>Specifies the value for the IpFilterAction string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IpMaskString">
            <summary>Specifies the value for the IpMaskString string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeviceChallenge">
            <summary>Specifies the value for the DeviceChallenge string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Channel">
            <summary>Specifies the value for the Channel string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WANHRegistrationSecret">
            <summary>Specifies the value for the WANHRegistrationSecret string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WANHExpirationTime">
            <summary>Specifies the value for the WANHExpirationTime string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WANHDeviceChallenge">
            <summary>Specifies the value for the WANHDeviceChallenge string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Data">
            <summary>Specifies the value for the Data string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IssueRegistrationSecretPayload">
            <summary>Specifies the value for the IssueRegistrationSecretPayload string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationSecretPayload">
            <summary>Specifies the value for the RegistrationSecretPayload string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationSecretGcmPayload">
            <summary>Specifies the value for the RegistrationSecretGcmPayload string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ETag">
            <summary>Specifies the value for the ETag string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UpdatePnsHandlePayload">
            <summary>Specifies the value for the UpdatePnsHandlePayload string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NewPnsHandle">
            <summary>Specifies the value for the NewPnsHandle string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OriginalPnsHandle">
            <summary>Specifies the value for the OriginalPnsHandle string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationResult">
            <summary>Specifies the value for the RegistrationResult string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationCounts">
            <summary>Specifies the value for the RegistrationCounts string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AllRegistrationsCount">
            <summary>Specifies the value for the AllRegistrationsCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WindowsRegistrationsCount">
            <summary>Specifies the value for the WindowsRegistrationsCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AppleRegistrationsCount">
            <summary>Specifies the value for the AppleRegistrationsCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmRegistrationsCount">
            <summary>Specifies the value for the GcmRegistrationsCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsRegistrationsCount">
            <summary>Specifies the value for the MpnsRegistrationsCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmRegistrationsCount">
            <summary>Specifies the value for the AdmRegistrationsCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduRegistrationsCount">
            <summary>Specifies the value for the BaiduRegistrationsCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApnsOutcomes">
            <summary>Specifies the value for the ApnsOutcomes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsOutcomes">
            <summary>Specifies the value for the MpnsOutcomes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WnsOutcomes">
            <summary>Specifies the value for the WnsOutcomes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmOutcomes">
            <summary>Specifies the value for the GcmOutcomes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmOutcomes">
            <summary>Specifies the value for the AdmOutcomes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationBody">
            <summary>Specifies the value for the NotificationBody string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduOutcomes">
            <summary>Specifies the value for the BaiduOutcomes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationOutcomeCollection">
            <summary>Specifies the value for the NotificationOutcomeCollection string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationDetails">
            <summary>Specifies the value for the NotificationDetails string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationId">
            <summary>Specifies the value for the NotificationId string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Location">
            <summary>Specifies the value for the Location string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.State">
            <summary>Specifies the value for the State string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnqueueTime">
            <summary>Specifies the value for the EnqueueTime string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.StartTime">
            <summary>Specifies the value for the StartTime string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EndTime">
            <summary>Specifies the value for the EndTime string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TargetPlatforms">
            <summary>Specifies the value for the TargetPlatforms string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Outcomes">
            <summary>Specifies the value for the Outcomes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubJob">
            <summary>Specifies the value for the NotificationHubJob string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubJobId">
            <summary>Specifies the value for the NotificationHubJobId string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Progress">
            <summary>Specifies the value for the Progress string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.JobType">
            <summary>Specifies the value for the JobType string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutputContainerUri">
            <summary>Specifies the value for the OutputContainerUri string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ImportFileUri">
            <summary>Specifies the value for the ImportFileUri string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.InputProperties">
            <summary>Specifies the value for the InputProperties string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutputProperties">
            <summary>Specifies the value for the OutputProperties string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApplicationPlatform">
            <summary>Specifies the value for the ApplicationPlatform string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsHandle">
            <summary>Specifies the value for the PnsHandle string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Outcome">
            <summary>Specifies the value for the Outcome string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationOutcome">
            <summary>Specifies the value for the NotificationOutcome string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Success">
            <summary>Specifies the value for the Success string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Failure">
            <summary>Specifies the value for the Failure string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Results">
            <summary>Specifies the value for the Results string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationIds">
            <summary>Specifies the value for the RegistrationIds string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IfMatch">
            <summary>Specifies the value for the IfMatch string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationBoundVariable">
            <summary>Specifies the value for the RegistrationBoundVariable string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotification">
            <summary>Specifies the value for the ScheduledNotification string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationPayload">
            <summary>Specifies the value for the ScheduledNotificationPayload string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationId">
            <summary>Specifies the value for the ScheduledNotificationId string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationTime">
            <summary>Specifies the value for the ScheduledNotificationTime string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationTags">
            <summary>Specifies the value for the ScheduledNotificationTags string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TrackingId">
            <summary>Specifies the value for the TrackingId string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CancelScheduledNotification">
            <summary>Specifies the value for the CancelScheduledNotification string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AtomEntryContentType">
            <summary>Specifies the value for the AtomEntryContentType string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TextContentType">
            <summary>Specifies the value for the TextContentType string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeleteMethod">
            <summary>Specifies the value for the DeleteMethod string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GetMethod">
            <summary>Specifies the value for the GetMethod string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PostMethod">
            <summary>Specifies the value for the PostMethod string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PutMethod">
            <summary>Specifies the value for the PutMethod string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PatchMethod">
            <summary>Specifies the value for the PatchMethod string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ManagementSuffix">
            <summary>Specifies the value for the ManagementSuffix string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnumerationResourceName">
            <summary>Specifies the value for the EnumerationResourceName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.XProcessAtHttpHeader">
            <summary>Specifies the value for the XProcessAtHttpHeader string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GetVersionInfo">
            <summary>Specifies the value for the GetVersionInfo string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GetVersionInfoHeaderName">
            <summary>Specifies the value for the GetVersionInfoHeaderName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.XProcessAtHttpHeaderAttributeValue">
            <summary>Specifies the value for the XProcessAtHttpHeaderAttributeValue string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApiVersionName">
            <summary>Specifies the value for the ApiVersionName string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApiVersion">
            <summary>Specifies the value for the ApiVersion string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SKU">
            <summary>Specifies the value for the SKU string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BillingTier">
            <summary>Specifies the value for the BillingTier string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubBillingTier">
            <summary>Specifies the value for the NotificationHubBillingTier string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubBillingPlan">
            <summary>Specifies the value for the NotificationHubBillingPlan string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubBillingUsage">
            <summary>Specifies the value for the NotificationHubBillingUsage string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedMulticastTagsPerNamespace">
            <summary>Specifies the value for the MaxAllowedMulticastTagsPerNamespace string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedMonthlyPushes">
            <summary>Specifies the value for the MaxAllowedMonthlyPushes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedDevicesPerNamespace">
            <summary>Specifies the value for the MaxAllowedDevicesPerNamespace string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MonthlyPushes">
            <summary>Specifies the value for the MonthlyPushes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedUnits">
            <summary>Specifies the value for the MaxAllowedUnits string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MinAllowedUnits">
            <summary>Specifies the value for the MinAllowedUnits string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedOperationsPerDayPerUnit">
            <summary>Specifies the value for the MaxAllowedOperationsPerDayPerUnit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedRegistrationsPerUnit">
            <summary>Specifies the value for the MaxAllowedRegistrationsPerUnit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedDevicesPerUnit">
            <summary>Specifies the value for the MaxAllowedDevicesPerUnit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubSKU">
            <summary>Specifies the value for the NotificationHubSKU string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubPlan">
            <summary>Specifies the value for the NotificationHubPlan string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BillingVersion">
            <summary>Specifies the value for the BillingVersion string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LastBillingChange">
            <summary>Specifies the value for the LastBillingChange string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubPnsCredentials">
            <summary>Specifies the value for the NotificationHubPnsCredentials string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyMaxActiveRegistrations">
            <summary>Specifies the value for the DailyMaxActiveRegistrations string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyMaxActiveDevices">
            <summary>Specifies the value for the DailyMaxActiveDevices string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedPushesPerDayPerUnit">
            <summary>Specifies the value for the MaxAllowedPushesPerDayPerUnit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedApiCallsPerDayPerUnit">
            <summary>Specifies the value for the MaxAllowedApiCallsPerDayPerUnit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyOperations">
            <summary>Specifies the value for the DailyOperations string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyPushes">
            <summary>Specifies the value for the DailyPushes string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyApiCalls">
            <summary>Specifies the value for the DailyApiCalls string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SelectedSKUMinUnits">
            <summary>Specifies the value for the SelectedSKUMinUnits string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SelectedSKUMaxUnits">
            <summary>Specifies the value for the SelectedSKUMaxUnits string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CurrentSKUUnits">
            <summary>Specifies the value for the CurrentSKUUnits string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CurrentAbsoluteSKUUnits">
            <summary>Specifies the value for the CurrentAbsoluteSKUUnits string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceMessagingPlan">
            <summary>Specifies the value for the NamespaceMessagingPlan string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsPremium">
            <summary>Specifies the value for the IsPremium string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CurrentDatabaseCount">
            <summary>Specifies the value for the CurrentDatabaseCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DesiredDatabaseCount">
            <summary>Specifies the value for the DesiredDatabaseCount string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceSKU">
            <summary>Specifies the value for the NamespaceSKU string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SKUDescription">
            <summary>Specifies the value for the SKUDescription string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceSKUPlan">
            <summary>Specifies the value for the NamespaceSKUPlan string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SelectedEventHubUnit">
            <summary>Specifies the value for the SelectedEventHubUnit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessagingUnits">
            <summary>Specifies the value for the MessagingUnits string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsAutoInflateEnabled">
            <summary>Specifies the value for the IsAutoInflateEnabled string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaximumThroughputUnits">
            <summary>Specifies the value for the MaximumThroughputUnit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AllowedMessagingUnits">
            <summary>Specifies the value for the AllowedMessagingUnits string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ARMSKU">
            <summary>Specifies the value for the ARMSKU string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MinAllowedEventHubUnit">
            <summary>Specifies the value for the MinAllowedEventHubUnit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedEventHubUnit">
            <summary>Specifies the value for the MaxAllowedEventHubUnit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UsageCredit">
            <summary>Specifies the value for the UsageCredit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Identifier">
            <summary>Specifies the value for the Identifier string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequestorService">
            <summary>Specifies the value for the RequestorService string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NHBasicUnit">
            <summary>Specifies the value for the NHBasicUnit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NHStandardUnit">
            <summary>Specifies the value for the NHStandardUnit string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Revision">
            <summary>Specifies the value for the Revision string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutputFilePath">
            <summary>Specifies the value for the OutputFilePath string.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FailedFilePath">
            <summary>Specifies the value for the FailedFilePath string.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException">
            <summary>Represents the exception that is thrown for signaling message store lock lost errors.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException" /> class with a specified error message.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext,System.Exception)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
            <param name="innerException"> The inner exception. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Constructor. </summary>
            <param name="info">    The information. </param>
            <param name="context"> The context. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">
            <summary>Represents the exception that is thrown for signaling messaging entity already exists errors.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException" /> class with the name of the entity.</summary> 
            <param name="entityName">The name of the entity.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.#ctor(System.String,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Constructor. </summary>
            <param name="entityName"> Name of the entity. </param>
            <param name="trackingContext"> The TrackingContext. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.#ctor(System.String,Microsoft.ServiceBus.Tracing.TrackingContext,System.Exception)">
            <summary> Constructor. </summary>
            <param name="message">        The message. </param>
            <param name="trackingContext"> the tracking context</param>
            <param name="innerException"> The inner exception. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Populates the serialization information with data about the exception.</summary>
            <param name="info">The serialized object data about the exception being thrown.</param>
            <param name="context">The contextual information about the source or destinations.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">
            <summary>The exception that is thrown for signaling messaging entity not found errors.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> class with the entity name.</summary> 
            <param name="entityName">The name of the entity.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext,System.Exception)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
            <param name="innerException"> The inner exception. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Constructor. </summary>
            <param name="info">    The information. </param>
            <param name="context"> The context. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.ToString">
            <summary>Returns a string representation of the current exception.</summary>
            <returns>A string representation of the current exception.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.ServerBusyException">
            <summary>Represents the exception that is thrown when a server is overloaded with logical operations.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ServerBusyException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException" /> class with a specified error message.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ServerBusyException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException" /> class with a specified error message and a reference to the inner exception.</summary> 
            <param name="message">The error message that describes the cause of the exception.</param>
            <param name="innerException">The inner exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ServerBusyException.#ctor(System.String,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Constructor. </summary>
            <param name="message"></param>
            <param name="trackingContext">The TrackingContext.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ServerBusyException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ServerBusyException.#ctor(System.String,Microsoft.ServiceBus.Tracing.TrackingContext,System.Exception)">
            <summary> Constructor. </summary>
            <param name="message"></param>
            <param name="trackingContext"> The TrackingContext. </param>
            <param name="innerException"> The inner exception. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">
            <summary>The exception that is thrown to signal session lock lost errors.In the case of partitioned messaging entities, partitions sometimes move to achieve load balancing across Service Bus nodes; for example, when a node restarts or new nodes are added to share the load. When that happens, session locks can be lost, but messages are never lost. If a partition moves after the session is locked, then the acknowledge/complete message processing call fails, because the lock is lost. However, the message remains and you can try to read it again. Thus, you may receive a 
            <see cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException" /> exception even though the message itself is not lost. In this case, you can retry the message processing operation.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SessionLockLostException.#ctor(System.String)">
            <summary>Initializes a new instance of the SessionLockLostException class with a specified error message.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SessionLockLostException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the SessionLockLostException class  with a specified error 
            message and a reference to the inner exception that is the cause of this exception.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SessionLockLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Constructor. </summary>
            <param name="info">    The information. </param>
            <param name="context"> The context. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">
            <summary>The exception that is thrown to signal message lock lost errors.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageLockLostException.#ctor(System.String)">
            <summary>Initializes a new instance of the MessageLockLostException class with a specified error message.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageLockLostException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the MessageLockLostException class with a specified error message 
            and a reference to the inner exception that is the cause of this exception.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageLockLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> MessageLockLost Constructor. </summary>
            <param name="info">    The serialization information object of for the streaming context. </param>
            <param name="context"> The stream context providing exception details. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessageNotFoundException">
            <summary>The exception that is thrown to signal message not found errors.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageNotFoundException" /> class with a specified error message.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> MessageNotFoundException Constructor. </summary>
            <param name="info">     Holds all the data needed to serialize or deserialize an object. </param>
            <param name="context">  The stream context providing exception details. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings">
            <summary>Represents the messaging factory settings.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.#ctor(Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> class with the specified messaging factory settings for cloning.</summary> 
            <param name="other">The specified messaging factory settings.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.EnableAdditionalClientTimeout">
            <summary>Gets or sets a value that indicates whether the messaging operation enables additional client timeout.</summary>
            <value>true if the messaging operation enables additional client timeout; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout">
            <summary>Gets or sets the 
            <see cref="T:System.TimeSpan" /> that specifies how long the messaging operation has to complete before timing out.</summary> 
            <value>The 
            <see cref="T:System.TimeSpan" /> that specifies how long the messaging operation has to complete before timing out. The default value is one minute.</value> 
            <exception cref="T:System.ArgumentNullException">A null is set; for example, a nullable <see cref="T:System.TimeSpan" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">A zero or negative <see cref="T:System.TimeSpan" /> is set.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.TransportType">
            <summary>Gets or sets the messaging transport type.</summary>
            <value>The messaging transport type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.NetMessagingTransportSettings">
            <summary>Gets or sets the transport settings required for the net messaging.</summary>
            <value>The transport settings required for the net messaging.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.AmqpTransportSettings">
            <summary>Gets or set the transport settings for the Advanced Message Queuing Protocol (AMQP).</summary>
            <value>The transport settings for the Advanced Message Queuing Protocol (AMQP).</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.DisableEntityLevelPerformanceCounters">
            <summary>
            Gets or sets a value to indicate if entity level perf counters should
            be collected in memory. Note that this only affect entity level counters,
            and namespace level counters are always collected.
            </summary>
            <remarks>By default this is set to false - meaning by default we do collect
            entity level perf counters. Setting this value will not affect existing collected
            counters, and will only stop counters from new entity being collected.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.TokenProvider">
            <summary>Gets or sets the token provider of the factory settings.</summary>
            <value>The token provider of the factory settings.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.Clone">
            <summary>Creates a copy of <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />.</summary>
            <returns>A created copy of <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OnBeginCreateFactory(System.Uri,System.AsyncCallback,System.Object)">
            <summary>Executes the asynchronous begin create factory action.</summary>
            <param name="uri">The uniform resource identifier.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to create factory.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OnBeginCreateFactory(System.Collections.Generic.IEnumerable{System.Uri},System.AsyncCallback,System.Object)">
            <summary>Executes the asynchronous begin create factory action.</summary>
            <param name="uriAddresses">The collection of uniform resource identifiers.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to create factory.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OnEndCreateFactory(System.IAsyncResult)">
            <summary>Ends an asynchronous request to create factory.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to create factory.</param>
            <returns>The newly created messaging factory.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException">
            <summary>Represents the exception that is thrown for signaling partition not owned errors.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException" /> class with a specified error message.</summary> 
            <param name="message">The error message that describes the cause of the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException" /> class with a specified error message and a reference to the inner exception.</summary> 
            <param name="message">The error message that describes the cause of the exception.</param>
            <param name="innerException">The inner exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Constructor. </summary>
            <param name="info">    The information. </param>
            <param name="context"> The context. </param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.QueueClient">
            <summary>Represents the queue client object.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.Mode">
            <summary>Gets the message receive mode when processing the received message.</summary>
            <value>The message <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> when processing the received message.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.PrefetchCount">
            <summary>Gets or sets the number of messages that the queue receiver can simultaneously request.</summary>
            <value>The number of messages that the queue receiver can simultaneously request.</value>
            <remarks> Takes effect on the next receive call to the server. </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.Path">
            <summary>Gets or sets the full path name of the queue.</summary>
            <value>The queue path relative to the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> base address.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.MessagingFactory">
            <summary>Gets or sets the messaging factory.</summary>
            <value>The messaging factory.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender">
            <summary>
            The internal sender that the client will use for IMessageSender operations.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver">
            <summary>
            The internal receiver that the client will use for IMessageReceiver operations.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalBrowser">
            <summary>
            The internal browser that the client will use for IMessageBrowser operations.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.IsSubQueue">
            <summary>
            The internal bool indicating if it is a sub queue or not.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Create(System.String)">
            <summary>Creates a new copy of <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> with specified path.</summary>
            <param name="path">The path.</param>
            <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />.</returns>
            <remarks>This method will attempt to retrieve the connection string information
            from either app.config, or web.config files. User must supply the connection 
            string using the "AppSettings" section of the configuration. The format of the section
            is as follows:
            
            <code>
                <appSettings>
                    <!-- Service Bus specific app setings for messaging connections -->
                    <add key="Microsoft.ServiceBus.ConnectionString" 
                         value="Endpoint=sb://[your namespace].servicebus.windows.net;SharedSecretIssuer=owner;SharedSecretValue=[your secret]" />
                </appSettings>
            </code>
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateFromConnectionString(System.String,System.String)">
            <summary>Creates a new copy of 
            <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> from a connection string with the specified queue path. Use this overload only when the connection string does not use the 
            <see cref="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.EntityPath" /> property.</summary> 
            <param name="connectionString">The connection string used.</param>
            <param name="path">The path to the queue.</param>
            <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the format of the <paramref name="connectionString" /> parameter is incorrect.</exception>
            <remarks>This method should only be used with a connection string that has namespace level authentication because 
            the connection string supplied should not have entity level information associated with it.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateFromConnectionString(System.String)">
            <summary>Creates a new instance of <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> using the specified connection string.</summary>
            <param name="connectionString">The connection string to use.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> instance.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the format of the <paramref name="connectionString" /> parameter is incorrect.</exception>
            <remarks>This method expects the connection string supplied has entity level information such as the entity path and 
            authentication information supplied.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Create(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary>Creates a new copy of <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> with specified path and mode.</summary>
            <param name="path">The path.</param>
            <param name="mode">The mode.</param>
            <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />.</returns>
            <remarks>This method will attempt to retrieve the connection string information
            from either app.config, or web.config files. User must supply the connection 
            string using the "AppSettings" section of the configuration. The format of the section
            is as follows:
            
            <code>
                <appSettings>
                    <!-- Service Bus specific app setings for messaging connections -->
                    <add key="Microsoft.ServiceBus.ConnectionString" 
                         value="Endpoint=sb://[your namespace].servicebus.windows.net;SharedSecretIssuer=owner;SharedSecretValue=[your secret]" />
                </appSettings>
            </code>
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateFromConnectionString(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary>Creates a new instance of 
            <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> from a connection string with the specified path and mode. Use this overload only when the connection string does not use the 
            <see cref="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.EntityPath" /> property.</summary> 
            <param name="connectionString">The connection string.</param>
            <param name="path">The path to the queue.</param>
            <param name="mode">The <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />.</param>
            <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the format of the <paramref name="connectionString" /> parameter is incorrect.</exception>
            <remarks>This method should only be used with a connection string that has namespace level authentication because 
            the connection string supplied should not have entity level information associated with it.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateFromConnectionString(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary>Creates a new instance of 
            <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> using the specified connection string and receiving mode.</summary> 
            <param name="connectionString">The connection string to use.</param>
            <param name="mode">The <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> instance.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the format of the <paramref name="connectionString" /> parameter is incorrect.</exception>
            <remarks>This method expects the connection string supplied has entity level information such as the entity path and 
            authentication information supplied.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.FormatDeadLetterPath(System.String)">
            <summary>Builds a format name from the specified dead letter queue path.</summary>
            <param name="queuePath">The path to the dead letter queue.</param>
            <returns>The <see cref="T:System.String" /> resulted from building the format name for the specified dead letter queue path.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.FormatTransferDeadLetterPath(System.String)">
            <summary />
            <param name="queuePath" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RenewMessageLock(System.Guid)">
            <summary />
            <param name="lockToken" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RenewMessageLockAsync(System.Guid)">
            <summary />
            <param name="lockToken" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandler(System.Type)">
            <summary>Registers the session handler with specific type.</summary>
            <param name="handlerType">The handler type.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandler(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Registers the session handler with specific type and handler options.</summary>
            <param name="handlerType">The handler type.</param>
            <param name="options">The session handler options.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerAsync(System.Type)">
            <summary>Asynchronously registers the session handler with specific type.</summary>
            <param name="handlerType">The handler type.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerAsync(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Asynchronously registers the session handler with specific type and handler options.</summary>
            <param name="handlerType">The handler type.</param>
            <param name="options">The session handler options.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Registers a message session handler factory with specified options.</summary>
            <param name="factory">The handler factory to be registered.</param>
            <param name="options">The handler options.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Registers a message session handler factory with specified options.</summary>
            <param name="factory">The handler factory to be registered.</param>
            <param name="options">The handler options.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Asynchronously registers a message session handler factory.</summary>
            <param name="factory">The handler factory to be registered.</param>
            <param name="options">The handler options.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Asynchronously registers a message session handler factory.</summary>
            <param name="factory">The handler factory to be registered.</param>
            <param name="options">The handler options.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>Processes a message in an event-driven message pump.</summary>
            <param name="callback">The method to invoke when the operation is complete.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
            <summary>Processes a message in an event-driven message pump, with the given set of 
            <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> options.</summary> 
            <param name="callback">The method to invoke when the operation is complete.</param>
            <param name="onMessageOptions">Specifies the 
            <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> options with which to instantiate the message pump.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task})">
            <summary>Asynchronously processes a message.</summary>
            <param name="callback">The method to invoke when the operation is complete.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
            <summary>Asynchronously processes a message.</summary>
            <param name="callback">The method to invoke when the operation is complete.</param>
            <param name="onMessageOptions">Calls a message option.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.String,System.Boolean)">
            <summary>
            Accepts a message session that allows grouping of related messages 
            for processing in a single transaction with whether in exclusive mode.
            </summary>
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="isExclusiveMode">Ture if exclusive mode, or false is not.</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.String,System.Guid)">
            <summary>
            Accepts a message non-exclusive locked session that allows grouping of related messages 
            for processing in a single transaction using the given session identifier and session lock token.
            </summary>
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="lockToken">The session lock token.</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.String,System.Boolean)">
            <summary>
            Accepts a message session that allows grouping of related messages 
            for processing in a single transaction using the given session identifier with whether in exclusive mode.
            </summary> 
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="isExclusiveMode">Ture if exclusive mode, or false is not.</param>
            <returns>The result of an asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.String,System.Guid)">
            <summary>
            Accepts a message non-exclusive locked session that allows grouping of related messages 
            for processing in a single transaction using the given session identifier and session lock token.
            </summary>
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="lockToken">The session lock token.</param>
            <returns>The result of an asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.String,System.Boolean,System.TimeSpan)">
            <summary>
            Accepts a message session that allows grouping of related messages 
            for processing in a single transaction using the given session identifier with whether in exclusive mode.
            </summary>
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="isExclusiveMode">Ture if exclusive mode, or false is not.</param>
            <param name="serverWaitTime">The server wait timeout</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.String,System.Guid,System.TimeSpan)">
            <summary>
            Accepts a message non-exclusive locked session that allows grouping of related messages 
            for processing in a single transaction using the given session identifier and session lock token.
            </summary>
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="lockToken">The session locktoken</param>
            <param name="serverWaitTime">The server wait timeout</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.String,System.Boolean,System.TimeSpan)">
            <summary>
            Accepts a message session that allows grouping of related messages 
            for processing in a single transaction using the given session identifier with whether in exclusive mode.
            </summary>
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="isExclusiveMode">Ture if exclusive mode, or false is not.</param>
            <param name="serverWaitTime">The server wait timeout</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.String,System.Guid,System.TimeSpan)">
            <summary>
            Accepts a message non-exclusive locked session that allows grouping of related messages 
            for processing in a single transaction using the given session identifier and session lock token.
            </summary>
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="lockToken">The session locktoken</param>
            <param name="serverWaitTime">The server wait timeout</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.Boolean)">
            <summary>
            Accepts a message session that allows grouping of related messages 
            for processing in a single transaction ith whether in exclusive mode.
            </summary>
            <param name="isExclusiveMode">Ture if exclusive mode, or false is not.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.Boolean,System.TimeSpan)">
            <summary>
            Accepts a message session that allows grouping of related messages 
            for processing in a single transaction ith whether in exclusive mode.
            </summary>
            <param name="isExclusiveMode">Ture if exclusive mode, or false is not.</param>
            <param name="serverWaitTime">The server wait timeout</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.Boolean)">
            <summary>Asynchronously accepts a message session that allows grouping of related messages for 
            processing in a single transaction with whether in exclusive mode and wait time.</summary> 
            <param name="isExclusiveMode">Ture if exclusive mode, or false is not.</param>
            <returns>The result of an asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.Boolean,System.TimeSpan)">
            <summary>Asynchronously accepts a message session that allows grouping of related messages for 
            processing in a single transaction with whether in exclusive mode and wait time.</summary> 
            <param name="isExclusiveMode">Ture if exclusive mode, or false is not.</param>
            <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
            <returns>The result of an asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession">
            <summary>Accepts a message session that allows grouping of related messages for processing in a single transaction.</summary>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.String)">
            <summary>Accepts a message session that allows grouping of related messages 
            for processing in a single transaction using the given session identifier.</summary> 
            <param name="sessionId">The session identifier of the message session.</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
            <exception cref="T:System.ArgumentException">Thrown if sessionId is null, empty, or white spaces.</exception>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.TimeSpan)">
            <summary>Accepts a message session that allows grouping of related messages 
            for processing in a single transaction using the specified server wait time.</summary> 
            <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="serverWaitTime" /> is not a positive TimeSpan value.</exception>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded 
            the timeout value set by <paramref name="serverWaitTime" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.String,System.TimeSpan)">
            <summary>Accepts a message session that allows grouping of related messages for 
            processing in a single transaction using the given session identifier and wait time.</summary> 
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
            <exception cref="T:System.ArgumentException">Thrown if sessionId is null, empty, or white spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="serverWaitTime" /> is not a positive TimeSpan value.</exception>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync">
            <summary>Asynchronously accepts a message session that allows grouping of related messages for processing in a single transaction.</summary>
            <returns>The result of an asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.String)">
            <summary>Asynchronously accepts a message session that allows grouping of related 
            messages for processing in a single transaction using the given session identifier.</summary> 
            <param name="sessionId">The session identifier of the message session.</param>
            <returns>The result of an asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.TimeSpan)">
            <summary>Asynchronously accepts a message session that allows grouping of related messages 
            for processing in a single transaction using the specified server wait time.</summary> 
            <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
            <returns>The result of an asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.String,System.TimeSpan)">
            <summary>Asynchronously accepts a message session that allows grouping of related messages for 
            processing in a single transaction using the given session identifier and wait time.</summary> 
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
            <returns>The result of an asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndAcceptMessageSession(System.IAsyncResult)">
            <summary> Ends a pending asynchronous accept session receiver. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that stores state information and any user defined data for this asynchronous operation. </param>
            <returns> Session Receiver object </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessions">
            <summary>Gets the message sessions, enabling you to browse sessions on queues.</summary>
            <returns>The message session.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessions(System.DateTime)">
            <summary>Retrieves all message sessions whose session state was updated since <paramref name="lastUpdatedTime" />.</summary>
            <param name="lastUpdatedTime">The time the session was last updated.</param>
            <returns>The message sessions.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessionsAsync">
            <summary>Asynchronously gets the message sessions, enabling you to browse sessions on queues.</summary>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessionsAsync(System.DateTime)">
            <summary>Asynchronously retrieves all message sessions whose session state was updated since <paramref name="lastUpdatedTime" />.</summary>
            <param name="lastUpdatedTime">The time the session was last updated.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateSender(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin create sender action.</summary>
            <param name="timeout">The maximum time before this operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the 
            <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateSender(System.IAsyncResult)" /> delegate when the operation is complete.</param> 
            <returns>An 
            <see cref="T:System.IAsyncResult" /> object that references the asynchronous parent method</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndCreateSender(System.IAsyncResult)">
            <summary>Executes the end create sender action.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> object that references the asynchronous parent method.</param> 
            <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateReceiver(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin create receiver action.</summary>
            <param name="receiveMode">The message <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> receive mode.</param>
            <param name="timeout">The maximum time before this operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the 
            <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateReceiver(System.IAsyncResult)" /> delegate when the operation is complete.</param> 
            <returns>An 
            <see cref="T:System.IAsyncResult" /> object that references the asynchronous parent method.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin create receiver action.</summary>
            <param name="subQueueName">Name of the sub-queue.</param>
            <param name="receiveMode">The message <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> receive mode.</param>
            <param name="timeout">The maximum time before this operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the 
            <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateReceiver(System.IAsyncResult)" /> delegate when the operation is complete.</param> 
            <returns>An 
            <see cref="T:System.IAsyncResult" /> object that references the asynchronous parent method.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndCreateReceiver(System.IAsyncResult)">
            <summary>Executes the end create receiver action.</summary>
            <param name="result">The result of the asynchronous 
            <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateReceiver(System.IAsyncResult)" /> operation.</param> 
            <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateBrowser(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin create browser action. </summary>        
            <param name="timeout">     The maximum time before this operation times out. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the peek operation. This object is passed to 
                                the EndCreateBrowser delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous CreateBrowser. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndCreateBrowser(System.IAsyncResult)">
            <summary> Executes the end create browser action. </summary>
            <param name="result"> The result of the asynchronous EndCreateBrowser operation. </param>
            <returns> Message browser object</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginAcceptMessageSession(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.Int32,System.Boolean,System.Nullable{System.Guid},System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary />
            <param name="sessionId" />
            <param name="receiveMode" />
            <param name="prefetchCount" />
            <param name="isExclusiveMode" />
            <param name="lockToken" />
            <param name="serverWaitTime" />
            <param name="timeout" />
            <param name="callback" />
            <param name="state" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndAcceptMessageSession(System.IAsyncResult)">
            <summary>Executes upon calling the EndAcceptMessageSession operation.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous accept message session operation.</param> 
            <returns>The 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
            <summary>Executes the BeginGetMessageSessions action.</summary>
            <param name="lastUpdatedTime">The date and time of the last update.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the message sessions.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndGetMessageSessions(System.IAsyncResult)">
            <summary>Executes the end get message action.</summary>
            <param name="result">The result of the session.</param>
            <returns> The 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnAbort">
            <summary>Executes upon calling the Abort event.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnClose(System.TimeSpan)">
            <summary>Executes upon calling the Close action.</summary>
            <param name="timeout">The maximum time before the close operation times out.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes when the Close operation is called.</summary>
            <param name="timeout">The maximum time before the close operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. 
            This object is passed to the EndClose delegate when the operation is complete.</param> 
            <returns>An 
            <see cref="T:System.IAsyncResult" /> object that references the asynchronous parent method.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndClose(System.IAsyncResult)">
            <summary>Executes the end close action.</summary>
            <param name="result">The result of the asynchronous parent method.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Abandon(System.Guid)">
            <summary>Discards the message and relinquishes the message lock ownership.</summary>
            <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <remarks>When the client fails to get the message from the queue/topic, this method should be called. 
                     The Service Bus will increment the delivery count of the message. 
                     The client now can either attempt to receive the message again or move it to the dead-letter queue.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Abandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Discards the message and relinquishes the message lock ownership.</summary>
            <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
            <param name="propertiesToModify">The properties of the message to modify.</param>
            <remarks>When the client fails to get the message from the queue/topic, this method should be called. 
                     The Service Bus will increment the delivery count of the message. 
                     The client now can either attempt to receive the message again or move it to the dead-letter queue.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AbandonAsync(System.Guid)">
            <summary>Asynchronously discards the message and relinquishes the message lock ownership.</summary>
            <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
            <returns>The discarded message.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AbandonAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asynchronously discards the message and relinquishes the message lock ownership.</summary>
            <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
            <param name="propertiesToModify">The properties of the message to modify.</param>
            <returns>The discarded message.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAbandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
            <summary> Begins an abandon. </summary>
            <param name="propertiesToModify">  Updates properties on the message being abandoned. </param>   
            <param name="lockToken"> The lockToken of the BrokeredMessage. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndAbandon delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous AcceptMessageSession. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndAbandon(System.IAsyncResult)">
            <summary> Ends the message abandon operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Abandon.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Complete(System.Guid)">
            <summary>Completes processing of a message.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by 
            the <paramref name="lockToken" /> has lost the message lock.</exception> 
            <remarks > This method is used as a handshake between the client and Service Bus for a guaranteed delivery of the message. If the
                       client failed before calling this method, the message will be kept in the queue.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CompleteAsync(System.Guid)">
            <summary>Asynchronously completes processing of a message.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CompleteBatch(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>Completes processing of a message batch.</summary>
            <param name="lockTokens">The lock tokens associated with locked messages in the batch.</param>
            <remarks > This method is used as a handshake between the client and Service Bus for a guaranteed delivery of the message. If the
                       client failed before calling this method, the message will be kept in the queue.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CompleteBatchAsync(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>Asynchronously completes processing of a message batch.</summary>
            <param name="lockTokens">The lock tokens associated with locked messages in the batch.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginComplete(System.Guid,System.AsyncCallback,System.Object)">
            <summary> Begins a complete. </summary>
            <param name="lockToken">  The lockToken of the BrokeredMessage. 
                                      This is only available when a message is received in peek-lock mode. Lock token is used internally to complete or abandon message. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndComplete(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginCompleteBatch(System.Collections.Generic.IEnumerable{System.Guid},System.AsyncCallback,System.Object)">
            <summary> Begins a complete operation for a batch of messages. </summary>
            <param name="lockTokens">  The lockTokens of a set of BrokeredMessage objects. 
                                      This is only available when a message is received in peek-lock mode. Lock token is used internally to complete or abandon message. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndComplete(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndComplete(System.IAsyncResult)">
            <summary> Ends a complete. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCompleteBatch(System.IAsyncResult)">
            <summary> Ends a complete operation for a batch of message lock tokens. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Defer(System.Guid)">
            <summary>Suspends the processing of a message.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by 
            the <paramref name="lockToken" /> has lost the message lock.</exception> 
            <remarks>Before deferring, you should set aside the message receipt for later retrieval. </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Defer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Suspends the processing of a message.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="propertiesToModify">The properties of the message to modify.</param>
            <remarks>Before deferring, you should set aside the message receipt for later retrieval. </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeferAsync(System.Guid)">
            <summary>Asynchronously suspends the processing of a message.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeferAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asynchronously suspends the processing of a message.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="propertiesToModify">The properties of the message to modify.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDefer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Defer method. </summary>
            <param name="lockToken">Message's lock toekn</param>
            <param name="propertiesToModify">  Updates properties on the message being deferred. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndDefer delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndDefer(System.IAsyncResult)">
            <summary> Ends the message defer operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetter(System.Guid)">
            <summary>Moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by 
            the <paramref name="lockToken" /> has lost the message lock.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="propertiesToModify">The properties of the message to modify.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetter(System.Guid,System.String,System.String)">
            <summary>Moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="deadLetterReason">The reason for deadlettering the message.</param>
            <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by 
            the <paramref name="lockToken" /> has lost the message lock.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetterAsync(System.Guid)">
            <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetterAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="propertiesToModify">The properties of the message to modify.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetterAsync(System.Guid,System.String,System.String)">
            <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="deadLetterReason">The reason for deadlettering the message.</param>
            <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of DeadLetter method </summary>
            <param name="lockToken">  The message lockToken. </param>
            <param name="propertiesToModify">  Updates properties on the message being deadlettered. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndDeadLetter delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDeadLetter(System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of DeadLetter method </summary>
            <param name="lockToken">  The message lockToken. </param>
            <param name="deadLetterReason">  The reason for dead-lettering the message. </param>
            <param name="deadLetterErrorDescription">  The description information for dead-lettering the message. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndDeadLetter delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndDeadLetter(System.IAsyncResult)">
            <summary> Ends a move to dead letter queue. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <exception cref="T:System.TimeoutException">Thrown when operation times out</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Receive">
            <summary>Receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
            <returns>The 
            <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the received message. If no message is available to be received, the method returns NULL, and you can retry the operation at a later time.</returns> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:System.TimeoutException">Thrown if the message receive operation times out.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown if an I/O or security error occurs.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown if the messaging entity associated with 
            the operation does not exist or it has been deleted.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the user code has performed some unexpected operations, or 
            the Service Bus gateway is down. Check the exception message for the actual error.</exception> 
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Receive(System.TimeSpan)">
            <summary>Receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
            <param name="serverWaitTime">The time span the server waits for receiving a message before it times out.</param>
            <returns>The 
            <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the received message. If no message is available to be received, the method returns NULL, and you can retry the operation at a later time.</returns> 
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the <paramref name="serverWaitTime" /> is negative.</exception>
            <exception cref="T:System.TimeoutException">Thrown if the message receive operation times out.</exception>
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown if an I/O or security error occurs.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown if the messaging entity associated with 
            the operation does not exist or it has been deleted.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the user code has performed some unexpected operations, or 
            the Service Bus gateway is down. Check the exception message for the actual error.</exception> 
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Receive(System.Int64)">
            <summary>Receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
            <param name="sequenceNumber">The sequence number of the deferred message to receive. </param>
            <returns>The 
            <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the received message. If no message is available to be received, the method returns NULL, and you can retry the operation at a later time.</returns> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but the message with the requested sequenceNumber cannot be located.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatch(System.Int32)">
            <summary>Receives a message batch.</summary>
            <param name="messageCount">The number of messages to return in the batch. As this is an approximation, 
            fewer or more messages than <paramref name="messageCount" /> may be returned.</param> 
            <returns>A message batch.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatch(System.Int32,System.TimeSpan)">
            <summary>Receives a message batch.</summary>
            <param name="messageCount">The number of messages to receive in a batch.As this is an approximation, 
            fewer or more messages than <paramref name="messageCount" /> may be returned.</param>
            <param name="serverWaitTime">The time span that the server will wait for the message batch to arrive before it times out.</param>
            <returns>A message batch.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>Receives a message batch.</summary>
            <param name="sequenceNumbers">The sequence numbers associated with the messages in the batch.</param>
            <returns>A message batch.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but the message with the requested sequenceNumber cannot be located.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveAsync">
            <summary>Asynchronously receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveAsync(System.TimeSpan)">
            <summary>Asynchronously receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
            <param name="serverWaitTime">The time span the server waits for receiving a message before it times out.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveAsync(System.Int64)">
            <summary>Asynchronously receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
            <param name="sequenceNumber">The sequence number of the deferred message to receive.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatchAsync(System.Int32)">
            <summary>Asynchronously receives a message batch.</summary>
            <param name="messageCount">The number of messages to return in the batch. As this is an approximation, 
            fewer or more messages than <paramref name="messageCount" /> may be returned.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatchAsync(System.Int32,System.TimeSpan)">
            <summary>Asynchronously receives a message batch.</summary>
            <param name="messageCount">The number of messages to return in the batch. As this is an approximation, 
            fewer or more messages than <paramref name="messageCount" /> may be returned.</param>
            <param name="serverWaitTime">The time span that the server will wait for the message batch to arrive before it times out.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatchAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>Asynchronously receives a message batch.</summary>
            <param name="sequenceNumbers">The sequence numbers associated with the messages in the batch.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Receive method. </summary>
            <param name="serverWaitTime">  The server wait time before it times out. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceiveBatch(System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of ReceiveBatch method. </summary>
            <param name="messageCount">The number of messages to receive in a batch.</param>
            <param name="serverWaitTime">The server wait time before it times out. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceive(System.Int64,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Receive method. </summary>
            <param name="sequenceNumber"> The sequence number of a message. This is given by Service Bus to 
            a message that user use to reference the message for an entity.  </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
            <seealso cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SequenceNumber"/>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64},System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Receive method. </summary>
            <param name="sequenceNumbers"> The sequence number of a message. This is given by Service Bus to 
            a message that user use to reference the message for an entity.  </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
            <seealso cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SequenceNumber"/>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndReceive(System.IAsyncResult)">
            <summary> Ends a message receive operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <returns> return the Received BrokeredMessage. A null is return if receive 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndReceiveBatch(System.IAsyncResult)">
            <summary> Ends a receive operation for a batch of messages. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <returns> return the Received BrokeredMessage. A null is return if receive 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Sends a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" />.</summary>
            <param name="message">The message to send.</param>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> may need to increase the value of 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if timeout value is relatively low. </exception> 
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="message" /> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the  <paramref name="message" /> has already been sent by a QueueClient or 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> once already.</exception> 
            <exception cref="T:System.InvalidOperationException">Thrown if the topic/subscription pointed to does not support 
            the send operation. That is, Deadletter queue does not support send operations.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown if there is an I/O or security error.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">Thrown when an 
            error occurs during serialization or deserialization.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown if the queue does not exist.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if there is a messaging error.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Asynchronously sends a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" />.</summary>
            <param name="message">The message to send.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>Sends a set of brokered messages (for batch processing).</summary>
            <param name="messages">The collection of brokered messages to send.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>Asynchronously sends a set of brokered messages (for batch processing).</summary>
            <param name="messages">The collection of brokered messages to send.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginSend(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous request to send a BrokeredMessage. </summary>
            <param name="message">  The BrokeredMessage to send. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndSend(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous create a queue. </returns>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings"/>. You
                                            may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/> to avoid this exception if timeout value
                                            is relatively low.
                                            <seealso cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout"/></exception>
            <exception cref="T:System.ArgumentException"> Thrown when the BrokeredMessage is null. </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginSendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous request to send a batch of BrokeredMessage. </summary>
            <param name="messages">  The list of BrokeredMessage objects to send. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndSend(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous create a queue. </returns>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings"/>. You
                                            may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/> to avoid this exception if timeout value
                                            is relatively low.
                                            <seealso cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout"/></exception>
            <exception cref="T:System.ArgumentException"> Thrown when the BrokeredMessage is null. </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndSend(System.IAsyncResult)">
            <summary> Ends an asynchronous request to send a message. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the send method.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndSendBatch(System.IAsyncResult)">
            <summary> Ends an asynchronous request to send a batch of messages. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the send method.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Peek">
            <summary>Returns without removing the first message in the queue.</summary>
            <returns>A brokered message. Returns all properties and the message body.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Peek(System.Int64)">
            <summary>Returns without removing the first message in the queue.</summary>
            <param name="fromSequenceNumber">The starting point from which to browse a message.</param>
            <returns>The brokered message.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekAsync">
            <summary>Asynchronously returns without removing the first message in the queue.</summary>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekAsync(System.Int64)">
            <summary>Asynchronously returns without removing the first message in the queue.</summary>
            <param name="fromSequenceNumber">The sequence number from where to peek a message.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatch(System.Int32)">
            <summary>Peeks a batch of messages.</summary>
            <param name="messageCount">The number of messages.</param>
            <returns>A batch of messages peeked. Returns all properties and the message body.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatch(System.Int64,System.Int32)">
            <summary>Peeks a batch of messages.</summary>
            <param name="fromSequenceNumber">The starting point from which to browse a batch of messages.</param>
            <param name="messageCount">The number of messages.</param>
            <returns>A batch of messages peeked.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatchAsync(System.Int32)">
            <summary>Asynchronously peeks a batch of message.</summary>
            <param name="messageCount">The number of message.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatchAsync(System.Int64,System.Int32)">
            <summary>Asynchronously peeks a batch of message.</summary>
            <param name="fromSequenceNumber">The sequence number from where to peek a batch of message.</param>
            <param name="messageCount">The number of message.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeek(System.Int64,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Peek method. </summary>
            <param name="fromSequenceNumber"> The sequence number of message to start peeking from. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeekBatch(System.Int64,System.Int32,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Peek method. </summary>
            <param name="messageCount"> The maximum number of messages to peek. </param>
            <param name="fromSequenceNumber"> The sequence number of message to start peeking from. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndPeekBatch(System.IAsyncResult)">
            <summary> Ends a message Peek operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <returns> return a list of peeked BrokeredMessages. An empty list is returned if peek 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be peeked.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndPeek(System.IAsyncResult)">
            <summary> Ends a message Peek operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <returns> return a peeked BrokeredMessage. A null is returned if peek 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be peeked.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ScheduleMessageAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.DateTimeOffset)">
            <summary>
            Sends a scheduled message
            </summary>
            <param name="message">Message to be scheduled</param>
            <param name="scheduleEnqueueTimeUtc">Time of enqueue</param>
            <returns>Sequence number that is needed for cancelling.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CancelScheduledMessageAsync(System.Int64)">
            <summary>
            Cancels a scheduled message
            </summary>
            <param name="sequenceNumber">Returned on scheduling a message.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.QueueDescription">
            <summary>Represents the metadata description of the queue.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.QueueDescription.MessageTimeToLiveDefaultValue">
            <summary>
              The message time to live default value in bytes
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QueueDescription.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> class with the specified relative path.</summary> 
            <param name="path">Path of the queue relative to the namespace base address.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration">
            <summary>Gets or sets the duration of a peek lock; that is, the amount of time that the message is locked for other receivers. The maximum value for 
            <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> is 5 minutes; the default value is 1 minute.</summary> 
            <value>The duration of the lock.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MaxSizeInMegabytes">
            <summary>Gets or sets the maximum size of the queue in megabytes, which is the size of memory allocated for the queue.</summary>
            <value>The maximum size of the queue in megabytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.RequiresDuplicateDetection">
            <summary>Gets or sets the value indicating if this queue requires duplicate detection.</summary>
            <value>true if this queue requires duplicate detection; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.RequiresSession">
            <summary>Gets or sets a value that indicates whether the queue supports the concept of session.</summary>
            <value>true if the receiver application can only receive from the queue through a 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />; false if a queue cannot receive using 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.DefaultMessageTimeToLive">
            <summary>Gets or sets the default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when 
            <see cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive" /> is not set on a message itself.Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages.A message can have a lower TimeToLive value than that specified here, but by default TimeToLive is set to 
            <see cref="F:System.TimeSpan.MaxValue" />. Therefore, this property becomes the default time to live value applied to messages.</summary> 
            <value>The default message time to live value.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.AutoDeleteOnIdle">
            <summary>Gets or sets the 
            <see cref="T:System.TimeSpan" /> idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.</summary> 
            <value>The auto delete on idle time span for the queue.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnableDeadLetteringOnMessageExpiration">
            <summary>Gets or sets a value that indicates whether this queue has dead letter support when a message expires.</summary>
            <value>true if the queue has a dead letter support when a message expires; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.DuplicateDetectionHistoryTimeWindow">
            <summary>Gets or sets the 
            <see cref="T:System.TimeSpan" /> structure that defines the duration of the duplicate detection history. The default value is 10 minutes.</summary> 
            <value>The <see cref="T:System.TimeSpan" /> structure that represents the time windows for duplication detection history.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.Path">
            <summary>Gets or sets the name of the queue.</summary>
            <value>The name of the queue.</value>
            <remarks>
              This is a relative path to the <see cref = "P:Microsoft.ServiceBus.NamespaceManager.Address" />.
            </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MaxDeliveryCount">
            <summary>Gets or sets the maximum delivery count. A message is automatically deadlettered after this number of deliveries.</summary>
            <value>The number of maximum deliveries.</value>
            The default value is 10.
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnableBatchedOperations">
            <summary>Gets or sets a value that indicates whether server-side batched operations are enabled.</summary>
            <value>true if the batched operations are enabled; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.NewPath">
            <summary> New name </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.SizeInBytes">
            <summary>Gets the size of the queue in bytes.</summary>
            <value>The size of the queue.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MessageCount">
            <summary>Gets the number of messages in the queue.</summary>
            <value>The number of messages.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MessageCountDetails">
            <summary>Gets message details for a queue.</summary>
            <value>Returns 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> with the number of active messages, dead letters, scheduled messages, messages transferred to other queues, subscriptions, or topics, and the number of messages transferred to the dead letter queue.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.Authorization">
            <summary>Gets the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</summary>
            <value>The <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.IsAnonymousAccessible">
            <summary>Gets or sets a value that indicates whether the message is anonymous accessible.</summary>
            <value>true if the message is anonymous accessible; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.SupportOrdering">
            <summary>Gets or sets a value that indicates whether the queue supports ordering.</summary>
            <value>true if the queue supports ordering; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.Status">
            <summary>Gets or sets the current status of the queue (enabled or 
            disabled). When an entity is disabled, that entity cannot send or receive messages.</summary> 
            <value>The current status of the queue.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.AvailabilityStatus">
            <summary>Gets the entity availability status for the queue.</summary>
            <value>The entity availability status for the queue.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.ForwardTo">
            <summary>Gets or sets the path to the recipient to which the message is forwarded.</summary>
            <value>The path to the recipient to which the message is forwarded.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.ForwardDeadLetteredMessagesTo">
            <summary>Gets or sets the path to the recipient to which the dead lettered message is forwarded.</summary>
            <value>The path to the recipient to which the dead lettered message is forwarded.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.CreatedAt">
            <summary>Gets the exact time the message was created.</summary>
            <value>The time the message was created.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.UpdatedAt">
            <summary>Gets the exact time the message has been updated.</summary>
            <value>The time the message has been updated.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.AccessedAt">
            <summary>Gets the last time a message was sent, or the last time there was a receive request to this queue.</summary>
            <value>The last time a message was sent, or the last time there was a receive request to this queue.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnablePartitioning">
            <summary>Gets or sets a value that indicates whether the queue to be partitioned across multiple message brokers is enabled. </summary>
            <value>true if the queue to be partitioned across multiple message brokers is enabled; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.UserMetadata">
            <summary>Gets or sets the user metadata.</summary>
            <value>The user metadata.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnableExpress">
            <summary>Gets or sets a value that indicates whether Express Entities are enabled. An 
            express queue holds a message in memory temporarily before writing it to persistent storage.</summary> 
            <value>true if Express Entities are enabled; otherwise, false.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">
            <summary>The exception that is thrown for signaling quota exceeded errors.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException" /> class with a specified error message.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext,System.Exception)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
            <param name="innerException"> The inner exception. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException" /> class with serialized data.</summary> 
            <param name="info">The object that contains the serialized information about the exception.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">
            <summary>This exception is thrown if two or more 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" /> objects connect to the same Event Hubs partition with different epoch values.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException" /> class with the specified exception message.</summary> 
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException" /> class with the specified exception message and inner exception text.</summary> 
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception text.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.ReceiverRuntimeInfo">
            <summary>Represents the approximate receiver runtime information for a logical partition of an Event Hub.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ReceiverRuntimeInfo.PartitionId">
            <summary>Gets the partition ID for a logical partition of an Event Hub.</summary>
            <value>The partition identifier.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ReceiverRuntimeInfo.LastSequenceNumber">
            <summary>Gets the last sequence number of the event within the partition stream of the Event Hub.</summary>
            <value>The logical sequence number of the event.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ReceiverRuntimeInfo.LastEnqueuedTimeUtc">
            <summary>Gets the enqueued UTC time of the last event.</summary>
            <value>The enqueued time of the last event.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ReceiverRuntimeInfo.LastEnqueuedOffset">
            <summary>Gets the offset of the last enqueued event.</summary>
            <value>The offset of the last enqueued event.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.ReceiverRuntimeInfo.RetrievalTime">
            <summary>Gets the time of when the runtime info was retrieved.</summary>
            <value>The enqueued time of the last event.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.RuleDescription">
            <summary>Represents a description of a rule.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.RuleDescription.DefaultRuleName">
            <summary>
            The default name used in creating default rule when adding subscriptions
            to a topic. The name is "$Default".
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> class with default values.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> class with the specified name.</summary>
            <param name="name">The name of the rule.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor(Microsoft.ServiceBus.Messaging.Filter)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> class with the specified filter expression.</summary> 
            <param name="filter">The filter expression used to match messages.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor(System.String,Microsoft.ServiceBus.Messaging.Filter)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> class with the specified name and filter expression.</summary> 
            <param name="name">The name of the rule.</param>
            <param name="filter">The filter expression used to match messages.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Filter">
            <summary>Gets or sets the filter expression used to match messages.</summary>
            <value>The filter expression used to match messages.</value>
            <exception cref="T:System.ArgumentNullException">null (Nothing in Visual Basic) is assigned.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Action">
            <summary>Gets or sets the action to perform if the message satisfies the filtering expression.</summary>
            <value>The action to perform if the message satisfies the filtering expression.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Name">
            <summary>Gets or sets the name of the rule.</summary>
            <value>Returns a <see cref="T:System.String" /> Representing the name of the rule.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.CreatedAt">
            <summary>Gets creation time of the rule.</summary>
            <value>The creation time of the rule.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Microsoft#ServiceBus#Messaging#IResourceDescription#CollectionName">
            <summary> Gets the name of the collection. </summary>
            <value> The name of the collection. </value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.BrokeredMessageState">
            <summary> Values that represent the current message's state in the system. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.BrokeredMessageState.Active">
            <summary> Message in the queue and ready to be sent to its receiver(s)  </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.BrokeredMessageState.Acknowledged">
            <summary> Message delivery is acknowledged in the system  </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.BrokeredMessageState.Deferred">
            <summary> Message delivery is deferred by the its receiver.  </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.BrokeredMessageState.Abandoned">
            <summary> Message is abandoned by receiver and delivery count is updated.  </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessageState">
            <summary>Enumerates a message state.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.MessageState.Active">
            <summary>Specifies an active message state.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.MessageState.Deferred">
            <summary>Specifies a deferred message state.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.MessageState.Scheduled">
            <summary>Specifies the scheduled message state.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessageSession">
            <summary>Represents a message session that allows grouping of related messages for processing in a single transaction.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.PrefetchCount">
            <summary>Gets or sets the number of messages that the message receiver can simultaneously request.</summary>
            <value>The number of messages that the message receiver can simultaneously request.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.LastPeekedSequenceNumber">
            <summary>Gets or sets the last peeked sequence number in the session.</summary>
            <value>The last peeked sequence number in the session.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.LockedUntilUtc">
            <summary>Gets or sets the date and time at which the message session is unlocked.</summary>
            <value>The date and time for the message session to be locked.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.IsExclusiveMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.LockToken">
            <summary>
            
            </summary>
            <value>The lock token </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.SessionId">
            <summary>Gets or sets the message session identifier.</summary>
            <value>The message session identifier.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.Path">
            <summary>Gets the path of the queue or topic, relative to the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> base address.</summary> 
            <value>A string representing the path of the queue or topic.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.InnerMessageReceiver">
            <summary> Gets the inner receiver for this session receiver. </summary>
            <summary> Sets the inner receiver for this session receiver. </summary>
            <value> The inner receiver for this session receiver. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.SupportsGetRuntimeEntityDescription">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin try receive action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="messageCount"> Number of messages. </param>
            <param name="serverWaitTime"> The timeout. </param>
            <param name="callback">     The callback. </param>
            <param name="state">        The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndTryReceive(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
            <summary>Executes the end try receive operation of the message receiver.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to try to receive messages.</param>
            <param name="messages">When this method returns, contains the received message collection.</param>
            <returns>true if it succeeds; false if it fails.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginTryReceive2(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin try receive action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="messageCount"> Number of messages. </param>
            <param name="serverWaitTime"> The timeout. </param>
            <param name="callback">     The callback. </param>
            <param name="state">        The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndTryReceive2(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
            <summary>Executes the end try receive operation of the message receiver.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to try to receive messages.</param>
            <param name="messages">When this method returns, contains the received message collection.</param>
            <returns>true if it succeeds; false if it fails.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
            <summary> Completes a peek locked message. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="lockTokens"> The lock tokens. </param>
            <param name="timeout"> The timeout. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the OnComplete or BeginComplete operation.</summary>
            <returns>An<see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close the communication object for the message session.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "lockTokens" > The collection of lock tokens bound to the locked message instances.</param>
            <param name = "fromSync" > The start of the synchronization.</param>
            <param name = "timeout" > The time span interval the operation waits before it times out.</param>
            <param name = "callback" > An <see cref= "T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the OnComplete or BeginComplete operation.</summary>
            <returns>An<see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close the communication object for the message session.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "deliveryTags" > A collection of delivery tags.</param>
            <param name = "fromSync" > The start of the synchronization.</param>
            <param name = "timeout" > The time span interval the operation waits before it times out.</param>
            <param name = "callback" > An <see cref= "T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndComplete(System.IAsyncResult)">
            <summary>Executes the end complete operation of the message receiver.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to complete receiving of messages.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
            <summary> Abandons a peek locked message. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="lockTokens"> The lock tokens. </param>
            <param name="propertiesToModify"></param>
            <param name="timeout"> The timeout. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Executes the begin abandon action. 
            </summary>
            <param name="trackingContext"></param>
            <param name="lockTokens"> The lock tokens. </param>
            <param name="propertiesToModify"> The properties to add for the abandon action.</param>
            <param name="fromSync"></param>
            <param name="timeout">    The timeout. </param>
            <param name="callback">   The callback. </param>
            <param name="state">      The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndAbandon(System.IAsyncResult)">
            <summary>Ends an asynchronous operation to abandon the message and relinquish its lock.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to abandon the messages and relinquish its lock.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnAbort">
            <summary>Aborts the message session. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Begins an asynchronous operation to close the communication object for the message session.</summary>
            <param name="timeout">The time span interval the operation waits before it times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
            <returns>An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close the communication object for the message session.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndClose(System.IAsyncResult)">
            <summary>Ends an asynchronous operation to close the communication object for the message session.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close the communication object for the message session.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the OnOpen operation of the message receiver.</summary>
            <param name="timeout">The time span interval the operation waits before it times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
            <returns>An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to open a communication object for the message session.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndOpen(System.IAsyncResult)">
            <summary>Ends the asynchronous operation to open a communication object for the message session.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to open a communication object for the message session.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
            <summary> Executes the try receive action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="receipts"> The receipts. </param>
            <param name="timeout">  The timeout. </param>
            <param name="messages"> the output message (out)</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
            <summary> Executes the try receive action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="messageCount"> The number of messages. </param>
            <param name="serverWaitTime">  The server wait time before it times out. </param>
            <param name="messages">  returned messages. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin try receive action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="receipts"> The receipts. </param>
            <param name="timeout">  The timeout. </param>
            <param name="callback"> The callback. </param>
            <param name="state">    The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
            <summary> Defers a message. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="lockTokens"> The lock tokens. </param>
            <param name="propertiesToModify"> message properties to modify. </param>
            <param name="timeout">    The timeout. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin defer action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="lockTokens"> The lock tokens. </param>
            <param name="propertiesToModify"> message properties to modify. </param>
            <param name="fromSync"></param>
            <param name="timeout">    The timeout. </param>
            <param name="callback">   The callback. </param>
            <param name="state">      The state. </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndDefer(System.IAsyncResult)">
            <summary>Executes the end defer operation of the message receiver.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to suspend processing of messages.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.TimeSpan)">
            <summary> Moves a message to the dead letter queue. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin move to dead letter queue action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="lockTokens"> The lock tokens. </param>
            <param name="propertiesToModify"> message properties to modify. </param>
            <param name="deadLetterReason">  The reason for deadlettering the message. </param>
            <param name="deadLetterErrorDescription">  The description information for deadlettering the message. </param>
            <param name="fromSync"> true if this was called from a sync method.</param>
            <param name="timeout">    The timeout. </param>
            <param name="callback">   The callback. </param>
            <param name="state">      The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndDeadLetter(System.IAsyncResult)">
            <summary>Executes the end deadletter operation of the message receiver.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to move undelivered messages to the deadletter queue.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.GetState">
            <summary>Gets the state of the message session.</summary>
            <returns>The stream from which the state information is persisted.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.GetStateAsync">
            <summary>Asynchronously gets the state of the message session.</summary>
            <returns>The stream from which the state information is persisted.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.GetState(Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Gets the state. </summary>
            <param name="trackingContext"> The trackingContext. </param>
            <returns> The state. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.SetState(System.IO.Stream)">
            <summary>Sets the state of the message session.</summary>
            <param name="sessionState">The stream to which the state information is persisted.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.SetStateAsync(System.IO.Stream)">
            <summary>Asynchronously sets the state of the message session.</summary>
            <param name="sessionState">The stream to which the state information is persisted.</param>
            <returns>The state of the message session.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.SetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.IO.Stream)">
            <summary> Sets a state. </summary>
            <param name="trackingContext"> The trackingContext. </param>
            <param name="sessionState"> The stream. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.BeginGetState(System.AsyncCallback,System.Object)">
            <summary> Begins a get state. </summary>
            <param name="callback"> The callback. </param>
            <param name="state">    The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.EndGetState(System.IAsyncResult)">
            <summary> Ends a get state. </summary>
            <param name="result"> The result. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.BeginSetState(System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary> Begins a set state. </summary>
            <param name="sessionState">   The stream. </param>
            <param name="callback"> The callback. </param>
            <param name="state">    The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.EndSetState(System.IAsyncResult)">
            <summary> Ends a set state. </summary>
            <param name="result"> The result. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.RenewLock">
            <summary>Specifies the time period within which the host renews its lock on a message.</summary>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">If 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient" /> is true, you can retry the operation immediately.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">You can retry the operation immediately.</exception>
            <exception cref="T:System.TimeoutException">You can retry the operation immediately.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown instead of 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException" /> if the message is from a 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.RenewLockAsync">
            <summary>Specifies the time period within which the host renews its lock on a message.</summary>
            <returns>The host that is being locked.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginRenewLock(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the RenewLock or BeginRenewLock operation.</summary>
            <returns>An<see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the state of the operation.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "timeout" > The time span interval the operation waits before it times out.</param>
            <param name = "callback" > An <see cref= "T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndRenewLock(System.IAsyncResult)">
            <summary>Executes the EndRenewLock operation of the message receiver.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the state of the message session.</param> 
            <returns>The date and time when the renewal of lock ends.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnRenewLock(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan)">
            <summary>Executes the RenewLock action for message locks.</summary>
            <returns>The time span the operation waits before it times out.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "timeout" > The time span interval the operation waits before it times out.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginRenewMessageLocks(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the OnBegin operation for lock messages.</summary>
            <returns>An<see cref="T:System.IAsyncResult" /> that references the asynchronous operation to renew processing of lock messages.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "lockTokens" > The collection of lock tokens bound to the locked message instances.</param>
            <param name = "fromSync" > The start of the synchronization.</param>
            <param name = "timeout" > The time span the operation waits before it times out.</param>
            <param name = "callback" > An <see cref= "T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndRenewMessageLocks(System.IAsyncResult)">
            <summary>Executes the EndRenew action for message locks.</summary>
            <param name="result">The result of the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of locked messages..</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginPeek(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int64,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the OnPeek or BeginPeek operation.</summary>
            <returns>An<see cref="T:System.IAsyncResult" /> that references the asynchronous operation to peek a communication of the message session.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "fromSequenceNumber" > The sequence number to peek from the session.</param>
            <param name = "messageCount" > The number of message in the operation.</param>
            <param name = "timeout" > The time span interval the operation waits before it times out.</param>
            <param name = "callback" > An <see cref= "T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndPeek(System.IAsyncResult)">
            <summary>Executes upon calling the EndPeek operation.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to peek a communication of the message session.</param> 
            <returns>The list of message from the session.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginGetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin get state action. </summary>
            <param name="trackingContext">  The TrackingContext to use. </param>
            <param name="timeout">  The timeout. </param>
            <param name="callback"> The callback. </param>
            <param name="state">    The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndGetState(System.IAsyncResult)">
            <summary>Executes upon calling the OnGetState or EndGetState operation.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the state of the message session.</param> 
            <returns>The stream from which the state information is persisted.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnGetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan)">
            <summary> Executes the get state action. </summary>
            <param name="trackingContext">  The TrackingContext to use. </param>
            <param name="timeout"> The timeout. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginSetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.IO.Stream,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin set state action. </summary>
            <param name="trackingContext">  The TrackingContext to use. </param>
            <param name="sessionState">   The state. </param>
            <param name="timeout">  The timeout. </param>
            <param name="callback"> The callback. </param>
            <param name="state">    The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndSetState(System.IAsyncResult)">
            <summary>Ends the asynchronous operation to set the state of the message session.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to set the state of the message session.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnSetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.IO.Stream,System.TimeSpan)">
            <summary> Executes the set state action. </summary>
            <param name="trackingContext">  The TrackingContext to use. </param>
            <param name="stream">  The stream. </param>
            <param name="timeout"> The timeout. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.ProcessException(System.Exception)">
            <summary />
            <param name="exception" />
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException">
            <summary>Represents the exception that is thrown when a message cannot acquire lock on a session.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException" /> class with a specified error message.</summary> 
            <param name="message">The error message that describes the cause of the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException" /> class with a specified error message and a reference to the inner.</summary> 
            <param name="message">The error message that describes the cause of the exception.</param>
            <param name="innerException">The inner exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.SubqueueType">
            <summary> Values that represent SubqueueType. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.SubqueueType.Active">
            <summary> The Active Subqueue. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.SubqueueType.DeadLettered">
            <summary> The DeadLettered Subqueue.  </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.SubqueueType.Scheduled">
            <summary> The Scheduled Subqueue.  </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.SubqueueType.System">
            <summary> The system Subqueue</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.SubscriptionClient">
            <summary>Represents the anchor class used in run-time operations related to a topic subscription.</summary>
            <example>
            <code>
            // Create subscription client
            SubscriptionClient mySubscriptionClient = 
            factory.CreateSubscriptionClient(mySubscription);
            
            // Receive messages
            for (int count = 0; count &lt; MsgCount; count++)
            {
                var message = mySubscriptionClient.Receive();
                message.Complete();
            }
            </code>
            </example>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.TopicPath">
            <summary>Gets the full pathname of the topic.</summary>
            <value>The full pathname of the topic.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.Name">
            <summary>Gets the name of the subscription.</summary>
            <value>The name of the subscription.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.MessagingFactory">
            <summary>Gets the messaging factory used to create this subscription client.</summary>
            <value>The messaging factory used to create this subscription client.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.InternalReceiver">
            <summary>
            The internal receiver that the client will use for IMessageReceiver operations.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.InternalBrowser">
            <summary>
            The internal client that the client will use for IMessageBrowser operations.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.IsSubQueue">
            <summary>
            The internal bool indicating if it is a sub queue or not.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Create(System.String,System.String)">
            <summary>Creates a new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> with specified name and topic path.</summary>
            <param name="topicPath">The full pathname of the topic.</param>
            <param name="name">The name of the subscription.</param>
            <returns>A new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateFromConnectionString(System.String,System.String,System.String)">
            <summary>Creates a new copy of 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> from a connection string with specified topic path and name.</summary> 
            <param name="connectionString">The connection string.</param>
            <param name="topicPath">The full pathname of the topic.</param>
            <param name="name">The name of the subscription.</param>
            <returns>A new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Create(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary>Creates a new copy of 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> with specified name, topic path and mode.</summary> 
            <param name="topicPath">The full pathname of the topic.</param>
            <param name="name">The name of the subscription.</param>
            <param name="mode">The message receive mode.</param>
            <returns>A new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateFromConnectionString(System.String,System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary>Creates a new copy of 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> from a connection string with specified topic path, name and mode.</summary> 
            <param name="connectionString">The connection string.</param>
            <param name="topicPath">The full pathname of the topic.</param>
            <param name="name">The name of the subscription.</param>
            <param name="mode">The message receive mode.</param>
            <returns>A new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.FormatSubscriptionPath(System.String,System.String)">
            <summary>Builds a format name subscription path using the specified topic path and subscription name.</summary>
            <param name="topicPath">The full pathname of the topic.</param>
            <param name="subscriptionName">The name of the subscription.</param>
            <returns>The 
            <see cref="T:System.String" /> resulted from building the format name subscription path using the specified topic path and subscription name.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.FormatDeadLetterPath(System.String,System.String)">
            <summary>Builds a format name deadletter path using the specified topic path and subscription name.</summary>
            <param name="topicPath">The full pathname of the topic.</param>
            <param name="subscriptionName">The name of the subscription.</param>
            <returns>The 
            <see cref="T:System.String" /> resulted from building the format name deadletter path using the specified topic path and subscription name.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RenewMessageLock(System.Guid)">
            <summary />
            <param name="lockToken" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RenewMessageLockAsync(System.Guid)">
            <summary />
            <param name="lockToken" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandler(System.Type)">
            <summary>Registers the handler for the client session.</summary>
            <param name="handlerType">The type of the handler.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandler(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Registers the handler for the client session.</summary>
            <param name="handlerType">The type of the handler.</param>
            <param name="options">The session handler options.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerAsync(System.Type)">
            <summary>Asynchronously registers the handler for the client session.</summary>
            <param name="handlerType">The type of the handler.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerAsync(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Asynchronously registers the handler for the client session.</summary>
            <param name="handlerType">The type of the handler.</param>
            <param name="options">The session handler options.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Registers the handler factory for the client session.</summary>
            <param name="factory">The interface for the handler factory associated with the message session.</param>
            <param name="options">The session handler options.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Registers the handler factory for the client session.</summary>
            <param name="factory">The interface for the handler factory associated with the message session.</param>
            <param name="options">The session handler options.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Asynchronously registers the handler factory for the client session.</summary>
            <param name="factory">The interface for the handler factory associated with the message session.</param>
            <param name="options">The session handler options.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Asynchronously registers the handler factory for the client session.</summary>
            <param name="factory">The interface for the handler factory associated with the message session.</param>
            <param name="options">The session handler options.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>Processes a message in an event-driven message pump.</summary>
            <param name="callback">The method to invoke when the operation is complete.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
            <summary>Processes a message in an event-driven message pump, with the given set of 
            <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> options.</summary> 
            <param name="callback">The method to invoke when the operation is complete.</param>
            <param name="onMessageOptions">Specifies the 
            <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> options with which to instantiate the message pump.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task})">
            <summary>Asynchronously processes a message.</summary>
            <param name="callback">The asynchronous method to invoke when the operation is complete.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
            <summary>Asynchronously processes a message.</summary>
            <param name="callback">The asynchronous method to invoke when the operation is complete.</param>
            <param name="onMessageOptions">The options associated with the message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)">
            <summary> Ends a create receiver. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the CreateReceiver.  </param>
            <returns> Newly created MessageReceiver. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession">
            <summary>Accepts a message session that allows grouping of related messages for processing in a single transaction.</summary>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession(System.String)">
            <summary>Accepts a message session that allows grouping of related messages 
            for processing in a single transaction using the given session identifier.</summary> 
            <param name="sessionId">The session identifier of the message session.</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
            <exception cref="T:System.ArgumentException">Thrown if sessionId is null, empty, or white spaces.</exception>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession(System.TimeSpan)">
            <summary>Accepts a message session that allows grouping of related messages 
            for processing in a single transaction using the specified server wait time.</summary> 
            <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if serverWaitTime is not a positive TimeSpan value.</exception>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <paramref name="serverWaitTime"/>.</exception>
            <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession(System.String,System.TimeSpan)">
            <summary>Accepts a message session that allows grouping of related messages for 
            processing in a single transaction using the given session identifier and wait time.</summary> 
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
            <exception cref="T:System.ArgumentException">Thrown if sessionId is null, empty, or white spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if serverWaitTime is not a positive TimeSpan value.</exception>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <paramref name="serverWaitTime"/>.</exception>
            <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync">
            <summary>Asynchronously accepts a message session that allows grouping of related messages 
            for processing in a single transaction using the specified server wait time.</summary> 
            <returns>A task instance that represents the asynchronous accept message session operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync(System.String)">
            <summary>Asynchronously accepts a message session that allows grouping of related messages 
            for processing in a single transaction using the specified server wait time.</summary> 
            <param name="sessionId">The session identifier of the message session.</param>
            <returns>A task instance that represents the asynchronous accept message session operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync(System.TimeSpan)">
            <summary>Asynchronously accepts a message session that allows grouping of related messages 
            for processing in a single transaction using the specified server wait time.</summary> 
            <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
            <returns>A task instance that represents the asynchronous accept message session operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync(System.String,System.TimeSpan)">
            <summary>Asynchronously accepts a message session that allows grouping of related messages 
            for processing in a single transaction using the specified server wait time.</summary> 
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
            <returns>A task instance that represents the asynchronous accept message session operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndAcceptMessageSession(System.IAsyncResult)">
            <summary> Ends a pending asynchronous accept session receiver. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that stores state information and any user defined data for this asynchronous operation. </param>
            <returns> Session Receiver object </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessions">
            <summary>Gets a message session that allows grouping of related messages for processing in a single transaction.</summary>
            <returns>A message session that allows grouping of related messages for processing in a single transaction.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessions(System.DateTime)">
            <summary>Retrieves all message sessions whose session state was updated since <paramref name="lastUpdatedTime" />.</summary>
            <param name="lastUpdatedTime">The time the session was last updated.</param>
            <returns>A message session that allows grouping of related messages for processing in a single transaction.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessionsAsync">
            <summary>Asynchronously gets a message session that allows grouping of related messages for processing in a single transaction.</summary>
            <returns>A task instance that represents the asynchronous get message sessions operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessionsAsync(System.DateTime)">
            <summary>Asynchronously gets a message session that allows grouping of related messages for processing in a single transaction.</summary>
            <param name="lastUpdatedTime">The time the session was last updated.</param>
            <returns>A task instance that represents the asynchronous get message sessions operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRule(Microsoft.ServiceBus.Messaging.RuleDescription)">
            <summary>Adds a new rule to the <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> using the specified rule description.</summary>
            <param name="description">The rule description that provides metadata of the rule to add.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="description" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="description.Name.Name" /> is null, 
            white space empty or not in the right format.</exception> 
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="description.Name.Name" /> 
            length has exceeded the limit of 50 characters.</exception> 
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown if the rule with the same name 
            as <paramref name="description.Name.Name" /> already existed for this subscription. </exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when an attempt is made to add another 
            rule with same name as one that has already been added.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRule(System.String,Microsoft.ServiceBus.Messaging.Filter)">
            <summary>Adds a rule to the current subscription with the specified name and filter expression.</summary>
            <param name="ruleName">The name of the rule to add.</param>
            <param name="filter">The filter expression against which messages will be matched.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="filter" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="ruleName" /> is null, 
            white space empty or not in the right format.</exception> 
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="ruleName" /> 
            length has exceeded the limit of 50 characters.</exception> 
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown if the rule with the same 
            name as <paramref name="ruleName" /> already existed for this subscription.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when an attempt is made to add another 
            rule with same name as one that has already been added.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRuleAsync(System.String,Microsoft.ServiceBus.Messaging.Filter)">
            <summary>Asynchronously adds a rule to the current subscription with the specified name and filter expression.</summary>
            <param name="ruleName">The name of the rule to add.</param>
            <param name="filter">The filter expression against which messages will be matched.</param>
            <returns>A task instance that represents the asynchronous add rule operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRuleAsync(Microsoft.ServiceBus.Messaging.RuleDescription)">
            <summary>Asynchronously adds a new rule to the 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> using the specified rule description.</summary> 
            <param name="description">The rule description that provides metadata of the rule to add.</param>
            <returns>A task instance that represents the asynchronous add rule operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.AsyncCallback,System.Object)">
            <summary> Begins an add rule. </summary>
            <param name="description"> The rule description class. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
              the EndAddRule delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous AddRule. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndAddRule(System.IAsyncResult)">
            <summary> Ends an add rule. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the AddRule.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)">
            <summary>Removes the rule described by <paramref name="ruleName" />.</summary>
            <param name="ruleName">The name of the rule.</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="ruleName" /> is null, 
            white space empty or not in the right format.</exception> 
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via the OperationTimeout Property.</exception>
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRuleAsync(System.String)">
            <summary>Asynchronously removes the rule described by <paramref name="ruleName" />.</summary>
            <param name="ruleName">The name of the rule.</param>
            <returns>A task instance that represents the asynchronous remove rule operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetRulesAsync">
            <summary>
            Gets all the rules which are added to a given Subscription.
            </summary>
            <returns>List of rules</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginRemoveRule(System.String,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of RemoveRule. </summary>
            <param name="ruleName"> Name of the rule. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndRemoveRule delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous RemoveRule. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndRemoveRule(System.IAsyncResult)">
            <summary> Ends a remove rule. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the RemoveRule.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginCreateReceiver(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin create receiver action.</summary>
            <param name="receiveMode">The message <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />.</param>
            <param name="timeout">The wait time before the operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)" /> delegate when the operation is complete.</param> 
            <returns>An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous parent method.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginCreateReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin create receiver action.</summary>
            <param name="subQueuePath">The path of the subqueue.</param>
            <param name="subQueueName">The name of the subqueue.</param>
            <param name="receiveMode">The message <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />.</param>
            <param name="timeout">The wait time before the operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)" /> delegate when the operation is complete.</param> 
            <returns>An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous parent async method. </returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndCreateReceiver(System.IAsyncResult)">
            <summary>Executes the end create receiver action.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> object that references the 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)" />.</param> 
            <returns>A newly-created <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginCreateBrowser(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin create client action. </summary>        
            <param name="timeout">     The maximum time before this operation times out. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndCreateBrowser delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous CreateBrowser. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndCreateBrowser(System.IAsyncResult)">
            <summary> Executes the end create client action. </summary>
            <param name="result"> The result of the asynchronous EndCreateReceiver operation. </param>
            <returns> Message client object</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAcceptMessageSession(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.Boolean,System.Nullable{System.Guid},System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the BeginAcceptMessageSession operation.</summary>
            <param name="sessionId">The session identifier of the message session.</param>
            <param name="receiveMode">The receive mode when processing with the receive messages.</param>
            <param name="isExclusiveMode" />
            <param name="lockToken" />/// <param name="serverWaitTime">The time span the server waits for processing messages before it times out</param>
            <param name="timeout">The time span the server waits for processing messages before it times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndAcceptMessageSession(System.IAsyncResult)">
            <summary>Executes upon calling the EndAcceptMessageSession operation.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous accept message session operation.</param> 
            <returns>The 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the BeginGetMessageSessions operation.</summary>
            <param name="lastUpdatedTime">The time the session was last updated.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to add a new rule to the subscription.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndGetMessageSessions(System.IAsyncResult)">
            <summary>Executes the end get message action.</summary>
            <param name="result">The result of the message.</param>
            <returns>The end get message action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the BeginAddRule operation.</summary>
            <param name="description">The rule description that provides metadata of the rule to add.</param>
            <param name="timeout">The time span this operation waits before it times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to add a new rule to the subscription.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndAddRule(System.IAsyncResult)">
            <summary>Ends the asynchronous call to 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.TimeSpan,System.AsyncCallback,System.Object)" />.</summary> 
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> from a 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.TimeSpan,System.AsyncCallback,System.Object)" />.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Begins removing a 
            <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> from a 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> through the run-time client protocol.</summary> 
            <param name="ruleName">The name of the rule to remove.</param>
            <param name="timeout">The wait time before the operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" /> delegate when the operation is complete.</param> 
            <returns>An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" />.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndRemoveRule(System.IAsyncResult)">
            <summary>Ends the asynchronous call to 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />.</summary> 
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> from a 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRulesByTag(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Begins removing a 
            <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> from a 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> through the run-time client protocol using a tag.</summary> 
            <param name="tag">The tag to be used.</param>
            <param name="timeout">The wait time before the operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" /> delegate when the operation is complete.</param> 
            <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to add a new rule to the subscription.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndRemoveRules(System.IAsyncResult)">
            <summary>Ends the asynchronous call to 
            <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />.</summary> 
            <param name="result">The result of the asynchronization.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnAbort">
            <summary>Executes the abort action.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnClose(System.TimeSpan)">
            <summary>Executes the close action.</summary>
            <param name="timeout">The wait time before the operation times out.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin close action.</summary>
            <param name="timeout">The wait time before the operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. 
            This object is passed to the BeginClose delegate when the operation is complete.</param> 
            <returns>An <see cref="T:System.IAsyncResult" />that references the asynchronous BeginClose.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndClose(System.IAsyncResult)">
            <summary>Executes the end close action.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous BeginClose.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.Mode">
            <summary>Gets the message receive mode when processing the received message.</summary>
            <value>The message <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> when processing the received message.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.PrefetchCount">
            <summary>Gets or sets the number of messages that the message receiver can simultaneously request.</summary>
            <value>The number of messages that the message receiver can simultaneously request.</value>
            <remarks> Takes effect on the next receive call to the server. </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Abandon(System.Guid)">
            <summary>Discards the message and relinquishes the message lock ownership.</summary>
            <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <remarks>When the client fails to get the message from the queue/topic, this method should be called. 
                     Service Bus will increment the delivery count of the message. 
                     The client now can either attempt to receive the message again or move it to the dead-letter queue.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Abandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Discards the message and relinquishes the message lock ownership.</summary>
            <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
            <param name="propertiesToModify">A collection of property objects to be modified.</param>
            <remarks>When the client fails to get the message from the queue/topic, this method should be called. 
                     Service Bus will increment the delivery count of the message. 
                     The client now can either attempt to receive the message again or move it to the dead-letter queue.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AbandonAsync(System.Guid)">
            <summary>Asynchronously discards the message and relinquishes the message lock ownership.</summary>
            <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
            <returns>A task instance that represents the asynchronous abandon operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AbandonAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asynchronously discards the message and relinquishes the message lock ownership.</summary>
            <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
            <param name="propertiesToModify">A collection of property objects to be modified.</param>
            <returns>A task instance that represents the asynchronous abandon operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAbandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
            <summary> Begins an abandon. </summary>
            <param name="propertiesToModify">  Updates properties on the message being abandoned. </param>   
            <param name="lockToken"> The lockToken of the BrokeredMessage. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndAbandon delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous AcceptMessageSession. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndAbandon(System.IAsyncResult)">
            <summary> Ends the message abandon operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Abandon.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Complete(System.Guid)">
            <summary>Completes processing of a message.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by 
            <paramref name="lockToken" /> has lost the message lock.</exception> 
            <remarks > This method is used as a handshake between the client and Service Bus for a guaranteed delivery of the message. If the
                       client failed before calling this method, the message will be kept in the queue.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CompleteAsync(System.Guid)">
            <summary>Asynchronously completes processing of a message.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <returns>A task instance that represents the asynchronous complete operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CompleteBatch(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>Completes processing of a batch.</summary>
            <param name="lockTokens">The lock tokens bound to the locked message instance.</param>
            <remarks > This method is used as a handshake between the client and Service Bus for a guaranteed delivery of the message. If the
                       client failed before calling this method, the message will be kept in the queue.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CompleteBatchAsync(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>Asynchronously completes processing of a batch.</summary>
            <param name="lockTokens">The lock tokens bound to the locked message instance.</param>
            <returns>A task instance that represents the asynchronous complete batch operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginComplete(System.Guid,System.AsyncCallback,System.Object)">
            <summary> Begins a complete. </summary>
            <param name="lockToken">  The lockToken of the BrokeredMessage. 
                                      This is only available when a message is received in peek-lock mode. Lock token is used internally to complete or abandon message. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndComplete(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginCompleteBatch(System.Collections.Generic.IEnumerable{System.Guid},System.AsyncCallback,System.Object)">
            <summary> Begins a complete operation for a batch of messages. </summary>
            <param name="lockTokens">  The lockTokens of a set of BrokeredMessage objects. 
                                      This is only available when a message is received in peek-lock mode. Lock token is used internally to complete or abandon message. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndComplete(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndComplete(System.IAsyncResult)">
            <summary> Ends a complete. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCompleteBatch(System.IAsyncResult)">
            <summary> Ends a complete operation for a batch of message lock tokens. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Defer(System.Guid)">
            <summary>Suspends the processing of a message.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by 
            <paramref name="lockToken" /> has lost the message lock.</exception> 
            <remarks>Before deferring, you should set aside the message receipt for later retrieval. </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Defer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Suspends the processing of a message.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="propertiesToModify">The properties to modify.</param>
            <remarks>Before deferring, you should set aside the message receipt for later retrieval. </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeferAsync(System.Guid)">
            <summary>Asynchronously suspends the processing of a message.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <returns>A task instance that represents the asynchronous defer operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeferAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asynchronously suspends the processing of a message.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="propertiesToModify">The properties to modify.</param>
            <returns>A task instance that represents the asynchronous defer operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDefer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Defer method. </summary>
            <param name="lockToken">Message's lock toekn</param>
            <param name="propertiesToModify">  Updates properties on the message being deferred. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndDefer delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndDefer(System.IAsyncResult)">
            <summary> Ends the message defer operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetter(System.Guid)">
            <summary>Moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by 
            <paramref name="lockToken" /> has lost the message lock.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="propertiesToModify">The properties to modify.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetter(System.Guid,System.String,System.String)">
            <summary>Moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="deadLetterReason">The reason for deadlettering the message.</param>
            <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by 
            <paramref name="lockToken" /> has lost the message lock.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetterAsync(System.Guid)">
            <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <returns>A task instance that represents the asynchronous deadletter operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetterAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="propertiesToModify">The properties to modify.</param>
            <returns>A task instance that represents the asynchronous deadletter operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetterAsync(System.Guid,System.String,System.String)">
            <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="deadLetterReason">The reason for deadlettering the message.</param>
            <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
            <returns>A task instance that represents the asynchronous deadletter operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of DeadLetter method </summary>
            <param name="lockToken">  The message lockToken. </param>
            <param name="propertiesToModify">  Updates properties on the message being deadlettered. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndDeadLetter delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDeadLetter(System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of DeadLetter method </summary>
            <param name="lockToken">  The message lockToken. </param>
            <param name="deadLetterReason">  The reason for dead-lettering the message. </param>
            <param name="deadLetterErrorDescription">  The description information for dead-lettering the message. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndDeadLetter delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndDeadLetter(System.IAsyncResult)">
            <summary> Ends a move to dead letter queue. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <exception cref="T:System.TimeoutException">Thrown when operation times out</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Receive">
            <summary>Receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.InternalReceiver" />.</summary>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the received message.</returns>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the subscription does not exist.</exception>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown if there is an authentication error.</exception>
             <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Receive(System.TimeSpan)">
            <summary>Receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.InternalReceiver" />.</summary>
            <param name="serverWaitTime">The time span the server waits for receiving a message before it times out.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />  that represents the received message.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the <paramref name="serverWaitTime" /> is negative.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the subscription does not exist.</exception>
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">Thrown if there is an authentication error.</exception>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Receive(System.Int64)">
            <summary>Receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.InternalReceiver" />.</summary>
            <param name="sequenceNumber">The sequence number of the deferred message to receive.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />  that represents the received message.</returns>
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but the message with the requested sequenceNumber cannot be located.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatch(System.Int32)">
            <summary>Receives a batch after the asynchronous operation.</summary>
            <param name="messageCount">The number of messages to return in the batch. As this is an approximation, 
            fewer or more messages than <paramref name="messageCount" /> may be returned.</param>
            <returns>A batch after the asynchronous operation.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatch(System.Int32,System.TimeSpan)">
            <summary>Receives a batch after the asynchronous operation.</summary>
            <param name="messageCount">The number of messages to return in the batch. As this is an approximation, 
            fewer or more messages than <paramref name="messageCount" /> may be returned.</param>
            <param name="serverWaitTime">The time span the server waits for processing messages.</param>
            <returns>A batch after the asynchronous operation.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>Receives a batch after the asynchronous operation.</summary>
            <param name="sequenceNumbers">The sequence number.</param>
            <returns>A batch after the asynchronous operation.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but the message with the requested sequenceNumber cannot be located.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveAsync">
            <summary>Asynchronously receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.InternalReceiver" />.</summary>
            <returns>A task instance that represents the asynchronous receive operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveAsync(System.TimeSpan)">
            <summary>Asynchronously receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.InternalReceiver" />.</summary>
            <param name="serverWaitTime">The time span the server waits for receiving a message before it times out.</param>
            <returns>A task instance that represents the asynchronous receive operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveAsync(System.Int64)">
            <summary>Asynchronously receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.InternalReceiver" />.</summary>
            <param name="sequenceNumber">The sequence number of the deferred message to receive.</param>
            <returns>A task instance that represents the asynchronous receive operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatchAsync(System.Int32)">
            <summary>Asynchronously receives a set of messages (for batch processing).</summary>
            <param name="messageCount">The number of messages to return in the batch. As this is an approximation, 
            fewer or more messages than <paramref name="messageCount" /> may be returned.</param>
            <returns>A task instance that represents the asynchronous receive batch operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatchAsync(System.Int32,System.TimeSpan)">
            <summary>Asynchronously receives a set of messages (for batch processing).</summary>
            <param name="messageCount">The number of messages to return in the batch. As this is an approximation, 
            fewer or more messages than <paramref name="messageCount" /> may be returned.</param>
            <param name="serverWaitTime">The time span the server waits for processing messages.</param>
            <returns>A task instance that represents the asynchronous receive batch operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatchAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>Asynchronously receives a set of messages (for batch processing).</summary>
            <param name="sequenceNumbers">The sequence number.</param>
            <returns>A task instance that represents the asynchronous receive batch operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Receive method. </summary>
            <param name="serverWaitTime">  The server wait time before it times out. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceiveBatch(System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of ReceiveBatch method. </summary>
            <param name="messageCount">The number of messages to receive in a batch.</param>
            <param name="serverWaitTime">The server wait time before it times out. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceive(System.Int64,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Receive method. </summary>
            <param name="sequenceNumber"> The sequence number of a message. This is given by Service Bus to 
            a message that user use to reference the message for an entity.  </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
            <seealso cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SequenceNumber"/>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64},System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Receive method. </summary>
            <param name="sequenceNumbers"> The sequence number of a message. This is given by Service Bus to 
            a message that user use to reference the message for an entity.  </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
            <seealso cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SequenceNumber"/>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndReceive(System.IAsyncResult)">
            <summary> Ends a message receive operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <returns> return the Received BrokeredMessage. A null is return if receive 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndReceiveBatch(System.IAsyncResult)">
            <summary> Ends a receive operation for a batch of messages. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <returns> return the Received BrokeredMessage. A null is return if receive 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Peek">
            <summary>Returns without removing the first message in the queue.</summary>
            <returns>The returned message.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Peek(System.Int64)">
            <summary>Returns without removing the first message in the queue.</summary>
            <param name="fromSequenceNumber">The starting point from which to browse a message.</param>
            <returns>The returned message.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekAsync">
            <summary>Asynchronously returns without removing the first message in the queue.</summary>
            <returns>A task instance that represents the asynchronous peek operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekAsync(System.Int64)">
            <summary>Asynchronously returns without removing the first message in the queue.</summary>
            <param name="fromSequenceNumber">The starting point from which to browse a message.</param>
            <returns>A task instance that represents the asynchronous peek operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatch(System.Int32)">
            <summary>Returns without removing the first messages in a batch.</summary>
            <param name="messageCount">The number of messages in a batch.</param>
            <returns>The collection of first messages in a batch.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatch(System.Int64,System.Int32)">
            <summary>Returns without removing the first messages in a batch.</summary>
            <param name="fromSequenceNumber">The starting point from which to browse a message.</param>
            <param name="messageCount">The number of messages in a batch.</param>
            <returns>The collection of first messages in a batch.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatchAsync(System.Int32)">
            <summary>Asynchronously returns without removing the first messages in a batch.</summary>
            <param name="messageCount">The number of messages in a batch.</param>
            <returns>A task instance that represents the asynchronous peek batch operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatchAsync(System.Int64,System.Int32)">
            <summary>Asynchronously returns without removing the first messages in a batch.</summary>
            <param name="fromSequenceNumber">The starting point from which to browse a message.</param>
            <param name="messageCount">The number of messages in a batch.</param>
            <returns>A task instance that represents the asynchronous peek batch operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeek(System.Int64,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Peek method. </summary>
            <param name="fromSequenceNumber"> The sequence number of message to start peeking from. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeekBatch(System.Int64,System.Int32,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Peek method. </summary>
            <param name="messageCount"> The maximum number of messages to peek. </param>
            <param name="fromSequenceNumber"> The sequence number of message to start peeking from. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndPeekBatch(System.IAsyncResult)">
            <summary> Ends a message Peek operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <returns> return a list of peeked BrokeredMessages. An empty list is returned if peek 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be peeked.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndPeek(System.IAsyncResult)">
            <summary> Ends a message Peek operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <returns> return a peeked BrokeredMessage. A null is returned if peek 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be peeked.</remarks>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription">
            <summary>Represents a description of the subscription.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MessageTimeToLiveDefaultValue">
            <summary>
              The message time to live default value
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionDescription.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> class.</summary>
            <param name="topicPath">The topic path.</param>
            <param name="subscriptionName">The subscription name.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration">
            <summary>Gets or sets the lock duration time span for the subscription.</summary>
            <value>The lock duration time span for the subscription.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.RequiresSession">
            <summary>Gets or sets the value indicating if a subscription supports the concept of session.</summary>
            <value>true if the receiver application can only receive from the queue through a 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />; false if a queue cannot receive using 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.DefaultMessageTimeToLive">
            <summary>Gets or sets the default message time to live value. This is the duration after which the message expires, starting from when the message is sent to the Service Bus. This is the default value used when 
            <see cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive" /> is not set on a message itself.Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages.A message can have a lower TimeToLive value than that specified here, but by default TimeToLive is set to 
            <see cref="F:System.TimeSpan.MaxValue" />. Therefore, this property becomes the default time to live value applied to messages.</summary> 
            <value>The default message time to live for a subscription.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.AutoDeleteOnIdle">
            <summary>Gets or sets the 
            <see cref="T:System.TimeSpan" /> idle interval after which the subscription is automatically deleted. The minimum duration is 5 minutes.</summary> 
            <value>The auto delete on idle time span for the subscription.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.EnableDeadLetteringOnMessageExpiration">
            <summary>Gets or sets the value that indicates if a subscription has dead letter support when a message expires.</summary>
            <value>true if a subscription has dead letter support when a message expires; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.EnableDeadLetteringOnFilterEvaluationExceptions">
            <summary>Gets or sets the value that indicates if a subscription has dead letter support on Filter evaluation exceptions.</summary>
            <value>true if a subscription has dead letter support on Filter evaluation exceptions; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MessageCount">
            <summary>Gets the number of messages.</summary>
            <value>The number of messages.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MessageCountDetails">
            <summary>Gets message details about the subscription.</summary>
            <value>Returns 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> with the number of active messages, dead letters, scheduled messages, messages transferred to other queues, subscriptions, or topics, and the number of messages transferred to the dead letter queue.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.TopicPath">
            <summary>Gets the path of the topic that this subscription description belongs to.</summary>
            <value>The path of the topic that this subscription description belongs to.</value>
            <remarks>
              This is a relative path to the <see cref = "P:Microsoft.ServiceBus.NamespaceManager.Address" />.
            </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.Name">
            <summary>Gets the name of the subscription description.</summary>
            <value>The name of the subscription description.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MaxDeliveryCount">
            <summary>Gets or sets the number of maximum deliveries.</summary>
            <value>The number of maximum deliveries.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.EnableBatchedOperations">
            <summary>Gets or sets a value that indicates whether the batched operations are enabled.</summary>
            <value>true if the batched operations are enabled; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.Microsoft#ServiceBus#Messaging#IResourceDescription#CollectionName">
            <summary>
              Gets the name of the collection.
            </summary>
            <value> The name of the collection. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.Status">
            <summary>Gets or sets the current status of the subscription (enabled or 
            disabled). When an entity is disabled, that entity cannot send or receive messages.</summary> 
            <value>The current status of the subscription.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.AvailabilityStatus">
            <summary>Gets the entity availability status for the messaging.</summary>
            <value>The entity availability status for the messaging.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.ForwardTo">
            <summary>Gets or sets the path to the recipient to which the message is forwarded.</summary>
            <value>The path to the recipient to which the message is forwarded.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.ForwardDeadLetteredMessagesTo">
            <summary>Gets or sets the path to the recipient to which the dead lettered messages are forwarded.</summary>
            <value>The path to the recipient to which the dead lettered messages are forwarded.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.CreatedAt">
            <summary>Gets the exact time the message was created.</summary>
            <value>The time the message was created.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.UpdatedAt">
            <summary>Gets the exact time the message has been updated.</summary>
            <value>The time the message has been updated.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.AccessedAt">
            <summary>Gets the last time a there was a receive request to this subscription.</summary>
            <value>The last time a there was a receive request to this subscription.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.UserMetadata">
            <summary>Gets or sets the user metadata.</summary>
            <value>The user metadata.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.PartitionDescription">
            <summary>Represents the metadata and approximate runtime information for a logical partition of an Event Hub.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.PartitionDescription.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.PartitionDescription" /> class.</summary>
            <param name="eventHubPath">The path of the Event Hub.</param>
            <param name="partitionId">The partition identifier.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.PartitionId">
            <summary>Gets the partition ID for the Event Hub to which it belongs.</summary>
            <value>The partition identifier.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.EventHubPath">
            <summary>Gets the path of the Event Hub.</summary>
            <value>The path of the Event Hub.</value>
            <remarks>
              This is a relative path to the <see cref = "P:Microsoft.ServiceBus.NamespaceManager.Address" />.
            </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.ConsumerGroupName">
            <summary>Gets the name of the Event Hubs consumer group.</summary>
            <value>The Event Hubs consumer group.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.EndSequenceNumber">
            <summary>Gets the end sequence number.</summary>
            <value>The end sequence number.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.BeginSequenceNumber">
            <summary>Gets the begin sequence number.</summary>
            <value>The begin sequence number.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.SizeInBytes">
            <summary>Gets the approximate size, in bytes, of the Event Hubs partition.</summary>
            <value>Returns <see cref="T:System.Int64" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.IncomingBytesPerSecond">
            <summary>Gets the approximate incoming rate of events (in bytes per second) for the partition.</summary>
            <value>Returns <see cref="T:System.Int64" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.OutgoingBytesPerSecond">
            <summary>Gets the approximate outgoing rate (in bytes per second) for the partition in the specified consumer group.</summary>
            <value>Returns <see cref="T:System.Int64" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.LastEnqueuedOffset">
            <summary>Gets the offset of the last enqueued event.</summary>
            <value>The offset of the last enqueued event.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.LastEnqueuedTimeUtc">
            <summary>Gets the enqueued UTC time of the last event.</summary>
            <value>The enqueued time of the last event.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.Microsoft#ServiceBus#Messaging#IResourceDescription#CollectionName">
            <summary> Gets the name of the collection.</summary>
            <value> The name of the collection. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.LastCheckpoint">
            <summary>Gets the LastCheckpoint of the partition.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessageCountDetails">
            <summary>This class contains properties that enable you to retrieve details 
            of messages from sub-queues of primary messaging entities (queues, topics, subscriptions).</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> class with the number of active messages, dead letters, scheduled messages, messages transferred to other queues, subscriptions, or topics, and the number of messages transferred to the dead letter queue.</summary> 
            <param name="activeMessageCount">The number of active messages.</param>
            <param name="deadletterMessageCount">The number of dead letters.</param>
            <param name="scheduledMessageCount">The number of scheduled messages.</param>
            <param name="transferMessageCount">The number of messages transferred to other queues, subscriptions, or topics.</param>
            <param name="transferDlqMessageCount">The number of messages transferred to the dead letter queue.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.ActiveMessageCount">
            <summary>Gets or sets the number of active messages in the queue, topic, or subscription.</summary>
            <value>Returns <see cref="T:System.Int64" /> that specifies the number of active messages.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.DeadLetterMessageCount">
            <summary>Gets or sets the number of messages that are dead letters.</summary>
            <value>Returns <see cref="T:System.Int64" />that specifies the number of messages that are dead letters.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.ScheduledMessageCount">
            <summary>Gets or sets the number scheduled messages.</summary>
            <value>Returns <see cref="T:System.Int64" />the number of scheduled messages.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferMessageCount">
            <summary>Gets or sets the number of messages transferred to another queue, topic, or subscription.</summary>
            <value>Returns <see cref="T:System.Int64" />that specifies the number of messages transferred to another queue, topic, or subscription</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferDeadLetterMessageCount">
            <summary>Gets or sets the number messages transferred into dead letters.</summary>
            <value>Returns <see cref="T:System.Int64" />that specifies the number messages transferred into dead letters.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertStatusCodeFromDetail(System.String)">
            <summary>
            This method assumes type != null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.BrokeredMessage">
            <summary>Represents the unit of communication between Service Bus clients.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.BrokeredMessage.messageFlags">
            <summary> The message flags </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.BrokeredMessage.MessageVersion1">
            <summary> The message version </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.Object)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> class from a given object by using DataContractSerializer with a binary XmlDictionaryWriter.</summary> 
            <param name="serializableObject">The object to be serialized into the message body.</param>
            <remarks>A default <see cref="T:Microsoft.ServiceBus.Messaging.DataContractBinarySerializer"/> is used for serializing the object.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
            <summary> Constructor that creates a BrokeredMessage from a given object using the provided XmlObjectSerializer </summary>
            <remarks> You should be aware of the exceptions that their provided Serializer can throw and take appropriate
            actions. Please refer to <see href="http://msdn.microsoft.com/en-us/library/ms574055.aspx"/> for 
            a possible list of exceptions and their cause. </remarks>
            <param name="serializableObject"> The serializable object. </param>
            <param name="serializer">         The serializer object. </param>
            <exception cref="T:System.ArgumentNullException">Thrown when null serializer is passed to the method 
            with a non-null serializableObject</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> class.</summary>
            <param name="messageBodyStream">The message body stream.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.IO.Stream,System.Boolean)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> class using the supplied stream as its body.</summary> 
            <param name="messageBodyStream">The message body stream.</param>
            <param name="ownsStream">true to indicate that the stream will be closed when the message is 
            closed; false to indicate that the stream will not be closed when the message is closed.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(Microsoft.ServiceBus.Messaging.BufferedInputStream,System.IO.Stream)">
            <summary> Creates the message. </summary>
            <param name="headerStream"> The header stream. </param>
            <param name="bodyStream">   The body stream. </param>
            <returns> . </returns>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.CorrelationId">
            <summary>Gets or sets the identifier of the correlation.</summary>
            <value>The identifier of the correlation.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SessionId">
            <summary>Gets or sets the identifier of the session.</summary>
            <value>The identifier of the session.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Publisher">
            <summary> Gets or sets the the Publisher. </summary>
            <value> Identifies the Publisher Sending the Message. </value>
            <exception cref="T:System.ObjectDisposedException">Thrown if message is in disposed state.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if <seealso cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.PartitionKey"/> or <seealso cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SessionId"/> are set to different values.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReplyToSessionId">
            <summary>Gets or sets the session identifier to reply to.</summary>
            <value>The session identifier to reply to.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeliveryCount">
            <summary>Gets the number of deliveries.</summary>
            <value>The number of deliveries.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the message has not been delivered by ServiceBus.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterSource">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ExpiresAtUtc">
            <summary>Gets the date and time in UTC at which the message is set to expire.</summary>
            <value>The message expiration time in UTC.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
            <exception cref="T:System.InvalidOperationException">If the message has not been delivered by ServerBus.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.RecordedExpiredAtUtc">
            <summary>
            This property is used on the Broker side only when we perform
            a deep group search for sessionful messages. in those cases we
            only do a partial message fetch, and so this property is used 
            to store the ExpiredAtUtc in that scenario.
            This property is also being set during Send to identify the effective message TTL
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.LockedUntilUtc">
            <summary>Gets the date and time in UTC until which the message will be locked in the queue/subscription.</summary>
            <value>The date and time until which the message will be locked in the queue/subscription.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the message was not received from the ServiceBus.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.LockToken">
            <summary>Gets the lock token assigned by Service Bus to this message.</summary>
            <value>The lock token assigned by Service Bus to this message.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the message was not received from the ServiceBus.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.MessageId">
            <summary>Gets or sets the identifier of the message. This is a 
            user-defined value that Service Bus can use to identify duplicate messages, if enabled.</summary> 
            <value>The identifier of the message.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in a disposed state.</exception>
            <exception cref="T:System.ArgumentException">Thrown if the message identifier is null or exceeds 128 characters in length.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReceiveContext">
            <summary> Gets or sets a context for the receive. </summary>
            <value> The receive context. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ContentType">
            <summary>Gets or sets the type of the content.</summary>
            <value>The type of the content of the message body. This is a 
            content type identifier utilized by the sender and receiver for application specific logic.</value> 
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.PartitionKey">
            <summary>Gets or sets a partition key for sending a transactional message to a queue or topic that is not session-aware.</summary>
            <value>The partition key for sending a transactional message.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ViaPartitionKey">
            <summary>Gets or sets a partition key value when a transaction is to be used to send messages via a transfer queue.</summary>
            <value>The partition key value when a transaction is to be used to send messages via a transfer queue.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Label">
            <summary>Gets or sets the application specific label.</summary>
            <value>The application specific label.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Destination">
            <summary> Gets or sets the destination. </summary>
            <value> The destination. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Properties">
            <summary>Gets the application specific message properties.</summary>
            <remarks>The size of each property object within the Properties bag cannot exceed 32 kilobytes.
            The collective size of the Properties bag cannot exceed 64 kilobytes.</remarks>
            <value>The application specific message properties.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReplyTo">
            <summary>Gets or sets the address of the queue to reply to.</summary>
            <value>The reply to queue address.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.EnqueuedTimeUtc">
            <summary>Gets or sets the date and time of the sent time in UTC.</summary>
            <value>The enqueue time in UTC. This value represents the actual time of enqueuing the message.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ScheduledEnqueueTimeUtc">
            <summary>Gets or sets the date and time in UTC at which the message will be enqueued. This 
            property returns the time in UTC; when setting the property, the supplied DateTime value must also be in UTC.</summary> 
            <value>The scheduled enqueue time in UTC. This value is for delayed message sending. 
            It is utilized to delay messages sending to a specific time in the future.</value> 
            <remarks> Message enquing time does not mean that the message will be sent at the same time. It will get enqueued, but the actual sending time
            depends on the queue's workload and its state. <seealso cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.EnqueuedTimeUtc"/></remarks>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the passed in value is DateTime.MaxValue.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SequenceNumber">
            <summary>Gets the unique number assigned to a message by the Service Bus.</summary>
            <value>The unique number assigned to a message by the Service Bus.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the message was not received from the message server.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.EnqueuedSequenceNumber">
            <summary>Gets or sets the enqueued sequence number of the message.</summary>
            <value>The enqueued sequence number of the message.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Size">
            <summary>Gets the size of the message in bytes.</summary>
            <value>The message size in bytes.</value>
            <remarks>The value of Size is only accurate after the BrokeredMessage instance is
            sent or received.</remarks>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.HeaderSize">
            <summary> Gets the size of the message header in bytes. </summary>
            <value> The size of the message header. </value>
            <exception cref="T:System.ObjectDisposedException">Thrown if message is in disposed state</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.State">
            <summary>Gets or sets the state of the message.</summary>
            <value>The state of the message.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive">
            <summary>Gets or sets the message’s time to live value. This is the duration after which the message expires, starting from when the message is sent to the Service Bus. Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages.TimeToLive is the maximum lifetime that a message can receive, but its value cannot exceed the entity specified the 
            <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.DefaultMessageTimeToLive" /> value on the destination queue or subscription. If a lower TimeToLive value is specified, it will be applied to the individual message. However, a larger value specified on the message will be overridden by the entity’s DefaultMessageTimeToLive value.</summary> 
            <value>The message’s time to live value.</value>
            <remarks>If the TTL set on a message by the sender exceeds the destination's TTL, then the message's TTL will be overwritten by the later one.
            See <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.DefaultMessageTimeToLive"/>, <see cref="P:Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive"/> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.DefaultMessageTimeToLive"/>
            to learn more about how to control message TTL at an entity level.</remarks>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the passed in value is less than or equal to TimeSpan.Zero.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.To">
            <summary>Gets or sets the send to address.</summary>
            <value>The send to address.</value>
            <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.IsBodyConsumed">
            <summary>Specifies whether the message has been consumed.</summary>
            <value>true if the message has been consumed; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ForcePersistence">
            <summary>Gets or sets a value that indicates whether the message is to be persisted to the database immediately, instead of being 
            held in memory for a short time. This property is ignored if the message is sent to a non-express queue or topic.</summary> 
            <value>true if the message is to be persisted to the database 
            immediately, instead of being held in memory for a short time; otherwise, false.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.IsActivatingScheduledMessage">
            <summary> Gets or sets the flag for whether the message is a scheduled message that's being activated. </summary>
            <value> The boolean value </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.BodyStream">
            <summary> Gets or sets the body stream. </summary>
            <value> The message body stream. </value>
            <exception cref="T:System.ObjectDisposedException">Thrown if message is in disposed state</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.InitializedMembers">
            <summary> Gets or sets the initialized members. </summary>
            <value> The initialized members. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.IsLockTokenSet">
            <summary> Gets a value indicating whether this object is lock token set. </summary>
            <value> true if this object is lock token set, false if not. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.IsBodyLoaded">
            <summary> Gets or sets a value indicating whether this object is body loaded. </summary>
            <value> true if this object is body loaded, false if not. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.BodyId">
            <summary> Gets the identifier of the body. </summary>
            <value> The identifier of the body. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.InternalId">
            <summary> Gets or sets the InternalId. </summary>
            <value> The InternalId. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.PrefilteredHeaders">
            <summary> Gets or sets the PrefilteredHeaders. </summary>
            <value> The prefiltered message headers. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.PrefilteredProperties">
            <summary> Gets or sets the PrefilteredProperties. </summary>
            <value> The prefiltered message properties. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.InternalBrokeredMessageState">
            <summary> Gets or sets the state. </summary>
            <value> The state. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SubqueueType">
            <summary> Gets or sets the subqueue type. </summary>
            <value> The subqueue type. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TransferDestination">
            <summary> EventHub only property. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.PersistedMessageSize">
            <summary> Gets or sets a value indicating the persisted size of the message in the store </summary>
            <value> the persisted message size </value>
            <remarks> The header size of the message changes as it travels through the various layers which
            can affect quota calculation. To avoid this we need a consistent message size property. </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.InternalProperties">
            <summary> Gets the internal properties. </summary>
            <value> The internal properties. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.IsFromCache">
            <summary> Gets or sets a value indicating whether the message came from cache or not. </summary>
            <value> true if came from cache, false if not. </value>
            <remarks> Used in Tests only </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.IsConsumed">
            <summary>
            Indicate if the BorkeredMessage has been accessed (or marked) as consumed.
            </summary>
            <remarks>Initially IsConsumed is false. First read of this property will also
            marked the IsConsumed to be true (atomically). Subsequence will be false. 
            
            Also note that this does not take transaction into account, so if a message 
            is marked as consumed but then transaction is aborted, this property will 
            continue to indicate false.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.CreateEmptyMessage">
            <summary> Creates the empty message. </summary>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.GetBody``1">
            <summary>Deserializes the brokered message body into an object of the specified type by using the 
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> with a binary 
            <see cref="T:System.Xml.XmlDictionaryReader" />.</summary> 
            <typeparam name="T">The type to which the message body will be deserialized.</typeparam>
            <returns>The deserialized object or graph.</returns>
            <exception cref="T:System.ObjectDisposedException">If the message is in disposed state or the message body stream is already disposed.</exception>
            <exception cref="T:System.InvalidOperationException">If the message contains a null body stream or the 
            body stream contains no data or the message body has already been consumed.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
            <summary>Deserializes the BrokeredMessage body into an object of the specified type using 
            DataContractSerializer with a Binary XmlObjectSerializer. </summary>
            <typeparam name="T"> Generic type parameter. </typeparam>
            <param name="serializer"> The serializer object. </param>
            <returns> The deserialized object/graph</returns>
            <exception cref="T:System.ObjectDisposedException"> Thrown if the message is in disposed state. </exception>
            <exception cref="T:System.ArgumentNullException"> Thrown when invoked with a Null serializer object. </exception>
            <exception cref="T:System.InvalidOperationException"> Thrown if the message contains a Null body stream, contains no data, 
            or if the stream has been read once (through any GetBody() calls). </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Abandon">
            <summary>Abandons the lock on a peek-locked message.</summary>
            <remarks> This operation should only be exercised on a message received in peek-lock mode.</remarks>
            <exception cref="T:System.ObjectDisposedException">Thrown when the message is in the disposed state or 
            the receiver with which the message was received is in disposed state.</exception> 
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the 
            message server or invoked on a message that has not been received in peek-lock mode.</exception> 
            <exception cref="T:System.TimeoutException">Thrown when operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown when the queue or subscription that receives 
            the message is no longer present in the message server.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">When service bus service is 
            busy and is unable process the request.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">When messaging entity the 
            message was received from has been deleted.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">When the lock associated with this message 
            was lost or the lock token was not found.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">When this message was received from a 
            Session and the lock associated with the session was lost.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">When the security token provided by the 
            TokenProvider does not contain the claims to perform this operation.</exception> 
            <exception cref="T:System.ServiceModel.QuotaExceededException">When the number of concurrent connections 
            to an entity exceed the maximum allowed value.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Abandon(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Abandons the lock on a peek-locked message.</summary>
            <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
            <remarks> This operation should only be exercised on a message received in peek-lock mode.</remarks>
            <exception cref="T:System.ObjectDisposedException">Thrown when
                                                 <list type="bullet">
                                                                      <item>message is in disposed state.</item>
                                                                     <item>the receiver with which the messsage was received is in disposed state</item>
                                                 </list></exception>
            <exception cref="T:System.InvalidOperationException">Thrown when
                                                 <list type="bullet">
                                                                      <item>invoked on a message that has not been received from the message server.</item>
                                                                     <item>invoked on a message that has not been received in peek-lock mode</item>
                                                  </list></exception>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings"/>. You
                                            may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/> to avoid this exception if timeout value
                                            is relatively low.
                                            <seealso cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/></exception>
            <exception cref="T:System.ServiceModel.CommunicationException">Thrown when the queue or subscription that the message was received from is no longer present in the message server.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.AbandonAsync">
            <summary>Asynchronously abandons the lock on a peek-locked message.</summary>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.AbandonAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asynchronously abandons the lock on a peek-locked message.</summary>
            <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginAbandon(System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous operation to abandon the lock on a peek-locked message. </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndAbandon(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous request to abandon the lock on a peek-locked message. </returns>
            <exception cref="T:System.ObjectDisposedException">Thrown when
                                                 <list type="bullet">
                                                                      <item>message is in disposed state.</item>
                                                                     <item>the receiver with which the messsage was received is in disposed state</item>
                                                 </list></exception>
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginAbandon(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous operation to abandon the lock on a peek-locked message. </summary>
            <param name="propertiesToModify">  updates properties on the message being abandoned. </param>     
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndAbandon(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous request to abandon the lock on a peek-locked message. </returns>
            <exception cref="T:System.ObjectDisposedException">Thrown when
                                                 <list type="bullet">
                                                                      <item>message is in disposed state.</item>
                                                                     <item>the receiver with which the messsage was received is in disposed state</item>
                                                 </list></exception>
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndAbandon(System.IAsyncResult)">
            <summary> Ends an asynchronous request to abandon the lock on a peek-locked message. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the <see cref="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Abandon"/>.  </param>
            <exception cref="T:System.ArgumentException">Thrown if an incorrect IAsyncResult is provided. The IAsyncResult object passed to 'End' must be the one returned from the matching 'Begin' or 
                                                passed to the callback provided to 'Begin'.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if invoked with a Null result.</exception>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings"/>. You
                                            may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/> to avoid this exception if timeout value
                                            is relatively low.
                                            <seealso cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/></exception>
            <exception cref="T:System.ServiceModel.CommunicationException">Thrown when the queue or subscription that the message was received from is no longer present in the message server.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received in peek-lock mode</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.RenewLock">
            <summary>Renews the lock on a message.</summary>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">If 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient" /> is true, you can retry the operation immediately.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">You can retry the operation immediately.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if you have called 
            <see cref="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.RenewLock" /> too late. In a session, this is never thrown.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown instead of 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException" /> if the message is from a 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.RenewLockAsync">
            <summary>Asynchronously renews the lock on a message.</summary>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Complete">
            <summary>Completes the receive operation of a message and indicates that the message should be marked as processed and deleted.</summary>
            <remarks > This method is used as a handshake between the receiver and Service Bus for a guaranteed delivery of the message. If the
            receiver failed before calling this method, the message will be kept in the queue.</remarks>
            <exception cref="T:System.ObjectDisposedException">Thrown when the message is in disposed state or 
            the receiver with which the message was received is in disposed state.</exception> 
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the 
            message server or invoked on a message that has not been received in peek-lock mode.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown when the queue or subscription that receives 
            the message is no longer present in the message server.</exception> 
            <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the lock on the message has expired. LockDuration is an entity-wide setting and can be initialized through 
            <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and 
            <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for queues and subscriptions respectively.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown if the lock on the session has expired. The session lock duration is the same as the message LockDuration and is an entity-wide setting. It can be initialized through 
            <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and 
            <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for queues and subscriptions respectively.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">When service bus service is 
            busy and is unable process the request.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">When messaging entity the 
            message was received from has been deleted.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">When the security token provided by the 
            TokenProvider does not contain the claims to perform this operation.</exception> 
            <exception cref="T:System.ServiceModel.QuotaExceededException">When the number of concurrent connections 
            to an entity exceed the maximum allowed value.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.CompleteAsync">
            <summary>Asynchronously completes the receive operation of a message and 
            indicates that the message should be marked as processed and deleted.</summary> 
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginComplete(System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous operation to complete a message </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndComplete(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous request to complete a message. </returns>
            <exception cref="T:System.ObjectDisposedException">Thrown when
                                                 <list type="bullet">
                                                                      <item>message is in disposed state.</item>
                                                                     <item>the receiver with which the messsage was received is in disposed state</item>
                                                 </list></exception>
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndComplete(System.IAsyncResult)">
            <summary> Ends an asynchronous operation to complete a message. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <exception cref="T:System.ArgumentException">Thrown if an incorrect IAsyncResult is provided. The IAsyncResult object passed to 'End' must be the one returned from the matching 'Begin' or 
                                                passed to the callback provided to 'Begin'.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if invoked with a Null result.</exception>
            <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Thrown when the queue or subscription that the message was received from is no longer present in the message server.</exception>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings"/>. You
                                            may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/> to avoid this exception if timeout value
                                            is relatively low.
                                            <seealso cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/></exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the lock on the message has expired. LockDuration is an entity wide setting and can be initialized through
                                            <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration"/> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration"/> for Queues and Subscriptions respectively.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown if the lock on the session has expired. Session lock durations are same as messge LockDuration and is an entity wide setting.
                                            It can be initialized throgh <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration"/> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration"/> 
                                            for Queues and Subscriptions respectively.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received in peek-lock mode.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Defer">
            <summary>Indicates that the receiver wants to defer the processing for this message.</summary>
            <remarks>Before deferring the message, user MUST set aside the message receipt for later retrieval. </remarks>
            <exception cref="T:System.ObjectDisposedException">Thrown when the message is in the disposed state or 
            the receiver with which the message was received is in the disposed state.</exception> 
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the 
            message server or invoked on a message that has not been received in peek-lock mode.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown when the queue or subscription that receives 
            the message is no longer present in the message server.</exception> 
            <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the lock on the message has expired. LockDuration is an entity-wide setting and can be initialized through 
            <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and 
            <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for queues and subscriptions respectively.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown if the lock on the session has expired. The session lock duration is the same as the message LockDuration and is an entity-wide setting. It can be initialized through 
            <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and 
            <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for queues and subscriptions respectively.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">When service bus service is 
            busy and is unable process the request.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">When messaging entity the 
            message was received from has been deleted.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">When the security token provided by the 
            TokenProvider does not contain the claims to perform this operation.</exception> 
            <exception cref="T:System.ServiceModel.QuotaExceededException">When the number of concurrent connections 
            to an entity exceed the maximum allowed value.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Defer(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Indicates that the receiver wants to defer the processing for this message.</summary>
            <remarks>Before deferring the message, user MUST set aside the message receipt for later retrieval. </remarks>
            <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeferAsync">
            <summary>Asynchronously indicates that the receiver wants to defer the processing for this message.</summary>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeferAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asynchronously indicates that the receiver wants to defer the processing for this message.</summary>
            <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDefer(System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous operation to defer a message. </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndDefer(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous request to defer a message. </returns>
            <exception cref="T:System.ObjectDisposedException">Thrown when
                                                 <list type="bullet">
                                                                      <item>message is in disposed state.</item>
                                                                     <item>the receiver with which the messsage was received is in disposed state</item>
                                                 </list></exception>
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDefer(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous operation to defer a message. </summary>
            <param name="propertiesToModify">  updates properties on the message being deadlettered. </param>     
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndDefer(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous request to defer a message. </returns>
            <exception cref="T:System.ObjectDisposedException">Thrown when
                                                 <list type="bullet">
                                                                      <item>message is in disposed state.</item>
                                                                     <item>the receiver with which the messsage was received is in disposed state</item>
                                                 </list></exception>
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDefer(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Begins a defer. </summary>
            <param name="propertiesToModify"> </param>
            <param name="timeout">  The timeout. </param>
            <param name="callback"> The callback. </param>
            <param name="state">    The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndDefer(System.IAsyncResult)">
            <summary> Ends an asynchronous request to defer a message. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Defer.  </param>
            <exception cref="T:System.ArgumentException">Thrown if an incorrect IAsyncResult is provided. The IAsyncResult object passed to 'End' must be the one returned from the matching 'Begin' or 
                                                passed to the callback provided to 'Begin'.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if invoked with a Null result.</exception>
            <exception cref="T:System.ServiceModel.CommunicationException">Thrown when the queue or subscription that the message was received from is no longer present in the message server.</exception>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings"/>. You
                                            may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/> to avoid this exception if timeout value
                                            is relatively low.
                                            <seealso cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/></exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the lock on the message has expired. LockDuration is an entity wide setting and can be initialized through
                                            <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration"/> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration"/> for Queues and Subscriptions respectively.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown if the lock on the session has expired. Session lock durations are same as messge LockDuration and is an entity wide setting.
                                            It can be initiailized throgh <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration"/> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration"/> 
                                            for Queues and Subscriptions respectively.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received in peek-lock mode.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetter(System.String,System.String)">
            <summary>Moves the message to the dead letter queue.</summary>
            <param name="deadLetterReason">The reason for deadlettering the message.</param>
            <param name="deadLetterErrorDescription">The description information for deadlettering the message.</param>
            <exception cref="T:System.ObjectDisposedException">Thrown when the message is in disposed state or 
            the receiver with which the message was received is in disposed state.</exception> 
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the 
            message server or invoked on a message that has not been received in peek-lock mode.</exception> 
            <exception cref="T:System.ServiceModel.CommunicationException">Thrown when the queue or subscription that receives 
            the message is no longer present in the message server.</exception> 
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the lock on the message has expired. LockDuration is an entity-wide setting and can be initialized through 
            <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and 
            <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for Queues and Subscriptions respectively.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown if the lock on the session has expired. Session lock duration is the same as message LockDuration and is an entity-wide setting. It can be initialized through 
            <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and 
            <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for Queues and Subscriptions respectively.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterAsync">
            <summary>Asynchronously moves the message to the dead letter queue.</summary>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterAsync(System.String,System.String)">
            <summary>Asynchronously moves the message to the dead letter queue.</summary>
            <param name="deadLetterReason">The reason for deadlettering the message.</param>
            <param name="deadLetterErrorDescription">The description information for deadlettering the message.</param>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asynchronously moves the message to the dead letter queue.</summary>
            <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetter(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Moves the message to the dead letter queue.</summary>
            <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetter">
            <summary>Moves the message to the dead letter queue.</summary>
            <exception cref="T:System.ObjectDisposedException">Thrown when the message is in disposed state or 
            the receiver with which the message was received is in disposed state.</exception> 
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the 
            message server or invoked on a message that has not been received in peek-lock mode.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDeadLetter(System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous operation to move the message to the dead letter queue. </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndDeadLetter delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous request to dead letter the message. </returns>
            <exception cref="T:System.ObjectDisposedException">Thrown when
                                                 <list type="bullet">
                                                                      <item>message is in disposed state.</item>
                                                                     <item>the receiver with which the messsage was received is in disposed state</item>
                                                 </list></exception>
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDeadLetter(System.String,System.String,System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous operation to move the message to the dead letter queue. </summary>
            <param name="deadLetterReason">  The reason for deadlettering the message. </param>
            <param name="deadLetterErrorDescription">  The description information for deadlettering the message. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndDeadLetter delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous request to dead letter the message. </returns>
            <exception cref="T:System.ObjectDisposedException">Thrown when
                                                 <list type="bullet">
                                                                      <item>message is in disposed state.</item>
                                                                     <item>the receiver with which the messsage was received is in disposed state</item>
                                                 </list></exception>
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDeadLetter(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous operation to move the message to the dead letter queue. </summary>
            <param name="propertiesToModify">  updates properties on the message being deadlettered. </param>        
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndDeadLetter delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous request to dead letter the message. </returns>
            <exception cref="T:System.ObjectDisposedException">Thrown when
                                                 <list type="bullet">
                                                                      <item>message is in disposed state.</item>
                                                                     <item>the receiver with which the messsage was received is in disposed state</item>
                                                 </list></exception>
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndDeadLetter(System.IAsyncResult)">
            <summary> Ends an asynchronous request to move the message to the dead letter queue. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the asynchronous request to dead letter the message.  </param>
            <exception cref="T:System.ArgumentException">Thrown if an incorrect IAsyncResult is provided. The IAsyncResult object passed to 'End' must be the one returned from the matching 'Begin' or 
                                                passed to the callback provided to 'Begin'.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if invoked with a Null result.</exception>
            <exception cref="T:System.ServiceModel.CommunicationException">Thrown when the queue or subscription that the message was received from is no longer present in the message server.</exception>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings"/>. You
                                            may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/> to avoid this exception if timeout value
                                            is relatively low.
                                            <seealso cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/></exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the lock on the message has expired. LockDuration is an entity wide setting and can be initialized through
                                            <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration"/> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration"/> for Queues and Subscriptions respectively.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown if the lock on the session has expired. Session lock durations are same as messge LockDuration and is an entity wide setting.
                                            It can be initiailized throgh <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration"/> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration"/> 
                                            for Queues and Subscriptions respectively.</exception>        
            <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received in peek-lock mode.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.ToString">
            <summary>Returns a string that represents the current message.</summary>
            <returns>The string representation of the current message.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.ValidateMessageId(System.String)">
            <summary> Validate message identifier. </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when messageId is null, or empty or greater than the maximum message length.
            </exception>
            <param name="messageId"> Identifier for the message. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.ValidateSessionId(System.String)">
            <summary> Validate session identifier. </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when sessionId is greater than the maximum session ID length.
            </exception>
            <param name="sessionId"> Identifier for the session. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing 
            in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the XmlSchemaProviderAttribute to the class.</summary> 
            <returns>An XmlSchema that describes the XML representation of the object that 
            is produced by the WriteXml method and consumed by the ReadXml method.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>Generates an object from its XML representation. This method is reserved for internal use 
            and should not be used directly or indirectly (for example, using a serializer or a formatter).</summary> 
            <param name="reader">The XmlReader stream from which the object is deserialized.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>Converts an object into its XML representation. This method is reserved for internal use 
            and should not be used directly or indirectly (e.g. using a serializer or a formatter).</summary> 
            <param name="writer">The XmlWriter stream to which the object is serialized.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Clone">
            <summary>Clones a message, so that it is possible to send a clone of a message as a new message.</summary>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that contains the cloned message.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.CreateMessage(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary> Creates a message copy. </summary>
            <param name="originalMessage"> Message describing the original. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.CreateCopy">
            <summary> Creates the copy. </summary>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.GetHeaderStream(Microsoft.ServiceBus.Common.InternalBufferManager,Microsoft.ServiceBus.Messaging.SerializationTarget)">
            <summary> Gets a header stream. </summary>
            <param name="bufferManager"> Manager for buffer. </param>    
            <param name="serializationTarget"></param>    
            <returns> The header stream. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Dispose(System.Boolean)">
            <summary> Performs application-defined tasks associated with freeing, releasing, or resetting
            unmanaged resources. </summary>
            <param name="disposing"> true if resources should be disposed, false if not. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeserializeBodyStream(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Xml.XmlReader)">
            <summary> Deserialize body stream. </summary>
            <exception cref="P:Microsoft.ServiceBus.Messaging.FxTrace.Exception"> Thrown when as error. </exception>
            <param name="message"> The message. </param>
            <param name="reader">
            The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.
            </param>
            <returns>return the size of the body stream in bytes</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeserializeHeadersFromBinary(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Xml.XmlReader)">
            <summary> Deserialize headers from binary. </summary>
            <param name="message"> The message. </param>
            <param name="reader">
            The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.
            </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeserializePropertiesFromBinary(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Xml.XmlReader)">
            <summary> Deserialize properties from binary. </summary>
            <param name="message"> The message. </param>
            <param name="reader">
            The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.
            </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReadBytes(System.Xml.XmlReader,System.Int32)">
            <summary> Reads the bytes. </summary>
            <exception cref="P:Microsoft.ServiceBus.Messaging.FxTrace.Exception"> Thrown when as error. </exception>
            <param name="reader">
            The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.
            </param>
            <param name="bytesToRead"> The bytes to read. </param>
            <returns> The bytes. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.SerializeBodyStream(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Xml.XmlWriter)">
            <summary> Serialize body stream. </summary>
            <exception cref="P:Microsoft.ServiceBus.Messaging.FxTrace.Exception"> Thrown when as error. </exception>
            <param name="message"> The message. </param>
            <param name="writer">
            The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.
            </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.SerializeHeadersAsBinary(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Xml.XmlWriter,Microsoft.ServiceBus.Messaging.SerializationTarget)">
            <summary> Serialize headers as binary. </summary>
            <exception cref="P:Microsoft.ServiceBus.Messaging.FxTrace.Exception"> Thrown when as error. </exception>
            <param name="message"> The message. </param>
            <param name="writer">
            The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.
            </param>
            <param name="serializationTarget"></param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.SerializePropertiesAsBinary(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Xml.XmlWriter)">
            <summary> Serialize properties as binary. </summary>
            <exception cref="P:Microsoft.ServiceBus.Messaging.FxTrace.Exception"> Thrown when as error. </exception>
            <param name="message"> The message. </param>
            <param name="writer">
            The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.
            </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.CopyMessageHeaders(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Boolean)">
            <summary> Copies the message headers described by originalMessage. </summary>
            <param name="originalMessage"> Message describing the original. </param>
            <param name="clientSideCloning"> specific if it is a client side initialized code path.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EnsureHeaderDeserialized">
            <summary> Ensures that header deserialized. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EnsureReceiverHeaders">
            <summary> Ensures that receiver headers. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.GetHeaderCount">
            <summary> Gets the header count. </summary>
            <returns> The header count. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.ThrowIfNotLocked">
            <summary> Throw if not locked. </summary>
            <exception cref="P:Microsoft.ServiceBus.Messaging.FxTrace.Exception"> Thrown when as error. </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.ThrowIfReceiveContextIsNull(System.String)">
            <summary> Throw if receive context is null. </summary>
            <exception cref="P:Microsoft.ServiceBus.Common.Fx.Exception"> Thrown when as error. </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.ThrowIfDisposed">
            <summary> Throw if disposed. </summary>
            <exception cref="P:Microsoft.ServiceBus.Common.Fx.Exception"> Thrown when object disposed. </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.ThrowIfNotReceived">
            <summary> Throw if not received. </summary>
            <exception cref="P:Microsoft.ServiceBus.Common.Fx.Exception"> Thrown when as error. </exception>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.BrokeredMessage.BinarySerializationItem">
            <summary> Binary serialization item. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.BinarySerializationItem.Extractor">
            <summary> Gets or sets the extractor. </summary>
            <value> The extractor. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.BinarySerializationItem.FieldId">
            <summary> Gets or sets the identifier of the field. </summary>
            <value> The identifier of the field. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.BinarySerializationItem.ShouldSerialize">
            <summary> Gets or sets the should serialize. </summary>
            <value> The should serialize. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.BinarySerializationItem.CalculateSize">
            <summary> Gets the serialized size in bytes (maybe an estimate). </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReceiverHeaders">
            <summary> Receiver headers. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReceiverHeaders.DeliveryCount">
            <summary> Gets or sets the number of deliveries. </summary>
            <value> The number of deliveries. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReceiverHeaders.LockedUntilUtc">
            <summary> Gets or sets the Date/Time of the locked until utc. </summary>
            <value> The locked until utc. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReceiverHeaders.LockToken">
            <summary> Gets or sets the lock token. </summary>
            <value> The lock token. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReceiverHeaders.SequenceNumber">
            <summary> Gets or sets the sequence number. </summary>
            <value> The sequence number. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReceiverHeaders.EnqueuedSequenceNumber">
            <summary> Gets or sets the enqueued sequence number. </summary>
            <value> The Enqueued sequence number. </value>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingFactory">
            <summary> The MessagingFactory class is the anchor class used for run time operations to send and receive to and from queues, topics, or subscriptions. </summary>
            <example>
            <code>
            string Address = "sb://myapp.WindowsAzure.com/"; //base address of namespace you are connecting to.
            MessagingFactorySettings MsgFactorySettings = new MessagingFactorySettings(); //specify operating timeout (optional)
            MessagingFactory MsgFactory = MessagingFactory.Create(Address, MsgFactorySettings);
            </code>
            </example>
            <remarks>Please note that any member method with CreateXXXClient, such as CreateQueueClient, does not create a new entity in the namespace. It only
                     gets handle to an existing entity created earlier using the <see cref="T:Microsoft.ServiceBus.NamespaceManager"/>. If these entities does not exist in the namespace, you will 
                     get an exception.</remarks>
            <seealso cref="T:Microsoft.ServiceBus.NamespaceManager"/> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.Address">
            <summary>Gets the base address of the messaging factory.</summary>
            <value>A URI that represents the base address of the messaging factory.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.NamespaceEndpoints">
            <summary>Gets a list of namespace endpoints.</summary>
            <value>A list of namespace endpoints.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount">
            <summary>Gets or sets the number of messages that the message receiver can simultaneously request.</summary>
            <value>The number of messages that the message receiver can simultaneously request.</value>
            <remarks> Takes effect on the next acceptmessagesession call to the server </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.OperationTimeout">
            <summary> Gets the operation timeout. </summary>
            <value> The operation timeout. </value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create">
            <summary>Creates a new messaging factory object.</summary>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateFromConnectionString(System.String)">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object from a connection string.</summary>
            <param name="connectionString">The connection string.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String)">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
            <param name="address">The base address of the service namespace.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
            <param name="addresses">An enumeration of base addresses.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri)">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
            <param name="address">The namespace base address.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
            <param name="addresses">An enumeration of address.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.TokenProvider)">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
            <param name="address">The base address of the namespace.</param>
            <param name="tokenProvider">The token provider.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
            <exception cref="T:System.UriFormatException">Thrown when <paramref name="address" /> is empty.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="tokenProvider" /> or <paramref name="address" /> are null.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
            <param name="addresses">An enumeration of base addresses.</param>
            <param name="tokenProvider">The token provider.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.TokenProvider)">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
            <param name="address">The base address of the namespace.</param>
            <param name="tokenProvider">The token provider.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="tokenProvider" /> or <paramref name="address" /> are null.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
            <param name="addresses">An enumeration of address.</param>
            <param name="tokenProvider">The token provider.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
            <param name="address">The base address of the service namespace.</param>
            <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
            <exception cref="T:System.UriFormatException">Thrown when <paramref name="address" /> is empty.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="factorySettings" 
            /> or <paramref name="address" /> are null.</exception> 
            <exception cref="T:System.ArgumentException">
              <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
            <param name="addresses">An enumeration of base addresses.</param>
            <param name="factorySettings">The factory settings.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
            <param name="address">The namespace base address.</param>
            <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="address" /> or <paramref name="factorySettings" /> is null.</exception>
            <exception cref="T:System.ArgumentException">
              <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
            <param name="addresses">An enumeration of address.</param>
            <param name="factorySettings">The factory settings.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String)">
            <summary>Asynchronously creates a new messaging factory object.</summary>
            <param name="address">The base address of the service namespace.</param>
            <returns>A task instance that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Asynchronously creates a new messaging factory object.</summary>
            <param name="addresses">An enumeration of base addresses.</param>
            <returns>A task instance that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri)">
            <summary>Asynchronously creates a new messaging factory object.</summary>
            <param name="address">The namespace base address.</param>
            <returns>A task instance that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>Asynchronously creates a new messaging factory object.</summary>
            <param name="addresses">An enumeration of address.</param>
            <returns>A task instance that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.TokenProvider)">
            <summary>Asynchronously creates a new messaging factory object.</summary>
            <param name="address">The base address of the service namespace.</param>
            <param name="tokenProvider">The token provider.</param>
            <returns>A task instance that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)">
            <summary>Asynchronously creates a new messaging factory object.</summary>
            <param name="addresses">An enumeration of base addresses.</param>
            <param name="tokenProvider">The token provider.</param>
            <returns>A task instance that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.TokenProvider)">
            <summary>Asynchronously creates a new messaging factory object.</summary>
            <param name="address">The namespace base address.</param>
            <param name="tokenProvider">The token provider.</param>
            <returns>A task instance that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)">
            <summary>Asynchronously creates a new messaging factory object.</summary>
            <param name="addresses">An enumeration of address.</param>
            <param name="tokenProvider">The token provider.</param>
            <returns>A task instance that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
            <summary>Asynchronously creates a new messaging factory object.</summary>
            <param name="address">The base address of the service namespace.</param>
            <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
            <returns>A task instance that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
            <summary>Asynchronously creates a new messaging factory object.</summary>
            <param name="addresses">An enumeration of base addresses.</param>
            <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
            <returns>A task instance that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
            <summary>Asynchronously creates a new messaging factory object.</summary>
            <param name="address">The namespace base address.</param>
            <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
            <returns>A task instance that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
            <summary>Asynchronously creates a new messaging factory object.</summary>
            <param name="addresses">An enumeration of address.</param>
            <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
            <returns>A task instance that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)">
            <summary> Ends asynchronous request of create a MessagingFactory object. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the create a MessagingFactory.  </param>
            <returns> Newly created MessagingFactory. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String)">
            <summary>Creates a new queue client.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <returns>The newly created queue client.</returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="path" /> is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="path" /> length is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" />.</exception>
            <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> object. You may need to increase the value of 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
            <exception cref="T:System.OperationCanceledException">The factory has been closed or aborted.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary>Creates a new queue client.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <param name="receiveMode">The receive mode.</param>
            <returns>The newly created queue client.</returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="path" /> is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="path" /> length is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" />.</exception>
            <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> object. You may need to increase the value of 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
            <exception cref="T:System.OperationCanceledException">The factory has been closed or aborted.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateEventHubClient(System.String)">
            <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" /> object using the specified path.</summary>
            <param name="path">The path to the Event Hub.</param>
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" /> object.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="path" /> is null.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateTopicClient(System.String)">
            <summary>Creates a new topic client.</summary>
            <param name="path">The topic path relative to the service namespace base address.</param>
            <returns>The newly created topic client.</returns>
            <exception cref="T:System.ArgumentNullException">The supplied <paramref name="path" /> is null.</exception>
            <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> object. You may need to increase the value of 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
            <exception cref="T:System.OperationCanceledException">The factory has been closed or aborted.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String)">
            <summary>Creates a subscription client.</summary>
            <param name="topicPath">The topic path relative to the service namespace.</param>
            <param name="name">The name of the subscription.</param>
            <returns>The newly created subscription client.</returns>
            <exception cref="T:System.ArgumentException">The supplied <paramref name="topicPath" /> is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="topicPath" /> is greater than 
            <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" />.</exception> 
            <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> object. You may need to increase the value of 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
            <exception cref="T:System.OperationCanceledException">The factory has been closed or aborted.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary>Creates a new subscription client.</summary>
            <param name="topicPath">The topic path relative to the service namespace.</param>
            <param name="name">The name of the subscription.</param>
            <param name="receiveMode">The receive mode.</param>
            <returns>The newly created subscription client.</returns>
            <exception cref="T:System.ArgumentException">The supplied <paramref name="topicPath" /> is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="topicPath" /> is greater than 
            <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" />.</exception> 
            <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> object. You may need to increase the value of 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
            <exception cref="T:System.OperationCanceledException">The factory has been closed or aborted.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.IncrementConnectionResetCount(System.Uri)">
            <summary />
            <param name="endpoint" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.GetSettings">
            <summary>Retrieves a copy of the settings of the messaging factory.</summary>
            <returns>A copy of the messaging factory settings.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.PairNamespaceAsync(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions)">
            <summary>Asynchronously pairs a namespace.</summary>
            <param name="options">The pairing options.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary>Executes the create queue client action.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <param name="receiveMode">The receive mode.</param>
            <returns>The newly created queue client.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateTopicClient(System.String)">
            <summary>Executes the create topic client action.</summary>
            <param name="path">The path of the topic relative to the service namespace base address.</param>
            <returns>The newly created topic client.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateEventHubClient(System.String)">
            <summary>Executes the create event hub client action.</summary>
            <param name="path">The path of the event hub client.</param>
            <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary>Executes a create subscription client action.</summary>
            <param name="topicPath">The path of the subscription relative to the service namespace base address.</param>
            <param name="name">The name of the subscription.</param>
            <param name="receiveMode">The receive mode.</param>
            <returns>A newly created subscription client.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary>Executes a create subscription client action.</summary>
            <param name="subscriptionPath">The subscription path.</param>
            <param name="receiveMode">The receive mode.</param>
            <returns>A newly created subscription client.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String)">
            <summary>Creates a message receiver.</summary>
            <param name="entityPath">The path of the entity.</param>
            <returns>The newly created message receiver.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.ResetConnection">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary>Creates a message receiver.</summary>
            <param name="entityPath">The path of the entity.</param>
            <param name="receiveMode">The receive mode.</param>
            <returns>The newly created message receiver.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)">
            <summary> Creates a message receiver. </summary>
            <param name="entityPath">  Name of the entity. </param>
            <param name="receiveMode"> The receive mode. </param>
            <param name="timeout">     The timeout. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String)">
            <summary>Asynchronously creates a message receiver.</summary>
            <param name="entityPath">The path of the entity.</param>
            <returns>A task instance that represents the asynchronous create message receiver operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary>Asynchronously creates a message receiver.</summary>
            <param name="entityPath">The path of the entity.</param>
            <param name="receiveMode">The receive mode.</param>
            <returns>A task instance that represents the asynchronous create message receiver operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Begins a create message receiver. </summary>
            <param name="entityPath">  Name of the entity. </param>
            <param name="receiveMode"> The receive mode. </param>
            <param name="timeout">     The timeout. </param>
            <param name="callback">    The callback. </param>
            <param name="state">       The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreateMessageReceiver(System.IAsyncResult)">
            <summary> Ends a create message receiver. </summary>
            <param name="result"> The result. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginAcceptMessageSession(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Begins an accept session receiver. </summary>
            <param name="entityName">  Name of the entity. </param>
            <param name="sessionId">  Id of the session. </param>
            <param name="receiveMode"> The receive mode. </param>
            <param name="serverWaitTime"> The server wait time before it times out. </param>
            <param name="timeout"> The timeout for the operation. </param>
            <param name="callback">    The callback. </param>
            <param name="state">       The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndAcceptMessageSession(System.IAsyncResult)">
            <summary> Ends an accept message session. </summary>
            <param name="result"> The result. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
            <summary> Accept session receiver. </summary>
            <param name="entityName">  Name of the entity. </param>
            <param name="sessionId">  Id of the session. </param>
            <param name="receiveMode"> The receive mode. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan)">
            <summary> Accept session receiver. </summary>
            <param name="entityName">  Name of the entity. </param>
            <param name="sessionId">  Id of the session. </param>
            <param name="receiveMode"> The receive mode. </param>
            <param name="serverWaitTime"> The server wait time for an available session. </param>
            <param name="timeout"> The timeout</param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession">
            <summary>Returns available sessions across all session-enabled subscriptions and queues in the service namespace.</summary>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction. </returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession(System.TimeSpan)">
            <summary>Returns available sessions across all session-enabled subscriptions and queues in the service namespace.</summary>
            <param name="serverWaitTime">The processing time out.</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync">
            <summary>Asynchronously returns available sessions across all session-enabled subscriptions and queues in the service namespace.</summary>
            <returns>A task instance that represents the asynchronous operation for accept message session.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync(System.TimeSpan)">
            <summary>Asynchronously returns available sessions across all session-enabled subscriptions and queues in the service namespace.</summary>
            <param name="serverWaitTime">The processing time out.</param>
            <returns>A task instance that represents the asynchronous operation for accept message session.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String)">
            <summary>Creates a message sender.</summary>
            <param name="entityPath">The path of the entity.</param>
            <returns>The newly created message sender.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String,System.TimeSpan)">
            <summary> Creates a message sender. </summary>
            <param name="entityPath"> Name of the entity. </param>
            <param name="timeout">    The timeout. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String,System.String)">
            <summary>Creates a message sender.</summary>
            <param name="transferDestinationEntityPath">The transfer destination entity path.</param>
            <param name="viaEntityPath">The via-entity path.</param>
            <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String,System.String,System.TimeSpan)">
            <summary> Creates a message sender. </summary>
            <param name="transfserDestinationEntityPath"> Name of the destination entity. </param>
            <param name="viaEntityPath"> Name of the via entity. </param>
            <param name="timeout">    The timeout. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String)">
            <summary>Asynchronously creates a message sender.</summary>
            <param name="entityPath">The path of the entity.</param>
            <returns>A task instance that represents the asynchronous create message sender operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String,System.String)">
            <summary>Asynchronously creates a message sender.</summary>
            <param name="transferDestinationEntityPath">The transfer destination entity path.</param>
            <param name="viaEntityPath">The via-entity path.</param>
            <returns>A task instance that represents the asynchronous create message sender operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreateMessageSender(System.IAsyncResult)">
            <summary> Ends a create message sender. </summary>
            <param name="result"> The result. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin create message receiver action.</summary>
            <param name="entityName">The name of the entity.</param>
            <param name="receiveMode">The message receive mode.</param>
            <param name="timeout">The wait time before the operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message receiver action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageReceiver(System.IAsyncResult)">
            <summary>Executes the end create message receiver action.</summary>
            <param name="result">The result.</param>
            <returns>The executed <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" /> action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)">
            <summary>Executes the create message receiver action.</summary>
            <param name="entityName">The name of the entity.</param>
            <param name="receiveMode">The message receive mode.</param>
            <param name="timeout">The timeout.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message receiver action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin accept session receiver action.</summary>
            <param name="entityName">The name of the entity.</param>
            <param name="sessionId">The session identifier.</param>
            <param name="receiveMode">The message receive mode.</param>
            <param name="timeout">The wait time before the operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous accept session receiver action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptSessionReceiver(System.IAsyncResult)">
            <summary>Executes the end accept session receiver action.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> object that stores state information and any user-defined data for this asynchronous operation.</param> 
            <returns>The executed <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin accept message session action.</summary>
            <param name="receiveMode">The receive mode.</param>
            <param name="serverWaitTime">The server wait time.</param>
            <param name="timeout">The operation timeout.</param>
            <param name="callback">The asynchronous callback.</param>
            <param name="state">The session state.</param>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptMessageSession(System.IAsyncResult)">
            <summary>Executes the end accept message session action.</summary>
            <param name="result">The result of the operation.</param>
            <returns>The executed <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan)">
            <summary>Executes the accept message session.</summary>
            <param name="receiveMode">The message receive mode.</param>
            <param name="serverWaitTime">The server wait time.</param>
            <param name="timeout">The operation timeout.</param>
            <returns>The executed message session.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)">
            <summary>Executes the accept session receiver action.</summary>
            <param name="entityName">The name of the entity.</param>
            <param name="sessionId">The session identifier.</param>
            <param name="receiveMode">The message receive mode.</param>
            <param name="timeout">The wait time before the operation times out.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous accept session receiver action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin create message sender action.</summary>
            <param name="entityName">The name of the entity.</param>
            <param name="timeout">The timeout.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message sender action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin create message sender action.</summary>
            <param name="transferDestinationEntityName">The name of the transfer destination entity.</param>
            <param name="viaEntityName">The via-entity name.</param>
            <param name="timeout">The timeout.</param>
            <param name="callback">The callback message.</param>
            <param name="state">The state.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message sender action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageSender(System.IAsyncResult)">
            <summary>Executes the end create message sender action.</summary>
            <param name="result">The result.</param>
            <returns>The executed <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.TimeSpan)">
            <summary>Executes the create message sender action.</summary>
            <param name="entityName">The name of the entity.</param>
            <param name="timeout">The timeout.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message sender action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.String,System.TimeSpan)">
            <summary>Executes the create message sender action.</summary>
            <param name="transferDestinationEntityName">The name of the transfer destination entity.</param>
            <param name="viaEntityName">The via-entity name.</param>
            <param name="timeout">The message timeout.</param>
            <returns>The executed <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAbort">
            <summary>Executes the abort action.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnClose(System.TimeSpan)">
            <summary>Executes the close action.</summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin close action.</summary>
            <param name="timeout">The timeout.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous close action.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndClose(System.IAsyncResult)">
            <summary>Executes the end close action.</summary>
            <param name="result">The result.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsyncResult">
            <summary> Create message sender asynchronous result. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsyncResult.#ctor(Microsoft.ServiceBus.Messaging.MessagingFactory,System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Constructor. </summary>
            <param name="factory">    The factory. </param>
            <param name="entityName"> Name of the entity. </param>
            <param name="transferDestinationEntityName"> Name of the transfer destination entity. </param>
            <param name="tryPairSender">    If possible, should the returned sender also attempt pairing. </param>
            <param name="timeout">    The timeout. </param>
            <param name="callback">   The callback. </param>
            <param name="state">      The state. </param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsyncResult.Sender">
            <summary> Gets or sets the sender. </summary>
            <value> The sender. </value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsyncResult.GetAsyncSteps">
            <summary> Gets the asynchronous steps. </summary>
            <returns> The asynchronous steps. </returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsyncResult">
            <summary> Create message receiver asynchronous result. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsyncResult.#ctor(Microsoft.ServiceBus.Messaging.MessagingFactory,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Constructor. </summary>
            <param name="factory">     The factory. </param>
            <param name="entityName">  Name of the entity. </param>
            <param name="receiveMode"> The receive mode. </param>
            <param name="timeout">     The timeout. </param>
            <param name="callback">    The callback. </param>
            <param name="state">       The state. </param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsyncResult.Receiver">
            <summary> Gets or sets the receiver. </summary>
            <value> The receiver. </value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsyncResult.GetAsyncSteps">
            <summary> Gets the asynchronous steps. </summary>
            <returns> The asynchronous steps. </returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsyncResult">
            <summary> Accept message session asynchronous result. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsyncResult.#ctor(Microsoft.ServiceBus.Messaging.MessagingFactory,System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Constructor. </summary>
            <param name="factory">     The factory. </param>
            <param name="entityName">  Name of the entity. </param>
            <param name="sessionId">  Id of the session. </param>
            <param name="receiveMode"> The receive mode. </param>
            <param name="serverWaitTime"> The server wait time for a session to be available. </param>
            <param name="timeout"> The time out</param>
            <param name="callback">    The callback. </param>
            <param name="state">       The state. </param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsyncResult.MessageSession">
            <summary> Gets or sets the group receiver. </summary>
            <value> The group receiver. </value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsyncResult.GetAsyncSteps">
            <summary> Gets the asynchronous steps. </summary>
            <returns> The asynchronous steps. </returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessagingFactoryAsyncResult">
            <summary> Create messaging factory asynchronous result. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessagingFactoryAsyncResult.#ctor(Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.Collections.Generic.IEnumerable{System.Uri},System.AsyncCallback,System.Object)">
            <summary> Constructor. </summary>
            <param name="settings"> Options for controlling the operation. </param>
            <param name="addresses">  The addresses. </param>
            <param name="callback"> The callback. </param>
            <param name="state">    The state. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessagingFactoryAsyncResult.End(System.IAsyncResult)">
            <summary> Ends. </summary>
            <param name="result"> The result. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessagingFactoryAsyncResult.CreateComplete(System.IAsyncResult)">
            <summary> Creates a complete. </summary>
            <param name="result"> The result. </param>
            <returns> true if it succeeds, false if it fails. </returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessageReceiver">
             <summary> The MessageReceiver class is used to receive messages from the message container and acknowledge them. </summary>
             <remarks>Please note that message delivery mechanism does not provide by default all time reliable message
                      receiving. Service Bus deletes the message once it goes out of the system. For a guaranteed delivery, you 
                      can use the PeekLock delivery mode.
             <example>
             <code>
             //********************************************************************************
             //                             Sending messages to a Queue
             //********************************************************************************
             
             // Create a sender
             MessageSender myMessageSender = myQueueClient.CreateSender(SendMode.Default);
             
             // Send messages
             List&lt;string&gt; Issues = new List&lt;string&gt;();
             foreach (var issue in Issues)
             {
             myMessageSender.Send(new BrokeredMessage(issue));
             }
             </code>
             </example>
             <example>
             <code>
             //********************************************************************************
             //                           Recieving messages from a Queue
             //********************************************************************************
             
             // Create a receiver
             MessageReceiver myMessageReceiver = 
             myQueueClient.CreateReceiver(ReceiveMode.PeekLock);
            
             // Receive messages
             for (int count = 0; count &lt; Issues.Count; count++)
             {
             var message = myMessageReceiver.Receive();
             message.Complete();
             }
             </code>         
             </example>
             <example>
             <code>
             //********************************************************************************
             //                    Receiving messages from a particular session
             //********************************************************************************
             
             // Create subscription client
             SubscriptionClient mySubscriptionClient = factory.CreateSubscriptionClient(mySubscription);
             
             // Create a receiver
             MessageReceiver myMessageReceiver = mySubscriptionClient.AcceptMessageSession(ReceiveMode.PeekLock);
             
             // Receive messages
             for (int count = 0; count *lt; Issues.Count; count++)
             {
             var message = myMessageReceiver.Receive();
             message.Complete();
             }
             </code>
             </example>
             </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.Path">
            <summary>Gets the path of the queue or topic, relative to the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> base address.</summary> 
            <value>A string representing the path of the queue or topic.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.BatchFlushInterval">
            <summary>Gets the batch flush interval.</summary>
            <value>The batch flush interval. The default value is 20 ms.</value>
            <remarks>You can set the value of it via SbmpTransportSetting.BatchFlushInterval</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.LastPeekedSequenceNumber">
            <summary>Gets or sets the sequence number of the message last peeked.</summary>
            <value>The sequence number of the message last peeked.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.Mode">
            <summary>Gets the message receive mode.</summary>
            <value>The message receive mode.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiverStartTime">
            <summary>Gets or sets the start time of the receiver.</summary>
            <value>The start time of the receiver.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.OffsetInclusive">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.StartOffset">
            <summary>Gets or sets the starting point of the offset.</summary>
            <value>The starting point of the offset.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.SupportsGetRuntimeEntityDescription">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.BatchingEnabled">
            <summary>Gets a value indicating whether the batching is enabled.</summary>
            <value>true if batching is enabled; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.PrefetchCount">
            <summary>Gets or sets the number of messages that the message receiver can simultaneously request.</summary>
            <value>The number of messages that the message receiver can simultaneously request.</value>
            <remarks> Takes effect on the next receive call to the server. </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.Identifier">
            <summary>Gets or sets the identifier of a receiver which was set during the creation of the receiver.</summary> 
            <value>A string representing the identifier of a receiver. It will return null if the identifier is not set.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
            <summary>Processes a message in an event-driven message pump.</summary>
            <param name="callback">The method to invoke when the operation is complete.</param>
            <param name="options">Specifies the 
            <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" />options with which to instantiate the message pump.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
            <summary>Asynchronously processes a message in an event-driven message pump.</summary>
            <param name="callback">The method to invoke when the operation is complete.</param>
            <param name="options">Specifies the 
            <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" />options with which to instantiate the message pump.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Abandon(System.Guid)">
            <summary>Discards the message and relinquishes the message lock ownership.</summary>
            <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
            <remarks>When the message receiver fails to get the message from the queue/topic, this method should be called. 
                     The Service Bus will increment the delivery count of the message. 
                     The message receiver now can either attempt to receive the message again or move it to the dead-letter queue.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Abandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Discards the message and relinquishes the message lock ownership.</summary>
            <param name="lockToken">The lock token.</param>
            <param name="propertiesToModify">The properties to modify.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.AbandonAsync(System.Guid)">
            <summary>Asynchronously discards the message and relinquishes the message lock ownership.</summary>
            <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.AbandonAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asynchronously discards the message and relinquishes the message lock ownership.</summary>
            <param name="lockToken">The lock token.</param>
            <param name="propertiesToModify">The properties to modify.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
            <summary> Begins an abandon. </summary>
            <param name="lockToken"> The lockToken of the BrokeredMessage. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndAbandon delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous AcceptMessageSession. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndAbandon(System.IAsyncResult)">
            <summary> Ends the message abandon operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Abandon.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Complete(System.Guid)">
            <summary>Completes the receive operation on a message.
            If using AMQP, this operation can only be performed on messages that were received by this receiver.</summary>
            <param name="lockToken">The lock token of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />. This is only available when a message is received in peek-lock mode. The lock token is used internally to complete or abandon a message.</param> 
            <remarks > This method is used as a handshake between the receiver and Service Bus for a guaranteed delivery of the message. If the
                       receiver failed before calling this method, the message will be kept in the queue.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.CompleteAsync(System.Guid)">
            <summary>Asynchronously completes the receive operation on a message.
            If using AMQP, this operation can only be performed on messages that were received by this receiver.</summary>
            <param name="lockToken">The lock token.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.CompleteBatch(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>Completes the receive operation on a batch of message.
            If using AMQP, this operation can only be performed on messages that were received by this receiver.</summary>
            <param name="lockTokens">The lock tokens.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.CompleteBatchAsync(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>Asynchronously completes the receive operation on a batch of message.
            If using AMQP, this operation can only be performed on messages that were received by this receiver.</summary>
            <param name="lockTokens">The lock tokens.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginComplete(System.Guid,System.AsyncCallback,System.Object)">
            <summary> Begins a complete. </summary>
            <param name="lockToken">  The lockToken of the BrokeredMessage. 
                                      This is only available when a message is received in peek-lock mode. Lock token is used internally to complete or abandon message. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndComplete(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginCompleteBatch(System.Collections.Generic.IEnumerable{System.Guid},System.AsyncCallback,System.Object)">
            <summary> Begins a complete. </summary>
            <param name="lockTokens">  The lockTokens of the BrokeredMessage objects. 
                                      This is only available when a message is received in peek-lock mode. Lock token is used internally to complete or abandon message. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndComplete(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndComplete(System.IAsyncResult)">
            <summary> Ends a complete. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndCompleteBatch(System.IAsyncResult)">
            <summary> Ends a complete. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Defer(System.Guid)">
            <summary>Indicates that the receiver wants to defer the processing for the message.</summary>
            <param name="lockToken">The lock token of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />. This is only available when a message is received in peek-lock mode. The lock token is used internally to complete or abandon a message.</param> 
            <exception cref="P:Microsoft.ServiceBus.Common.Fx.Exception">Receive context is null.</exception>
            <remarks>Before deferring user should set aside the message receipt for later retrieval. </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Defer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Indicates that the receiver wants to defer the processing for the message.</summary>
            <param name="lockToken">The lock token.</param>
            <param name="propertiesToModify">The properties to modify.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeferAsync(System.Guid)">
            <summary>Asynchronously defer the processing of the message.</summary>
            <param name="lockToken">The lock token.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeferAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asynchronously defer the processing of the message.</summary>
            <param name="lockToken">The lock token.</param>
            <param name="propertiesToModify">The properties to modify.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDefer(System.Guid,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Defer method. </summary>
            <param name="lockToken">Message's lock toekn</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndDefer delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndDefer(System.IAsyncResult)">
            <summary> Ends the message defer operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceive(System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Receive method. </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceiveBatch(System.Int32,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of ReceiveBatch method. </summary>
            <param name="messageCount"> The number of messages to fetch</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Receive method. </summary>
            <param name="serverWaitTime"> The server wait time before it times out. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceiveBatch(System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of ReceiveBatch method. </summary>
            <param name="messageCount"> The number of messages to fetch</param>
            <param name="serverWaitTime">  The server wait time before it times out. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceive(System.Int64,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Receive method. </summary>
            <param name="sequenceNumber"> The sequence number of a message. This is given by Service Bus to 
            a message that user use to reference the message for an entity.  </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
            <seealso cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SequenceNumber"/>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndReceive(System.IAsyncResult)">
            <summary> Ends a message receive operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <returns> return the Received BrokeredMessage. A null is return if receive 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessageReceiver.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Receive">
            <summary>Receives a <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> from the current queue or topic.</summary>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />  that represents the received message.</returns>
            <remarks>A Null can be returned by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatch(System.Int32)">
            <summary>Receives a batch of messages.</summary>
            <param name="messageCount">The number of messages to return in the batch. As this is an approximation, 
            fewer or more messages than <paramref name="messageCount" /> may be returned.</param>
            <returns>A batch of messages.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Receive(System.TimeSpan)">
            <summary>Receives a <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> from the current queue or topic.</summary>
            <param name="serverWaitTime">The time span the server waits before the operation times out.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />  that represents the received message.</returns>
            <remarks>A Null can be returned by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatch(System.Int32,System.TimeSpan)">
            <summary>Receives a batch of messages.</summary>
            <param name="messageCount">The number of messages to return in the batch. As this is an approximation, 
            fewer or more messages than <paramref name="messageCount" /> may be returned.</param>
            <param name="serverWaitTime">The server wait time.</param>
            <returns>A batch of messages.</returns>
            <remarks>A Null can be returned by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Receive(System.Int64)">
            <summary>Receives a message from the current queue or topic.</summary>
            <param name="sequenceNumber">The sequence number of the message to receive.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />  that represents the received message.</returns>
            <remarks>A Null can be returned by this API if operation exceeded the timeout specified, 
            or the operations succeeded but the message with the requested sequenceNumber cannot be located.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveAsync">
            <summary>Asynchronously receives a message from the current queue or topic.</summary>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveAsync(System.TimeSpan)">
            <summary>Asynchronously receives a message from the current queue or topic.</summary>
            <param name="serverWaitTime">The time span the server waits before the operation times out.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveAsync(System.Int64)">
            <summary>Asynchronously receives a message from the current queue or topic.</summary>
            <param name="sequenceNumber">The sequence number of the message to receive.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>Receives a batch of messages.</summary>
            <param name="sequenceNumbers">The sequence numbers.</param>
            <returns>A batch of messages.</returns>
            <remarks>A Null can be returned by this API if operation exceeded the timeout specified, 
            or the operations succeeded but the message with the requested sequenceNumber cannot be located.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatchAsync(System.Int32)">
            <summary>Asynchronously receives a batch of messages.</summary>
            <param name="messageCount">The number of messages to return in the batch. As this is an approximation, 
            fewer or more messages than <paramref name="messageCount" /> may be returned.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatchAsync(System.Int32,System.TimeSpan)">
            <summary>Asynchronously receives a batch of messages.</summary>
            <param name="messageCount">The number of messages to return in the batch. As this is an approximation, 
            fewer or more messages than <paramref name="messageCount" /> may be returned.</param>
            <param name="serverWaitTime">The server wait time.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatchAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>Asynchronously receives a batch of messages.</summary>
            <param name="sequenceNumbers">The sequence numbers.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="propertiesToModify">The properties to modify.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetter(System.Guid,System.String,System.String)">
            <summary>Moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="deadLetterReason">The reason for deadlettering the message.</param>
            <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetter(System.Guid)">
            <summary>Moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetterAsync(System.Guid)">
            <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetterAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="propertiesToModify">The properties to modify.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetterAsync(System.Guid,System.String,System.String)">
            <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
            <param name="lockToken">The lock token bound to the locked message instance.</param>
            <param name="deadLetterReason">The reason for deadlettering the message.</param>
            <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDeadLetter(System.Guid,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of DeadLetter method </summary>
            <param name="lockToken">  The message lockToken. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndDeadLetter delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDeadLetter(System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of DeadLetter method </summary>
            <param name="lockToken">  The message lockToken. </param>
            <param name="deadLetterReason">  The reason for deadlettering the message. </param>
            <param name="deadLetterErrorDescription">  The description information for deadlettering the message. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndDeadLetter delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndDeadLetter(System.IAsyncResult)">
            <summary> Ends a move to dead letter queue. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <exception cref="T:System.TimeoutException">Thrown when operation times out</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.TryReceive(System.TimeSpan,Microsoft.ServiceBus.Messaging.BrokeredMessage@)">
            <summary> Try receive. </summary>
            <param name="serverWaitTime"> The serverWaitTime. </param>
            <param name="message"> [out] The message. </param>
            <returns> true if it succeeds, false if it fails. </returns>
            <remarks> This API can have the following outcome:
            return true with message != null - a message was received.
            return false with message == null - a timeout has occurred.
            return true with message == null - a call was successful but
            there are no more message to received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.GetLockToken(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Gets the lock token bound to the message.</summary>
            <param name="message">The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> from which to get the lock token.</param>
            <returns>The lock token of the message.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.GetLockTokens(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>Gets the collection of lock tokens from the specified collection of messages.</summary>
            <param name="messages">The collection of messages from which to get the lock tokens.</param>
            <returns>The collection of lock tokens from the specified messages.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin try receive action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="messageCount"> Number of messages. </param>
            <param name="serverWaitTime"> The server wait time before it times out. </param>
            <param name="callback">     The callback. </param>
            <param name="state">        The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndTryReceive(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
            <summary>Executes the end try receive action.</summary>
            <param name="result">The result.</param>
            <param name="messages">The received message collection.</param>
            <returns>true if it succeeds; false if it fails.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceiveEventData(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the OnTryReceive or BeginTryReceive operation for the event data.</summary>
            <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to try to receive event data.</returns>
            <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
            <param name="messageCount">The number of messages to try receiving.</param>
            <param name="serverWaitTime">The time span the operation waits before it times out.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndTryReceiveEventData(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData}@)">
            <summary>Executes the EndTryReceive action for the event data.</summary>
            <param name="result">The result.</param>
            <param name="messages">The received message collection.</param>
            <returns>true if it succeeds; false if it fails.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceive2(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin try receive action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="messageCount"> Number of messages. </param>
            <param name="serverWaitTime"> The server wait time before it times out. </param>
            <param name="callback">     The callback. </param>
            <param name="state">        The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndTryReceive2(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
            <summary>Executes the end try receive action.</summary>
            <param name="result">The result.</param>
            <param name="messages">The received message collection.</param>
            <returns>true if it succeeds; false if it fails.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
            <summary> Executes the try receive action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="messageCount"> Number of messages. </param>
            <param name="serverWaitTime">  The server wait time before it times out. </param>
            <param name="messages">     [out] The messages. </param>
            <returns> true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin try receive action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="sequenceNumbers"> The sequenceNumbers. </param>
            <param name="timeout">  The timeout. </param>
            <param name="callback"> The callback. </param>
            <param name="state">    The state. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
            <summary> Executes the try receive action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="sequenceNumbers"> The receipts. </param>
            <param name="timeout">  The timeout. </param>
            <param name="messages"> [out] The messages. </param>
            <returns> true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the OnDefer or BeginDefer operation.</summary>
            <returns>An<see cref="T:System.IAsyncResult" /> that references the asynchronous operation to suspend processing of messages.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "lockTokens" > The collection of lock tokens bound to the locked message instances.</param>
            <param name = "propertiesToModify" > The properties to modify.</param>
            <param name = "fromSync" > The start of synchronization.</param>
            <param name = "timeout" > The time span the operation waits before it times out.</param>
            <param name = "callback" > An <see cref= "T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndDefer(System.IAsyncResult)">
            <summary>Executes the end defer action.</summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
            <summary> Executes the defer action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="lockTokens"> The lock tokens. </param>
            <param name="propertiesToModify"></param>
            <param name="timeout">    The timeout. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the OnDeadLetter or BeginDeadLetter operation.</summary>
            <returns>An<see cref="T:System.IAsyncResult" /> that references the asynchronous operation to move undelivered of messages to the deadletter queue.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "lockTokens" > The collection of lock tokens bound to the locked message instances.</param>
            <param name = "propertiesToModify" > The properties to modify.</param>
            <param name = "deadLetterReason" > The reason for deadlettering the messages.</param>
            <param name = "deadLetterErrorDescription" > The error description for deadlettering the messages.</param>
            <param name = "fromSync" > The start of the synchronization.</param>
            <param name = "timeout" > The time span the operation waits before it times out.</param>
            <param name = "callback" > An <see cref= "T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndDeadLetter(System.IAsyncResult)">
            <summary>Executes the end move to dead letter queue action.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronously completed operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.TimeSpan)">
            <summary> Executes the move to dead letter queue action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="propertiesToModify"></param>
            <param name="deadLetterReason">  The reason for deadlettering the message. </param>
            <param name="deadLetterErrorDescription">  The description information for deadlettering the message. </param>
            <param name="lockTokens"> The lock tokens. </param>
            <param name="timeout">    The timeout. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginRenewMessageLocks(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the OnBegin operation for lock messages.</summary>
            <returns>An<see cref="T:System.IAsyncResult" /> that references the asynchronous operation to renew processing of lock messages.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "lockTokens" > The collection of lock tokens bound to the locked message instances.</param>
            <param name = "fromSync" > The start of the synchronization.</param>
            <param name = "timeout" > The time span the operation waits before it times out.</param>
            <param name = "callback" > An <see cref= "T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndRenewMessageLocks(System.IAsyncResult)">
            <summary>Executes the EndRenew action for message locks.</summary>
            <param name="result">The result of the operation.</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of lock messages.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnRenewMessageLocks(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
            <summary>Executes the Renew action for lock messages.</summary>
            <returns>The renewed lock messages.</returns>
            <param name = "trackingContext" > The tracking context.</param>
            <param name = "lockTokens" > The lock tokens.</param>
            <param name = "timeout" > The time span the operation waits before it times out.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the OnComplete or BeginComplete operation.</summary>
            <returns>An<see cref="T:System.IAsyncResult" /> that references the asynchronous operation to complete receiving of messages.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "lockTokens" > The collection of lock tokens bound to the locked message instances.</param>
            <param name = "fromSync" > The start of the synchronization.</param>
            <param name = "timeout" > The time span the operation waits before it times out.</param>
            <param name = "callback" > An <see cref= "T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the OnComplete or BeginComplete operation.</summary>
            <returns>An<see cref="T:System.IAsyncResult" /> that references the asynchronous operation to complete receiving of messages.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "deliveryTags" > A collection of delivery tags.</param>
            <param name = "fromSync" > The start of the synchronization.</param>
            <param name = "timeout" > The time span the operation waits before it times out.</param>
            <param name = "callback" > An <see cref= "T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndComplete(System.IAsyncResult)">
            <summary>Executes the end complete action.</summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
            <summary> Executes the complete action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="lockTokens"> The lock tokens. </param>
            <param name="timeout">    The timeout. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the OnAbandon or BeginAbandon operation.</summary>
            <returns>An<see cref="T:System.IAsyncResult" /> that references the asynchronous operation to abandon the messages and relinquish its lock.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "lockTokens" > The collection of lock tokens bound to the locked message instances.</param>
            <param name = "propertiesToModify" > The properties to modify.</param>
            <param name = "fromSync" > The start of the synchronization.</param>
            <param name = "timeout" > The time span the operation waits before it times out.</param>
            <param name = "callback" > An <see cref= "T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndAbandon(System.IAsyncResult)">
            <summary>Executes the end abandon action.</summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
            <summary> Executes the abandon action. </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="lockTokens"> The lock tokens. </param>
            <param name="propertiesToModify"></param>
            <param name="timeout">    The timeout. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnCreateReceiveContext(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary> Executes the create peek lock context action. </summary>
            <param name="message"> The message. </param>
            <returns> . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.IncrementContinuousErrorCount">
            <summary> Increment continuous error count </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ResetContinuousErrorCount">
            <summary> Reset continuous error count </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.GetProperty``1">
            <summary />
            <typeparam name="T" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.GetTopMessage(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary> Gets a top message. </summary>
            <param name="messages"> The messages. </param>
            <returns> The top message. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.SetReceiveContext(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary> Sets a peek lock context. </summary>
            <param name="messages"> The messages. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Peek">
            <summary>Reads the next message without changing the state of the receiver or the message source.</summary>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the next message to be read.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Peek(System.Int64)">
            <summary>Reads the next message without changing the state of the receiver or the message source.</summary>
            <param name="fromSequenceNumber">The sequence number from where to read the message.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the next message to be read.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekAsync">
            <summary>Asynchronously reads the next message without changing the state of the receiver or the message source.</summary>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekAsync(System.Int64)">
            <summary>Asynchronously reads the next message without changing the state of the receiver or the message source.</summary>
            <param name="fromSequenceNumber">The sequence number from where to read the message.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatch(System.Int32)">
            <summary>Reads the next batch of message without changing the state of the receiver or the message source.</summary>
            <param name="messageCount">The number of message.</param>
            <returns>The batch of message to be read.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatch(System.Int64,System.Int32)">
            <summary>Reads the next batch of message without changing the state of the receiver or the message source.</summary>
            <param name="fromSequenceNumber">The sequence number from where to read a batch message.</param>
            <param name="messageCount">The number of message.</param>
            <returns>The batch of message to be read.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatchAsync(System.Int32)">
            <summary>Asynchronously reads the next batch of message without changing the state of the receiver or the message source.</summary>
            <param name="messageCount">The number of message.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatchAsync(System.Int64,System.Int32)">
            <summary>Asynchronously reads the next batch of message without changing the state of the receiver or the message source.</summary>
            <param name="fromSequenceNumber">The sequence number from where to read a batch message.</param>
            <param name="messageCount">The number of message.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndPeek(System.IAsyncResult)">
            <summary> Ends the message Peek operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndPeekBatch(System.IAsyncResult)">
            <summary> Ends the message Peek operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginPeek(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int64,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the BeginPeek operation.</summary>
            <returns>The result of the operation.</returns>
            <param name = "trackingContext" > The context information associated by a transaction tracking this operation.</param>
            <param name = "fromSequenceNumber" > The sequence number from where to begin the operation.</param>
            <param name = "messageCount" > The number of message.</param>
            <param name = "timeout" > The time span the operation waits before it times out.</param>
            <param name = "callback" > An <see cref= "T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
            <param name = "state" > A user-defined object that contains state information about the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndPeek(System.IAsyncResult)">
            <summary>Executes the EndPeek operation.</summary>
            <param name="result">The result of the operation.</param>
            <returns>A list of messages.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnPeek(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int64,System.Int32,System.TimeSpan)">
             <summary>Executes upon calling the Peek operation.</summary>
             <returns>The messages peeked.</returns>
             <param name = "trackingContext" > The tracking context.</param>
            <param name = "fromSequenceNumber" > The sequence number from where to peek.</param>
             <param name = "messageCount" > The number of message.</param>
             <param name = "timeout" > The time span the operation waits before it times out.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessageSender">
             <summary> The MessageSender class is used to send messages from the Service Bus. </summary>
             <remarks>Please note that message delivery mechanism does not provide by default all time reliable message
                      receiving. Service Bus deletes the message once it goes out of the system. For a guaranteed delivery, you 
                      can use the PeekLock delivery mode.
             <example>
             <code>
             //********************************************************************************
             //                             Sending messages to a Queue
             //********************************************************************************
             
             // Create a sender
             MessageSender myMessageSender = myQueueClient.CreateSender(SendMode.Default);
             
             // Send messages
             List&lt;object&gt; Issues = new List&lt;object&gt;();
             foreach (var issue in Issues)
             {
             myMessageSender.Send(new BrokeredMessage(issue));
             }
             </code>
             </example>
             <example>
             <code>
             //********************************************************************************
             //                           Recieving messages from a Queue
             //********************************************************************************
             
             // Create a receiver
             MessageReceiver myMessageReceiver = 
             myQueueClient.CreateReceiver(ReceiveMode.PeekLock);
            
             // Receive messages
             for (int count = 0; count &lt; Issues.Count; count++)
             {
             var message = myMessageReceiver.Receive();
             message.Complete();
             }
             </code>         
             </example>
             </remarks> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.Path">
            <summary>Gets the path of the queue or topic relative to the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> base address.</summary> 
            <value>The path of the queue or topic relative to the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> base address.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.BatchFlushInterval">
            <summary>Gets the batch flush interval.</summary>
            <value>A batch flush interval. The default value is 20 ms.</value>
            <exception cref="T:System.OperationCanceledException">Thrown when the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> is in closing, closed, or faulted state.</exception> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.SupportsGetRuntimeEntityDescription">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.BatchingEnabled">
            <summary>Gets a value indicating whether the batching is enabled.</summary>
            <value>true if batching is enabled; otherwise, false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Sends the specified brokered message.</summary>
            <param name="message">The brokered message to send.</param>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="message" /> is null.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Asynchronously sends the specified brokered message.</summary>
            <param name="message">The brokered message to send.</param>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>Sends a set of brokered messages (for batch processing).</summary>
            <param name="messages">The collection of brokered messages to send.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>Asynchronously sends a set of brokered messages (for batch processing).</summary>
            <param name="messages">The collection of brokered messages to send.</param>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.BeginSend(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous request to send a BrokeredMessage. </summary>
            <param name="message">  The BrokeredMessag. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSend(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous create a queue. </returns>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings"/>. You
                                            may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/> to avoid this exception if timeout value
                                            is relatively low.
                                            <seealso cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout"/></exception>
            <exception cref="T:System.ArgumentException"> Thrown when the BrokeredMessage is null. </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSend(System.IAsyncResult)">
            <summary> Ends an asynchronous request to send a message. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the send method.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSendBatch(System.IAsyncResult)">
            <summary> Ends an asynchronous request to send a batch of messages. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the send method.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin send action. This method is intended for internal consumption and cannot be implemented in a concrete class by the user.</summary>
            <param name="trackingContext"></param>
            <param name="messages"></param>
            <param name="fromSync"></param>
            <param name="timeout"></param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndSend(System.IAsyncResult)">
            <summary>Executes the end send action. This method is intended for internal consumption and cannot be implemented in a concrete class by the user.</summary>
            <param name="result"></param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSendEventData(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData},System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin send event data action. This method is intended for internal consumption and cannot be implemented in a concrete class by the user.</summary>
            <param name="trackingContext"></param>
            <param name="eventDatas"></param>
            <param name="timeout"></param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndSendEventData(System.IAsyncResult)">
            <summary>Executes the end send event data action. This method is intended for internal consumption and cannot be implemented in a concrete class by the user.</summary>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan)">
            <summary>
            This allows concrete implementations to override (if needed) what should be done when sending <paramref name="messages"/> in a synchronous manner.
            </summary>
            <param name="trackingContext">TrackingContext to use.</param>
            <param name="messages">A list of <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage"/> to be sent.</param>
            <param name="timeout">A client side timeout value for the operation. The operation should be aborted or cancel
            if the duration exceeded this timeout.
            </param>
            <remarks>
            <para>Typically the timeout comes from <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</para>
            <para>OnSend is equal to <c>this.OnEndSend(this.OnBeginSend(messages, timeout, null, null));</c>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            This allows concrete implementations to override (if needed) what should be done to schedule sends
            </summary>
            <param name="trackingContext">Tracking context to use.</param>
            <param name="messages">Messages to be scheduled.</param>
            <param name="timeout">A client side timeout value for the operation. The operation should be aborted or cancel
            if the duration exceeded this timeout.</param>
            <param name="callback">A user callback to be invoked when the operation completes.</param>
            <param name="state">The state to be passed to the callback when the operation completes.</param>
            <returns>a <see cref="T:System.IAsyncResult"/> for the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndScheduleMessage(System.IAsyncResult)">
            <summary>Raises an event when ending the message schedule.</summary>
            <param name="result">The result of the operation.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            This allows concrete implementations to override (if needed) what should be done to cancel scheduled sends
            </summary>
            <param name="trackingContext">Tracking context to use.</param>
            <param name="sequenceNumbers">Sequence Number of the message to cancelled.</param>
            <param name="timeout">A client side timeout value for the operation. The operation should be aborted or cancel
            if the duration exceeded this timeout.</param>
            <param name="callback">A user callback to be invoked when the operation completes.</param>
            <param name="state">The state to be passed to the callback when the operation completes.</param>
            <returns>a <see cref="T:System.IAsyncResult"/> for the operation.</returns>        
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndCancelScheduledMessage(System.IAsyncResult)">
            <summary>Raises an event when ending the cancellation of the scheduled message.</summary>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.MessagingException">
            <summary>Represents the exception that is thrown for signaling messaging errors.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> class with a specified error message.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.String,System.Boolean,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> class.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="isTransientError">true if the exception is transient; otherwise, false.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail,Microsoft.ServiceBus.Tracing.TrackingContext,System.Exception)">
            <summary> Constructor. </summary>
            <param name="detail"> Detail about the cause of the exception. </param>
            <param name="trackingContext"> The TrackingContext. </param>
            <param name="innerException"> The inner exception. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> class with serialization information and streaming context.</summary> 
            <param name="info">The serialization information.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Detail">
            <summary>Gets or sets the detail information of the messaging exception.</summary>
            <value>The detail information of the messaging exception.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Tracker">
            <summary>
            an id that may be used to track the exception in traces
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Timestamp">
            <summary>Gets or sets the time at which the messaging exception occurred.</summary>
            <value>The time at which the messaging exception occurred.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient">
            <summary>Gets or sets a value indicating whether the exception is 
            transient. Check this property to determine if the operation should be retried.</summary> 
            <value>true if the exception is transient; otherwise, false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Populates the serialization information with data about the exception.</summary>
            <param name="info">The serialized object data about the exception being thrown.</param>
            <param name="context">The contextual information about the source or destinations.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Data">
            <summary>Gets the data associated with the exception.</summary>
            <value>The data associated with the exception.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingUtilities.SafeClose(System.ServiceModel.ICommunicationObject,System.Nullable{System.TimeSpan})">
            <summary>
            Closes an ICommunicationObject asynchronously without waiting.  Never throws any exception.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingUtilities.ScheduleCloseOrAbort(Microsoft.ServiceBus.Messaging.ClientEntity)">
            <summary>
            Closes an ClientEntity asynchronously without waiting.  Never throws any exception.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.MessagingUtilities.GetUriList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Create a list of uri addresses from a given list of string addresses
            </summary>
            <param name="addresses"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.ReceiveContext.#ctor(System.Guid)">
            <summary>
            This constructor is used by Broker since Broker will 
            not have MessageReceiver available to them. 
            </summary>
            <param name="lockToken"></param>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.ReceiveMode">
            <summary>Enumerates the values for the receive mode. The default is <see cref="F:Microsoft.ServiceBus.Messaging.ReceiveMode.PeekLock" />.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ReceiveMode.PeekLock">
            <summary>Specifies the PeekLock receive mode. This is the default value for <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.ReceiveMode.ReceiveAndDelete">
            <summary>Specifies the ReceiveAndDelete receive mode.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.TopicClient">
             <summary>An anchor class used to access a <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> to perform run-time operations.</summary>
             <example>
             <code>
             // Create settings for the MessagingFactory (for rutime operations)
             MessagingFactorySettings factorySettings = new MessagingFactorySettings()
             {
                NetMessagingTransportSettings = new NetMessagingTransportSettings(),
                Credential = TransportClientCredentialBase.CreateSharedSecretCredential(IssuerName, IssuerKey),
             };
            
             // Create the MessagingFactory
             MessagingFactory factory = 
             MessagingFactory.Create(myServiceBusNamespace, factorySettings);
            
             //********************************************************************************
             //                          Sending messages to a Topic
             //********************************************************************************
            
             // Create topic client
             TopicClient myTopicClient = factory.CreateTopicClient(myTopic);
            
             // Create a sender
             //MessageSender myMessageSender = myTopicClient.CreateSender(SendMode.Default);
            
             // Send messages
             List &lt;object&gt; Issues = new List &lt;object&gt;();
             foreach (var issue in Issues)
             {
                myMessageSender.Send(new BrokeredMessage(issue));
             }
             </code>
             </example>
             <seealso cref="P:Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory"/>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.Path">
            <summary>Gets or sets the full pathname of the file.</summary>
            <value>The full pathname of the file.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory">
            <summary>Gets or sets the messaging factory that was used in creating this 
            <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> object.</summary> 
            <value>The messaging factory that was used in creating this <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> object.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.InternalSender">
            <summary>
            The internal sender that the client will use for IMessageSender operations.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.IsSubQueue">
            <summary>Gets or sets a value that indicates whether the message receiver is created from a subqueue.</summary>
            <value>true if the message receiver is created from a subqueue; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.InternalBrowser">
            <summary>
            The internal client that the client will use for IMessageBrowser operations.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.Create(System.String)">
            <summary>Creates a new instance of <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />.</summary>
            <param name="path">The path.</param>
            <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />.</returns>
            <remarks>This method will attempt to retrieve the connection string information
            from either app.config, or web.config files. User must supply the connection 
            string using the "AppSettings" section of the configuration. The format of the section
            is as follows:
            
            <code>
                <appSettings>
                    <!-- Service Bus specific app setings for messaging connections -->
                    <add key="Microsoft.ServiceBus.ConnectionString" 
                         value="Endpoint=sb://[your namespace].servicebus.windows.net;SharedSecretIssuer=owner;SharedSecretValue=[your secret]" />
                </appSettings>
            </code>
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String,System.String)">
            <summary>Creates a new instance of 
            <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> using the specified connection string and path to the topic. Use this overload only when the connection string does not use the 
            <see cref="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.EntityPath" /> property.</summary> 
            <param name="connectionString">The connection string to use.</param>
            <param name="path">The path.</param>
            <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the format of the parameters is incorrect.</exception>
            <remarks>This method should only be used with a connection string that has namespace level authentication because 
            the connection string supplied should not have entity level information associated with it.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String)">
            <summary>Creates a new instance of <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> using the specified connection string.</summary>
            <param name="connectionString">The connection string to use.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />.</returns>
            <remarks>This method expects the connection string supplied has entity level information such as the entity path and 
            authentication information supplied.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.FormatTransferDeadLetterPath(System.String)">
            <summary>A utility method that, given the topic path and subscription name, forms a 
            full path that points to the dead letter queue of the topic's transfer topic.</summary> 
            <param name="topicPath">The topic path.</param>
            <returns>Returns a 
            <see cref="T:System.String" /> representing a full path that points to the dead letter queue of the transfer topic of the specified topic. This path can be used in receiver creation or in URI formation (such as a REST URI).</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateSender(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin create sender action.</summary>
            <param name="timeout">The wait time before the operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the 
            <see cref="M:Microsoft.ServiceBus.Messaging.TopicClient.EndCreateSender(System.IAsyncResult)" /> when the operation is complete.</param> 
            <returns>An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous parent method.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateSender(System.IAsyncResult)">
            <summary>Executes the end create sender action.</summary>
            <param name="result">An 
            <see cref="T:System.IAsyncResult" /> that references the asynchronous parent method.</param> 
            <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnAbort">
            <summary>Executes the abort action.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnClose(System.TimeSpan)">
            <summary>Executes the close action.</summary>
            <param name="timeout">The wait time before the operation times out.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin close action.</summary>
            <param name="timeout">The wait time before the operation times out.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains information about the receive operation. 
            This object is passed to the EndClose delegate when the operation is complete.</param> 
            <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous Close operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnEndClose(System.IAsyncResult)">
            <summary>Executes the end close action.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous Close operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Sends a message using the <see cref="P:Microsoft.ServiceBus.Messaging.TopicClient.InternalSender" />.</summary>
            <param name="message">The message to send.</param>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if timeout value is relatively low.</exception> 
            <exception cref="T:System.ArgumentException">Thrown when the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the <paramref name="message" /> has already been sent by a 
            <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> or 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> once already.</exception> 
            <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown if there is an I/O or security error.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">Thrown when an 
            error occurs during serialization or deserialization.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown if the topic does not exist.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if there is a messaging error.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Asynchronously sends a message using the <see cref="P:Microsoft.ServiceBus.Messaging.TopicClient.InternalSender" />.</summary>
            <param name="message">The message to send.</param>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>Sends a set of brokered messages (for batch processing).</summary>
            <param name="messages">The messages to send.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>Asynchronously sends a set of brokered messages (for batch processing).</summary>
            <param name="messages">The messages to send.</param>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.BeginSend(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous request to send a BrokeredMessage. </summary>
            <param name="message">  The BrokeredMessage to send. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.TopicClient.EndSend(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous create a queue. </returns>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings"/>. You
                                            may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/> to avoid this exception if timeout value
                                            is relatively low.
                                            <seealso cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout"/></exception>
            <exception cref="T:System.ArgumentException"> Thrown when the BrokeredMessage is null. </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.BeginSendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.AsyncCallback,System.Object)">
            <summary> Begins an asynchronous request to send a batch of BrokeredMessage. </summary>
            <param name="messages">  The list of BrokeredMessage objects to send. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the <see cref="M:Microsoft.ServiceBus.Messaging.TopicClient.EndSend(System.IAsyncResult)"/> delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous create a queue. </returns>
            <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings"/>. You
                                            may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/> to avoid this exception if timeout value
                                            is relatively low.
                                            <seealso cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout"/></exception>
            <exception cref="T:System.ArgumentException"> Thrown when the BrokeredMessage is null. </exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.EndSend(System.IAsyncResult)">
            <summary> Ends an asynchronous request to send a message. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the send method.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.EndSendBatch(System.IAsyncResult)">
            <summary> Ends an asynchronous request to send a batch of messages. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the send method.  </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.Peek">
            <summary> Peeks a BrokeredMessage from current queue/topic. </summary>
            <returns> return the peeked BrokeredMessage. A null is return if peek 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.Peek(System.Int64)">
            <summary> Peeks a BrokeredMessage from current queue/topic. </summary>
            <param name="fromSequenceNumber"> The sequence number of message to start peeking from. </param>
            <returns> return the peeked BrokeredMessage. A null is return if peek 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync(System.Int64)">
            <summary />
            <param name="fromSequenceNumber" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch(System.Int32)">
            <summary> Peeks a BrokeredMessage from current queue/topic. </summary>
            <param name="messageCount"> The maximum number of messages to peek. </param>
            <returns> return a list of peeked BrokeredMessages. An empty list is returned if peek 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be received.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch(System.Int64,System.Int32)">
            <summary />
            <param name="fromSequenceNumber" />
            <param name="messageCount" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync(System.Int32)">
            <summary />
            <param name="messageCount" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync(System.Int64,System.Int32)">
            <summary />
            <param name="fromSequenceNumber" />
            <param name="messageCount" />
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.BeginPeek(System.Int64,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Peek method. </summary>
            <param name="fromSequenceNumber"> The sequence number of message to start peeking from. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.BeginPeekBatch(System.Int64,System.Int32,System.AsyncCallback,System.Object)">
            <summary> Asynchronous version of Peek method. </summary>
            <param name="messageCount"> The maximum number of messages to peek. </param>
            <param name="fromSequenceNumber"> The sequence number of message to start peeking from. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndReceive delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous Complete. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.EndPeekBatch(System.IAsyncResult)">
            <summary> Ends a message Peek operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <returns> return a list of peeked BrokeredMessages. An empty list is returned if peek 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be peeked.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.EndPeek(System.IAsyncResult)">
            <summary> Ends a message Peek operation. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the Complete.  </param>
            <returns> return a peeked BrokeredMessage. A null is returned if peek 
            operation cannot obtain the message within <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout"/>.</returns>
            <remarks>A Null can be return by this API if operation exceeded the timeout specified, 
            or the operations succeeded but there are no more messages to be peeked.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateBrowser(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary> Executes the begin create client action. </summary>        
            <param name="timeout">     The maximum time before this operation times out. </param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the EndCreateBrowser delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous CreateBrowser. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateBrowser(System.IAsyncResult)">
            <summary> Executes the end create client action. </summary>
            <param name="result"> The result of the asynchronous EndCreateReceiver operation. </param>
            <returns> Message client object</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.ScheduleMessageAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.DateTimeOffset)">
            <summary>
            Sends a scheduled message
            </summary>
            <param name="message">Message to be scheduled</param>
            <param name="scheduleEnqueueTimeUtc">Time of enqueue</param>
            <returns>Sequence number that is needed for cancelling.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.CancelScheduledMessageAsync(System.Int64)">
            <summary>
            Cancels a scheduled message
            </summary>
            <param name="sequenceNumber">Returned on scheduling a message.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.TopicDescription">
            <summary>Represents a description of the topic.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.TopicDescription.MessageTimeToLiveDefaultValue">
            <summary>
              The message time to live default value
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.TopicDescription.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> class with the specified relative path.</summary> 
            <param name="path">The path of the topic relative to the service namespace base address.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive">
            <summary>Gets or sets the default message time to live value for a topic. This is the duration after which the message expires, starting from when the message is sent to the Service Bus. This is the default value used when 
            <see cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive" /> is not set on a message itself.Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages.</summary> 
            <value>The default message time to live for a topic.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.AutoDeleteOnIdle">
            <summary>Gets or sets the 
            <see cref="T:System.TimeSpan" /> idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.</summary> 
            <value>The auto delete on idle time span for the topic.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.MaxSizeInMegabytes">
            <summary>Gets or sets the maximum size of the topic in megabytes, which is the size of memory allocated for the topic.</summary>
            <value>The maximum size in megabytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.RequiresDuplicateDetection">
            <summary>Gets or sets the value that indicates whether a topic requires duplication detection.</summary>
            <value>true if a topic requires duplication detection; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.DuplicateDetectionHistoryTimeWindow">
            <summary>Gets or sets the <see cref="T:System.TimeSpan" /> structure that defines the duration of the duplicate detection history.</summary>
            <value>The <see cref="T:System.TimeSpan" /> structure that defines the duration of the duplicate detection history.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.SizeInBytes">
            <summary>Gets the size of the topic in bytes.</summary>
            <value>The size of the topic in bytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Path">
            <summary>Gets the path of the topic.</summary>
            <value>The path of the topic.</value>
            <remarks>
              This is a relative path to the <see cref = "P:Microsoft.ServiceBus.NamespaceManager.Address" />.
            </remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableBatchedOperations">
            <summary>Gets or sets a value that indicates whether server-side batched operations are enabled.</summary>
            <value>true if the batched operations are enabled; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.SupportOrdering">
            <summary>Gets or sets the support ordering method.</summary>
            <value>The support ordering method.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableFilteringMessagesBeforePublishing">
            <summary>Gets or sets whether messages should be filtered before publishing.</summary>
            <value>true if message filtering is enabled before publishing; otherwise, false.</value>
            <remarks> This feature is recommended to be used only for development and testing purposes.  
            For example, when  new Rules or Filters are being added to the topic, this feature can 
            be used to verify that the new filter expression is working as expected. Once tested 
            and working fine, the feature should be turned off in production. </remarks>
            <exception cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException">Thrown if the subscriptions do not match.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.IsAnonymousAccessible">
            <summary>Gets whether anonymous access is allowed.</summary>
            <value>true if anonymous access is allowed; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Microsoft#ServiceBus#Messaging#IResourceDescription#CollectionName">
            <summary>
              Gets the name of the collection.
            </summary>
            <value> The name of the collection. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Authorization">
            <summary>Gets the authorization rules for the description.</summary>
            <value>The authorization rules for the description.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Status">
            <summary>Gets or sets the current status of the topic (enabled or 
            disabled). When an entity is disabled, that entity cannot send or receive messages.</summary> 
            <value>The status of the topic.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.AvailabilityStatus">
            <summary>Gets the status of the availability of this instance.</summary>
            <value>The status of the availability of this instance.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.CreatedAt">
            <summary>Gets the time and date when the topic was created.</summary>
            <value>The time and date when the topic was created.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.UpdatedAt">
            <summary>Gets the time and date when the topic was updated.</summary>
            <value>The time and date when the topic was updated.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.AccessedAt">
            <summary>Gets the time and date at which a message was last sent to the topic.</summary>
            <value>The time and date at which a message was last sent to the topic.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.MessageCountDetails">
            <summary>Gets message details about the topic.</summary>
            <value>The 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> that contains the number of active messages, dead letters, scheduled messages, messages transferred to other queues, subscriptions, or topics, and the number of messages transferred to the dead letter queue.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.UserMetadata">
            <summary>Gets or sets the user metadata associated with the description.</summary>
            <value>The user metadata associated with the description.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.SubscriptionCount">
            <summary>Gets then number of subscriptions.</summary>
            <value>An <see cref="T:System.Int32" /> that represents the number of subscriptions.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnablePartitioning">
            <summary>Gets or sets whether to enable the topic to be partitioned across multiple message 
            brokers. An express topic holds a message in memory temporarily before writing it to persistent storage.</summary> 
            <value>true to enable the topic to be partitioned across multiple message brokers; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableSubscriptionPartitioning">
            <summary> Gets or sets whether partitioning is enabled or disabled. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableExpress">
            <summary>Gets or sets a value that indicates whether Express Entities are enabled. An 
            express topic holds a message in memory temporarily before writing it to persistent storage.</summary> 
            <value>true if the Express Entities are enabled; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.NewPath">
            <summary> New name </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.BillingTier">
            <summary />
        </member>
        <member name="F:Microsoft.ServiceBus.Management.BillingTier.Free">
            <summary />
        </member>
        <member name="F:Microsoft.ServiceBus.Management.BillingTier.Basic">
            <summary />
        </member>
        <member name="F:Microsoft.ServiceBus.Management.BillingTier.Standard">
            <summary />
        </member>
        <member name="T:Microsoft.ServiceBus.Management.NamespaceType">
            <summary>Specifies the type of entities the namespace can contain (messaging, Event Hubs, or notification hubs).</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceType.Messaging">
            <summary>Specifies that the namespace should contain messaging entities (queues, topics, or subscriptions).</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceType.NotificationHub">
            <summary>Specifies that the namespace should contain notification hubs.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceType.Mixed">
            <summary>Supported only for backward compatibility. Specifies that the namespace 
            can contain a mixture of messaging entities and notification hubs.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceType.EventHub">
            <summary>Specifies that the namespace should contain Event Hubs.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceType.Relay">
            <summary>Specifies that the namespace should contain Relays and Hybrid Connections.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.PortalResourceType">
            <summary>Enumerates the types of portal resource.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.PortalResourceType.Namespace">
            <summary>Specifies a namespace resource.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.PortalResourceType.Queue">
            <summary>Specifies a queue resource.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.PortalResourceType.Topic">
            <summary>Specifies a topic resource.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.PortalResourceType.NotificationHub">
            <summary>Specifies a notification hub resource.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.PortalManagementAddress">
            <summary>Represents the address for the portal management.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.PortalManagementAddress.Address">
            <summary>Gets or sets the portal address.</summary>
            <value>The portal address.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.MessagingSKU">
            <summary>Provides SKU for the messaging.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MessagingSKU.SKU">
            <summary>Gets or sets the stock-keeping unit for the messaging.</summary>
            <value>The stock-keeping unit for the messaging.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MessagingSKU.SKUDescription">
            <summary>Gets or sets the description for stock-keeping unit.</summary>
            <value>The description for stock-keeping unit.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MessagingSKU.MinAllowedEventHubUnit">
            <summary>Gets or sets the minimum allowed event hub unit.</summary>
            <value>The minimum allowed event hub unit.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MessagingSKU.MaxAllowedEventHubUnit">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MessagingSKU.AllowedMessagingUnits">
            <summary />
        </member>
        <member name="T:Microsoft.ServiceBus.Management.MessagingSKUPlan">
            <summary>Represents a messaging SKU plan.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MessagingSKUPlan.SKU">
            <summary>Gets or sets the stock-keeping unit.</summary>
            <value>The stock-keeping unit.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MessagingSKUPlan.SelectedEventHubUnit">
            <summary>Gets or sets the selected event hub unit.</summary>
            <value>The selected event hub unit.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MessagingSKUPlan.UpdatedAt">
            <summary>Gets or sets the exact time the plan has been updated.</summary>
            <value>The exact time the plan has been updated.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MessagingSKUPlan.Revision">
            <summary>Gets or sets the plan revision.</summary>
            <value>The plan revision.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MessagingSKUPlan.MessagingUnits">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MessagingSKUPlan.IsAutoInflateEnabled">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MessagingSKUPlan.MaximumThroughputUnits">
            <summary />
        </member>
        <member name="T:Microsoft.ServiceBus.Management.ConnectionDetail">
            <summary>Represents the details associated with the service bus connection.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.KeyName">
            <summary>Gets or sets the key name associated with the connection.</summary>
            <value>The key name associated with the connection.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.ConnectionString">
            <summary>Gets or sets the connection string associated with the connection.</summary>
            <value>The connection string associated with the connection.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.SecondaryConnectionString">
            <summary>Gets or sets the secondary connection string associated with the connection.</summary>
            <value>The secondary connection string associated with the connection.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.AuthorizationType">
            <summary>Gets or sets the authorization type for the connection.</summary>
            <value>The authorization type for the connection.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.Rights">
            <summary>Gets or sets the access rights associated with the connection.</summary>
            <value>The access rights associated with the connection.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.CertificateType">
            <summary>Specifies the types of certificate used in the management of Service Bus for Windows Server farm.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.CertificateType.GeneratedFarmRootCertificate">
            <summary>Specifies a generated farm root certificate.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.CertificateType.GeneratedFarmCertificate">
            <summary>Specifies a generated farm certificate.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.CertificateType.CustomFarmCertificate">
            <summary>Specifies a custom certificate.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.CertificateType.GeneratedCertificateRevocationList">
            <summary>Specifies a generated certificate revocation list.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.FarmCertificateInfo">
            <summary>Represents the details of the certificate associated with the service bus farm.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.IsAutoGenerated">
            <summary>Gets or sets whether the certificate is auto generated.</summary>
            <value>true if the certificate is auto generated; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateType">
            <summary>Gets or sets the type of the certificate.</summary>
            <value>The type of the certificate.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateKeyName">
            <summary>Gets or sets the keyname associated with the certificate.</summary>
            <value>The keyname associated with the certificate.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateName">
            <summary>Gets or sets the name of the certificate.</summary>
            <value>The name of the certificate.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.Thumbprint">
            <summary>Gets or sets the thumbprint associated with the certificate.</summary>
            <value>The thumbprint associated with the certificate.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.ExpirationDate">
            <summary>Gets or sets the expiration date of the certificate.</summary>
            <value>The expiration date of the certificate.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.Downloadable">
            <summary>Gets or sets whether the certificate is downloadable.</summary>
            <value>true if the certificate is downloadable; otherwise, false.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Metric">
            <summary>Represents the metric used to monitor the Service Bus status.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Metric.Name">
            <summary>Gets or sets the name of the metric.</summary>
            <value>The name of the metric.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Metric.Unit">
            <summary>Gets or sets the metric unit.</summary>
            <value>The metric unit.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Metric.PrimaryAggregation">
            <summary>Gets or sets the primary aggregation for this metric.</summary>
            <value>The primary aggregation for this metric.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Metric.Rollups">
            <summary>Gets or sets the collection of metric rollup.</summary>
            <value>The collection of metric rollup.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Metric.DisplayName">
            <summary>Gets or sets the display name of the metric.</summary>
            <value>The display name of the metric.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.MetricRollup">
            <summary>Represents the rollup data for Service Bus metrics.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MetricRollup.TimeGrain">
            <summary>Gets or sets the time grain associated with the rollup.</summary>
            <value>The time grain associated with the rollup.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MetricRollup.Retention">
            <summary>Gets or sets the time of the retention associated with the rollup.</summary>
            <value>The time of the retention associated with the rollup.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MetricRollup.Values">
            <summary>Gets or sets the collection of metric values.</summary>
            <value>The collection of metric values.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.MetricValue">
            <summary>Represents the value of a metric associated with the service bus.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MetricValue.Timestamp">
            <summary>Gets or sets the time stamp associated with the metric value.</summary>
            <value>The time stamp associated with the metric value.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MetricValue.Min">
            <summary>Gets or sets the minimum value of a metric.</summary>
            <value>The minimum value of a metric.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MetricValue.Max">
            <summary>Gets or sets the maximum value of a metric.</summary>
            <value>The maximum value of a metric.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MetricValue.Total">
            <summary>Gets or sets the total metric value.</summary>
            <value>The total metric value.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.MetricValue.Average">
            <summary>Gets or sets the average value of a metric.</summary>
            <value>The average value of a metric.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.UnavailableReason">
            <summary>Specifies the reason for the unavailability of the service.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.None">
            <summary>No reason defined.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.InvalidName">
            <summary>The name of the service is invalid.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.SubscriptionIsDisabled">
            <summary>The service subscription is disabled.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.NameInUse">
            <summary>The name of the service is in use.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.NameInLockdown">
            <summary>The name of the service is in lockdown.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.TooManyNamespaceInCurrentSubscription">
            <summary>Too many namespace is in current subscription.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.NamespaceAvailability">
            <summary>Represents the availability of the given service namespace.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceAvailability.Serializer">
            <summary>The data contract serializer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.Available">
            <summary>Gets or sets whether the namespace is available.</summary>
            <value>true if the namespace is available; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.Reason">
            <summary>Gets or sets the reason for unavailability of a namespace.</summary>
            <value>The reason for unavailability of a namespace.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.ReasonDetail">
            <summary>Gets or sets the detailed info regarding the reason associated with the namespace.</summary>
            <value>The detailed info regarding the reason associated with the namespace.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.ExtensionData">
            <summary>Gets or sets the extension data object associated with the namespace.</summary>
            <value>The extension data object associated with the namespace.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.NamespaceDescription">
            <summary>Defines the desired semantics for a service namespace.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceDescription.Serializer">
            <summary>The data contract serializer associated with the namespace.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.NamespaceDescription.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.NamespaceDescription" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Name">
            <summary>Gets or sets the name of the namespace.</summary>
            <value>The name of the namespace.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Region">
            <summary>Gets or sets the geographic region(s) of the Microsoft datacenters in which Customer Data will be stored.</summary>
            <value>The geographic region(s) of the Microsoft datacenters in which Customer Data will be stored.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.DefaultKey">
            <summary>Gets or sets the default key for the namespace.</summary>
            <value>The default key for the namespace.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Status">
            <summary>Gets or sets the state of the namespace.</summary>
            <value>The state of the namespace.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.CreatedAt">
            <summary>Gets or sets the date when the namespace was created.</summary>
            <value>The date when the namespace was created.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.AcsManagementEndpoint">
            <summary>Gets or sets the management endpoint for the access control service.</summary>
            <value>The management endpoint for the access control service.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.ServiceBusEndpoint">
            <summary>Gets or sets the service bus end point value.</summary>
            <value>The service bus end point value.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.ConnectionString">
            <summary>Gets or sets the connection string that is used by the client to connect to the server.</summary>
            <value>The connection string that is used by the client to connect to the server.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.SubscriptionId">
            <summary>Gets or sets the namespace subscription identifier.</summary>
            <value>The namespace subscription identifier.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Enabled">
            <summary>Specifies whether this instance is enabled.</summary>
            <value>true if this instance is enabled; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Critical">
            <summary>Gets or sets whether the description is a nullable critical description.</summary>
            <value>true if the description is a nullable critical description; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.CreateACSNamespace">
            <summary>Gets or sets a value that indicates whether to create ACS namespace.</summary>
            <value>true if ACS namespace has been created; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.EventHubEnabled">
            <summary>Specifies whether the Event Hub is enabled.</summary>
            <value>true if the Event Hub is enabled; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.NamespaceType">
            <summary>Gets or sets the type of messaging entities the namespace can contain (queues, topics, relays, Event Hubs, or notification hubs). For more information, see 
            <see cref="T:Microsoft.ServiceBus.Management.NamespaceType" />.</summary> 
            <value>Returns <see cref="T:Microsoft.ServiceBus.Management.NamespaceType" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.MessagingSku">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.MessagingSkuPlan">
            <summary />
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceEntityStats.Serializer">
            <summary>Specifies the status of the serializer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.NamespaceEntityStats.#ctor">
            <summary>Initializes a new instance of the4 <see cref="T:Microsoft.ServiceBus.Management.NamespaceEntityStats" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.TopicCount">
            <summary>Gets or sets the number of topics associated with the status.</summary>
            <value>The number of topics associated with the status.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.QueueCount">
            <summary>Gets or sets the number of queue associated with the status.</summary>
            <value>The number of queue associated with the status.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.RelayCount">
            <summary>Gets or sets the number of relays associated with the status.</summary>
            <value>The number of relays associated with the status.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.NotificationHubCount">
            <summary>Gets or sets the number of notification hub.</summary>
            <value>The number of notification hub.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.EventHubCount">
            <summary>Gets or sets the number of event hub.</summary>
            <value>The number of event hub.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.NamespaceState">
            <summary>Enumerates the different namespace states.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Unknown">
            <summary>The namespace is unknown.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Creating">
            <summary>The namespace is being created.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Created">
            <summary>The namespace is created.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Activating">
            <summary>The namespace is being activated.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Enabling">
            <summary>The namespace is being enabled.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Active">
            <summary>The namespace is active.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Disabling">
            <summary>The namespace is being disabled.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Disabled">
            <summary>The namespace is disabled.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.SoftDeleting">
            <summary>The namespace is marked for deletion.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.SoftDeleted">
            <summary>The namespace is deleted.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Removing">
            <summary>The namespace is being removed.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Removed">
            <summary>The namespace is removed.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Failed">
            <summary>Creating the namespace failed.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Updating">
            <summary>Creating the namespace failed.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Property">
            <summary>Represents the service bus property.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.Property.Serializer">
            <summary>The serializer associated with the property.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Property.Name">
            <summary>Gets or sets the name of the property.</summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Property.Value">
            <summary>Gets or sets the property value.</summary>
            <value>The property value.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Property.Created">
            <summary>Gets or sets when the property was created.</summary>
            <value>The date when the property was created.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Property.Modified">
            <summary>Gets or sets when the property was modified.</summary>
            <value>The date when the property was modified.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Property.Revision">
            <summary>Gets or sets the version of the property.</summary>
            <value>The version of the property.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Property.Clone">
            <summary>Creates a copy of this instance.</summary>
            <returns>A created copy of this instance.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.RegionCodeDescription">
            <summary>Represents the description associated with the region code for the Service bus.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.RegionCodeDescription.Serializer">
            <summary>The serializer associated with the description.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.RegionCodeDescription.Code">
            <summary>Gets or sets the code associated with this instance.</summary>
            <value>The code associated with this instance.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.RegionCodeDescription.FullName">
            <summary>Gets or sets the full name of this instance.</summary>
            <value>The full name of this instance.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.UsageCredit">
            <summary>Represents the usage credit management.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.UsageCredit.Serializer">
            <summary>Specifies the usage credit serializer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.UsageCredit.KeyName">
            <summary>Gets or sets the key name associated with the credit.</summary>
            <value>The key name associated with the credit.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.UsageCredit.RequestorService">
            <summary>Gets or sets the requestor service.</summary>
            <value>The requestor service.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.UsageCredit.Identifier">
            <summary>Gets or sets the credit identifier.</summary>
            <value>The credit identifier.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.UsageCredit.NHBasicUnit">
            <summary>Gets or sets the Basic Tier unit of the notification hub.</summary>
            <value>The basic unit of the notification hub.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.UsageCredit.NHStandardUnit">
            <summary>Gets or sets the Standard Tier unit of the notification hub.</summary>
            <value>The standard unit of the notification hub.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.UsageCredit.Revision">
            <summary>Gets or sets the credit revision.</summary>
            <value>The credit revision.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.UsageCredit.UpdatedAt">
            <summary>Gets or sets the last date when the credit details were updated.</summary>
            <value>The last date when the credit details were updated.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.UsageCredit.ExtensionData">
            <summary>Gets or sets the object that stores data</summary>
            <value>The object that stores data</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.UsageCredit.SubscriptionId">
            <summary>Gets or sets the Azure subscription ID associated with the credit.</summary>
            <value>Returns <see cref="T:System.String" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.UsageCredit.NamespaceName">
            <summary>Gets or sets the namespace name associated with the credit.</summary>
            <value>Returns <see cref="T:System.String" />.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.UsageCredit.ToString">
            <summary>Returns a string representation of <see cref="T:Microsoft.ServiceBus.Management.UsageCredit" />.</summary>
            <returns>A string representation of <see cref="T:Microsoft.ServiceBus.Management.UsageCredit" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.UsageCredit.Equals(Microsoft.ServiceBus.Management.UsageCredit)">
            <summary>Specifies whether this instance is equal with another usage credit.</summary>
            <param name="other">The other usage credit to compare.</param>
            <returns>true if this instance is equal with another usage credit; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.UserValidationResult">
            <summary>Represents the result associated with user validation.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.UserValidationResult.Result">
            <summary>Gets or sets the result of the validation.</summary>
            <value>The result of the validation.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.UserValidationResult.Reason">
            <summary>Gets or sets the reason for user validation.</summary>
            <value>the reason for user validation.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Relay.HybridConnectionDescription">
            <summary>Represents a HybridConnection description.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Relay.HybridConnectionDescription.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Relay.HybridConnectionDescription" /> class.</summary>
            <param name="path">The relative path of the HybridConnection.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.Path">
            <summary>Gets or sets the relative path of the HybridConnection.</summary>
            <value>The relative path of the HybridConnection.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.CreatedAt">
            <summary>Gets or sets the exact time the HybridConnection was created.</summary>
            <value>The exact time the HybridConnection was created.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.UpdatedAt">
            <summary>Gets or sets the date when the HybridConnection was updated.</summary>
            <value>The date when the HybridConnection was updated.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.ListenerCount">
            <summary>Gets or sets the number of listeners for this HybridConnection.</summary>
            <value>The number of listeners for this HybridConnection.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.RequiresClientAuthorization">
            <summary>Gets or sets whether client authorization is needed for this HybridConnection.</summary>
            <value>true if client authorization is needed for this HybridConnection; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.Authorization">
            <summary>Gets the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</summary>
            <value>The <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.UserMetadata">
            <summary>Gets or sets the user metadata associated with this instance.</summary>
            <value>The user metadata associated with this instance.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the length of value is greater than 1024 characters.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.CollectionName">
            <summary>Gets or sets the name of the collection associated with the HybridConnection.</summary>
            <value>The name of the collection associated with the HybridConnection.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Relay.HybridConnectionDescription.ClearManageOnlyMembers">
            <summary>
            This is so users with Send or Listen tokens can still call GetHybridConnection[s], just not read everything,
            especially the AuthorizationRules and any other members which require the Manage permission.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Relay.ManageClaimNotRequiredAttribute.ClearManageOnlyMembers(System.Object)">
            <summary>
            This is so users with Send or Listen tokens can still call GetRelay/GetHybridConnection, just not read everything,
            especially the AuthorizationRules and any other members which require the Manage permission.
            Find all the Properties and Fields with [DataMember] attribute. Then, if the DataMember property/field
            does not also have a [ManageClaimNotRequired] attribute, clear it.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.RelayNotFoundException">
            <summary>The exception that is thrown when the ServiceBus relay is not found.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayNotFoundException" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayNotFoundException" /> class.</summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayNotFoundException" /> class.</summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayNotFoundException" /> class.</summary>
            <param name="info">The serialization information.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusClientWebSocket.CustomizedCertificateValidator(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Check SSL certificate
            </summary>
            <param name="sender">The HTTP WebRequest</param>
            <param name="certificate">The certificate from service</param>
            <param name="chain">The chain</param>
            <param name="sslPolicyErrors">The error</param>
            <returns>True if having the same DNS suffix</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElement">
            <summary>Represents an address configuration.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.AddressConfigurationElement.Value">
            <summary>Gets or sets the URI of the address.</summary>
            <value>The URI of the address.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection">
            <summary>Represents a collection of elements in address configuration.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection.#ctor">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection" /> class.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection.Addresses">
            <summary>Gets the addresses of the elements in the collection.</summary>
            <value>The addresses of the elements in the collection.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement">
            <summary>Represents a configuration section that holds a collection of 
            <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement" /> instances.</summary> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement">
            <summary>Represents a configuration element that specifies a binding used to communicate with WS-I Basic Profile 1.1-conformant 
            Web Services like ASMX-based services or to accept messages from ASMX-based clients through the Azure Service Bus.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement" /> class using the specified name.</summary> 
            <param name="name">The name of the binding element.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.BindingElementType">
            <summary>Gets the type of this binding element.</summary>
            <value>Returns a <see cref="T:System.Type" /> that contains the binding element type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.AllowCookies">
            <summary>Gets or sets a Boolean value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
            <value>true if the client accepts cookies and propagates them on future requests; otherwise, false. The default value is false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MaxBufferSize">
            <summary>Gets or sets the maximum size of a buffer that stores 
            messages while they are processed for an endpoint configured with this binding.</summary> 
            <value>Returns the maximum buffer size. The default value is 65,536 bytes. The minimum value is 1 byte.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MaxBufferPoolSize">
            <summary>Gets or sets the maximum size for a buffer pool that stores messages processed by the binding.</summary>
            <value>Returns an 
            <see cref="T:System.Int64" /> that contains the buffer pool size. The default value is 512*1024 bytes. The minimum value is 0.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MaxReceivedMessageSize">
            <summary>Gets or sets the maximum message size, in bytes, including headers, for 
            a message that can be received on a channel configured with this binding.</summary> 
            <value>The maximum received message size. The default value is 65,536 bytes. The minimum value is 1 byte.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MessageEncoding">
            <summary>Gets or sets the messaging encoding that indicates whether MTOM or text/XML is used to encode the SOAP message.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.WSMessageEncoding" /> that contains either Text/XML or MTOM. The default value is Text.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.ProxyAddress">
            <summary>Gets or sets the URI that describes the address of the HTTP proxy.</summary>
            <value>Returns a <see cref="T:System.Uri" /> that contains the URI. The default is null.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.ReaderQuotas">
            <summary>Gets or sets an XML value that places constraints on the complexity 
            of SOAP messages that can be processed by endpoints configured with this binding.</summary> 
            <value>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> that contains the reader quotas.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.Security">
            <summary>Gets the type of security to be used for the binding.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement" /> that specifies the type of security to be used with the binding. The default value is None.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.TextEncoding">
            <summary>Gets or sets the character set encoding to be used for emitting messages on the binding.</summary>
            <value>Returns a <see cref="T:System.Text.Encoding" /> that contains the text encoding. The default value is UTF8.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.TransferMode">
            <summary>Gets or sets whether messages are buffered or streamed on a request or response.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.TransferMode" /> that contains the transfer mode. The default value is TransferMode.Buffered.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.UseDefaultWebProxy">
            <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
            <value>true to use the http proxy; otherwise, false. The default value is true.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.IsDynamic">
            <summary>Gets or sets whether the binding element is dynamic.</summary>
            <value>true if the binding element is dynamic; otherwise, false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Initializes this binding configuration element with the content of the specified binding collection.</summary>
            <param name="binding">The Binding to initialize from.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Applies the settings of this configuration element to the specified binding.</summary>
            <param name="binding">The Binding to apply this configuration to.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.Properties">
            <summary>Gets a collection of objects that can be attributes or configuration element objects of this binding configuration element.</summary>
            <value>Returns a 
            <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains the properties of the current instance.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement">
            <summary>A configuration element that configures SOAP message security.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement.ClientCredentialType">
            <summary>Gets or sets the type of client credential used for client authentication.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> that contains the credentials. The default is UserName.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement.AlgorithmSuite">
            <summary>Gets or sets the security algorithm to use with the 
            <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement" /> class.</summary> 
            <value>Returns a 
            <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> that contains the security algorithm. The default is Basic256.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement">
            <summary>Represents a configuration element that configures the security for a basic HTTP relay binding.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Mode">
            <summary>Gets or sets the security mode for a <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />.</summary>
            <value>Returns a value from the 
            <see cref="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" /> enumeration. The default value is none.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.RelayClientAuthenticationType">
            <summary>Gets or sets the authentication type specified in this configuration element.</summary>
            <value>Returns a value from 
            <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the type of authentication to be used by binding elements the current instance is applied to.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Transport">
            <summary>Gets a configuration element that specifies the transport-level security settings for a 
            <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> binding.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement" /> that contains properties that control authentication parameters for the HTTP transport.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Message">
            <summary>Gets a Configuration element that specifies the message-level security settings for a 
            <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement" /> that contains the security settings.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.GetAssociatedBindingCollectionElement(System.Configuration.ContextInformation,System.String)">
            Be sure to update UnsafeGetAssociatedBindingCollectionElement if you modify this method
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.UnsafeGetAssociatedBindingCollectionElement(System.Configuration.ContextInformation,System.String)">
            <SecurityNote>
            Critical - uses SecurityCritical method UnsafeGetAssociatedSection which elevates
            </SecurityNote>
            Be sure to update GetAssociatedBindingCollectionElement if you modify this method
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.GetAssociatedSection(System.Configuration.ContextInformation,System.String)">
            Be sure to update UnsafeGetAssociatedSection if you modify this method
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.UnsafeGetAssociatedSection(System.Configuration.ContextInformation,System.String)">
            <SecurityNote>
            Critical - uses SecurityCritical methods which elevate
            </SecurityNote>
            Be sure to update GetAssociatedSection if you modify this method
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.GetBindingCollectionElement(System.String)">
            Be sure to update UnsafeGetBindingCollectionElement if you modify this method
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.UnsafeGetBindingCollectionElement(System.String)">
            <SecurityNote>
            Critical - uses SecurityCritical method UnsafeGetAssociatedBindingCollectionElement which elevates
            </SecurityNote>
            Be sure to update GetBindingCollectionElement if you modify this method
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.GetSection(System.String)">
            Be sure to update UnsafeGetSection if you modify this method
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.UnsafeGetSection(System.String)">
            <SecurityNote>
            Critical - uses SecurityCritical method UnsafeGetAssociatedSection which elevates
            </SecurityNote>
            Be sure to update GetSection if you modify this method
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.GetSectionFromWebConfigurationManager(System.String)">
            Be sure to update UnsafeGetSectionFromWebConfigurationManager if you modify this method
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.UnsafeGetSectionFromWebConfigurationManager(System.String)">
            <SecurityNote>
            Critical - Asserts ConfigurationPermission in order to fetch config from WebConfigurationManager
                       caller must guard return value
            </SecurityNote>
            Be sure to update GetSectionFromWebConfigurationManager if you modify this method
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.UnsafeGetSectionFromConfigurationManager(System.String)">
            <SecurityNote>
            Critical - Asserts ConfigurationPermission in order to fetch config from ConfigurationManager
                       caller must guard return value
            </SecurityNote>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.UnsafeGetSectionFromContext(System.Configuration.ContextInformation,System.String)">
            <SecurityNote>
            Critical - Asserts ConfigurationPermission in order to fetch config from ContextInformation
                       caller must guard return value
            </SecurityNote>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.UnsafeGetSectionFromWebConfigurationManager(System.String,System.String)">
            <SecurityNote>
            Critical - Asserts ConfigurationPermission in order to fetch config from WebConfigurationManager
                       caller must guard return value
            </SecurityNote>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.SetIsPresent(System.Configuration.ConfigurationElement)">
            <SecurityNote>
            Critical - calls SetIsPresentWithAssert which elevates in order to set a property
                       caller must guard ConfigurationElement parameter, ie only pass 'this'
            </SecurityNote>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.SetIsPresentWithAssert(System.Reflection.PropertyInfo,System.Configuration.ConfigurationElement,System.Boolean)">
            <SecurityNote>
            Critical - Asserts ReflectionPermission(MemberAccess) in order to set a private member in the ConfigurationElement
                       caller must guard parameters
            </SecurityNote>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.GetOriginalEvaluationContext(Microsoft.ServiceBus.Configuration.IConfigurationContextProviderInternal)">
            <SecurityNote>
              RequiresReview - the return value will be used for a security decision. if in doubt about the return value, it
                            is safe to return null (caller will assume the worst case from a security perspective).
            </SecurityNote>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.GetCertificateRevocationMode">
            <summary>
            Get the setting for CertificateRevocationMode
            </summary>
            <returns>Online if not found.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConfigurationHelpers.GetOverrideConnectivityMode">
            <summary>
            Get the setting for override connectivityMode
            </summary>
            <returns>null if not found.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.IConfigurationContextProviderInternal.GetEvaluationContext">
            <summary>
            return the current ContextInformation (the protected property ConfigurationElement.EvaluationContext)
            this may throw ConfigurationErrorsException, caller should guard (see ConfigurationHelpers.GetEvaluationContext)
            </summary>
            <returns>result of ConfigurationElement.EvaluationContext</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.IConfigurationContextProviderInternal.GetOriginalEvaluationContext">
            <summary>
            return the ContextInformation that was present when the ConfigurationElement was first deserialized.
            if Reset was called, this will be the value of parent.GetOriginalEvaluationContext()
            if Reset was not called, this will be the value of this.GetEvaluationContext()
            </summary>
            <returns>result of parent's ConfigurationElement.EvaluationContext</returns>
            <SecurityNote>
            RequiresReview - the return value will be used for a security decision. if in doubt about the return value, it
                            is safe (from a security perspective)  to return null (caller will assume the worst case).
            </SecurityNote>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement">
            <summary>Represents the configuration element that provides additional configuration settings 
            to connection-oriented transport binding elements, such as TCP and named pipes.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.ConnectionBufferSize">
            <summary>Gets or sets the size of the buffer used to transmit a part of the serialized message on the wire from the client or service.</summary>
            <value>Returns a 
            <see cref="T:System.Int32" /> that contains the size of the buffer used to transmit a part of the serialized message on the wire from the client or service. The default value is 8K.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.HostNameComparisonMode">
            <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.</summary>
            <value>A valid HostnameComparisonMode value that indicates whether the hostname is included when routing incoming requests 
            to an endpoint URI. The default value is StrongWildcard, which ignores the hostname in the match.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.ChannelInitializationTimeout">
            <summary>Gets or sets the maximum time the channel can be in the initialization status before being disconnected.</summary>
            <value>The maximum time the channel can be in the initialization status before being disconnected.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxBufferSize">
            <summary>Gets or sets the maximum size of the buffer to use.</summary>
            <value>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxPendingConnections">
            <summary>Gets or sets the maximum number of pending connections.</summary>
            <value>The maximum number of pending connections.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxOutputDelay">
            <summary>Gets or sets the maximum interval of time that a part of a 
            message or a full message can remain buffered in memory before being sent out.</summary> 
            <value>The maximum interval of time that a part of a message or a full 
            message can remain buffered in memory before being sent out. The default value is 2 seconds.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxPendingAccepts">
            <summary>Gets or sets the maximum number of pending asynchronous accept 
            threads that are available for processing incoming connections on the service.</summary> 
            <value>The maximum number of pending messages the service can accept. The default value is 1.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.TransferMode">
            <summary>Gets or sets a value that specifies whether the messages are buffered or streamed with the connection-oriented transport.</summary>
            <value>Returns a valid 
            <see cref="T:System.ServiceModel.TransferMode" /> value that specifies whether a channel uses streamed or buffered modes of message transfer. The default is Buffered.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.Properties">
            <summary>Gets a ConfigurationPropertyCollection instance that contains a collection of ConfigurationProperty 
            objects that can be attributes or ConfigurationElement objects of this configuration element.</summary> 
            <value>Returns a 
            <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects of this configuration element.</value> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
            <summary>Applies the settings of this configuration element to the specified <see cref="T:System.ServiceModel.Channels.BindingElement" />.</summary>
            <param name="bindingElement">The binding element to update the settings of.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary>Copies the content of the specified configuration element to this configuration element.</summary>
            <param name="from">The configuration element to be copied.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.ConnectionStatusElement">
            <summary>Reads a configuration element that describes the connection status.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ConnectionStatusElement.BehaviorType">
            <summary>Gets the type of behavior.</summary>
            <value>Returns a <see cref="T:System.Type" /> that contains the behavior type.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ConnectionStatusElement.CreateBehavior">
            <summary>Creates a behavior extension based on the current configuration settings.</summary>
            <returns>Returns an <see cref="T:System.Object" /> that contains the behavior extension.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.ServiceBusSectionType">
            <summary>Enumerates the service bus section type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.ServiceBusSectionType.All">
            <summary>The All section type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.ServiceBusSectionType.NamespaceManager">
            <summary>The Namespace Manager section type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.ServiceBusSectionType.MessagingFactory">
            <summary>The Messaging Factory section type.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement">
            <summary>Represents a shared access signature element.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.KeyName">
            <summary>Gets or sets the shared access key name.</summary>
            <value>The shared access key name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.Key">
            <summary>Gets or sets the shared access key.</summary>
            <value>The shared access key.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.TokenScope">
            <summary>Gets or sets the token scope associated with the element.</summary>
            <value>The token scope associated with the element.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.Properties">
            <summary>Gets the collection of configuration properties.</summary>
            <value>The collection of configuration properties.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.CopyFrom(Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement)">
            <summary>Copies the specified element from this configuration element.</summary>
            <param name="source">The source to copy the contents from.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.StsUriElement">
            <summary>Represents the security token service of the URI element.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.StsUriElement.Value">
            <summary>Gets or sets the value of the element.</summary>
            <value>The value of the element.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.StsUriElementCollection">
            <summary>Represents a URI element collection for the Security Token Service.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.StsUriElementCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.StsUriElementCollection" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.StsUriElementCollection.Addresses">
            <summary>Gets the addresses of the element in the collection.</summary>
            <value>The addresses of the element in the collection.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection">
            <summary>Represents a collection of elements for the token provider.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection.Item(System.String)">
            <summary>Gets an item in the collection.</summary>
            <param name="name">The name of the item.</param>
            <returns>An item in the collection.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.WindowsElement">
            <summary>Represents the windows element for the configuration of the service bus.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.UseDefaultCredentials">
            <summary>Gets or sets a value that indicates whether to use default credentials.</summary>
            <value>true if to use default credentials; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.UserName">
            <summary>Gets or sets the username.</summary>
            <value>The username.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.Password">
            <summary>Gets or sets the password.</summary>
            <value>The password.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.Domain">
            <summary>Gets or sets the domain.</summary>
            <value>The domain.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.StsUris">
            <summary>Gets or sets the collection of security token service (STS) URI.</summary>
            <value>The collection of security token service (STS) URI.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.Properties">
            <summary>Gets or sets the collection of configuration properties.</summary>
            <value>The collection of configuration properties.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WindowsElement.CopyFrom(Microsoft.ServiceBus.Configuration.WindowsElement)">
            <summary>Copies the specified windows element into the current instance.</summary>
            <param name="source">The windows element to copy.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement">
            <summary>Represents a configuration element that, when included in a custom binding, specifies a 
            channel to transfer one-way messages through the Azure Service Bus. This class cannot be inherited.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.BindingElementType">
            <summary>Gets the type of the current instance.</summary>
            <value>Returns a 
            <see cref="T:System.Type" /> that contains the type of the current instance, which is the type of 
            <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" />.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ConnectionMode">
            <summary>Gets or sets an XML value that describes the one-way connection mode.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.RelayedOnewayConnectionMode" /> that contains the connection mode.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ConnectionPoolSettings">
            <summary>Gets or sets an XML value that describes the connection pool settings for the current instance.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement" /> that contains the connection pool settings used by the binding element that the current instance is applied to.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ListenBacklog">
            <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
            <value>The maximum number of queued connection requests that can be pending.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.RelayClientAuthenticationType">
            <summary>Gets or sets an XML value that describes the authentication type specified in this configuration element.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the type of authentication to be used by binding elements that the current instance is applied to.</value> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
            <summary>Applies the settings from this configuration element to the specified binding element.</summary>
            <param name="bindingElement">The binding element to update the settings of.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary>Copies the settings from the specified configuration element to the current instance.</summary>
            <param name = "from" > The configuration element to copy from.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement">
            <summary>Represents the configuration element that specifies an HTTPS 
            transport for transmitting SOAP messages through the Azure Service Bus.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement.BindingElementType">
            <summary>Gets the type of the binding element.</summary>
            <value>The type of the binding element.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement.CreateDefaultBindingElement">
            <summary>Creates a binding element from settings in this configuration element.</summary>
            <returns>Returns a 
            <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> whose properties are copied from the settings in this configuration element.</returns> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement">
            <summary>Represents a configuration element that specifies an HTTP transport for transmitting SOAP messages.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.AllowCookies">
            <summary>Gets or sets a value from the configuration file that 
            indicates whether the client accepts cookies and propagates them on future requests.</summary> 
            <value>true if cookies are allowed; otherwise, false. The default is false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.RelayClientAuthenticationType">
            <summary>Gets or sets the relay client authentication type stored in the configuration file.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.BindingElementType">
            <summary>Gets the type of binding. (Overrides BindingElementExtensionElement.BindingElementType.)</summary>
            <value>Returns a <see cref="T:System.Type" /> that contains the binding type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.KeepAliveEnabled">
            <summary>Gets or sets a Boolean value from the configuration file 
            that indicates whether to make a persistent connection to the internet resource.</summary> 
            <value>true if a persistent connection to the internet resource is maintained; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.MaxBufferSize">
            <summary>Gets or sets the maximum size of the buffer pool from the configuration file.</summary>
            <value>Returns the maximum buffer size. The default value is 65,536.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.ProxyAddress">
            <summary>Gets or sets a URI in the configuration file that contains the address of the proxy to use for HTTP requests.</summary>
            <value>Returns a <see cref="T:System.Uri" /> that contains the URI. The default is null.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.ProxyAuthenticationScheme">
            <summary>Gets or sets the authentication scheme used to authenticate client requests that are processed by the HTTP proxy.</summary>
            <value>The authentication scheme used to authenticate client requests that are processed by the HTTP proxy.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.TransferMode">
            <summary>Gets or sets a value from the configuration file that 
            specifies whether messages are buffered or streamed on a request or response.</summary> 
            <value>Returns a 
            <see cref="T:System.ServiceModel.TransferMode" /> that specifies whether messages are buffered or streamed on a request or response. By default, the HTTP, TCP/IP, and named pipe transports use buffered message transfers.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.UseDefaultWebProxy">
            <summary>Gets or sets a value from the configuration file that indicates 
            whether the machine-wide proxy settings are used rather than the user-specific settings.</summary> 
            <value>true if the System.Net default proxy settings are used; otherwise, false. The default is true.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.IsDynamic">
            <summary>Gets or sets whether the relay binding is dynamic.</summary>
            <value>true if the relay binding is dynamic; otherwise, false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
            <summary>Applies the settings of this configuration element to the specified binding element.</summary>
            <param name = "bindingElement" > The binding element to update the settings of.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary>Copies the properties of the specified extension element to this configuration element.</summary>
            <param name = "from" > The extension element whose properties to copy.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.CreateDefaultBindingElement">
            <summary>Creates a binding element from the settings in this configuration element.</summary>
            <returns>Returns a <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> that contains the default binding element.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
            <summary>Initializes this binding configuration element with the content of the specified binding element.</summary>
            <param name = "bindingElement" > The binding element to initialize from.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.Properties">
            <summary>Gets a 
            <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects of this configuration element. (Overrides TransportElement.Properties.)</summary> 
            <value>Returns a 
            <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains the properties of the current instance.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement">
            <summary>A configuration element that describes the message security for a one-way message to the Azure Service Bus relay.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement.ClientCredentialType">
            <summary>Gets or sets from the configuration file the type of credential 
            to be used when performing client authentication using message-based security or TransportWithMessageCredential.</summary> 
            <value>Returns a 
            <see cref="T:System.ServiceModel.MessageCredentialType" /> that contains the message credential type. The default is Windows.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement.AlgorithmSuite">
            <summary>Gets or sets from the configuration file the message encryption and key-wrap algorithms used to secure a one-way message.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> that contains the algorithm suite. The default is Base256.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement">
            <summary>A configuration element that controls transport security settings for the 
            <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> and 
            <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> types. This class cannot be inherited.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement.ProtectionLevel">
            <summary>Gets or sets the transport security protection level that is 
            applied to messages transmitted through bindings configured with this configuration element.</summary> 
            <value>Returns a 
            <see cref="T:System.Net.Security.ProtectionLevel" /> that contains the transport security protection level specified in this configuration element.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement">
            <summary>Represents a configuration element that holds a collection of 
            <see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement" /> instances.</summary> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement">
            <summary>A configuration element that describes configuration settings for the <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement" /> class, using the specified name.</summary> 
            <param name="name">The binding name set in the configuration.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.BindingElementType">
            <summary>Gets the type of binding that this configuration element represents.</summary>
            <value>Returns a 
            <see cref="T:System.Type" /> that contains the binding type, which is the type of 
            <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.ListenBacklog">
            <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
            <value>Returns the maximum number of queued connection requests that can be pending. The default is 10.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxBufferPoolSize">
            <summary>Gets or sets the maximum size allowed for a buffer pool that stores messages processed by the binding.</summary>
            <value>Returns the maximum size allowed for a buffer pool that 
            stores messages processed by the binding. The default value is 65,536 bytes.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxBufferSize">
            <summary>Gets or sets the maximum size, in bytes, of the buffer used to store messages in memory.</summary>
            <value>Returns the maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxConnections">
            <summary>Gets or sets the maximum number of connections to be pooled for subsequent reuse on 
            the client and the maximum number of connections allowed to be pending dispatch on the server.</summary> 
            <value>On the client, returns the maximum number of connections to be pooled for subsequent 
            reuse; on the server, returns the maximum number of connections allowed to be pending dispatch.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxReceivedMessageSize">
            <summary>Gets or sets the maximum size for a received message that is processed by the binding.</summary>
            <value>Returns the maximum size, in bytes, for a received message that is processed by the binding. The default value is 65,536 bytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.ReaderQuotas">
            <summary>Gets or sets an XML element that contains the constraints on the 
            complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> that specifies the complexity constraints on SOAP messages.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.Security">
            <summary>Gets a configuration element that contains the security options for an Azure Service Bus net event relay binding.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement" /> that describes the security options. The default is Transport.</value> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Initializes the contents of this XML configuration element from the property values of a specified binding.</summary>
            <param name = "binding" > The binding to copy the settings from.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Applies the settings of this configuration element to the specified binding.</summary>
            <param name = "binding" > The binding to update the settings of.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.Properties">
            <summary>Gets a collection that contains objects that can be 
            attributes or configuration element objects of this binding configuration element.</summary> 
            <value>Returns a 
            <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects of this configuration element.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement">
            <summary>Represents a configuration section that holds a collection of 
            <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement" /> instances.</summary> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement">
            <summary>Represents a configuration element that specifies a binding for peer channel-specific TCP messaging over the Service Bus.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement" /> class using the specified name.</summary> 
            <param name="name">A name that uniquely identifies this configuration element.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.BindingElementType">
            <summary>Gets or sets an XML value that contains the type of binding element of the current instance.</summary>
            <value>Returns a <see cref="T:System.Type" /> that contains the type of the current instance.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.ListenBacklog">
            <summary>Gets or sets an XML value that contains the maximum number of queued connection requests that can be pending.</summary>
            <value>Returns the maximum number of queued connection requests that can be pending. The default is 10.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxBufferPoolSize">
            <summary>Gets or sets an XML value that contains the maximum size 
            allowed for a buffer pool that stores messages processed by the binding.</summary> 
            <value>Returns the maximum size allowed for a buffer pool that stores messages processed by the binding. The default value is 65,536.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxBufferSize">
            <summary>Gets or sets an XML value that contains the maximum size, in bytes, of the buffer used to store messages in memory.</summary>
            <value>Returns the maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxConnections">
            <summary>Gets or sets an XML value that specifies the maximum 
            number of outbound and inbound connections the service creates and accepts respectively.</summary> 
            <value>On the client, returns the maximum number of connections to be pooled for subsequent 
            reuse; on the server, returns the maximum number of connections allowed to be pending dispatch.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxReceivedMessageSize">
            <summary>Gets or sets an XML value that contains the maximum size of 
            a message that can be received on a channel configured with this binding.</summary> 
            <value>Returns maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.ReaderQuotas">
            <summary>Gets or sets an XML value that places a constraint on the 
            complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> that specifies the complexity constraints on SOAP messages.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.Security">
            <summary>Gets an XML value that contains security elements for a Service Bus one-way TCP relay binding.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement" /> that describes the security elements.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Initializes the current instance using the content of the specified binding.</summary>
            <param name = "binding" > The binding.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Applies the settings of this configuration element to the specified binding.</summary>
            <param name = "binding" > The binding to update the settings of.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.Properties">
            <summary>Gets a ConfigurationPropertyCollection instance that contains a collection of ConfigurationProperty 
            objects that can be attributes or ConfigurationElement objects of this configuration element.</summary> 
            <value>Returns a 
            <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects of this configuration element.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement">
            <summary>Defines the security settings for the 
            <see cref="T:System.ServiceModel.NetTcpBinding" /> binding in an App.config file. This class cannot be inherited.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.Mode">
            <summary>Gets or sets the type of security that is applied.</summary>
            <value>Returns an <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> instance that contains the security mode.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.RelayClientAuthenticationType">
            <summary>Gets a value that describes whether clients of a service are required to present a security 
            token issued by the Azure Service Bus service to the Azure Service Bus service when sending messages.</summary> 
            <value>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the relay client authentication type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.Transport">
            <summary>Gets the security settings for the transport.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement" /> that contains the security settings.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.Message">
            <summary>Gets the security settings for the message.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement" /> that contains the message.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement">
            <summary>Represents a configuration element that controls authentication parameters 
            for the HTTP transport. This class cannot be inherited.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement.ProxyCredentialType">
            <summary>Gets or sets from the configuration file the type of client credential to be used for authentication against the proxy.</summary>
            <value>Returns a <see cref="T:System.ServiceModel.HttpProxyCredentialType" /> that contains the proxy type.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.IssuerElement">
            <summary>A configuration element that describes an issuer of a token for the Azure Service Bus.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.IssuerElement.Address">
            <summary>Gets or sets the URI address of the token issuer.</summary>
            <value>The URI address of the token issuer.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.IssuerElement.Properties">
            <summary>Gets the collection of properties contained in this configuration element.</summary>
            <value>The collection of properties contained in this configuration element.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.IssuerElement.CopyFrom(System.Configuration.ConfigurationElement)">
            <summary>Copies the contents of the specified configuration element to this configuration element.</summary>
            <param name = "from" > The configuration element to copy the contents from.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement">
            <summary>A configuration element that describes message security options over a relayed connection through the Azure Service Bus.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement.ClientCredentialType">
            <summary>Gets or sets from the configuration file the type of credential 
            to be used when performing client authentication using message-based security or TransportWithMessageCredential.</summary> 
            <value>Returns a 
            <see cref="T:System.ServiceModel.MessageCredentialType" /> that contains the type of credential. The default is Windows.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement.AlgorithmSuite">
            <summary>Gets or sets from the configuration file the message encryption and key-wrap algorithms used to secure messages.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> that contains the message encryption and key-wrap algorithms. The default is Basic256, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement">
            <summary>Represents a configuration section that holds a collection of <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" /> instances.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement">
            <summary>A configuration element that describes a secure, reliable binding 
            suitable for cross-machine communication through the Azure Service Bus relay.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" /> class with a specified configuration name.</summary> 
            <param name="name">The binding configuration name.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.BindingElementType">
            <summary>Gets the type of this configuration element. (Overrides StandardBindingElement.BindingElementType.)</summary>
            <value>Returns a <see cref="T:System.Type" /> that contains the configuration element type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ConnectionMode">
            <summary>Gets or sets the connection mode stored in the App.config file for this configuration.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" /> that contains the connection mode The default is Relayed.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode">
            <summary>Gets or sets a value from the App.config file that 
            specifies whether messages are buffered or streamed or a request or response.</summary> 
            <value>Returns a 
            <see cref="T:System.ServiceModel.TransferMode" /> that contains indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. The possible values are as follows: BufferedStreamedStreamedRequestStreamedResponseThe default value is Buffered.Specifying 
            <see cref="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode" /> to Streamed implies both StreamedRequest and StreamedResponse.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ListenBacklog">
            <summary>Gets or sets a value in the App.config file that specifies the 
            maximum number of channels that can wait to be accepted on the listener.</summary> 
            <value>Returns the maximum number of queued connection requests that can be pending. The default is 10.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferPoolSize">
            <summary>Gets or sets a value from the App.config file that contains the 
            maximum size for a buffer pool that stores TCP messages processed by the binding.</summary> 
            <value>Returns the maximum size allowed for a buffer pool that 
            stores messages processed by the binding. The default value is 65,536 bytes.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferSize">
            <summary>Gets or sets a value from the App.config file that specifies the 
            maximum size, in bytes, of the buffer used to store messages in memory.</summary> 
            <value>The maximum size, in bytes, of the buffer used to store messages in memory.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxConnections">
            <summary>Gets or sets a value from the App.config file that specifies the 
            maximum number of outbound and inbound connections the service creates and accepts respectively.</summary> 
            <value>On the client, returns the maximum number of connections to be pooled for subsequent 
            reuse; on the server, returns the maximum number of connections allowed to be pending dispatch.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxReceivedMessageSize">
            <summary>Gets or sets a value from the App.config file that contains the maximum 
            size of a message that can be received on a channel configured with this binding.</summary> 
            <value>Returns maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReaderQuotas">
            <summary>Gets a value from the App.config file that puts constraints on the 
            complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReliableSession">
            <summary>Gets a configuration element that specifies whether reliable sessions are established between channel endpoints.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> that indicates whether a WS-RM reliable session is established between channel endpoints. The default value is false.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Security">
            <summary>Gets a value from the App.config file that determines the type of security to be used with this binding.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement" /> that contains the security settings for the associated binding. The default value is none.The 
            <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement" /> you retrieve from the associated binding is created indirectly with a NetTcpRelayBinding. As such, after the binding is created, you cannot replace this object with a new object unless you also create a new binding. However, many members of WebHttpRelaySecurity can be set through security property. For more information on binding security, see the Security and Protection section. Along with the type of transport and encoding, the Security settings represent one of the three main properties that define this binding.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.IsDynamic">
            <summary>Gets or sets whether the relay binding is dynamic.</summary>
            <value>true if the relay binding is dynamic; otherwise, false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Initializes the contents of this binding configuration element from the property values of a specified binding.</summary>
            <param name = "binding" > The binding to initialize from.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Applies the settings of this configuration element to the specified binding element.</summary>
            <param name = "binding" > The binding to update the settings of.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Properties">
            <summary>Gets a ConfigurationPropertyCollection instance that contains a collection of ConfigurationProperty objects 
            that can be attributes or ConfigurationElement objects of this configuration element. (Overrides StandardBindingElement.Properties.)</summary> 
            <value>A collection of ConfigurationProperty objects that can 
            be attributes or ConfigurationElement objects of this configuration element.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement">
            <summary>Represents a configuration element that configures the security for a net TCP service through the Azure Service Bus relay.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Mode">
            <summary>Gets or sets an XML value that describes whether message-level or transport-level security is used by an endpoint configured with 
            <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> that contains the security mode. The default value is Transport.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.RelayClientAuthenticationType">
            <summary>Gets or sets the authentication type required for the client to present to the Azure Service Bus when sending messages.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the authentication type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Transport">
            <summary>Gets the transport security setting for the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement" /> that contains the relay binding.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Message">
            <summary>Gets a configuration element that represents the message security settings for the 
            <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement" /> that contains the message.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement">
            <summary>Contains the settings for the AppFabric Service Bus registry.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.BehaviorType">
            <summary>Gets the behavior type for the service registry settings.</summary>
            <value>The behavior type for the service registry settings.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.CreateBehavior">
            <summary>Creates a behavior extension based on the current registry settings.</summary>
            <returns>The behavior extension based on the current registry settings.</returns>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.DiscoveryMode">
            <summary>Gets or sets how the service is discovered.</summary>
            <value>The discovery type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.DisplayName">
            <summary>Gets or sets the display name for the endpoint.</summary>
            <value>The display name.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.SharedSecretElement">
            <summary>A configuration element that specifies the credentials for a service or client endpoint that is configured to use the 
            <see cref="T:Microsoft.ServiceBus.SharedSecretTokenProvider" /> credential type.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.IssuerName">
            <summary>Gets or sets the issuer name.</summary>
            <value>The issuer name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.IssuerSecret">
            <summary>Gets or sets the issuer secret key.</summary>
            <value>The issuer secret key.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.TokenScope">
            <summary>Gets or sets the token scope.</summary>
            <value>The token scope.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.Properties">
            <summary>Gets the properties of this configuration element that contain the issuer name and the issuer secret key.</summary>
            <value>The properties of this configuration element that contain the issuer name and the issuer secret key.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.SharedSecretElement.CopyFrom(Microsoft.ServiceBus.Configuration.SharedSecretElement)">
            <summary>Copies the contents of the specified shared secret configuration element to this configuration element.</summary>
            <param name="source">The shared secret configuration element to be copied.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement">
            <summary>Represents a configuration element that specifies additional connection pool 
            settings for a TCP transport. This class cannot be inherited.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.GroupName">
            <summary>Gets or sets the name of the connection pool used for outgoing channels.</summary>
            <value>Returns the name of the connection pool used for outgoing channels.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.LeaseTimeout">
            <summary>Gets or sets the time span after which an active connection is closed.</summary>
            <value>Returns a <see cref="T:System.TimeSpan" /> that indicates the duration after which the TCP connection is closed.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.IdleTimeout">
            <summary>Gets or sets the maximum time that the connection can be idle before being disconnected.</summary>
            <value>Returns a positive 
            <see cref="T:System.TimeSpan" /> that specifies the maximum time that the connection can be idle before being disconnected. The default is 00:02:00.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint">
            <summary>Gets or sets the maximum number of connections to a remote endpoint initiated by the service.</summary>
            <value>Returns the maximum number of connections to a remote endpoint initiated by the service. The default is 10.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement">
            <summary>Represents a configuration element that configures the security for 
            a TCP transport service through the Azure Service Bus relay.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement.ProtectionLevel">
            <summary>Gets or sets an XML value containing the transport security level for a TCP relay.</summary>
            <value>Returns a 
            <see cref="T:System.Net.Security.ProtectionLevel" /> that contains the transport security level. The default value is EncryptAndSign.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement">
            <summary>Specifies a configuration element that causes a channel to transfer messages on the 
            TCP transport when it is included in a custom binding. This class cannot be inherited.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
            <summary>Applies the settings of this configuration element to the specified binding element.</summary>
            <param name = "bindingElement" > The binding element to update the settings of.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.BindingElementType">
            <summary>Gets the type of this binding element.</summary>
            <value>Returns a <see cref="T:System.Type" /> containing a binding element type.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary>Copies the content of the specified configuration element to this configuration element.</summary>
            <param name = "from" > The configuration elements to be copied.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.CreateDefaultBindingElement">
            <summary>Creates a binding element from the settings in this configuration element.</summary>
            <returns>Returns a <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> that contains the default binding element.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
            <summary>Initializes this binding configuration element with the content of the specified binding element.</summary>
            <param name = "bindingElement">The binding element to initialize from.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ConnectionMode">
            <summary>Gets or sets the connection mode stored in the App.config file for this configuration.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" /> that contains the connection mode. The default setting is Relayed.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.RelayClientAuthenticationType">
            <summary>Gets or sets an XML value that contains the relay client authentication type.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the relay client authentication type. The default is RelayClientAuthenticationType.RelayAccessToken.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ListenBacklog">
            <summary>Gets or sets an XML value containing the maximum number of queued connection requests that can be pending.</summary>
            <value>Returns the maximum number of queued connection requests that can be pending. The default is 10.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ConnectionPoolSettings">
            <summary>Gets or sets an XML value that describes the connection pool settings for the current instance.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement" /> that contains the connection pool settings used by the binding element that the current instance is applied to.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.IsDynamic">
            <summary>Gets or sets whether the relay binding is dynamic.</summary>
            <value>true if the relay binding is dynamic; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.TokenProviderElement">
            <summary>Represents the configuration element that specifies the token provider for the Service Bus.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.Name">
            <summary>Gets the name of the specified <see cref="T:Microsoft.ServiceBus.Configuration.TokenProviderElement" /> object.</summary>
            <value>The specified <see cref="T:Microsoft.ServiceBus.Configuration.TokenProviderElement" /> object.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.SharedSecret">
            <summary>Gets the shared secret element contained in the token provider element.</summary>
            <value>The shared secret element contained in the token provider element.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.WindowsAuthentication">
            <summary>Gets the Windows authentication settings for this element.</summary>
            <value>The Windows authentication settings for this element.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.SharedAccessSignature">
            <summary>Gets the shared access signature element.</summary>
            <value>The shared access signature element.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.Properties">
            <summary>Gets the collection of properties contained in the configuration element.</summary>
            <value>The collection of properties contained in the configuration element.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.TokenProviderElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary>Copies the contents of the specified configuration element to this configuration element.</summary>
            <param name = "from" > The configuration element to copy the contents from.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement">
            <summary>Represents a configuration element that specifies the behavior of a service 
            or client endpoint for a transport on the Azure Service Bus relay.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.TokenProvider">
            <summary>Gets or sets the token provider that is used as a binding parameter.</summary>
            <value>The token provider used as a binding parameter.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.BehaviorType">
            <summary>Gets or sets the behavior type for the transport client endpoint.</summary>
            <value>The behavior type for the transport client endpoint.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.Properties">
            <summary>Gets the collection of properties contained in this configuration element.</summary>
            <value>The collection of properties contained in this configuration element.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary>Copies the contents of the specified configuration element to this configuration element.</summary>
            <param name = "from" > The configuration element to copy the contents from.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.CreateBehavior">
            <summary>Returns a new 
            <see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" /> object with the same settings as this configuration element.</summary> 
            <returns>A new 
            <see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" /> object with the same settings as this configuration element.</returns> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement">
            <summary>Represents a configuration element that contains sub-elements that specify settings for using the 
            <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> binding.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement.GetDefault">
            <summary>Gets the default binding used.</summary>
            <returns>Returns a <see cref="T:System.ServiceModel.Channels.Binding" /> that represents the default binding.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement">
            <summary>A binding element used to configure endpoints for an Azure Service 
            Bus relay service that responds to HTTP requests instead of SOAP messages. </summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement" /> class using the specified name.</summary> 
            <param name="name">The name of the new binding element.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.AllowCookies">
            <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
            <value>true if cookies are allowed; otherwise, false. The default is false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.MaxBufferPoolSize">
            <summary>Gets or sets the maximum amount of memory allocated for the 
            buffer manager that manages the buffers required by endpoints that use this binding.</summary> 
            <value>Returns the maximum size, in bytes, for the pool of buffers used 
            by an endpoint configured with this binding. The default value is 65,536 bytes.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.MaxBufferSize">
            <summary>Gets or sets the maximum amount of memory that is allocated for 
            use by the manager of the message buffers that receive messages from the channel.</summary> 
            <value>Returns the maximum amount of memory, in bytes, available for use 
            by the message buffer manager. The default value is 524,288 (0x80000) bytes.</value> 
            <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.MaxReceivedMessageSize">
            <summary>Gets or sets the maximum size for a message that can be processed by the binding.</summary>
            <value>Returns the maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.ProxyAddress">
            <summary>Gets or sets the URI address of the HTTP proxy.</summary>
            <value>Returns a <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy. The default value is null.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.ReaderQuotas">
            <summary>Gets or sets the configuration element that contains the constraints on the 
            complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary> 
            <value>Returns an 
            <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> that contains the complexity restraints.</value> 
            <exception cref="T:System.ArgumentNullException">The valueset is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The quota values of XmlDictionaryReaderQuotas are read only.</exception>
            <exception cref="T:System.ArgumentException">The quotas set must be positive.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.Security">
            <summary>Gets the configuration element that contains the security settings used with this binding.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement" /> that contains the security settings for this binding. The default value is none.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.TransferMode">
            <summary>Gets or sets a value that indicates whether the service configured with 
            the associated binding uses streamed or buffered (or both) modes of message transfer.</summary> 
            <value>Returns a 
            <see cref="T:System.ServiceModel.TransferMode" /> that contains indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. The default value is Buffered.</value> 
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value set is not a valid TransferMode value.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.UseDefaultWebProxy">
            <summary>Gets or sets a value that indicates whether the auto-configured HTTP 
            proxy of the system should be used with the associated binding, if available.</summary> 
            <value>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false. The default value is true.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.IsDynamic">
            <summary>Gets or sets whether the binding element is dynamic.</summary>
            <value>true if the binding element is dynamic; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.WriteEncoding">
            <summary>Gets or sets the character encoding that is used for the message text in the associated binding.</summary>
            <value>Returns a <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is UTF8Encoding.</value>
            <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.BindingElementType">
            <summary>Gets the type of binding that this configuration element represents.</summary>
            <value>Returns a <see cref="T:System.Type" /> that contains the binding type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.Properties">
            <summary>Gets a collection of objects that can be attributes or configuration element objects of this configuration element.</summary>
            <value>Returns a 
            <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects on this configuration element.</value> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Initializes the contents of this binding configuration element from the property values of a specified binding.</summary>
            <param name = "binding" > The binding to update this configuration element from.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Applies the settings of this configuration element to the specified binding.</summary>
            <param name = "binding" > The binding to update the settings of.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement">
            <summary>Represents a configuration element that configures the security for a Web HTTP service through the Azure Service Bus relay.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.Mode">
            <summary>Gets or sets the security mode used by the binding.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode" /> that contains the end-to-end HTTP security mode used by the service endpoint.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.RelayClientAuthenticationType">
            <summary>Gets or sets the relay client authentication type used by the service client.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the authentication type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.Transport">
            <summary>Gets a configuration element that indicates the transport-level security 
            settings for a service endpoint configured to receive HTTP requests.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement" /> that contains the security settings.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement">
            <summary>Represents a configuration section that holds a collection of 
            <see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /> instances.</summary> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement">
            <summary>Represents a configuration element that contains the settings for a binding that 
            provides support for the updated versions of the Security, ReliableSession, and TransactionFlow binding elements.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /> using the specified name.</summary> 
            <param name="name">The name of the binding. This value should be unique because it is used as identification for the binding.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement.BindingElementType">
            <summary>Gets the type of the binding element of the current instance.</summary>
            <value>Returns a <see cref="T:System.Type" /> that contains the binding element type.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement">
            <summary>Provides a base class for the<see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement" /> configuration element that specifies a binding that supports distributed transactions and secure, reliable sessions.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement" /> class with the specified name.</summary> 
            <param name="name">A name that uniquely identifies this configuration element.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxBufferPoolSize">
            <summary>Gets or sets the maximum size of the buffer pool that stores messages processed by the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary> 
            <value>The maximum size of the buffer pool that stores messages processed by the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding. The default is 524288 bytes.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxReceivedMessageSize">
            <summary>Gets or sets the maximum size for messages received on a channel configured with the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary> 
            <value>The maximum size for messages received on a channel configured with the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding. The default is 65536 bytes.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MessageEncoding">
            <summary>Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</summary>
            <value>Indicates whether MTOM or Text/XML is used to encode SOAP messages. The default is Text/XML.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ProxyAddress">
            <summary>Gets or sets the URI address of the HTTP proxy.</summary>
            <value>The URI address of the HTTP proxy. The default is null.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReaderQuotas">
            <summary>Gets constraints on the complexity of SOAP messages that can be processed by endpoints configured with the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary> 
            <value>Constraints on the complexity of SOAP messages that can be processed by endpoints configured with the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReliableSession">
            <summary>Gets a 
            <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> configuration element that represents an optional configuration setting for WS-Reliable messaging defined in the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary> 
            <value>A 
            <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> configuration element that represents an optional configuration setting for WS-Reliable messaging defined in the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.TextEncoding">
            <summary>Gets or sets the character encoding that is used for the message text.</summary>
            <value>The character encoding that is used for the message text.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.UseDefaultWebProxy">
            <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
            <value>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.IsDynamic">
            <summary>Gets or sets whether the binding base element is dynamic.</summary>
            <value>true if the binding base element is dynamic; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.Properties">
            <summary>Gets a collection of properties of this binding configuration element.</summary>
            <value>A collection of properties of this binding configuration element.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Initializes this binding configuration element with the content of the specified binding.</summary>
            <param name = "binding" > A binding.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Applies the settings of this configuration element to the specified binding.</summary>
            <param name = "binding" > The binding to update the settings of.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement">
            <summary>A configuration element that represents an interoperable 
            binding that supports distributed transactions and secure, reliable sessions.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.BindingElementType">
            <summary>Gets the type of the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary>
            <value>The type of the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.AllowCookies">
            <summary>Gets or sets a value that indicates whether the service or client accepts cookies and propagates them on future requests.</summary>
            <value>true if the service or client accepts cookies and propagates them on future requests; otherwise, false. The default is false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.Security">
            <summary>Gets the 
            <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement" /> configuration element that contains the security settings for the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary> 
            <value>The 
            <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement" /> configuration element that contains the security settings for the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</value> 
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Initializes this binding configuration element with the content of the specfied binding.</summary>
            <param name = "binding" > The binding to initialize this configuration element from.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Applies the settings of this configuration element to the specified binding.</summary>
            <param name = "binding" > The binding to update the settings of.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.Properties">
            <summary>Gets a collection of properties of this binding configuration element.</summary>
            <value>A collection of properties of this binding configuration element.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement">
            <summary>Represents a configuration element that configures the security for a WS-HTTP service through the Azure Service Bus relay.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.Mode">
            <summary>Gets or sets the mode of security that is used by an endpoint configured to receive HTTP requests.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> that specifies the type of security that is applied. The default value is Message.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.RelayClientAuthenticationType">
            <summary>Gets or sets the relay client authentication type used by the service client.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the authentication type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.Transport">
            <summary>Gets the security settings for the transport.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement" /> that specifies the security settings for the transport.Use the 
            <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement" /> object returned by this property to set the transport security parameters for the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />. If the TransportCredentialOnly value is specified by 
            <see cref="M:Microsoft.ServiceBus.WSHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)" />, then the settings provided by the Transport property become effective for the service endpoint. The value of this property can set only in the constructor it as an explicit parameter and its value cannot be set again after the binding instance is created.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.Message">
            <summary>Gets the security settings for the message.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement" /> that specifies the security settings for the message.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement">
            <summary>A configuration element that describes the security on an HTTP transport over the Azure Service Bus relay.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement.ProxyCredentialType">
            <summary>Gets or sets the type of credential to be used by the service or client endpoint for authentication against the proxy.</summary>
            <value>The type of client credential to be used by the service or client endpoint for authentication against the proxy.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement">
            <summary>A configuration element that defines the constraints on the complexity of SOAP messages 
            that can be processed by endpoints configured with a binding. This class cannot be inherited.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxDepth">
            <summary>Gets or sets the maximum nested node depth for each read.</summary>
            <value>The maximum nested node depth for each read.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxStringContentLength">
            <summary>Gets or sets the maximum number of characters allowed in XML element content.</summary>
            <value>The maximum number of characters allowed in XML element content.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxArrayLength">
            <summary>Gets or sets the maximum allowed array length.</summary>
            <value>The maximum allowed array length.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxBytesPerRead">
            <summary>Gets or sets the maximum allowed number of bytes returned for each read.</summary>
            <value>The maximum allowed number of bytes returned for each read.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxNameTableCharCount">
            <summary>Gets or sets the maximum number of characters allowed in a table name.</summary>
            <value>The maximum number of characters allowed in a table name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement">
            <summary>A configuration element that describes the message security over 
            the Azure Service Bus relay, using an HTTP transport mechanism.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement.ClientCredentialType">
            <summary>Gets or sets from the configuration file the type of credential 
            to be used when performing client authentication using message-based security or TransportWithMessageCredential.</summary> 
            <value>Returns a <see cref="T:System.ServiceModel.MessageCredentialType" /> that contains the message credential type.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement.NegotiateServiceCredential">
            <summary>Gets or sets from the configuration file a Boolean value that specifies whether the service credential is 
            provisioned at the client out-of-band, or is obtained from the service to the client through a process of negotiation.</summary> 
            <value>true if the service credential is provisioned at the client out-of-band, or is 
            obtained from the service to the client through a process of negotiation; otherwise, false.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement.AlgorithmSuite">
            <summary>Gets or sets from the configuration file the message encryption and key-wrap algorithms used to secure an HTTP message.</summary>
            <value>The message encryption and key-wrap algorithms used to secure an HTTP message.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement">
            <summary>Represents the configuration settings for the security of a message 
            sent using HTTP for non-duplex service contracts. This class cannot be inherited.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement.EstablishSecurityContext">
            <summary>Gets or sets an XML value that defines whether a Security Context was established.</summary>
            <value>true if the context is established; otherwise, false.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.ConnectionStatusBehavior">
            <summary>An endpoint behavior that provides access to the connection status of a service listening on Azure Service Bus.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ConnectionStatusBehavior" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.ConnectionStatusBehavior.IsOnline">
            <summary>Gets a value that determines if the connection is online.</summary>
            <value>true if the connection is online; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ConnectionStatusBehavior.LastError">
            <summary>Gets the last error.</summary>
            <value>Returns a <see cref="T:System.Exception" /> that contains the last error.</value>
        </member>
        <member name="E:Microsoft.ServiceBus.ConnectionStatusBehavior.Connecting">
            <summary>
            Occurs when the endpoint gets temporarily disconnected from the Relay Service and for each reconnect attempt.
            </summary>
        </member>
        <member name="E:Microsoft.ServiceBus.ConnectionStatusBehavior.Offline">
            <summary>
            Occurs when the endpoint stops attempting to connect to the Relay Service.
            </summary>
        </member>
        <member name="E:Microsoft.ServiceBus.ConnectionStatusBehavior.Online">
            <summary>
            Occurs when the endpoint successfully connects to the Relay Service.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.Retry">
            <summary>Retries the connection.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            This method does nothing.
            </summary>
            <param name="endpoint">The endpoint this behavior applies to.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Passes data at runtime to bindings to support custom behavior. This implementation does nothing.
            </summary>
            <param name="endpoint">The endpoint to modify.</param>
            <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            This implementation does nothing.
            </summary>
            <param name="serviceEndpoint">The endpoint that is to be customized.</param>
            <param name="clientRuntime">The client runtime to be customized.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
            <summary>
            Hooks up the listener runtime connection status events.
            </summary>
            <param name="serviceEndpoint">The endpoint that is to be customized.</param>
            <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.BasicHttpRelayBinding">
            <summary>Represents a binding that a client can use to configure endpoints that can communicate 
            with ASMX-based Web services and other services that conform to the WS-I Basic Profile 1.1. </summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> class using the specified configuration.</summary> 
            <param name="configurationName">The configuration to use. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> class with a specified type of security used by the binding and the authentication type used by the client.</summary> 
            <param name="securityMode">The type of security used with the SOAP message and for the client. </param>
            <param name="relayClientAuthenticationType">The type of authentication used by the client. </param>
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.AllowCookies">
            <summary>Gets or sets a value that determines if the client allows cookies.</summary>
            <value>Returns <see cref="T:System.Boolean" />.true to allow cookies; otherwise, false. The default value is false. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.HostNameComparisonMode">
            <summary>Gets or sets how the host name should be compared.</summary>
            <value>The comparison method used in the host name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MaxBufferSize">
            <summary>Gets or sets the maximum size for a buffer that receives messages from the channel.</summary>
            <value>Returns 
            <see cref="T:System.Int32" />.The maximum size, in bytes, of a buffer that stores messages while they are processed for an endpoint configured with this binding. The default value is 65,536 bytes.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MaxBufferPoolSize">
            <summary>Gets or sets the maximum size allowed for a buffer pool that stores TCP messages processed by the binding.</summary>
            <value>The maximum size allowed for a buffer pool that stores TCP messages processed by the binding.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MaxReceivedMessageSize">
            <summary>Gets or sets the maximum size for a message that can be received on a channel configured with this binding.</summary>
            <value>Returns 
            <see cref="T:System.Int64" />.The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MessageEncoding">
            <summary>Gets or sets the type of message encoding.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.WSMessageEncoding" /> that contains the type of message encoding. The default value is Text. </value> 
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.ProxyAddress">
            <summary>Gets or sets the proxy address.</summary>
            <value>Returns a <see cref="T:System.Uri" /> that  contains the proxy address. The default value is null.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.ReaderQuotas">
            <summary>Gets or sets the reader quotas.</summary>
            <value>Returns a 
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.Scheme">
            <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
            <value>The URI transport scheme for the channels and listeners that are configured with this binding.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.Security">
            <summary>Gets the collection of security bindings used with this binding.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.BasicHttpRelaySecurity" /> that contains the  security settings used in the binding. The default value has EndToEndBasicSecurityMode set to Transport, RelayClientAuthenticationType set to RelayAccessToken, HttpRelayTransportSecurity with HttypProxyCredentialType of None, and BasicHttpRelayMessageSecurity with ClientCredentialType of BasicHttpMessageCredentialType.UserName and an AlgorithmSuite of SecurityAlgorithmSuite.Basic256. </value> 
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.EnvelopeVersion">
            <summary>Gets the version of SOAP that is used for messages that are processed by this binding. </summary>
            <value>Returns <see cref="T:System.ServiceModel.EnvelopeVersion" />.The value that is used with this binding. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.TextEncoding">
            <summary>Gets or sets the character encoding that is used for the message text.</summary>
            <value>Returns a <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is UTF8Encoding.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.TransferMode">
            <summary>Gets or sets the transfer mode.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.TransferMode" /> that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. By default, the HTTP, TCP/IP, and named pipe transports use buffered message transfers. The default value is buffered.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.UseDefaultWebProxy">
            <summary>Gets or sets a value that determines if the client uses the default web proxy.</summary>
            <value>Returns true if the client uses the default web proxy; otherwise, false. The default is true.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.IsDynamic">
            <summary>Gets or sets whether the binding element is dynamic.</summary>
            <value>true if the binding element is dynamic; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
            <summary>
            Indicates that incoming requests are handled asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.CreateBindingElements">
            <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
            <returns>Returns 
            <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.Contains the ordered stack of binding elements described by the 
            <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />. The order of the binding elements starting from the bottom is transport, encoding, and security.</returns> 
        </member>
        <member name="T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity">
            <summary>Provides properties used to configure message-level security settings for <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity.ClientCredentialType">
            <summary>Specifies the type of credential with which the client authenticates.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> that contains a member of the 
            <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> enumeration. The default value is UserName..</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity.AlgorithmSuite">
            <summary>Specifies the algorithm suite to use with <see cref="T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity" />.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm. The default value is Base256. This property cannot be null.</value> 
            <exception cref="T:System.ArgumentNullException">The value of <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> is null.</exception>
        </member>
        <member name="T:Microsoft.ServiceBus.BasicHttpRelaySecurity">
            <summary>Provides properties used to configure the security settings of a 
            <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> binding.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Mode">
            <summary>Gets or sets the security mode for a <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> binding.</summary>
            <value>One of the values of <see cref="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" /> enumeration. The default value is None.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is not a legal value for 
            <see cref="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" />.</exception> 
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.RelayClientAuthenticationType">
            <summary>Gets or sets the type of authentication used by the Azure Service Bus service.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the type of authentication used by the service.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Transport">
            <summary>Gets the transport-level security settings for a <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> binding.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.HttpRelayTransportSecurity" /> that contains the security settings.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Message">
            <summary>Gets the message-level security settings for a <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> binding.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity" />, which represents the message-level security settings for this binding.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode">
            <summary>An enumeration type that specifies the modes of security that can be used with 
            <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />. </summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.None">
            <summary>Messages are not secured during transfer. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.Transport">
            <summary>Security is provided using HTTPS. The service must be configured with SSL certificates. The SOAP message is protected as a whole 
            using HTTPS. The service is authenticated by the client using the service’s SSL certificate. The client authentication is controlled through the ClientCredentialType.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.Message">
            <summary>Security is provided using WS-Security SOAP message security. For the 
            <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />, the system requires that the server certificate be provided to the client separately. The valid client credential types for this binding are UserName and Certificate.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.TransportWithMessageCredential">
            <summary>Integrity, confidentiality and server authentication are provided by HTTPS. The service must be configured with a certificate. Client authentication is provided by means of SOAP message 
            security. This mode is applicable when the user is authenticating with a UserName or Certificate credential and there is an existing HTTPS deployment for securing message transfer.</summary> 
        </member>
        <member name="T:Microsoft.ServiceBus.IHybridConnectionStatus">
            <summary>Provides access to the current connection state of a hybrid connection channel.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.IHybridConnectionStatus.ConnectionState">
            <summary>Gets the current connection state of the hybrid connection. </summary>
            <value>Returns <see cref="T:Microsoft.ServiceBus.HybridConnectionState" />.Contains the connection state. </value>
        </member>
        <member name="E:Microsoft.ServiceBus.IHybridConnectionStatus.ConnectionStateChanged">
            <summary>Occurs when the connection state changes. </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.HybridConnectionStateChangedArgs">
            <summary>Represents the arguments to the hybrid connection state change.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.HybridConnectionStateChangedArgs.#ctor(Microsoft.ServiceBus.HybridConnectionState)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.HybridConnectionStateChangedArgs" /> class.</summary>
            <param name="state">The state of the hybrid connection.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.HybridConnectionStateChangedArgs.ConnectionState">
            <summary>Gets the current connection state of the hybrid connection.</summary>
            <value>Returns <see cref="T:Microsoft.ServiceBus.HybridConnectionState" />.Contains the connection state. </value>
        </member>
        <member name="T:Microsoft.ServiceBus.HybridConnectionState">
            <summary>Describes the current connection state for a hybrid connection.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.HybridConnectionState.Relayed">
            <summary>A relayed connection. The communicating parties connect through a relayed socket and the Azure Service Bus infrastructure. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.HybridConnectionState.Direct">
            <summary>A direct connection. The communicating parties connect using a socket routed on 
            the most direct network path, rather than through the Azure Service Bus infrastructure. </summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.NetworkDetector.DetectConnectivityModeForAutoDetect(System.Uri)">
            <summary>
            Detect whether it is http or tcp or https mode for non-webstream user
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NetworkDetector.DetectInternalConnectivityModeForAutoDetect(System.Uri)">
            <summary>
            Detect whether it is http or tcp or https mode.
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NetworkDetector.DetectInternalConnectivityModeForHttp(System.Uri)">
            <summary>
            Detect whether it is http or https mode
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement">
            <summary>Represents the transport binding element that supports channel security over an SSL stream for use in policy exports.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.GetTransportTokenAssertion">
            <summary>Gets the <see cref="T:System.Xml.XmlElement" /> that represents the transport token used in the security binding.</summary>
            <returns>An <see cref="T:System.Xml.XmlElement" /> that represents the transport token used in the security binding.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.Clone">
            <summary>Returns a copy of this binding element instance.</summary>
            <returns>A copy of this binding element instance.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Returns an object of the requested type, if present, from the appropriate layer in the binding stack.</summary>
            <returns>The object of the requested type if found; otherwise, returns null.</returns>
            <param name = "context" > The binding context that provides context for this binding element.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType">
            <summary>Describes whether subscribers to a 
            <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> are required to present a security token issued by the Azure Access Control service to the Azure Service Bus service when sending messages.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType.RelayAccessToken">
            <summary>If specified by a NetEventRelay listener, the client is required to provide a relay access token. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType.None">
            <summary>If specified by a NetEventRelay subscriber, the client will not be required to provide a relay access token. This represents 
            an opt-out mechanism with which listeners can waive the Azure Access Control protection on the endpoint and perform their own access control.</summary> 
        </member>
        <member name="T:Microsoft.ServiceBus.RelayedOnewayTransportSecurity">
            <summary>Represents the transport security settings of a one-way binding.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportSecurity.ProtectionLevel">
            <summary>Gets or sets the transport security protection level.</summary>
            <value>Returns a <see cref="T:System.Net.Security.ProtectionLevel" /> that contains the transport security protection level.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.NetOnewayRelaySecurity">
            <summary>The collection of security settings for a <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> binding.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.Mode">
            <summary>Gets or sets whether message-level and transport-level security are used by an endpoint configured with a 
            <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> that indicates whether message-level or transport-level security are used by an endpoint. The default value is Transport.</value> 
            <exception cref="T:System.ArgumentOutOfRangeException">The security mode value is not valid.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.RelayClientAuthenticationType">
            <summary>Gets or sets the authentication type for the relay client.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the authentication type. The default value is 
            <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" />.</value> 
            <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid 
            <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> field.</exception> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.Transport">
            <summary>Gets the type of transport-level security requirements for an endpoint configured with a 
            <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />. The default value is EncryptAndSign.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportSecurity" /> that indicates the type of transport-level security requirements for an endpoint.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.Message">
            <summary>Gets the type of message-level security requirements for a service configured with a 
            <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.MessageSecurityOverRelayOneway" /> that indicates the type of message-level security requirements for an endpoint. The default AlgorithmSuite is Basic256, and the default ClientCredentialType is Windows.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.NetEventRelayBinding">
            <summary>Represents a binding that supports one-way event multicasting and allows any number 
            of event publishers and event consumers to rendezvous at the same endpoint. </summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> class, using the specified security mode and relay client authentication type.</summary> 
            <param name="securityMode">The type of security used with the SOAP message and for the client. </param>
            <param name="relayClientAuthenticationType">The type of authentication used by the client.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> class, using the specified configuration. </summary> 
            <param name="configurationName">The name of the configuration to use.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetOnewayRelaySecurity)">
            <summary>Initializes a new instance of the<see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> class, using the specified transport, encoding, and security elements. </summary>
            <param name = "transport" > The transport to use. </param>
            <param name = "encoding" > The encoding to use. </param>
            <param name = "security" > The type of security used with the SOAP message and for the client. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.IsBindingElementsMatch(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement)">
            <summary>Retrieves a value that determines if the specified binding elements match the current instance. </summary>
            <returns>Returns true if the bindings match; otherwise, false. </returns>
            <param name = "transport" > The transport to check against the current instance. </param>
            <param name = "encoding" > The encoding to check against the current instance. </param>
            <param name = "session" > The session to check against the current instance.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.ApplyConfiguration(System.String)">
            <summary>Applies the settings from the configuration element that corresponds to 
            the specified name to the current instance of this binding element.</summary> 
            <param name="configurationName">The name of the configuration element to take the settings from.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.NetOnewayRelayBinding">
            <summary>Represents a binding for a secure, one-way connection through the cloud. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.NetOnewayRelayBinding.transport">
            <summary>Specifies the transport type for the binding.Along with the encoding and security settings, the transport type represents the three core properties of a binding.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.NetOnewayRelayBinding.encoding">
            <summary>Represents the encoding for the binding.Along with the security settings and transport type, the encoding represents the three core properties of a binding.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> class, using the specified security mode and authentication type.</summary> 
            <param name="securityMode">The security mode. </param>
            <param name="relayClientAuthenticationType">The authentication type. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> class using the specified configuration.</summary> 
            <param name="configurationName">The name of the configuration to use.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayConnectionMode,Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> class, using the specified connection and security modes, as well as the authentication type.</summary> 
            <param name="connectionMode">The connection mode. </param>
            <param name="securityMode">The type of security used with the SOAP message and for the client. </param>
            <param name="relayClientAuthenticationType">The type of authentication used by the client. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetOnewayRelaySecurity)">
            <summary>Initializes a new instance of the<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> class, using the specified transport, encoding, and security.</summary>
            <param name = "transport" > The transport element containing the core transport settings.</param>
            <param name = "encoding" > The encoding element.</param>
            <param name = "security" > The security settings.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.NetOnewayRelaySecurity)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> class, using the specified security settings.</summary> 
            <param name="security">The security settings.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.HostNameComparisonMode">
            <summary>
            Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxBufferPoolSize">
            <summary>Gets or sets the maximum size allowed for a buffer pool that stores messages processed by the binding.</summary>
            <value>Returns the maximum size allowed for a buffer pool that 
            stores messages processed by the binding. The default value is 65,536 bytes.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxBufferSize">
            <summary>Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.</summary>
            <value>Returns the maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxConnections">
            <summary>Gets or sets a value that controls the maximum number of connections to be pooled for subsequent 
            reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.</summary> 
            <value>On the client, returns the maximum number of connections to be pooled for subsequent 
            reuse; on the server, returns the maximum number of connections allowed to be pending dispatch.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.ListenBacklog">
            <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
            <value>Returns the maximum number of queued connection requests that can be pending. The default is 10.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MessageSecurityVersion">
            <summary>Gets the message security version.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.MessageSecurityVersion" /> that contains the message security version. This currently returns MessageSecurityVersion..::.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxReceivedMessageSize">
            <summary>Gets or sets the maximum size for a received message that is processed by the binding.</summary>
            <value>Returns the maximum size, in bytes, for a received message that is processed by the binding. The default value is 65,536 bytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.ReaderQuotas">
            <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
            <value>Returns a 
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> instance that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
            <summary>
            Indicates that incoming requests are handled asynchronously.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.Scheme">
            <summary>Gets the URI scheme for the transport.</summary>
            <value>Returns the URI scheme for the transport. The default value is “sb”, indicating the Azure Service Bus.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.EnvelopeVersion">
            <summary>Gets the version of SOAP that is used for messages processed by this binding.</summary>
            <value>Returns a <see cref="T:System.ServiceModel.EnvelopeVersion" /> that contains the envelope version.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.Security">
            <summary>Gets an object that specifies the type of security used with services configured with this binding.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.NetOnewayRelaySecurity" /> instance that contains the types of security used with this binding. This type contains the message security, the end-to-end security mode, relay client authentication type, and transport security settings.</value> 
        </member>
        <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.ApplyConfiguration(System.String)">
            <summary>Applies the settings from the configuration element that corresponds to 
            the specified name to the current instance of this binding element.</summary> 
            <param name="configurationName">The name of the configuration element to take the settings from.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.CreateBindingElements">
            <summary>Creates a set of binding elements.</summary>
            <returns>Returns a <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the binding elements.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.NetTcpRelayBinding">
            <summary>Provides a secure, reliable binding suitable for cross-computer communication.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> class with the type of security used and relay client authentication specified. 
            </summary>
            <param name="securityMode">The type of security used with the binding. </param>
            <param name="relayClientAuthenticationType">The type of client authentication used on the relay. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> class with the type of security used, the type of client authentication, and a value that indicates whether reliable sessions are explicitly enabled.</summary> 
            <param name="securityMode">The type of security used with the Azure Service Bus binding.</param>
            <param name="relayClientAuthenticationType">The type of client authentication used on the relay. </param>
            <param name="reliableSessionEnabled">true if reliable sessions are enabled; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> class with a specified XML configuration. </summary> 
            <param name="configurationName">The configuration to use.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> class with the given transport, encoder, 
            reliable session binding element and type of security used.
            </summary>
            <param name="transport">The transport binding element to use.</param>
            <param name="encoding">The encoding to use.</param>
            <param name="session">The reliable session binding element.</param>
            <param name="security">The security binding element.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBinding.ReliableSession">
            <summary>Gets an object that indicates whether a reliable session is established between Azure Service Bus channel endpoints. </summary>
            <value>Returns 
            <see cref="T:System.ServiceModel.OptionalReliableSession" />.Indicates whether a WS-RM reliable session is established between channel endpoints. The default is false.</value> 
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement)">
            <summary>Returns a value that determines whether the specified objects have matching binding elements. </summary>
            <returns>Returns<see cref="T:System.Boolean" />.true if the objects match; otherwise, false. </returns>
            <param name = "transport" > The transport to match. </param>
            <param name = "encoding" > The encoding to match. </param>
            <param name = "session" > The session to match. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.ApplyConfiguration(System.String)">
            <summary>Applies the settings from the configuration element that corresponds to 
            the specified name to the current instance of this binding element.</summary> 
            <param name="configurationName">The name of the configuration element to take the settings from.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.CreateBindingElements">
            <summary>Creates a collection with the binding elements for the binding. </summary>
            <returns>Returns a 
            <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.CreateMessageSecurity">
            <summary>Creates the message security token for the current instance. </summary>
            <returns>Returns <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.Contains the message security token. </returns>
        </member>
        <member name="T:Microsoft.ServiceBus.HttpRelayTransportSecurity">
            <summary>Represents the transport-level security settings for the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.HttpRelayTransportSecurity.ProxyCredentialType">
            <summary>Gets or sets the type of client credential to be used for authentication against the proxy.</summary>
            <value>Returns a <see cref="T:System.ServiceModel.HttpProxyCredentialType" /> that contains the client credential.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Setting the property to an undefined value.</exception>
        </member>
        <member name="T:Microsoft.ServiceBus.NetTcpRelayBindingBase">
            <summary>The base class for common methods for the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> binding.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.NetTcpRelayBindingBase.transport">
            <summary>The transport element for the current instance.Along with the encoding and security, the transport setting forms the core properties of a binding.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.NetTcpRelayBindingBase.encoding">
            <summary>The encoding element for the current instance.Along with the security and transport settings, the encoding forms the three core properties of a binding.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" /> class, using the specified security mode and relay authentication type.</summary> 
            <param name="securityMode">The type of security used with the binding.</param>
            <param name="relayClientAuthenticationType">The type of relay authentication used.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" /> class, using the specified configuration name.</summary> 
            <param name="configurationName">The binding configuration name.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)">
            <summary>Initializes a new instance of the<see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" /> class, using the specified transport, encoding, and security.</summary>
            <param name = "transport" > The transport.</param>
            <param name = "encoding" > The encoding.</param>
            <param name = "security" > The security.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.HostNameComparisonMode">
            <summary>Gets or sets the comparison mode used on the hostname.</summary>
            <value>The comparison mode used on the hostname.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ConnectionMode">
            <summary>Gets or sets the connection mode: 
            <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid" /> or 
            <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed" />.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" /> that contains the connection mode; either 
            <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid" /> or 
            <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed" />. The default is Relayed.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.TransferMode">
            <summary>Gets or sets a value that indicates whether the service configured 
            with the binding uses streamed or buffered (or both) modes of message transfer.</summary> 
            <value>Returns a 
            <see cref="T:System.ServiceModel.TransferMode" />  that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. By default, the HTTP, TCP/IP, and named pipe transports use buffered message transfers.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferPoolSize">
            <summary>Gets or sets the maximum size allowed for a buffer pool that stores messages processed by the binding.</summary>
            <value>Returns the maximum size, in bytes, allowed for a buffer pool 
            that stores messages processed by the binding. The default value is 65,536.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferSize">
            <summary>Gets or sets a value that specifies the maximum size of the buffer used to store messages in memory.</summary>
            <value>Returns the maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxConnections">
            <summary>Gets or sets a value that controls the maximum number of connections to be pooled for subsequent 
            reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.</summary> 
            <value>On the client, returns the maximum number of connections to be pooled for subsequent 
            reuse; on the server, returns the maximum number of connections allowed to be pending dispatch.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ListenBacklog">
            <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
            <value>Returns the maximum number of queued connection requests that can be pending. The default is 10.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.IsDynamic">
            <summary>Gets or sets whether the relay binding is dynamic.</summary>
            <value>true if the relay binding is dynamic; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MessageSecurityVersion">
            <summary>Gets the message security version.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.MessageSecurityVersion" /> that contains the message security version. This currently always returns MessageSecurityVersion..::.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11. </value> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxReceivedMessageSize">
            <summary>Gets or sets the maximum size for a received message that is processed by the binding.</summary>
            <value>Returns the maximum size, in bytes, for a received message that is processed by the binding. The default value is 65,536.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ReaderQuotas">
            <summary>Gets or sets constraints on the complexity of SOAP messages that can 
            be processed by endpoints configured with this binding. This property cannot be null.</summary> 
            <value>Returns a 
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on soap messages exchanged. The default values for these constraints are provided in the following Remarks section.</value> 
            <exception cref="T:System.ArgumentNullException"> if ReaderQuotas is null</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
            <summary>
            Indicates that incoming requests are handled asynchronously.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.Scheme">
            <summary>Gets the URI scheme for the transport.</summary>
            <value>Returns the URI scheme for the transport. The default is “sb”.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.EnvelopeVersion">
            <summary>Gets the version of SOAP that is used for messages processed by this binding.</summary>
            <value>Returns a <see cref="T:System.ServiceModel.EnvelopeVersion" /> that contains the envelope version used for this binding.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.Security">
            <summary>Gets an object that specifies the type of security used with services configured with this binding.</summary>
            <value>Returns 
            <see cref="T:Microsoft.ServiceBus.NetTcpRelaySecurity" />, which contains the types of security used with this binding. The default mode of security is Transport.</value> 
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement)">
            <summary>Determines whether the specified binding elements match the default values of the binding elements in the current instance.</summary>
            <returns>true if the elements match; otherwise, false.</returns>
            <param name = "transport" > The transport binding element.</param>
            <param name = "encoding" > The encoding binding element.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.ApplyConfiguration(System.String)">
            <summary>Applies the settings from the configuration element that corresponds to 
            the specified name to the current instance of this binding element.</summary> 
            <param name="configurationName">The name of the configuration element to take the settings from.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Did not find the binding element 
            specified by the input configuration name in the configuration.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateBindingElements">
            <summary>Retrieves an ordered collection of binding elements contained in the current binding.</summary>
            <returns>Returns a <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that makes up the binding.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateMessageSecurity">
            <summary>Creates the security binding element for the current instance.</summary>
            <returns>Returns a <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that contains the security binding element.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.NetTcpRelaySecurity">
            <summary>Specifies the types of transport-level and message-level security used by an endpoint configured with a 
            <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />.</summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.Mode">
            <summary>Gets or sets whether message-level and transport-level security are used by an endpoint configured with a 
            <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />.</summary> 
            <value>Returns an 
            <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> that indicates whether message-level or transport-level security is used by an endpoint. The default value is Transport.</value> 
            <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> field.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.RelayClientAuthenticationType">
            <summary>Gets or sets the relay client authentication type.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the relay client authentication type.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid 
            <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> field.</exception> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.Transport">
            <summary>Gets the type of message-level security requirements for an endpoint configured with a 
            <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.TcpRelayTransportSecurity" /> that indicates the type of transport-level security requirements for an endpoint.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.Message">
            <summary>Gets the type of message-level security requirements for a service configured with a 
            <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />. </summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.MessageSecurityOverRelayConnection" /> that indicates the type of message-level security requirements for an endpoint. The default security settings are: a ClientCredentialType of UserName; and an AlgorithmSuite of Basic256.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.RelayClientAuthenticationType">
            <summary>Describes whether clients of a service are required to present a security 
            token issued by Azure Access Control to the Azure Service Bus when sending messages.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken">
            <summary>If specified by a listener, the client is required to provide a security token. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.RelayClientAuthenticationType.None">
            <summary>If specified by a listener, the client will not be required to provide a security token. 
            This represents an opt-out mechanism with which listeners can waive the Azure Access Control protection on the endpoint.</summary> 
        </member>
        <member name="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement">
            <summary>Represents the binding element for the TCP transport relay. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement" /> class. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement" /> class using the specified relay client authentication type. </summary> 
            <param name="relayClientAuthenticationType">The relay client authentication type.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement" /> class using the specified relay binding element. </summary> 
            <param name="elementToBeCloned">The element to be cloned.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionPoolSettings">
            <summary>Gets the connection pool settings for the current instance.</summary>
            <value>The connection pool settings for the current instance.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.RelayClientAuthenticationType">
            <summary>Gets or sets the type of authentication used by the service client.</summary>
            <value>Returns 
            <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />.Contains the authentication type. The default value is RelayAccessToken.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionMode">
            <summary>Gets or sets the connection mode.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" /> that contains the connection mode.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.Scheme">
            <summary>Gets the URI scheme for the transport.</summary>
            <value>Returns the URI scheme for the transport, which is “TCP”.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.IsDynamic">
            <summary>Gets or sets whether the binding element is dynamic.</summary>
            <value>true if the binding element is dynamic; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.TransportProtectionEnabled">
            <summary>
            If this flag is true, the gateway will add sslstream on it.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.Clone">
            <summary>Creates a copy of the current binding element.</summary>
            <returns>Returns a <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains a copy of the binding element.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Creates a channel factory that can be used to create a channel.</summary>
            <returns>A channel factory of the specified type.</returns>
            <param name = "context" > Describes the bindings, behaviors, contracts, and other information required to create the channel factory.</param>
            <typeparam name = "TChannel" > The type of channel factory. </typeparam>
            <exception cref = "T:System.InvalidOperationException" > When Transport protection is enabled and the Connection Mode is set to either Hybrid or Direct.This member is unlikely to be used directly, but may be used when creating a custom binding.For more information, see Creating a Custom AppFabric Service Bus Binding.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Creates a channel listener of the specified type.</summary>
            <returns>A channel listener of the specified type.</returns>
            <param name = "context" > Describes the bindings, behaviors, contracts, and other information required to create the channel factory.</param>
            <typeparam name = "TChannel" > The type of channel factory. </typeparam>
            <exception cref = "T:System.InvalidOperationException" > When Transport protection is enabled and the Connection Mode is set to either Hybrid or Direct.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Returns a specified object from the binding context.</summary>
            <returns>A binding element that contains the specified object, or null if not found.</returns>
            <param name = "context" > The context. </param>
            <typeparam name = "T" > The type of object to get. </typeparam>
        </member>
        <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
            <summary>
            Exports a custom policy assertion about this binding.
            </summary>
            <param name="exporter">The MetadataExporter that you can use to modify the exporting process.</param>
            <param name="context">The PolicyConversionContext that you can use to insert your custom policy assertion.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.TcpRelayConnectionMode">
            <summary>Describes the connection mode for the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed">
            <summary>All communication is relayed through the Azure Service Bus cloud. The SSL-protected control connection is used to negotiate a relayed end-to-end socket connection that all Client-Service communication flows through. After the connection is established, the Azure Service Bus infrastructure acts much like a socket forwarder proxy relaying a bidirectional byte stream. This mode additionally 
            requires outbound port 819 for the NAT prediction algorithm. With most personal firewall products, the outbound socket connection that is being established by the direct connect mode will also require a one-time policy exception to be granted by the user (the Windows Personal Firewall and other products will typically prompt the user) to the hosting application.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid">
            <summary>Communication is relayed through the Azure Service Bus infrastructure while the Client and Service endpoints negotiate a direct socket connection to each other. The coordination of this direct connection is governed by the Azure Service Bus cloud service. The direct socket connection algorithm is capable of establishing direct connections between two parties that sit behind opposing Firewalls and NAT devices. The algorithm uses only outbound connections for Firewall traversal and relies on a mutual port prediction algorithm for NAT traversal. Since the NAT traversal algorithm is 
            dependent on a very narrowly timed coordination and a best-guess prediction about the expected NAT behavior, the algorithm tends to have a very high success rate for Home and Small Business scenarios with a small number of clients and degrades in its success rate with larger NATs. If a direct connection can be established, the relayed connection is automatically upgraded to the direct connection without message or data loss. If the direct connection cannot be established, data will continue to flow through the Azure Service Bus Relay. 
            
            This mode additionally requires outbound port 819 for the NAT prediction algorithm. With most personal firewall products, the outbound socket connection that is being established by the direct connect 
            mode will also require a one-time policy exception to be granted by the user (the Windows Personal Firewall and other products will typically prompt the user) to the hosting application. 
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement">
            <summary>Represents the binding element used to specify an HTTPS relay transport for transmitting messages.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.#ctor">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" /> class, using the default settings.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" /> class, using the specified type of client authentication.</summary> 
            <param name="relayClientAuthenticationType">The relay client authentication type.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpsRelayTransportBindingElement)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" /> class, using the specified element.</summary> 
            <param name="elementToBeCloned">The element to be cloned.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.Scheme">
            <summary>Gets the URI scheme for the transport.</summary>
            <value>The URI scheme for the transport, which is “HTTPS”.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.Clone">
            <summary>Creates a deep copy of the current binding element.</summary>
            <returns>A deep copy of the current binding element.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.CreateInnerChannelBindingElement">
            <summary>Creates a <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> binding element for the inner channel.</summary>
            <returns>A binding element for the inner channel.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.InitializeInnerChannelBindingElement(System.ServiceModel.Channels.HttpTransportBindingElement)">
            <summary>Initializes the specified binding element with the settings from the current instance of the<see cref= "T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" /> binding element.</summary>
            <param name = "httpTransportElement" > The binding element to initialize.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Gets the specified property from the specified binding context.</summary>
            <returns>A binding element that contains the property.</returns>
            <param name = "context" > The binding context.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement">
            <summary>Represents the binding element used to specify an HTTP transport for transmitting messages on the Azure Service Bus. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" /> class using the specified client authentication type.</summary> 
            <param name="relayClientAuthenticationType">The client authentication type.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpRelayTransportBindingElement)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" /> class, using the specified element to be cloned.</summary> 
            <param name="elementToBeCloned">The element to be cloned.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetTransportTokenAssertion">
            <summary>Gets the XML element that represents the transport token used in the security binding.</summary>
            <returns>The transport token used in the security binding.</returns>
        </member>
        <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.AllowCookies">
            <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
            <value>true if cookies are allowed; otherwise, false. The default is false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.HostNameComparisonMode">
            <summary>Gets or sets the comparison mode use in the host name.</summary>
            <value>The comparison mode use in the host name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.KeepAliveEnabled">
            <summary>Gets or sets a value that indicates whether to make a persistent connection to a service endpoint. </summary>
            <value>true if the request to the service endpoint should contain a 
            Connection HTTP header with the value Keep-alive; otherwise, false. The default is true.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.MaxBufferSize">
            <summary>Gets or sets the maximum size of the buffer to use.</summary>
            <value>Returns the maximum size, in bytes, of the buffer.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAddress">
            <summary>Gets or sets a URI that contains the address of the proxy to use for HTTP requests.</summary>
            <value>Returns a <see cref="T:System.Uri" /> that contains the address for the proxy. The default value is null.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAuthenticationScheme">
            <summary>Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP proxy.</summary>
            <value>One of the values of the 
            <see cref="T:System.Net.AuthenticationSchemes" /> enumeration that specifies the protocols used for client authentication on the proxy. The default is Anonymous. </value> 
        </member>
        <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.RelayClientAuthenticationType">
            <summary>Gets or sets the relay client authentication type. </summary>
            <value>Returns 
            <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />.Contains the authentication type. The default value is RelayClientAuthenticationType.RelayAccessToken</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.Scheme">
            <summary>Gets the URI scheme for the transport.</summary>
            <value>Returns the URI scheme.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.TransferMode">
            <summary>Gets or sets the transfer mode.</summary>
            <value>Returns a <see cref="T:System.ServiceModel.TransferMode" /> that contains the transfer mode.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.UseDefaultWebProxy">
            <summary>Gets or sets a value that indicates whether the machine-wide proxy settings are used rather than the user specific settings.</summary>
            <value>true if the machine-wide proxy settings are used; otherwise, false. The default is true.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.IsDynamic">
            <summary>Gets or sets whether the binding element is dynamic.</summary>
            <value>true if the binding element is dynamic; otherwise, false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Creates a channel factory that can be used to create a channel.</summary>
            <returns>The channel factory of the specified type.</returns>
            <param name = "context" > The binding context for the channel.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Creates a channel listener for channels of the specified generic type.</summary>
            <returns>A channel listener.</returns>
            <param name = "context" > The binding context.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CreateInnerChannelBindingElement">
            <summary>Creates a <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> for the inner channel.</summary>
            <returns>A <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> for the inner channel.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(System.ServiceModel.Channels.HttpTransportBindingElement)">
            <summary>Initializes the specified binding element with the settings from the current instance of the<see cref= "T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" /> binding element.</summary>
            <param name = "httpTransportElement" > The binding element to initialize.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Determines whether a channel factory of the specified type can be built.</summary>
            <returns>true if a channel factory can be built; otherwise, false.</returns>
            <param name = "context" > The binding context for the channel.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</summary>
            <returns>true if the IChannelListener&lt;TChannel&gt; of type IChannel can be built by the binding element; otherwise, false.</returns>
            <param name = "context" > The binding context that provides context for the binding element.</param>
            <exception cref = "T:System.ArgumentNullException" > context is null.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.Clone">
            <summary>Returns a copy of the binding element object.</summary>
            <returns>Returns a <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains a deep clone of the original.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Gets the specified property from the specified binding context.</summary>
            <returns>The property from the specified binding context.</returns>
            <param name = "context" > The binding context.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
            <summary>
            Exports a custom policy assertion about this binding.
            </summary>
            <param name="exporter">The MetadataExporter that you can use to modify the exporting process.</param>
            <param name="context">The PolicyConversionContext that you can use to insert your custom policy assertion.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
            <summary>
            Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for a contract.
            </summary>
            <param name="exporter">The WsdlExporter that exports the contract information.</param>
            <param name="context">Provides mappings from exported WSDL elements to the contract description.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
            <summary>
            Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for an endpoint.
            </summary>
            <param name="exporter">The WsdlExporter that exports the contract information.</param>
            <param name="context">Provides mappings from exported WSDL elements to the contract description.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement">
            <summary>Represents the transport binding element used for one-way communication.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> class, using the specified authentication type.</summary> 
            <param name="relayClientAuthenticationType">The relay client authentication type. This can be either 
            <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" /> or 
            <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.None" />.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType,Microsoft.ServiceBus.RelayedOnewayConnectionMode)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> class, using the specified authentication type and connection mode.</summary> 
            <param name="relayClientAuthenticationType">The relay client authentication type. This can be either 
            <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" /> or 
            <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.None" />.</param> 
            <param name="connectionMode">The connection mode. This can be either 
            <see cref="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Unicast" /> or 
            <see cref="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Multicast" />.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> class, using the specified element.</summary> 
            <param name="elementToClone">The element to clone.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ConnectionMode">
            <summary>Gets the connection mode used in this binding element. The connection mode can be one of the 
            <see cref="T:Microsoft.ServiceBus.RelayedOnewayConnectionMode" /> enumeration values.</summary> 
            <value>The connection mode used in this binding element.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ListenBacklog">
            <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
            <value>The maximum number of queued connection.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.RelayClientAuthenticationType">
            <summary>Gets or sets the type of Azure Access Control authentication used by this binding element.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that represents the type of authentication used by this binding element.The default value is 
            <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" />.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ConnectionPoolSettings">
            <summary>Gets the connection pool settings for the current instance.</summary>
            <value>The connection pool settings for the current instance.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ConnectionBufferSize">
            <summary>Gets or sets the size of the buffer used to transmit a part of the serialized message on the wire from the client or service.</summary>
            <value>The size of the buffer used to transmit a part of the serialized message on the wire from the client or service.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.HostNameComparisonMode">
            <summary>
            Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxBufferSize">
            <summary>Gets or sets the maximum size in bytes of the buffer that holds incoming messages that are processed by this binding.</summary>
            <value>The maximum size in bytes of the buffer that holds incoming messages that are processed by this binding.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxPendingConnections">
            <summary>Gets or sets the maximum number of pending connections.</summary>
            <value>The maximum number of pending connections.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ChannelInitializationTimeout">
            <summary>Gets or sets the maximum time a channel can be in the initialization status before being disconnected.</summary>
            <value>The maximum time a channel can be in the initialization status before being disconnected.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxOutputDelay">
            <summary>Gets or sets the maximum interval of time that a message or 
            a portion of a message can remain buffered in memory before being sent out.</summary> 
            <value>The maximum interval of time that a message or a portion of a message can remain buffered in memory before being sent out.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxPendingAccepts">
            <summary>Gets or sets the maximum number of pending asynchronous accept 
            threads that are available for processing incoming connections on the service.</summary> 
            <value>The maximum number of pending asynchronous accept threads 
            that are available for processing incoming connections on the service.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.Scheme">
            <summary>Gets the URI scheme used by this binding element.</summary>
            <value>The URI scheme used by this binding element. The value returned is “sb”.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Creates a channel factory for creating channels of the specified type and that is initialized from the specified binding context.</summary>
            <returns>A channel factory for creating channels of the specified type and that is initialized from the specified binding context.</returns>
            <param name = "context" > The binding context that provides context for the binding element.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Creates a channel listener that accepts channels of the specified type and that is initialized from the specified binding context.</summary>
            <returns>A channel listener that accepts channels of the specified type and that is initialized from the specified binding context.</returns>
            <param name = "context" > The binding context that provides context for the binding element.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Returns a value that indicates whether this binding element can build a channel factory of the specified type.</summary>
            <returns>true if a channel factory can be built; otherwise false.</returns>
            <param name = "context" > The binding context that provides context for this binding element.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Returns a value that indicates whether the binding element can build a channel listener for the specified type of channel.</summary>
            <returns>true if a channel listener can be built for the specified type of channel; otherwise, false.</returns>
            <param name = "context" > The binding context that provides context for this binding element.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.Clone">
            <summary>Returns a copy of this instance of the 
            <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> binding element.</summary> 
            <returns>A binding element that contains a deep clone of this binding element.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Returns an object of the requested type, if present, from the appropriate layer in the binding stack.</summary>
            <returns>The object of the requested type if found; otherwise, returns null.</returns>
            <param name = "context" > The binding context that provides context for this binding element.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
            <summary>
            Exports a custom policy assertion about this binding.
            </summary>
            <param name="exporter">The MetadataExporter that you can use to modify the exporting process.</param>
            <param name="context">The PolicyConversionContext that you can use to insert your custom policy assertion.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.RelayedOnewayConnectionMode">
            <summary>Represents the different types of one-way connections available through the Azure Access Control.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Unicast">
            <summary>Specifies that only one service application can listen on a given endpoint. Used by 
            <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Multicast">
            <summary>Specifies that multiple service applications may listen on a given endpoint. Used by 
            <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />. </summary> 
        </member>
        <member name="T:Microsoft.ServiceBus.EndToEndSecurityMode">
            <summary>Determines the security settings for an Azure Service Bus binding 
            and describes the security relationship between the client and the service endpoint.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.None">
            <summary>Security is disabled.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.Transport">
            <summary>Security is provided using a transport security, typically SSL.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.Message">
            <summary>Security is provided using SOAP message security.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.TransportWithMessageCredential">
            <summary>A secure transport (for example, HTTPS) provides integrity, 
            confidentiality, and authentication while SOAP message security provides client authentication.</summary> 
        </member>
        <member name="T:Microsoft.ServiceBus.OAuthTokenProvider">
            <summary>Provides authentication token for the service bus.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Retrieves a token when the provider begins.</summary>
            <param name="appliesTo">The provider in which the token will be applied.</param>
            <param name="action">The action.</param>
            <param name="timeout">The duration.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state of the operation.</param>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Retrieves a web token when the provider begins.</summary>
            <param name="appliesTo">The provider in which the web token will be applied.</param>
            <param name="action">The action.</param>
            <param name="timeout">The duration.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state of the operation.</param>
            <returns>The asynchronous result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
            <summary>Retrieves a token when the provider ends.</summary>
            <param name="result">The result of the operation.</param>
            <param name="cacheUntil">The duration for the provider to store data.</param>
            <returns>The retrieved token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
            <summary>Retrieves a web token when the provider ends.</summary>
            <param name="result">The result of the operation.</param>
            <param name="cacheUntil">The duration for the provider to store data.</param>
            <returns>The retrieved token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.BuildKey(System.String,System.String)">
            <summary>Builds a key for the provider.</summary>
            <param name="appliesTo">The provider in which the key will be applied.</param>
            <param name="action">The action.</param>
            <returns>A Key.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.NormalizeAppliesTo(System.String)">
            <summary>Applies normalization into the token provider.</summary>
            <param name="appliesTo">The token provider where the normalization will be applied.</param>
            <returns>The normalized token provider.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.TokenScope">
            <summary>Enumerates the token scope for the service bus.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenScope.Namespace">
            <summary>The namespace.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenScope.Entity">
            <summary>The entity.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.RelayType">
            <summary>Specifies an enumeration of relay type.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.RelayType.None">
            <summary>The relay is None.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.RelayType.NetTcp">
            <summary>The NetTcp relay.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.RelayType.Http">
            <summary>The HTTP relay.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.RelayType.NetEvent">
            <summary>The NetEvent relay.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.RelayType.NetOneway">
            <summary>The NetOneway relay.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.RetryExponential">
            <summary>Represents an implementation of a retry policy. For each time the messaging 
            operation must be retried, the delay between retries grows in a staggered, exponential manner.</summary> 
            <remarks>The retry policy will honor the following aspect: 
            <list type="bullet">
            <item>the policy always honor the <seealso cref="P:Microsoft.ServiceBus.Messaging.ClientEntity.OperationTimeout"/> so that
            retry will terminate if the next retry interval will exceed the operation time.</item>
            <item>the policy only retry when <seealso cref="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient"/> is true.</item>
            <item>the policy should delay further by an additional 10 seconds if exception is 
            a <seealso cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException"/></item>
            </list></remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.RetryExponential.#ctor(System.TimeSpan,System.TimeSpan,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RetryExponential" /> class.</summary>
            <param name="minBackoff">The minimum back off value to wait. This value must not be greater than or equal to 
            <see cref="P:Microsoft.ServiceBus.RetryExponential.MaximumBackoff" />, otherwise operations might not be able to retry.</param> 
            <param name="maxBackoff">The maximum back off value to wait. This value must not be greater than or equal to the 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> value, otherwise operations might not be able to retry.</param> 
            <param name="maxRetryCount">The maximum number of times the retry policy instance calculates the retry time interval. If 
            the number of retries exceeds this value, the retry terminates, even if there is some remaining operation time.</param> 
        </member>
        <member name="M:Microsoft.ServiceBus.RetryExponential.#ctor(System.TimeSpan,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RetryExponential" /> class.</summary>
            <param name="minBackoff">The minimum back off value to wait. This value must not be greater than or equal to 
            <see cref="P:Microsoft.ServiceBus.RetryExponential.MaximumBackoff" />, otherwise operations might not be able to retry.</param> 
            <param name="maxBackoff">The maximum back off value to wait. This value must not be greater than or equal to the 
            <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> value, otherwise operations might not be able to retry.</param> 
            <param name="deltaBackoff">The backoff interval associated with the retry.</param>
            <param name="terminationTimeBuffer">The termination time buffer associated with the retry.</param>
            <param name="maxRetryCount">The maximum number of times the retry policy instance calculates the retry time interval. If 
            the number of retries exceeds this value, the retry terminates, even if there is some remaining operation time.</param> 
        </member>
        <member name="P:Microsoft.ServiceBus.RetryExponential.MinimalBackoff">
            <summary>Gets or sets the minimum backoff interval.</summary>
            <value>The minimum backoff interval.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RetryExponential.MaximumBackoff">
            <summary>Gets or sets the maximum backoff interval.</summary>
            <value>The maximum backoff interval.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RetryExponential.DeltaBackoff">
            <summary>Gets or sets the backoff interval associated with the retry.</summary>
            <value>The backoff interval associated with the retry.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RetryExponential.TerminationTimeBuffer">
            <summary>Gets or sets the termination time buffer associated with the retry.</summary>
            <value>The termination time buffer associated with the retry.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RetryExponential.MaxRetryCount">
            <summary>Gets or sets the maximum number of allowed retries.</summary>
            <value>The maximum number of allowed retries.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.RetryExponential.Clone">
            <summary>Creates a new copy of this instance.</summary>
            <returns>The created new copy of this instance.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.NoRetry">
            <summary>Represents a retry policy that performs no retries.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.NoRetry.Clone">
            <summary>Creates a copy of this instance.</summary>
            <returns>The created copy of this instance.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.RetryPolicy">
            <summary>
            Represents an abstraction for retrying messaging operations. Users should not 
            implement this class, and instead should use one of the provided implementations.
            </summary> 
        </member>
        <member name="P:Microsoft.ServiceBus.RetryPolicy.NoRetry">
            <summary>
            Gets an instance of the <see cref="P:Microsoft.ServiceBus.RetryPolicy.NoRetry" /> retry policy, which effectively disables retries.
            Each time this property is accessed, a new instance is returned.
            </summary> 
            <value>A retry policy that performs no retries.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.RetryPolicy.Default">
            <summary>
            Gets an instance of the  <see cref="T:Microsoft.ServiceBus.RetryExponential" /> retry policy, which provides a default setup of exponentially 
            increasing retry intervals for messaging operations. Each time this property is accessed, a new instance is created.
            </summary> 
            <value>The default policy associated with the policy.</value>
            <remarks>This property is effectively creating the following instance.
            <code>
               var policy = new RetryExponential(
                                    TimeSpan.Zero,
                                    TimeSpan.FromSeconds(30),
                                    10);                 
            </code>
            
            It is important to note that the retry policy should always 
            honor the <seealso cref="P:Microsoft.ServiceBus.Messaging.ClientEntity.OperationTimeout"/> so that
            retry will terminate if the next retry interval will exceed the operation time.
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.RetryPolicy.Clone">
            <summary>Creates a new copy of the current <see cref="T:Microsoft.ServiceBus.RetryPolicy" /> and clones it into a new instance.</summary>
            <returns>A new copy of <see cref="T:Microsoft.ServiceBus.RetryPolicy" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.RetryPolicy.SetServerBusy(System.String)">
            <summary />
            <param name="exceptionMessage" />
        </member>
        <member name="M:Microsoft.ServiceBus.RetryPolicy.SetServerBusyInternal">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.RetryPolicy.ResetServerBusyInternal">
            <summary />
        </member>
        <member name="M:Microsoft.ServiceBus.RetryPolicy.OnShouldRetry(System.TimeSpan,System.Int32,System.TimeSpan@)">
            <summary>Calculates the retry interval for the retry policy.</summary>
            <param name="remainingTime">The remaining time.</param>
            <param name="currentRetryCount">The total number of retries.</param>
            <param name="retryInterval">The retry interval.</param>
            <returns>If this method returns true, the retry operation occurs after the 
            thread becomes idle for an amount of time equal to <paramref name="retryInterval" />.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.RetryPolicy.IsRetryableException(System.Exception)">
            <summary>Determines whether it is permissible to retry after the specified exception.</summary>
            <param name="lastException">The latest occurred exception.</param>
            <returns>If this method returns false, no retry occurs. Otherwise, the 
            <see cref="M:Microsoft.ServiceBus.RetryPolicy.OnShouldRetry(System.TimeSpan,System.Int32,System.TimeSpan@)" /> method determines when to retry.</returns> 
        </member>
        <member name="T:Microsoft.ServiceBus.SharedAccessSignatureToken">
            <summary>Represents the shared access signature token.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.MaxKeyNameLength">
            <summary>Specifies the maximum length of the key name.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.MaxKeyLength">
            <summary>Specifies the maximum length of the key.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SharedAccessSignature">
            <summary>Specifies the shared access signature.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedResource">
            <summary>Specifies the signed resource.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.Signature">
            <summary>Specifies the signature token.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedKeyName">
            <summary>Specifies the signed key name.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedExpiry">
            <summary>Specifies the signed expiry of the token.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedResourceFullFieldName">
            <summary>Specifies the full field name of the signed resource.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SasKeyValueSeparator">
            <summary>Specifies the key value separator for shared access signature token.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SasPairSeparator">
            <summary>Specifies the pair separator for shared access signature token.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String,System.DateTime,System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" /> class with specified token string, expiry and audience.</summary> 
            <param name="tokenString">The token string.</param>
            <param name="expiry">The token expiry.</param>
            <param name="audience">The token audience.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String,System.DateTime)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" /> class with specified token string and expiry.</summary> 
            <param name="tokenString">The token string.</param>
            <param name="expiry">The token expiry.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" /> class with specified token string.</summary> 
            <param name="tokenString">The token string.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" /> class with specified identifier and token string. </summary> 
            <param name="id">The token identifier.</param>
            <param name="tokenString">The token string.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.AudienceFieldName">
            <summary>Gets the audience field name.</summary>
            <value>The audience field name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.ExpiresOnFieldName">
            <summary>Gets the value that expires on field name.</summary>
            <value>The value that expires on field name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.KeyValueSeparator">
            <summary>Gets the key value separator.</summary>
            <value>The key value separator.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.PairSeparator">
            <summary>Gets the pair separator associated with the token.</summary>
            <value>The pair separator associated with the token.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider">
            <summary>Represents the shared access signature associated with the token provider.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.EpochTime">
            <summary>The epoch time.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.#ctor(System.String,System.String,System.Func{System.String,System.Byte[]},System.TimeSpan,Microsoft.ServiceBus.TokenScope)">
            <summary />
            <param name="keyName" />
            <param name="sharedAccessKey" />
            <param name="customKeyEncoder" />
            <param name="tokenTimeToLive" />
            <param name="tokenScope" />
        </member>
        <member name="P:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.StripQueryParameters">
            <summary>Gets whether the token provider strips query parameters.</summary>
            <value>true if the token provider strips query parameters; otherwise, false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the BeginGetToken method.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <param name="callback">An AsyncCallback delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the BeginGetWebToken method.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <param name="callback">An AsyncCallback delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
            <summary>Executes upon calling the EndGetToken method.</summary>
            <param name="result">An IAsyncResult object that references the asynchronous operation to get a token.</param>
            <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
            <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
            <summary>Executes upon calling the EndGetWebToken method.</summary>
            <param name="result">An IAsyncResult object that references the asynchronous operation to get a web token.</param>
            <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
            <returns>The String that represents the web token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.BuildKey(System.String,System.String)">
            <summary>Generates a key for the token provider.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <returns>A generated key for the token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.BuildSignature(System.String)">
            <summary />
            <param name="targetUri" />
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.GetSharedAccessSignature(System.String,System.String,System.String,System.TimeSpan)">
            <summary>Returns the shared access signature associated with the specified key name, SAS key, resource, and token time-to-live.</summary>
            <param name="keyName">The key name.</param>
            <param name="sharedAccessKey">The SAS key name.</param>
            <param name="resource">The resource.</param>
            <param name="tokenTimeToLive">The TTL value for the token.</param>
            <returns>Returns <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.GetPublisherSharedAccessSignature(System.Uri,System.String,System.String,System.String,System.String,System.TimeSpan)">
            <summary />
            <param name="endpoint" />
            <param name="entityPath" />
            <param name="publisher" />
            <param name="keyName" />
            <param name="key" />
            <param name="tokenTimeToLive" />
            <remarks>This method assumes UTF8 encoding is being used.</remarks>
        </member>
        <member name="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer">
            <summary>Represents a class to use to read and to write 
            <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" />, 
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, and 
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> objects as XML.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.DefaultInstance">
            <summary>Specifies an instance of the<see cref="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor(System.IdentityModel.Selectors.SecurityTokenSerializer)">
            <summary>
            Constructor.
            </summary>
            <param name="innerSerializer">A SecurityTokenSerializer to wrap. Typically the default WCF serializer</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
            <summary>Determines whether this serializer can read the &lt;KeyIdentifier&gt; element referred  by the specified XML reader.</summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</param>
            <returns>true when the specified &lt;KeyIdentifier&gt; element can be read; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)">
            <summary>Determines whether this serializer can read the &lt;KeyIdentifier&gt; element referred  by the specified XML reader.</summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</param>
            <returns>true when the specified &lt;KeyIdentifier&gt; element can be read; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)">
            <summary>Determines whether this serializer can read the security token pointed at by the specified XML reader.</summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</param>
            <returns>true when the security token can be read; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Determines whether this serializer can write the specified key identifier clause.</summary>
            <returns>true when this serializer can write the specified key identifier clause; otherwise, false.</returns>
            <param name = "keyIdentifierClause" > A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
            <summary>Determines whether this serializer can write the specified key identifier.</summary>
            <returns>true when this serializer can write the specified key identifier; otherwise, false.</returns>
            <param name = "keyIdentifier" > A <see cref= "T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Determines whether this serializer can write the specified security token to XML.</summary>
            <returns>true when the security token can be written; otherwise, false.</returns>
            <param name = "token" > The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to convert to XML.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
            <summary>Reads the key identifier clause using the specified XML reader.</summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</param>
            <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier that is read.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)">
            <summary>Reads the key identifier using the specified XML reader.</summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</param>
            <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier that is read.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>Reads the<see cref= "T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> or the security token pointed at by the specified XML reader.</summary>
            <returns>A<see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the SimpleWebSecurityToken or the security token that is read.</returns>
            <param name = "reader" > An <see cref= "T:System.Xml.XmlReader" /> to read the SimpleWebSecurityToken or the security token.</param>
            <param name = "tokenResolver" > A <see cref= "T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token type.</param>
            <exception cref = "T:System.NotSupportedException" > The encoding of the XML element is not base64Binary.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Writes the specified key identifier clause using the specified XML writer.</summary>
            <param name = "writer" > An <see cref="T:System.Xml.XmlWriter" /> used to write the key identifier clause.</param>
            <param name = "keyIdentifierClause" > A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
            <summary>Writes the specified key identifier using the specified XML writer.</summary>
            <param name = "writer" > An <see cref="T:System.Xml.XmlWriter" /> used to write the key identifier.</param>
            <param name = "keyIdentifier" > A <see cref= "T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</param>
            <exception cref = "T:System.InvalidOperationException" > The binary token content is null.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
            <summary>Writes the specified<see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> or security token using the specified XML writer.</summary>
            <param name = "writer" > An <see cref="T:System.Xml.XmlWriter" /> used to write the SimpleWebSecurityToken or security token.</param>
            <param name = "token" > The SimpleWebSecurityToken or security token to write.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.SimpleWebSecurityToken">
            <summary>A security token that wraps a Simple Web Token.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String,System.DateTime,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> class.</summary>
            <param name="tokenString">A string that represents the Simple Web Token.</param>
            <param name="expiry">The expiry date of the simple web token.</param>
            <param name="audience">The audience for the simple web token.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String,System.DateTime)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> class with the specified Simple Web Token and expiry date.</summary> 
            <param name="tokenString">A string that represents the Simple Web Token.</param>
            <param name="expiry">The expiry date of the simple web token.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> class with the specified Simple Web Token.</summary> 
            <param name="tokenString">A string that represents the Simple Web Token.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> class with the specified token ID and Simple Web Token.</summary> 
            <param name="id">A unique identifier for the Simple Web Token.</param>
            <param name="tokenString">A string that represents the Simple Web Token.</param>
            <exception cref="T:System.NullReferenceException">The <paramref name="id" /> parameter 
            or <paramref name="tokenString" /> parameter is null.</exception> 
        </member>
        <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.Audience">
            <summary>Gets the audience for the simple web token.</summary>
            <value>The audience for the simple web token.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ExpiresOn">
            <summary>Gets the date and time the security token will expire.</summary>
            <value>The date and time the security token will expire.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ExpiresOnFieldName">
            <summary>Gets the field name associated with the token expiration.</summary>
            <value>The field name associated with the token expiration.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.AudienceFieldName">
            <summary>Gets the audience field name.</summary>
            <value>The audience field name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.KeyValueSeparator">
            <summary>Gets the key value separator associated with the token.</summary>
            <value>The key value separator associated with the token.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.PairSeparator">
            <summary>Gets the pair separator associated with the token.</summary>
            <value>The pair separator associated with the token.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.Id">
            <summary>Gets the ID associated with the Simple Web Token.</summary>
            <value>The ID associated with the Simple Web Token.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.SecurityKeys">
            <summary>Gets the cryptographic keys associated with the security token.</summary>
            <value>A 
            <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type 
            <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the Simple Web Token.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ValidFrom">
            <summary>Not implemented. </summary>
            <value>Throws a <see cref="T:System.NotImplementedException" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ValidTo">
            <summary>Not implemented.</summary>
            <value>Throws a <see cref="T:System.NotImplementedException" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.Token">
            <summary>Gets the Simple Web Token.</summary>
            <value>The Simple Web Token.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.TokenConstants">
            <summary>Provides constants that represent parameter names, field names, 
            method names, and delimiters that are used in authentication requests.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.DefaultCompoundClaimDelimiter">
            <summary>The character used to delimit the list of values for a compound token.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.HttpAuthParameterSeparator">
            <summary>The character used to separate parameters sent in HTTP authentication requests.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodPost">
            <summary>The string used to represent the POST verb in an HTTP request.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodGet">
            <summary>The string used to represent the GET verb in an HTTP request.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodHead">
            <summary>The string used to represent the HEAD verb in an HTTP request.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodTrace">
            <summary>The string used to represent the TRACE verb in an HTTP request.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.ManagementIssuerName">
            <summary>The default issuer name string value used to gain access to the Windows Azure Access Control management service.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.DefaulTestSASRuleName">
            <summary>The default SAS key string value.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.MaxIssuerNameSize">
            <summary>The maximum size of the issuer name.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.MaxIssuerSecretSize">
            <summary>The maximum size of the issuer secret key.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.OutputClaimIssuerId">
            <summary>The issuer ID for all output claims from the Azure Access Control service.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.ServiceBusIssuerName">
            <summary>The default issuer name string value used to gain access to Azure Service Bus.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAppliesTo">
            <summary>The name of the AppliesTo field that is in the token request body that is sent to the Azure Access Control service.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapRequestedLifetime">
            <summary>The parameter name for the requested token lifetime(measured in seconds) that is sent in the token request using the WRAP protocol.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAccessToken">
            <summary>The parameter name for the access token that is returned in the response by the Security Token Service using the WRAP protocol.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAssertion">
            <summary>The parameter name for the WRAP assertion that is sent in the token request using the WRAP protocol.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAssertionFormat">
            <summary>The parameter name for the assertion format that is sent in the token request using the WRAP protocol.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAuthenticationType">
            <summary>The WRAP authentication protocol type name.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAuthorizationHeaderKey">
            <summary>The parameter name of the access token that is sent in the authorization header of a request to Azure Service Bus.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapBaseTime">
            <summary>The base date and time used in the WRAP protocol.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapName">
            <summary>The parameter name for the account name that is sent in the token request using the WRAP protocol.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapPassword">
            <summary>The parameter name for the account password that is sent in the token request using the WRAP protocol.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapContentType">
            <summary>The content type used for formatting token request parameters when using the WRAP protocol.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapSamlAssertionFormat">
            <summary>Specifies the Security Assertion Markup Language format.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapSwtAssertionFormat">
            <summary>Specifies the Simple Web Token format.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.WrapTokenExpiresIn">
            <summary>The parameter name for the token expiration (measured in seconds) that is returned in the token response by the token issuer using the WRAP protocol.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.Saml11ConfirmationMethodBearerToken">
            <summary>The value of the ConfirmationMethod attribute used in a Security Assertion Markup Language(SAML) bearer assertion.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.TokenAudience">
            <summary>The token audience attribute name that is used in a Simple Web Token (SWT). The token audience is the SWT processor that the SWT is intended for.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.TokenExpiresOn">
            <summary>The attribute name for the token expiration (measured in seconds) used in a Simple Web Token.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.TokenIssuer">
            <summary>The attribute name for the Simple Web Token (SWT) issuer.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.TokenDigest256">
            <summary>The attribute name of the hash-based message authentication code used in a Simple Web Token.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.TrackingIdHeaderName">
            <summary>The attribute name for the tracking ID in the returned token response.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.UrlParameterSeparator">
            <summary>The character used to separate parameters in a token request.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.TokenConstants.KeyValueSeparator">
            <summary>A character designating the separation between a key and a value.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.SimpleWebTokenProvider">
            <summary>Provides a set of methods that execute asynchronous simple Web token (SWT) retrieval operations.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.BuildKey(System.String,System.String)">
            <summary>Generates a key for the simple web token provider.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <returns>A generated key for the simple web token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin get token action.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin get web token action.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
            <summary>Executes the end get token action.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</param>
            <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
            <returns>The security token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
            <summary>Executes the end get web token action.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</param>
            <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
            <returns>The web token.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.SamlTokenProvider">
            <summary>Provides a set of methods that execute asynchronous SAML token retrieval operations.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.SamlTokenProvider.BuildKey(System.String,System.String)">
            <summary>Generates a key for the token provider.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <returns>A generated key for the token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin get token action.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin get web token action.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
            <summary>Executes the end get token action.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</param>
            <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
            <returns>The security token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
            <summary>Executes the end get web token action.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</param>
            <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
            <returns>The web token.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.SharedSecretTokenProvider">
            <summary>Provides methods that return name/value pairs for web token 
            assertions, and that execute asynchronous shared secret token retrieval operations.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.BuildKey(System.String,System.String)">
            <summary>Generates a key for the token provider.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <returns>A generated key for the token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.ComputeSimpleWebTokenString(System.String,System.String)">
            <summary>Returns a string of URL encoded name/value pairs for a 
            simple web token assertion using the specified issuer name and issuer secret.</summary> 
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <returns>A URL encoded name/value pairs for a simple web token assertion.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.ComputeSimpleWebTokenString(System.String,System.Byte[])">
            <summary>Returns a string of URL encoded name/value pairs for a 
            simple web token assertion using the specified issuer name and issuer secret.</summary> 
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <returns>A URL encoded name/value pairs for a simple web token assertion.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin get token action.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes the begin get web token action.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
            <summary>Executes the end get token action.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</param>
            <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
            <returns>The security token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
            <summary>Executes the end get web token action.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</param>
            <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
            <returns>The web token.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.MessageSecurityOverRelayOneway">
            <summary>The message security on a one-way connection over the Azure Service Bus relay.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType">
            <summary>Gets or sets the type of client credential the client uses to authenticate itself to the service at the SOAP level.</summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.MessageCredentialType" /> that contains the credential type. The default is Certificate.</value> 
            <exception cref="T:System.ArgumentOutOfRangeException">The value of 
            <see cref="P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType" /> is not a valid 
            <see cref="T:System.ServiceModel.MessageCredentialType" />.</exception> 
        </member>
        <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.AlgorithmSuite">
            <summary>Gets or sets the algorithm suite to be used for securing messages at the SOAP level.</summary>
            <value>Returns an 
            <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> containing the algorithm suite. The default is Basic256, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</value> 
            <exception cref="T:System.ArgumentNullException">The value of the 
            <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> is null.</exception> 
        </member>
        <member name="T:Microsoft.ServiceBus.MessageSecurityOverRelayHttp">
            <summary>Enables setting message-level security properties on the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.ClientCredentialType">
            <summary>Specifies the type of client credential used for client authentication.</summary>
            <value>Returns a <see cref="T:System.ServiceModel.MessageCredentialType" /> that contains the algorithm suite. The default is Basic256.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.NegotiateServiceCredential">
            <summary>Gets or sets a value that indicates whether the service credential is provisioned at 
            the client out of band or is obtained from the service through a process of negotiation.</summary> 
            <value>Returns true if service credential is obtained through a process of negotiation; otherwise, false. The default is true.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.AlgorithmSuite">
            <summary>Specifies the algorithm suite used for security messages at the SOAP level. </summary>
            <value>Returns <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.IsSecureConversationEnabled">
            <summary>Only used in extensibility scenarios to indicate whether an instance of a class derived from 
            <see cref="T:Microsoft.ServiceBus.MessageSecurityOverRelayHttp" /> is configured to perform secure conversation.</summary> 
            <returns>Always returns true, unless overridden in a derived class.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.MessageSecurityOverRelayConnection">
            <summary>Describes the message security on a relay connection for a binding.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayConnection.ClientCredentialType">
            <summary>Gets or sets the type of client credential used for client authentication.</summary>
            <value>Returns a <see cref="T:System.ServiceModel.MessageCredentialType" /> that contains the credentials. The default is Windows.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayConnection.AlgorithmSuite">
            <summary>Sets or gets the algorithm suite used for Message Security at the SOAP level. </summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> that contains the algorithm suite. The default value is Base256.</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp">
            <summary>Enables setting message-level security properties for a WS-Http relay binding.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp.EstablishSecurityContext">
            <summary>Gets or sets a value that specifies whether a security context token is established.</summary>
            <value>true if the security context token is established; otherwise, false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp.IsSecureConversationEnabled">
            <summary>
            Gets a value indicating whether secure conversation is enabled.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.TokenProviderException">
            <summary>Represents an exception regarding the token provider for the Service Bus.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProviderException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TokenProviderException" /> class.</summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The error that caused the exception.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.WindowsTokenProvider">
            <summary>Represents the token provider for the service bus.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Retrieves a token when the provider service was started.</summary>
            <param name="appliesTo">The object where the token will be applied.</param>
            <param name="action">The action.</param>
            <param name="timeout">The duration of the operation.</param>
            <param name="callback">The argument fir the provider.</param>
            <param name="state">The state of the provider.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Retrieves a web token when the provider service was started.</summary>
            <param name="appliesTo">The object where the token will be applied.</param>
            <param name="action">The action.</param>
            <param name="timeout">The duration of the operation.</param>
            <param name="callback">The argument fir the provider.</param>
            <param name="state">The state of the provider.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
            <summary>Retrieves a token when the provider service was stopped.</summary>
            <param name="result">The result of the operation.</param>
            <param name="cacheUntil">The specified duration of time for the provider to store data.</param>
            <returns>The retrieved token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
            <summary>Retrieves a web token when the provider service was stopped.</summary>
            <param name="result">The result of the operation.</param>
            <param name="cacheUntil">The specified duration of time for the provider to store data.</param>
            <returns>The retrieved web token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.BuildKey(System.String,System.String)">
            <summary>Generates a key for the token provider.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <returns>A generated key.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.NormalizeAppliesTo(System.String)">
            <summary>Returns the normalize URI form of the target address.</summary>
            <param name="appliesTo">The URI which the normalization applies to.</param>
            <returns>The normalize URI form for the target address.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.ServiceRegistrySettings">
            <summary>Contains the settings for the Azure Service Bus registry.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ServiceRegistrySettings.transportProtectionEnabled">
            <summary>true if transport protection is enabled; otherwise, false. The default value is true.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ServiceRegistrySettings.allowUnauthenticatedAccess">
            <summary>true if the endpoint allows for unauthenticated access; otherwise, false. The default value is false.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServiceRegistrySettings" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.#ctor(Microsoft.ServiceBus.DiscoveryType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.ServiceRegistrySettings" /> class using the specified discovery type.</summary> 
            <param name="discoveryType">The discovery type that indicates whether the endpoint is public or private. </param>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceRegistrySettings.DiscoveryMode">
            <summary>Gets or sets how the service is discovered. </summary>
            <value>Returns 
            <see cref="T:Microsoft.ServiceBus.DiscoveryType" />.DiscoveryType.Public for discovery to be public; DiscoveryType.Private for discovery to be private. The default value is DiscoveryType.Private.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceRegistrySettings.DisplayName">
            <summary>Gets or sets the display name for the endpoint.</summary>
            <value>Returns <see cref="T:System.String" />.Contains the display name. </value>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Passes data at runtime to bindings to support custom behavior.
            </summary>
            <param name="endpoint">The endpoint to modify.</param>
            <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            This implementation does nothing.
            </summary>
            <param name="endpoint">The endpoint that is to be customized.</param>
            <param name="clientRuntime">The client runtime to be customized.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
            <summary>
            This implementation does nothing.
            </summary>
            <param name="endpoint">The endpoint that is to be customized.</param>
            <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            This method does nothing.
            </summary>
            <param name="endpoint">The endpoint this behavior applies to.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.DiscoveryType">
            <summary>Describes the publishing behavior of a service in the Service Registry.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.DiscoveryType.Public">
            <summary>The Service will be published in the Service Registry.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.DiscoveryType.Private">
            <summary>The service will not be published in the Service Registry.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.SocketSecurityRole">
            <summary>Describes the role for socket security. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SocketSecurityRole.SslServer">
            <summary>Identifies the application as an SSL server, meaning that the application will accept only a secure transport connection.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.SocketSecurityRole.SslClient">
            <summary>The application is identified as an SSL client, meaning the application 
            will attempt to connect and send messages using an encrypted channel. </summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.SocketSecurityRole.None">
            <summary>When set on a client, the application will send unencrypted messages. When 
            set on a server, the application will accept both encrypted and unencrypted messages.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.WebStream.CustomizedCertificateValidator(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Check SSL certificate
            </summary>
            <param name="sender">The HTTP WebRequest</param>
            <param name="certificate">The certificate from service</param>
            <param name="chain">The chain</param>
            <param name="sslPolicyErrors">The error</param>
            <returns>True if having the same DNS suffix</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.TcpRelayTransportSecurity">
            <summary>Provides properties that control authentication parameters and protection level for the TCP transport relay binding. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.TcpRelayTransportSecurity.ProtectionLevel">
            <summary>Gets or sets the transport protection level. </summary>
            <value>Returns a <see cref="T:System.Net.Security.ProtectionLevel" /> that contains the protection level. The default is EncryptAndSign.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.WebHttpRelayBinding">
            <summary>A binding used to configure endpoints for Web services that are exposed through HTTP requests instead of SOAP messages. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> class. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> class using the specified configuration name.</summary> 
            <param name="configurationName">The configuration to use.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndWebHttpSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> class using the specified type of security and relay client authentication. </summary> 
            <param name="securityMode">The type of security used with the binding.</param>
            <param name="relayClientAuthenticationType">The type of client authentication used on the relay. </param>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.AllowCookies">
            <summary>Gets or sets a value that specifies whether cookies are allowed in the messages sent via the 
            <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />.</summary> 
            <value>Returns true if cookies are allowed; otherwise, false. The default value is false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.ContentTypeMapper">
            <summary>Gets or sets the content type mapper.</summary>
            <value>The content type mapper.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.EnvelopeVersion">
            <summary>Gets the SOAP envelope version. </summary>
            <value>Returns a 
            <see cref="T:System.ServiceModel.EnvelopeVersion" />. Since the 
            <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> does not use SOAP, this always returns EnvelopeVersion.None.<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> is not likely the binding you should be using for SOAP messaging. However, Service Bus does support SOAP. </value> 
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.HostNameComparisonMode">
            <summary>Gets or sets the comparison mode used on the host name.</summary>
            <value>The comparison mode used on the host name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.MaxBufferPoolSize">
            <summary>Gets or sets the maximum buffer pool size used by the transport.</summary>
            <value>Returns the maximum buffer pool size. The default is 524288 bytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.MaxBufferSize">
            <summary>Gets or sets the maximum buffer size supported by the transport. </summary>
            <value>Returns the max buffer size.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.MaxReceivedMessageSize">
            <summary>Gets or sets the maximum allowable message size that can be received.</summary>
            <value>Returns the maximum allowable message size. The default size is 65,536 bytes.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.ProxyAddress">
            <summary>Gets or sets a URI that contains the address of the proxy to use for HTTP requests.</summary>
            <value>Returns a <see cref="T:System.Uri" /> that contains the address of the proxy to use for HTTP requests. The default value is null.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.ReaderQuotas">
            <summary>Gets or sets xml reader quotas on the messages processed.</summary>
            <value>Returns a <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that contains the reader quotas.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.Scheme">
            <summary>Gets the scheme for the endpoints used with the binding.</summary>
            <value>Returns the scheme.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.Security">
            <summary>Gets the security settings for the current instance.</summary>
            <value>Returns a <see cref="T:Microsoft.ServiceBus.WebHttpRelaySecurity" /> that contains the security settings.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.TransferMode">
            <summary>Gets or sets the transfer mode.</summary>
            <value>Returns a <see cref="T:System.ServiceModel.TransferMode" /> that contains the transfer mode. The default is Buffered.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.UseDefaultWebProxy">
            <summary>Gets or sets a value that indicates whether the machine-wide proxy settings are used rather than the user specific settings.</summary>
            <value>true if machine-wide proxy settings are used. Otherwise false. The default setting is true.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.WriteEncoding">
            <summary>Gets or sets the character encoding that is used to write the message text.</summary>
            <value>Returns a <see cref="T:System.Text.Encoding" /> that contains the encoding. The default value is utf8encoding.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.IsDynamic">
            <summary>Gets or sets whether the relay binding is dynamic.</summary>
            <value>true if the relay binding is dynamic; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
            <summary>
            Indicates that incoming requests are handled asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.CreateBindingElements">
            <summary>Creates a collection with the binding elements for the binding.</summary>
            <returns>Returns a 
            <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements used by the 
            <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />.</returns> 
        </member>
        <member name="T:Microsoft.ServiceBus.WebHttpRelaySecurity">
            <summary>Specifies the types of security available to a service endpoint configured to receive HTTP requests. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelaySecurity.Mode">
            <summary>Gets or sets the mode of security that is used by an endpoint configured to receive HTTP requests with a 
            <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />.</summary> 
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode" /> that indicates whether transport-level security, credential only, or no security is used by an endpoint. The default value is None.</value> 
            <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid EndToEndWebHttpSecurityMode.</exception>
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelaySecurity.RelayClientAuthenticationType">
            <summary>Gets or sets the relay client authentication type used by the service client.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the relay client authentication type. The default value is RelayClientAuthenticationType.RelayAccessToken. </value> 
        </member>
        <member name="P:Microsoft.ServiceBus.WebHttpRelaySecurity.Transport">
            <summary>Gets or sets the Transport-level security settings for a binding.</summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.HttpRelayTransportSecurity" /> that contains the binding. The default values set are a ClientCredentialType of None, a ProxyCredentialType of None, and Realm = "".</value> 
        </member>
        <member name="T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode">
            <summary>Specifies the types of security that can be used with the <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode.None">
            <summary>Indicates that no security is used with HTTP requests.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode.Transport">
            <summary>Indicates that transport-level security is required; clients must use HTTPS to communicate with the service endpoint.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.WS2007HttpRelayBinding">
            <summary>Represents an interoperable binding that derives from 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> and provides support for the updated versions of the Security, ReliableSession, and TransactionFlow binding elements. </summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" /> class with a binding specified by its configuration name.</summary> 
            <param name="configName">The binding configuration name for the 
            <see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /></param> 
        </member>
        <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" /> class with a specified type of security used by the binding. </summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" /> class with a specified type of security and relay client authentication used by the binding. </summary> 
            <param name="securityMode">The security mode that specifies the type of security that is used with the SOAP message and for the client.</param>
            <param name="relayClientAuthenticationType">The type of authentication used by the client.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" /> class with a specified type of security used by the binding, the specified authentication for the client relay, and a value that indicates whether a reliable session is enabled. </summary> 
            <param name="securityMode">Specifies the type of security that is used with the SOAP message and for the client.</param>
            <param name="relayClientAuthenticationType">The type of authentication used by the client.</param>
            <param name="reliableSessionEnabled">true if a reliable session is enabled; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.CreateMessageSecurity">
            <summary>Retrieves the security binding element from the current binding.</summary>
            <returns>Returns a 
            <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that contains the current security binding element. </returns> 
        </member>
        <member name="T:Microsoft.ServiceBus.WSHttpRelayBinding">
            <summary>Represents an interoperable binding that supports distributed transactions and secure, reliable sessions through the cloud. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBinding.AllowCookies">
            <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests. </summary>
            <value>Returns <see cref="T:System.Boolean" />.true if the binding allows cookies; otherwise, false. The default is false. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBinding.Security">
            <summary>Gets the security settings used with this binding. </summary>
            <value>Returns a 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelaySecurity" /> that contains the security used with this binding. The default value Mode property is Message.</value> 
        </member>
        <member name="M:Microsoft.ServiceBus.WSHttpRelayBinding.GetTransport">
            <summary>Returns the transport binding element from the current binding. </summary>
            <returns>Returns 
            <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />.Contains the transport binding element from the current binding.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.WSHttpRelayBinding.CreateMessageSecurity">
            <summary>Returns the security binding element from the current binding.</summary>
            <returns>Returns a <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that contains the current binding. </returns>
        </member>
        <member name="T:Microsoft.ServiceBus.WSHttpRelayBindingBase">
            <summary>Provides the base class with members common to the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />. 
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBindingBase" /> class. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.WSHttpRelayBindingBase" /> class with a value that indicates whether a reliable session is enabled. </summary> 
            <param name="reliableSessionEnabled">true, if a reliable session is enabled; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.HostNameComparisonMode">
            <summary>Gets or sets the comparison mode used on the host name.</summary>
            <value>The comparison mode used on the host name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxBufferPoolSize">
            <summary>Gets or sets the maximum amount of memory allocated for the buffer manager 
            that manages the buffers required by endpoints using this Azure Service Bus binding. </summary> 
            <value>Returns 
            <see cref="T:System.Int64" />.The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 65,536 bytes.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxReceivedMessageSize">
            <summary>Gets or sets the maximum size for a message that can be processed by the Azure Service Bus binding. </summary>
            <value>Returns 
            <see cref="T:System.Int64" />.The maximum size, in bytes, for a message that is processed by the Azure Service Bus binding. The default value is 65,536 bytes.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MessageEncoding">
            <summary>Gets or sets whether MTOM or Text/XML is used to encode SOAP messages. </summary>
            <value>Returns 
            <see cref="T:System.ServiceModel.WSMessageEncoding" />.Indicates whether MTOM or Text/XML is used to encode SOAP messages. The default value is Text/XML.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ProxyAddress">
            <summary>Gets or sets the URI address of the HTTP proxy. </summary>
            <value>Returns <see cref="T:System.Uri" />.Serves as the address of the HTTP proxy. The default value is null.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ReaderQuotas">
            <summary>Gets or sets constraints on the complexity of SOAP messages that 
            can be processed by endpoints configured with this Security Bus binding. </summary> 
            <value>Returns <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.Specifies the complexity constraints.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ReliableSession">
            <summary>Gets an object that provides convenient access to the properties of a reliable Azure 
            Service Bus session binding element that are available when using one of the system-provided bindings. </summary> 
            <value>Returns 
            <see cref="T:System.ServiceModel.OptionalReliableSession" />.Provides convenient access to the properties of a reliable Azure Service Bus session binding element that are available when using one of the system-provided bindings.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.Scheme">
            <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding. </summary>
            <value>Returns <see cref="T:System.String" /> that represents the URI transport scheme.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.EnvelopeVersion">
            <summary>Gets the version of SOAP that is used for messages that are processed by this binding. </summary>
            <value>Returns 
            <see cref="T:System.ServiceModel.EnvelopeVersion" />.The value of the envelope version that is used with this Azure Service Bus binding. The value is always SOAP 1.2.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.TextEncoding">
            <summary>Gets or sets the character encoding that is used for the message text.</summary>
            <value>The character encoding that is used for the message text.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.UseDefaultWebProxy">
            <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
            <value>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.IsDynamic">
            <summary>Gets or sets whether the relay binding is dynamic.</summary>
            <value>true if the relay binding is dynamic; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
            <summary>
            Indicates that incoming requests are handled asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateBindingElements">
            <summary>Returns an ordered collection of binding elements contained in the current Azure Service Bus binding. </summary>
            <returns>Returns <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.Contains the objects for the binding.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.GetTransport">
            <summary>When implemented in a derived class, returns the transport binding element from the current Azure Service Bus binding. </summary>
            <returns>Returns 
            <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />.Contains the transport binding element from the current Azure Service Bus binding. </returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateMessageSecurity">
            <summary>When implemented in a derived class, returns the security binding element from the current Azure Service Bus binding. </summary>
            <returns>Returns 
            <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.Contains the security binding element from the current Azure Service Bus binding.</returns> 
        </member>
        <member name="T:Microsoft.ServiceBus.WSHttpRelaySecurity">
            <summary>Represents the security settings for the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.Mode">
            <summary>Specifies the message security mode for this Azure Service Bus binding. </summary>
            <value>Returns 
            <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" />.Contains the security mode for this Azure Service Bus binding. The default is Transport.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.RelayClientAuthenticationType">
            <summary>Gets or sets the authentication type required for the service 
            application or client application to provide to the Azure Service Bus.</summary> 
            <value>The authentication type required for the service application or client application to provide to the Azure Service Bus. The default is 
            <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" />.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.Transport">
            <summary>Gets an object that contains the transport-level security settings for this Azure Service Bus binding. </summary>
            <value>Returns 
            <see cref="T:Microsoft.ServiceBus.HttpRelayTransportSecurity" />.Contains the transport security for this item. The default value includes a ClientCredentialType of None and a ProxyCredentialType of None.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.Message">
            <summary>Gets the message-level security settings for this Azure Service Bus binding.</summary>
            <value>Returns 
            <see cref="T:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp" />.Contains the security settings. The default value includes: EstablishSecurityContext with default set to true, ClientCredentialType is Windows, AlgorithmSuite is Basic256, and NegotiateServiceCredential is true.</value> 
        </member>
        <member name="M:Microsoft.ServiceBus.SecureSocketUtil.CustomizedCertificateValidator(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.String)">
            <summary>
            Check SSL certificate
            </summary>
            <param name="sender">The HTTP WebRequest</param>
            <param name="certificate">The certificate from service</param>
            <param name="chain">The chain</param>
            <param name="sslPolicyErrors">The error</param>
            <param name="hostName">hostName</param>
            <returns>True if having the same DNS suffix</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.RelayTransportProtectionMode">
            <summary>Describes the types of protection on a transport relay. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.RelayTransportProtectionMode.None">
            <summary>Security is disabled.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.RelayTransportProtectionMode.ListenerOnly">
            <summary>The service application must have security; a client application is not required to have any. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.RelayTransportProtectionMode.EndToEnd">
            <summary>Both the service application and client application must have security. </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.ConnectivitySettings">
            <summary>Holds the connectivity settings effective for all Azure Service 
            Bus-based endpoints that are active in the current application domain. </summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.ConnectivitySettings.connectivityMode">
            <summary>Contains the<see cref= "T:Microsoft.ServiceBus.ConnectivityMode" /> for the current instance. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ConnectivitySettings.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ConnectivitySettings" /> class. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.ConnectivitySettings.Mode">
            <summary>Gets or sets the connectivity mode for the current application domain. </summary>
            <value>Returns <see cref="T:Microsoft.ServiceBus.ConnectivityMode" />.Contains the connectivity mode. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.ConnectivitySettings.IsReadOnly">
            <summary>Gets a value that determines if the connectivity settings are read-only. </summary>
            <value>true if the connectivity settings are read-only; otherwise, false.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.ConnectivityMode">
            <summary>Sets the underlying wire-level protocol used to communicate with Service Bus. </summary>
            <remarks>The connectivity mode differs from the <see cref="T:Microsoft.ServiceBus.Messaging.TransportType" /> protocol that the service specifies for client communication. The transport type is determined by the binding used. 
            No matter which <see cref="T:Microsoft.ServiceBus.Messaging.TransportType" /> you select (NetMessaging or AMQP), the communication occurs over the selected connectivity mode. 
            For example, you can have AMQP occur over TCP or HTTP(S). </remarks>
        </member>
        <member name="F:Microsoft.ServiceBus.ConnectivityMode.Http">
            <summary>HTTP mode. Listeners attempt an HTTP connection followed by an HTTPS connection with the Service Bus 
            service, then wait for messages. This might allow you to more easily work around TCP port constraints.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.ConnectivityMode.Tcp">
            <summary>TCP mode (default). Listeners create TCP connections to the Service 
            Bus service to a destination port in the range 9350 to 9354.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.ConnectivityMode.AutoDetect">
            <summary>Auto-detect mode. Automatically selects between the TCP, HTTP and HTTPS modes based on an auto-detection mechanism that probes whether 
            either connectivity option is available for the current network environment. If both are available, the system will choose TCP by default.</summary> 
        </member>
        <member name="F:Microsoft.ServiceBus.ConnectivityMode.Https">
            <summary>HTTPS mode. Listeners attempt an HTTPS connection with the Service Bus service, then wait  for messages. </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.AuthorizationFailedException">
            <summary>The exception that occurs when an authorization attempt fails. </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode">
            <summary>Enumerates the possible causes of failure during authorization attempts.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.Generic">
            <summary>Specifies that the error is generic.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingToken">
            <summary>Specifies that the token is missing.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MalformedToken">
            <summary>Specifies that the token is malformed.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidSignature">
            <summary>Specifies that the signature is invalid.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidAudience">
            <summary>Specifies that the audience is invalid.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.ExpiredToken">
            <summary>Specifies that the token has expired.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidClaim">
            <summary>Specifies that the claim is invalid.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingAudience">
            <summary>Specifies that the audience is missing.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingExpiresOn">
            <summary>Specifies that the 'expires on' date is missing.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingIssuer">
            <summary>Specifies that the issuer is missing.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingSignature">
            <summary>Specifies that the signature is missing.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.NotValidYet">
            <summary>Specifies that the token isn't valid yet.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidIssuer">
            <summary>Specifies that the issuer is invalid.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidLifetime">
            <summary>Specifies that the lifetime is invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.AuthorizationFailedException.ErrorCode">
            <summary>Gets or sets the error code that describes the cause of authorization attempt failure.</summary>
            <value>One of the values of the<see cref="T:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode" /> enumeration.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.AuthorizationFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Populates a 
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the target object.</summary> 
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.InvalidRequestException">
            <summary>The exception that is thrown when an invalid request occurs.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> class. </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> class using the specified message.</summary> 
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> class using the specified message and inner exception.</summary> 
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or null if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> class using the specified information and context.</summary> 
            <param name="info">Holds the serialized object data about the exception being thrown.</param>
            <param name="context">Contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.ServerErrorException">
            <summary>An exception that is thrown by the Azure Service Bus when an error occurs while processing a request.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServerErrorException" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.ServerErrorException" /> class with the specified error message.</summary> 
            <param name="message">The error message that describes this exception.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.ServerErrorException" /> class with the specified error message and inner exception.</summary> 
            <param name="message">The error message that describes this exception.</param>
            <param name="innerException">The exception that caused the current exception to be thrown.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.ServerErrorException" /> class with the specified serialization information and streaming context.</summary> 
            <param name="info">Holds the serialized object data about the exception being thrown.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedHttpUtility.ConvertSoapResponseToWebResponse(System.ServiceModel.Channels.Message,System.String)">
            <summary>
            Convert an outbound SOAP message to a corresponding HTTP message
            </summary>
            <param name="soapResponse">the SOAP message to convert from</param>
            <param name="contentType">content type of the SOAP message ("text/xml" for SOAP 1.1 and "application/soap+xml" for SOAP 1.2)</param>
            <returns>the converted HTTP message</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedHttpUtility.IsSoap12Message(System.ServiceModel.Channels.Message)">
            <summary>
            Determine if a message is a SOAP 1.2 message
            </summary>
            <param name="message">the message to check</param>
            <returns>true if the message is SOAP 1.2</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedHttpUtility.IsSoap11Message(System.ServiceModel.Channels.Message)">
            <summary>
            Determine if a message is a SOAP 1.1 message
            </summary>
            <param name="message">the message to check</param>
            <returns>true if the message is SOAP 1.1</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedHttpUtility.ParseHttpHeaderString(System.String,System.Action{System.String,System.String})">
            <summary>
            Parse Http headers from a string that matches the HTTP Header Protocol format:
            <para/>
            Header1: Header1Value\r\n
            <para/>
            Header2: Header2Value\r\n
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.RelayedHttpUtility.ToHttpHeaderString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Convert a WebHeaderCollection/NameValueCollection of HTTP Headers into a 
            protocol string with the format:
            <para/>
            Header1: Header1Value\r\n
            <para/>
            Header2: Header2Value\r\n
            <para/>
            This is a clone of WebHeaderCollection.ToString() which gives this nice output 
            but isn't documented as such and therefore it could potentially change.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedConnectMessage.TcpEndpoint">
            <summary>
            Gets the TCP endpoint to rendezvous with.  If the server provided an IPv4
            Address then the returned value will be an IPEndPoint.  If no IPv4 address only
            instance DNS was provided then the value will be a DnsEndPoint.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedConnectMessage.HttpEndpoint">
            <summary>
            Gets the HTTP endpoint to rendezvous with.  If the server provided an instance DNS
            name then this will be a DnsEndPoint like { Host="g0-prod-sn1-001-sb.servicebus.windows.net", Port=80 }.  If no 
            instance DNS was provided then the value will be an IPEndpoint (IPv4).
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.RelayedConnectMessage.HttpsEndpoint">
            <summary>
            Gets the HTTPS endpoint to rendezvous with.  If the server provided an instance DNS
            name then this will be a DnsEndPoint like { Host="g0-prod-sn1-001-sb.servicebus.windows.net", Port=443 }.  If no 
            instance DNS was provided then the value will be an IPEndpoint (IPv4).
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.TokenProvider">
            <summary>Represents a security token provider with built-in factory methods returning some well-known token providers.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TokenProvider" /> class.</summary>
            <param name="cacheTokens">true if new security tokens are being cached; otherwise, false.</param>
            <param name="supportHttpAuthToken">true if web token is supported by this provider; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,Microsoft.ServiceBus.TokenScope)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TokenProvider" /> class.</summary>
            <param name="cacheTokens">true if new security tokens are being cached; otherwise, false.</param>
            <param name="supportHttpAuthToken">true if web token is supported by this provider; otherwise, false.</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,System.Int32,Microsoft.ServiceBus.TokenScope)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TokenProvider" /> class.</summary>
            <param name="cacheTokens">true if new security tokens are being cached; otherwise, false.</param>
            <param name="supportHttpAuthToken">true if web token is supported by this provider; otherwise, false.</param>
            <param name="cacheSize">The size of the cache.</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.TokenProvider.TokenScope">
            <summary>Gets or sets the token scope associated with the provider.</summary>
            <value>The token scope associated with the provider.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.TokenProvider.CacheTokens">
            <summary>Gets or sets a value that indicates whether new security tokens are being cached.</summary>
            <value>true if new security tokens are being cached; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.TokenProvider.CacheSize">
            <summary>Gets or sets the size of the cache.</summary>
            <value>The size of the cache.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.TokenProvider.IsWebTokenSupported">
            <summary>Gets or sets a value that indicates whether web token is supported by this provider.</summary>
            <value>true if web token is supported by this provider; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.TokenProvider.StripQueryParameters">
            <summary>Gets whether the token provider strips query parameters.</summary>
            <value>true if the token provider strips query parameters; otherwise, false.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.Clear">
            <summary>Clears the token provider.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String)">
            <summary>Creates a SAML token provider with the specified SAML token.</summary>
            <param name="samlToken">The string that represents the SAML token.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning SAML token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri)">
            <summary>Creates a SAML token provider with the specified SAML token and URI of the Security Token Service (STS).</summary>
            <param name="samlToken">The string that represents the SAML token.</param>
            <param name="stsUri">The URI of the Security Token Service (STS).</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning SAML token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32)">
            <summary>Creates a SAML token provider with the specified SAML token, URI of the Security Token Service (STS) and cache size.</summary>
            <param name="samlToken">The string that represents the SAML token.</param>
            <param name="stsUri">The URI of the Security Token Service (STS).</param>
            <param name="cacheSize">The size of the cache.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning SAML token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)">
            <summary>Creates a SAML token provider with the specified SAML token and scope.</summary>
            <param name="samlToken">The string that represents the SAML token.</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning SAML token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)">
            <summary>Creates a SAML token provider with the specified SAML token, URI of the Security Token Service (STS) and token scope.</summary>
            <param name="samlToken">The string that represents the SAML token.</param>
            <param name="stsUri">The URI of the Security Token Service (STS).</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning SAML token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32,Microsoft.ServiceBus.TokenScope)">
            <summary>Creates a SAML token provider with the specified SAML token, 
            URI of the Security Token Service (STS), cache size and token scope.</summary> 
            <param name="samlToken">The string that represents the SAML token.</param>
            <param name="stsUri">The URI of the Security Token Service (STS).</param>
            <param name="cacheSize">The size of the cache.</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning SAML token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)">
            <summary>Creates a URL that grants access to the token provider with the specified shared access signature.</summary>
            <param name="sharedAccessSignature">The shared access signature.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.TokenProvider" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)">
            <summary>Creates a URL that grants access to the token provider with the specified key name and shared access key.</summary>
            <param name="keyName">The key name.</param>
            <param name="sharedAccessKey">The shared access key.</param>
            <returns>The created URL that grants access to token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan)">
            <summary>Creates a URL that grants access to the token provider with the specified key name, shared access key and token time to live.</summary>
            <param name="keyName">The key name.</param>
            <param name="sharedAccessKey">The shared access key.</param>
            <param name="tokenTimeToLive">The time for which the operation remains valid.</param>
            <returns>The created URL that grants access to token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)">
            <summary>Creates a URL that grants access to the token provider with the specified key name, shared access key and token scope.</summary>
            <param name="keyName">The key name.</param>
            <param name="sharedAccessKey">The shared access key.</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
            <returns>The created URL that grants access to token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan,Microsoft.ServiceBus.TokenScope)">
            <summary>Creates a URL that grants access to the token provider.</summary>
            <param name="keyName">The key name.</param>
            <param name="sharedAccessKey">The shared access key.</param>
            <param name="tokenTimeToLive">The time for which the operation remains valid.</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
            <returns>The created URL that grants access to token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String)">
            <summary>Creates a shared secret token provider.</summary>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning shared secret token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri)">
            <summary>Creates a shared secret token provider.</summary>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <param name="stsUri">The URI of the Security Token Service (STS).</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning shared secret token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[])">
            <summary>Creates a shared secret token provider.</summary>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning shared secret token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri)">
            <summary>Creates a shared secret token provider.</summary>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The set of issuer secret.</param>
            <param name="stsUri">The URI of the Security Token Service (STS).</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning shared secret token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)">
            <summary>Creates a shared secret token provider.</summary>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
            <returns>The created token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri,Microsoft.ServiceBus.TokenScope)">
            <summary>Creates a shared secret token provider.</summary>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <param name="stsUri">The URI of the Security Token Service (STS).</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
            <returns>The created token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],Microsoft.ServiceBus.TokenScope)">
            <summary>Creates a shared secret token provider.</summary>
            <param name="issuerName">The name of the issuer.</param>
            <param name="issuerSecret">The set of issuer secret.</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
            <returns>The created token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri,Microsoft.ServiceBus.TokenScope)">
            <summary>Creates a shared secret token provider.</summary>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The set of issuer secret.</param>
            <param name="stsUri">The Security Token Service's endpoint Uri.</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
            <returns>The created token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String)">
            <summary>Creates a simple web token provider.</summary>
            <param name="token">The string that represents the simple web token.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning simple web token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri)">
            <summary>Creates a simple web token provider.</summary>
            <param name="token">The string that represents the simple web token.</param>
            <param name="stsUri">The URI of the Security Token Service (STS).</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning simple web token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)">
            <summary>Creates a simple web token provider.</summary>
            <param name="token">The string that represents the simple web token.</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
            <returns>The created simple web token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)">
            <summary>Creates a simple web token provider.</summary>
            <param name="token">The string that represents the simple web token.</param>
            <param name="stsUri">The URI of the Security Token Service (STS).</param>
            <param name="tokenScope">The token scope associated with the provider.</param>
            <returns>The created simple web token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>Creates a windows token provider.</summary>
            <param name="stsUris">The URIs of the Security Token Service (STS).</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning the windows token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)">
            <summary>Creates a windows token provider.</summary>
            <param name="stsUris">The URIs of the Security Token Service (STS).</param>
            <param name="credential">The user credential.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning the windows token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)">
            <summary>Creates an OAuth (open standard for authorization) token provider.</summary>
            <param name="stsUris">The URIs of the Security Token Service (STS).</param>
            <param name="credential">The user credential.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning OAuth token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.BeginGetToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Begins an asynchronous operation to get a security token.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="bypassCache">true to ignore existing token information in the cache; false to use the token information in the cache.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.BeginGetWebToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Begins an asynchronous operation to get a web token.</summary>
            <param name="appliesTo">The URI which the token applies to.</param>
            <param name="action">The request action.</param>
            <param name="bypassCache">true to ignore existing token information in the cache; false to use the token information in the cache.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.EndGetToken(System.IAsyncResult)">
            <summary>Completes an asynchronous operation to get a security token.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</param>
            <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.GetTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)">
            <summary>Asynchronously retrieves the token for the provider.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="bypassCache">true to ignore existing token information in the cache; false to use the token information in the cache.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <returns>The result of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.GetWebTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)">
            <summary>Asynchronously retrieves the web token for the provider.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="bypassCache">true to ignore existing token information in the cache; false to use the token information in the cache.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <returns>The result of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.EndGetWebToken(System.IAsyncResult)">
            <summary>Completes an asynchronous operation to get a web token.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</param>
            <returns>The <see cref="T:System.String" /> that represents the web token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the BeginGetToken method.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Executes upon calling the BeginGetWebToken method.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
            <param name="callback">An 
            <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param> 
            <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
            <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
            <summary>Executes upon calling the EndGetToken method.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</param>
            <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
            <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
            <summary>Executes upon calling the EndGetWebToken method.</summary>
            <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</param>
            <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
            <returns>The <see cref="T:System.String" /> that represents the web token.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.BuildKey(System.String,System.String)">
            <summary>Generates a key for the token provider.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <param name="action">The request action.</param>
            <returns>A generated key for the token provider.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.NormalizeAppliesTo(System.String)">
            <summary>Returns an object whose value is the same as the token provider.</summary>
            <param name="appliesTo">The URI which the access token applies to.</param>
            <returns>The returned object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.Key.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TokenProvider.Key" /> class.</summary>
            <param name="appliesTo">Specifies the address where the key applies to.</param>
            <param name="claim">Specifies a specific user, application, computer, or other entity</param>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.Key.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.Key.GetHashCode">
            <summary>Returns the hash code for the key.</summary>
            <returns>The hash code for the key.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.TokenProvider.Key.Equals(Microsoft.ServiceBus.TokenProvider.Key)">
            <summary>Determines whether the specified key is equal to the current object.</summary>
            <param name="other">The key to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.SocketConnectionPoolSettings">
            <summary>Represents the properties that control the behavior of the socket connection pool.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.GroupName">
            <summary>Gets or sets the group name of the socket connection pool.</summary>
            <value>The group name of the socket connection pool.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.IdleTimeout">
            <summary>Gets or sets the maximum time the connection can be idle in the connection pool before being disconnected.</summary>
            <value>The maximum time the connection can be idle in the connection pool before being disconnected.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.LeaseTimeout">
            <summary>Gets or sets the time span after which an active connection is closed.</summary>
            <value>The duration after which the socket connection is closed.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.MaxOutboundConnectionsPerEndpoint">
            <summary>Gets or sets the maximum number of outbound connections for each endpoint that is cached in the connection pool.</summary>
            <value>The maximum number of outbound connections for each endpoint that is cached in the connection pool.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter">
            <summary>Maps WSDL contracts and policy assertions into Azure Service Bus TcpRelayTransport bindings.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.#ctor">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter" /> class.</summary> 
        </member>
        <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
            <summary>
            Adds custom policy assertions to the WSDL bindings in WSDL documents that are to be imported.
            </summary>
            <param name="wsdlDocuments">The collection of WSDL documents that are to be imported.</param>
            <param name="xmlSchemas">The collection of XML Schema documents that are to be imported.</param>
            <param name="policy">The collection of policy assertions that are to be imported.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
            <summary>
            Called when importing a contract.
            </summary>
            <param name="importer">The importer.</param>
            <param name="context">The import context to be modified.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
            <summary>
            Called when importing an endpoint.
            </summary>
            <param name="importer">The importer.</param>
            <param name="context">The import context to be modified.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
            <summary>
            Import custom policy assertions and add implementing binding elements
            </summary>
            <param name="importer">The MetadataImporter object in use.</param>
            <param name="context">The PolicyConversionContext that contains both the policy assertions that can be imported and
            the collections of binding elements to which implementing binding elements can be added.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter">
            <summary>Maps WSDL contracts and policy assertions into Azure Service Bus HttpRelayTransport bindings.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.#ctor">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter" /> class.</summary> 
        </member>
        <member name="T:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter">
            <summary>Maps WSDL contracts and policy assertions into Azure Service Bus OnewayRelayTransport bindings.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.#ctor">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter" /> class.</summary> 
        </member>
        <member name="T:Microsoft.ServiceBus.Description.StandardRelayBindingImporter">
            <summary>Maps WSDL contracts and policy assertions into Azure Service Bus standard bindings.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
            <summary>Called prior to importing the metadata documents associated with the standard binding.</summary>
            <param name="wsdlDocuments">Describes the service.</param>
            <param name="xmlSchemas">Describes the <paramref name="wsdlDocuments" />.</param>
            <param name="policy">Contains the policy elements.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
            <summary>Imports WSDL contract information for standard bindings.</summary>
            <param name = "importer" > The WSDL importer for importing and resolving WSDL metadata.</param>
            <param name = "context" > Provides the context for the conversion from WSDL to the service description.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
            <summary>Maps endpoints defined in WSDL into the service description.</summary>
            <param name = "importer" > The WSDL importer for importing and resolving WSDL metadata.</param>
            <param name = "endpointContext" > The context for the conversion.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.ExceptionErrorCodes">
            <summary>Specifies the error codes of the exceptions.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.BadRequest">
            <summary>A parse error encountered while processing a request.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UnauthorizedGeneric">
            <summary>A generic unauthorized error.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.NoTransportSecurity">
            <summary>The service bus has no transport security.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.MissingToken">
            <summary>The token is missing.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidSignature">
            <summary>The signature is invalid.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidAudience">
            <summary>The audience is invalid.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.MalformedToken">
            <summary>A malformed token.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ExpiredToken">
            <summary>The token had expired.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.AudienceNotFound">
            <summary>The audience is not found.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ExpiresOnNotFound">
            <summary>The expiry date not found.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.IssuerNotFound">
            <summary>The issuer cannot be found.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.SignatureNotFound">
            <summary>The signature cannot be found.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.IpRejected">
            <summary>The incoming ip has been rejected by policy.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ForbiddenGeneric">
            <summary>A generic forbidden error.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ForbiddenInvalidOperation">
            <summary>Operation is not allowed.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.EndpointNotFound">
            <summary>The endpoint is not found.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidDestination">
            <summary>The destination is invalid.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.NamespaceNotFound">
            <summary>The namespace is not found.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.StoreLockLost">
            <summary>The store lock is lost.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.SqlFiltersExceeded">
            <summary>The SQL filters exceeded its allowable maximum number.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.CorrelationFiltersExceeded">
            <summary>The correlation filters exceeded its allowable maximum number.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.SubscriptionsExceeded">
            <summary>The subscriptions exceeded its allowable maximum number.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UpdateConflict">
            <summary>A conflict during updating occurred.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.EventHubAtFullCapacity">
            <summary>The Event Hub is at full capacity.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ConflictGeneric">
            <summary>A generic conflict error.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ConflictOperationInProgress">
            <summary>An operation is in progress.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.EntityGone">
            <summary>The entity is not found.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UnspecifiedInternalError">
            <summary>An internal error that is not specified.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.DataCommunicationError">
            <summary>The error of data communication.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InternalFailure">
            <summary>An internal error.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ProviderUnreachable">
            <summary>The provider is unreachable.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ServerBusy">
            <summary>The server is busy.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ArchiveStorageAccountServerBusy">
            <summary> Archive Storage Account Server is busy. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidArchiveStorageAccountResourceId">
            <summary> Archive Storage Account ResourceId is invalid. </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.BadGatewayFailure">
            <summary>The error is caused by bad gateway.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.GatewayTimeoutFailure">
            <summary>The gateway did not receive a timely response from the upstream server.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UnknownExceptionDetail">
            <summary>The detail of an unknown exception.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.IConnectionStatus">
            <summary>Describes the current status of a one-way connection.</summary>
        </member>
        <member name="E:Microsoft.ServiceBus.IConnectionStatus.Connecting">
            <summary>Occurs when the connection is being established.</summary>
        </member>
        <member name="E:Microsoft.ServiceBus.IConnectionStatus.Offline">
            <summary>Occurs when the connection goes offline.</summary>
        </member>
        <member name="E:Microsoft.ServiceBus.IConnectionStatus.Online">
            <summary>Occurs when the connection comes online.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.IConnectionStatus.IsOnline">
            <summary>Gets a value that determines whether the connection is online.</summary>
            <value>true if the connection is alive and online; false if there 
            is no connectivity towards the Azure Service Bus from the current network location.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.IConnectionStatus.LastError">
            <summary>Retrieves the last error encountered when trying to reestablish the connection from the offline state.</summary>
            <value>Returns a <see cref="T:System.Exception" /> that contains the last error.</value>
        </member>
        <member name="T:Microsoft.ServiceBus.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.AcceptMessageSessionRedirectNotSupported">
            <summary>
              Looks up a localized string similar to The client cannot enable redirect when AcceptMessageSession is used..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ActivityClose">
            <summary>
              Looks up a localized string similar to Close &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ActivityOpen">
            <summary>
              Looks up a localized string similar to Open &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.AsyncCallbackException">
            <summary>
              Looks up a localized string similar to An AsyncCallback threw an exception..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.AsyncObjectAlreadyEnded">
            <summary>
              Looks up a localized string similar to The &apos;End&apos; method has already been called on this AsyncResult object..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.BaseAddressCannotHaveFragment">
            <summary>
              Looks up a localized string similar to A base address cannot contain a Uri fragment..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.BaseAddressCannotHaveQuery">
            <summary>
              Looks up a localized string similar to A base address cannot contain a Uri query string..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.BaseAddressCannotHaveUserInfo">
            <summary>
              Looks up a localized string similar to A base address cannot contain a Uri user info section..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.BaseAddressMustBeAbsolute">
            <summary>
              Looks up a localized string similar to Only an absolute Uri can be used as a base address..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.BasicHttpMessageSecurityRequiresCertificate">
            <summary>
              Looks up a localized string similar to BasicHttp binding requires that BasicHttpBinding.Security.Message.ClientCredentialType be equivalent to the BasicHttpMessageCredentialType.Certificate credential type for secure messages. Select Transport or TransportWithMessageCredential security for UserName credentials..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.BufferAllocationFailed">
            <summary>
              Looks up a localized string similar to Failed to allocate a managed memory buffer of {0} bytes. The amount of available memory may be low..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ChannelInitializationTimeout">
            <summary>
              Looks up a localized string similar to A newly accepted connection did not receive initialization data from the sender within the configured ChannelInitializationTimeout ({0}). As a result the connection will be aborted. If you are on a highly congested network, or your sending machine is heavily loaded, consider increasing this value or load-balancing your server..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ChannelTypeNotSupported">
            <summary>
              Looks up a localized string similar to The specified channel type {0} is not supported by this channel manager..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.CharacterReservedForUriScheme">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; contained character &apos;{1}&apos; which is not allowed because it is reserved in the Uri scheme..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ClientCredentialTypeMustBeSpecifiedForMixedMode">
            <summary>
              Looks up a localized string similar to ClientCredentialType.None is not valid for the TransportWithMessageCredential security mode. Specify a message credential type or use a different security mode..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ClientWebSocketConnectionClosed">
            <summary>
              Looks up a localized string similar to ClientWebSocketConnection is closed..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ClientWebSocketConnectionPrematureEndRead">
            <summary>
              Looks up a localized string similar to EndRead method cannot be called before the asynchronous read operation is complete..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ClientWebSocketConnectionReadPending">
            <summary>
              Looks up a localized string similar to BeginRead method cannot be called when there is an asynchronous read operation already pending..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ClientWebSocketNotInInitialState">
            <summary>
              Looks up a localized string similar to ServiceBusClientWebSocket not in Initial State during Connect..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ClientWebSocketNotInOpenStateDuringReceive">
            <summary>
              Looks up a localized string similar to ServiceBusClientWebSocket not in Open State during Receive..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ClientWebSocketNotInOpenStateDuringSend">
            <summary>
              Looks up a localized string similar to ServiceBusClientWebSocket not in Open State during Send..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ClientWebSocketTransportClosed">
            <summary>
              Looks up a localized string similar to Client WebSocket Transport is closed..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ClientWebSocketTransportReadBufferTooSmall">
            <summary>
              Looks up a localized string similar to Client WebSocket Transport read buffer is too small to read incoming message..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.CloseTimedOut">
            <summary>
              Looks up a localized string similar to Close timed out after {0}. Increase the timeout value passed to the call to Close or increase the CloseTimeout value on the Binding. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.CommunicationObjectAbortedStack2">
            <summary>
              Looks up a localized string similar to The communication object &apos;{0}&apos; cannot be used for communication because it has been Aborted. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.CommunicationObjectBaseClassMethodNotCalled">
            <summary>
              Looks up a localized string similar to The communication object &apos;{0}&apos; has overridden the virtual function {1} but it does not call version defined in the base class..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.CommunicationObjectCannotBeModifiedInState">
            <summary>
              Looks up a localized string similar to The communication object &apos;{0}&apos; cannot be modified while it is in the {1} state..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.CommunicationObjectCannotBeUsed">
            <summary>
              Looks up a localized string similar to The communication object &apos;{0}&apos; is in the {1} state.  Communication objects cannot be used for communication unless they are in the Opened state..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.CommunicationObjectFaultedStack2">
            <summary>
              Looks up a localized string similar to The communication object &apos;{0}&apos; cannot be used for communication because it is in the Faulted state. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ConfigBindingExtensionNotFound">
            <summary>
              Looks up a localized string similar to Configuration binding extension &apos;{0}&apos; could not be found. Verify that this binding extension is properly registered in system.serviceModel/extensions/bindingExtensions and that it is spelled correctly..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ConfigInvalidBindingConfigurationName">
            <summary>
              Looks up a localized string similar to The {1} binding does not have a configured binding named &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ConfigInvalidClassFactoryValue">
            <summary>
              Looks up a localized string similar to The value &apos;{0}&apos; is not a valid instance of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ConfigInvalidClassInstanceValue">
            <summary>
              Looks up a localized string similar to The instance is not a valid configurable value of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ConfigInvalidEncodingValue">
            <summary>
              Looks up a localized string similar to {0} is not a valid encoding string for System.Text.Encoding.GetEncoding(string)..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ConfigSectionNotFound">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; configuration section cannot be created. The machine.config file is missing information. Verify that this configuration section is properly registered and that you have correctly spelled the section name. For Windows Communication Foundation sections, run ServiceModelReg.exe -i to fix this error..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ContentTypeMismatch">
            <summary>
              Looks up a localized string similar to Content Type {0} was sent to a service expecting {1}. The client and service bindings may be mismatched..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.DnsResolveFailed">
            <summary>
              Looks up a localized string similar to No DNS entries exist for host {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.DuplexChannelAbortedDuringOpen">
            <summary>
              Looks up a localized string similar to Duplex channel to {0} was aborted during the open process..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.DuplexSessionListenerNotFound">
            <summary>
              Looks up a localized string similar to No duplex session listener was listening at {0}. This could be due to an incorrect via set on the client or a binding mismatch..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.DuplicateRegistration">
            <summary>
              Looks up a localized string similar to A registration already exists for Uri &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.EndpointNotFound">
            <summary>
              Looks up a localized string similar to There was no endpoint listening at {0} that could accept the message. This is often caused by an incorrect address or Soap action. See the InnerException, if present, for more details..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.EventProcessorAlreadyRegistered">
            <summary>
              Looks up a localized string similar to Event Processor already registered for partion &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingAtEnd">
            <summary>
              Looks up a localized string similar to An attempt was made to decode a value after the framing stream was ended..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingContentTypeMismatch">
            <summary>
              Looks up a localized string similar to Content Type {0} was not supported by service {1}. The client and service bindings may be mismatched..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingContentTypeTooLong">
            <summary>
              Looks up a localized string similar to The framing content type size ({0}) exceeds the quota..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingContentTypeTooLongFault">
            <summary>
              Looks up a localized string similar to Content type &apos;{0}&apos; is too long to be processed by the remote host. See the server logs for more details..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingError">
            <summary>
              Looks up a localized string similar to Error while reading message framing format at position {0} of stream (state: {1}).
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingFaultTooLong">
            <summary>
              Looks up a localized string similar to The framing fault size ({0}) exceeds the quota..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingFaultUnrecognized">
            <summary>
              Looks up a localized string similar to Server faulted with code &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingMaxMessageSizeExceeded">
            <summary>
              Looks up a localized string similar to The maximum message size quota for incoming messages has been exceeded for the remote channel. See the server logs for more details..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingModeNotSupported">
            <summary>
              Looks up a localized string similar to Framing mode {0} is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingModeNotSupportedFault">
            <summary>
              Looks up a localized string similar to The .Net Framing mode being used is not supported by &apos;{0}&apos;. See the server logs for more details..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingPrematureEOF">
            <summary>
              Looks up a localized string similar to More data was expected, but EOF was reached..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingRecordTypeMismatch">
            <summary>
              Looks up a localized string similar to Expected record type &apos;{0}&apos;, but found &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingSizeTooLarge">
            <summary>
              Looks up a localized string similar to Specified size is too large for this implementation..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingUpgradeInvalid">
            <summary>
              Looks up a localized string similar to The requested upgrade is not supported by &apos;{0}&apos;. This could be due to mismatched bindings (for example security enabled on the client and not on the server)..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingValueNotAvailable">
            <summary>
              Looks up a localized string similar to The value cannot be accessed because it has not yet been fully decoded..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingVersionNotSupported">
            <summary>
              Looks up a localized string similar to Framing major version {0} is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingVersionNotSupportedFault">
            <summary>
              Looks up a localized string similar to The .Net Framing version being used is not supported by &apos;{0}&apos;. See the server logs for more details..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingViaNotUri">
            <summary>
              Looks up a localized string similar to The framing via ({0}) is not a valid URI..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingViaTooLong">
            <summary>
              Looks up a localized string similar to The framing via size ({0}) exceeds the quota..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.FramingViaTooLongFault">
            <summary>
              Looks up a localized string similar to Via &apos;{0}&apos; is too long to be processed by the remote host. See the server logs for more details..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.GenericCallbackException">
            <summary>
              Looks up a localized string similar to A user callback threw an exception. Check the exception stack and inner exception to determine the callback that failed..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.Hosting_BaseUriDeserializedNotValid">
            <summary>
              Looks up a localized string similar to The BaseUriWithWildcard object has invalid fields after deserialization..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.Hosting_MisformattedBinding">
            <summary>
              Looks up a localized string similar to The protocol binding &apos;{0}&apos; does not conform to the syntax for &apos;{1}&apos;. The following is an example of valid &apos;{1}&apos; protocol bindings: &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.Hosting_MisformattedBindingData">
            <summary>
              Looks up a localized string similar to The protocol binding &apos;{0}&apos; is not valid for &apos;{1}&apos;. This might be because the port number is out of range..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.Hosting_MisformattedPort">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; protocol binding &apos;{1}&apos; specifies an invalid port number &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.Hosting_NoHttpTransportManagerForUri">
            <summary>
              Looks up a localized string similar to There is no compatible TransportManager found for Uri &apos;{0}&apos;. This may be because that you have used an absolute address which points outside of the virtual application. Please use a relative address instead..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.Hosting_NoTcpPipeTransportManagerForUri">
            <summary>
              Looks up a localized string similar to There is no compatible TransportManager found for Uri &apos;{0}&apos;. This may be because that you have used an absolute address which points outside of the virtual application, or the binding settings of the endpoint do not match those that have been set by other services or endpoints. Note that all bindings for the same protocol should have same settings in the same application..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.Hosting_NotSupportedProtocol">
            <summary>
              Looks up a localized string similar to The protocol &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.Hosting_ServiceActivationFailed">
            <summary>
              Looks up a localized string similar to The requested service &apos;{0}&apos; could not be activated. See the server&apos;s diagnostic trace logs for more information..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.HttpProxyRequiresSingleAuthScheme">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; authentication scheme has been specified for the proxy on the HTTP factory. However, the factory only supports specification of exactly one authentication scheme. Valid authentication schemes are Digest, Negotiate, NTLM, Basic, or Anonymous..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.InnerListenerFactoryNotSet">
            <summary>
              Looks up a localized string similar to The inner listener factory of {0} must be set before this operation..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.InsufficentMemory">
            <summary>
              Looks up a localized string similar to Insufficient memory available to complete the operation..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.InvalidAsyncResult">
            <summary>
              Looks up a localized string similar to The AsyncResult object used to end this operation was not the object that was returned when the operation was initiated..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.InvalidDecoderStateMachine">
            <summary>
              Looks up a localized string similar to Invalid decoder found within state machine..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.InvalidGzipHeaderCannotBeRead">
            <summary>
              Looks up a localized string similar to Compression failed. Could not read Gzip Header. Returning the original body stream..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.InvalidGzipUnexpectedFlagsValue">
            <summary>
              Looks up a localized string similar to Compression failed. The compressed stream has unexpected values in the flag field. Returning the original body stream..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.InvalidLockOperation">
            <summary>
              Looks up a localized string similar to Object synchronization method was called from an unsynchronized block of code..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.InvalidNotificationHubCreateRequest">
            <summary>
              Looks up a localized string similar to NotificationHub creation with preview API version, or lesser version is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.InvalidUriPathCharacter">
            <summary>
              Looks up a localized string similar to The path &apos;{0}&apos; contains character(s) that are not allowed by Service Bus. Entity segments can contain only letters, numbers, periods (.), hyphens (-), and underscores (_)..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.InvalidUriScheme">
            <summary>
              Looks up a localized string similar to The provided Uri scheme &apos;{0}&apos; is invalid; expected &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ListenerFactoryNotRegistered">
            <summary>
              Looks up a localized string similar to The specified channel listener at &apos;{0}&apos; is not registered with this transport manager..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.MaxBufferSizeMustMatchMaxReceivedMessageSize">
            <summary>
              Looks up a localized string similar to For TransferMode.Buffered, MaxReceivedMessageSize and MaxBufferSize must be the same value..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.MaxBufferSizeMustNotExceedMaxReceivedMessageSize">
            <summary>
              Looks up a localized string similar to MaxBufferSize must not exceed MaxReceivedMessageSize..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.MaxReceivedMessageSizeExceeded">
            <summary>
              Looks up a localized string similar to The maximum message size quota for incoming messages ({0}) has been exceeded. To increase the quota, use the MaxReceivedMessageSize property on the appropriate binding element..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.MaxReceivedMessageSizeMustBeInIntegerRange">
            <summary>
              Looks up a localized string similar to This factory buffers messages, so the message sizes must be in the range of an integer value..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.MaxSentMessageSizeExceeded">
            <summary>
              Looks up a localized string similar to The maximum message size quota for outgoing messages ({0}) has been exceeded..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.MessageXmlProtocolError">
            <summary>
              Looks up a localized string similar to There is a problem with the Xml that was received from the network. See inner exception for more details..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.MissingMessageID">
            <summary>
              Looks up a localized string similar to Request Message is missing a MessageID header. This header is required to correlate a reply..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.MultipleMebesInParameters">
            <summary>
              Looks up a localized string similar to More than one MessageEncodingBindingElement was found in the BindingParameters of the BindingContext. This usually is caused by having multiple MessageEncodingBindingElements in a CustomBinding. Remove all but one of these elements..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.MultipleStreamUpgradeProvidersInParameters">
            <summary>
              Looks up a localized string similar to More than one IStreamUpgradeProviderElement was found in the BindingParameters of the BindingContext. This usually is caused by having multiple IStreamUpgradeProviderElements in a CustomBinding. Remove all but one of these elements..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.NamespaceIsLocked">
            <summary>
              Looks up a localized string similar to The namespace is temporarily locked during migration..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.NoCompatibleTransportManagerForUri">
            <summary>
              Looks up a localized string similar to Could not find a compatible transport manager for Uri &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.NoIPEndpointsFoundForHost">
            <summary>
              Looks up a localized string similar to No IPEndpoints were found for host {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.OffsetExceedsBufferSize">
            <summary>
              Looks up a localized string similar to The specified offset exceeds the buffer size ({0} bytes)..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.OpenTimedOutEstablishingTransportSession">
            <summary>
              Looks up a localized string similar to Open timed out after {0} while establishing a transport session to {1}. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.OperationAbortedDuringConnectionEstablishment">
            <summary>
              Looks up a localized string similar to Operation was aborted while establishing a connection to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.OperationIsNotAllowedForInActiveNamespace">
            <summary>
              Looks up a localized string similar to Management operation is not allowed for entities in namespace: &apos;{0}&apos; - as it is not active..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.OperationIsNotAllowedForNamespaceType">
            <summary>
              Looks up a localized string similar to This operation is not allowed for given namespace type: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.PreambleAckIncorrect">
            <summary>
              Looks up a localized string similar to You have tried to create a channel to a service that does not support .Net Framing. .
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.PreambleAckIncorrectMaybeHttp">
            <summary>
              Looks up a localized string similar to You have tried to create a channel to a service that does not support .Net Framing. It is possible that you are encountering an HTTP endpoint..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.PrematureEOF">
            <summary>
              Looks up a localized string similar to More data was expected, but EOF was reached..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ReceiveRequestTimedOut">
            <summary>
              Looks up a localized string similar to Receive request on local address {0} timed out after {1}. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ReceiveRequestTimedOutNoLocalAddress">
            <summary>
              Looks up a localized string similar to Receive request timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ReceiveTimedOut">
            <summary>
              Looks up a localized string similar to Receive on local address {0} timed out after {1}. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ReceiveTimedOut2">
            <summary>
              Looks up a localized string similar to Receive timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ReceiveTimedOutNoLocalAddress">
            <summary>
              Looks up a localized string similar to Receive timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.RemoteSecurityNotNegotiatedOnStreamUpgrade">
            <summary>
              Looks up a localized string similar to Stream Security is required at {0}, but no security context was negotiated. This is likely caused by the remote endpoint missing a StreamSecurityBindingElement from its binding..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ReplyAlreadySent">
            <summary>
              Looks up a localized string similar to A reply has already been sent from this RequestContext..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.RequestChannelSendTimedOut">
            <summary>
              Looks up a localized string similar to The request channel timed out attempting to send after {0}. Increase the timeout value passed to the call to Request or increase the SendTimeout value on the Binding. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.RequestChannelWaitForReplyTimedOut">
            <summary>
              Looks up a localized string similar to The request channel timed out while waiting for a reply after {0}. Increase the timeout value passed to the call to Request or increase the SendTimeout value on the Binding. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.RequestContextAborted">
            <summary>
              Looks up a localized string similar to The requestContext has been aborted..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.RequestTimedOutEstablishingTransportSession">
            <summary>
              Looks up a localized string similar to Request timed out after {0} while establishing a transport connection to {1}. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ResourcePublishingEndpointNotAllowed">
            <summary>
              Looks up a localized string similar to Azure Hybrid Connections to the endpoint &apos;{0}&apos; are not allowed by Group Policy..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ResourcePublishingNotAllowed">
            <summary>
              Looks up a localized string similar to Azure Hybrid Connections are disabled by Group Policy..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SbmpClientMustEnableRedirect">
            <summary>
              Looks up a localized string similar to The server only supports Redirect. Client must set EnableRedirect=true in the transport settings..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SecureConversationRequiredByReliableSession">
            <summary>
              Looks up a localized string similar to Cannot establish a reliable session without secure conversation. Enable secure conversation..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SecurityAuditNotSupportedOnChannelFactory">
            <summary>
              Looks up a localized string similar to SecurityAuditBehavior is not supported on the channel factory..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SeekNotSupported">
            <summary>
              Looks up a localized string similar to This stream does not support seek related operation..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SendCannotBeCalledAfterCloseOutputSession">
            <summary>
              Looks up a localized string similar to You cannot send messages on a channel after CloseOutputSession has been called..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SendToViaTimedOut">
            <summary>
              Looks up a localized string similar to Sending to via {0} timed out after {1}. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ServerBusy">
            <summary>
              Looks up a localized string similar to  This request has been blocked because the entity or namespace is being throttled. Please retry the operation, and if condition continues, please slow down your rate of request..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ServerRejectedSessionPreamble">
            <summary>
              Looks up a localized string similar to The server at {0} rejected the session-establishment request. Please retry..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ServerRejectedUpgradeRequest">
            <summary>
              Looks up a localized string similar to The server rejected the upgrade request..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ServerTooBusy">
            <summary>
              Looks up a localized string similar to Server &apos;{0}&apos; is too busy to process this request. Try again later..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SFxCloseTimedOut1">
            <summary>
              Looks up a localized string similar to The ServiceHost close operation timed out after {0}. This could be because a client failed to close a sessionful channel within the required time. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SFxTimeoutOutOfRange0">
            <summary>
              Looks up a localized string similar to Timeout must be greater than or equal to TimeSpan.Zero. To disable timeout, specify TimeSpan.MaxValue..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SFxTimeoutOutOfRangeTooBig">
            <summary>
              Looks up a localized string similar to Timeouts larger than Int32.MaxValue TotalMilliseconds (approximately 24 days) cannot be honored. To disable timeout, specify TimeSpan.MaxValue..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SFxWrongType2">
            <summary>
              Looks up a localized string similar to An argument of the wrong type was passed to this method. This method expected an argument of type {0}, but it was passed an argument of type {1}..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.Sharing_ConnectionDispatchFailed">
            <summary>
              Looks up a localized string similar to The message could not be dispatched to the service at address &apos;{0}&apos;. Refer to the server event log for more details..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.Sharing_EndpointUnavailable">
            <summary>
              Looks up a localized string similar to The message could not be dispatched because the service at the endpoint address &apos;{0}&apos; is unavailable for the protocol of the address..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SizeExceedsRemainingBufferSpace">
            <summary>
              Looks up a localized string similar to The specified size exceeds the remaining buffer space ({0} bytes)..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SocketAbortedReceiveTimedOut">
            <summary>
              Looks up a localized string similar to The socket was aborted because an asynchronous receive from the socket did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SocketAbortedSendTimedOut">
            <summary>
              Looks up a localized string similar to The socket connection was aborted because an asynchronous send to the socket did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SocketCloseReadReceivedData">
            <summary>
              Looks up a localized string similar to A graceful close was attempted on the socket, but the other side ({0}) is still sending data..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SocketCloseReadTimeout">
            <summary>
              Looks up a localized string similar to The remote endpoint of the socket ({0}) did not respond to a close request within the allotted timeout ({1}). It is likely that the remote endpoint is not calling Close after receiving the EOF signal (null) from Receive. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SocketConnectionDisposed">
            <summary>
              Looks up a localized string similar to The socket connection has been disposed..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SpaceNeededExceedsMessageFrameOffset">
            <summary>
              Looks up a localized string similar to The space needed for encoding ({0} bytes) exceeds the message frame offset..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SSLCertThumbprintMissing">
            <summary>
              Looks up a localized string similar to The SSL certificate thumbprint value is null..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.StreamDoesNotSupportTimeout">
            <summary>
              Looks up a localized string similar to TimeoutStream requires an inner Stream that supports timeouts; its CanTimeout property must be true..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.StreamError">
            <summary>
              Looks up a localized string similar to An error occurred while transmitting data..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.SuppliedMessageIsNotAReplyItHasNoRelatesTo0">
            <summary>
              Looks up a localized string similar to A reply message was received without a valid RelatesTo header. This may have been caused by a missing RelatesTo header or a RelatesTo header with an invalid WS-Addressing Relationship type..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TcpConnectError">
            <summary>
              Looks up a localized string similar to Could not connect to {0}. TCP error code {1}: {2}. .
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TcpConnectErrorWithTimeSpan">
            <summary>
              Looks up a localized string similar to Could not connect to {0}. The connection attempt lasted for a time span of {3}. TCP error code {1}: {2}. .
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TcpConnectingToViaTimedOut">
            <summary>
              Looks up a localized string similar to Connecting to via {0} timed out after {1}. Connection attempts were made to {2} of {3} available addresses ({4}). Check the RemoteAddress of your channel and verify that the DNS records for this endpoint correspond to valid IP Addresses. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TcpConnectionResetError">
            <summary>
              Looks up a localized string similar to The socket connection was aborted. This could be caused by an error processing your message or a receive timeout being exceeded by the remote host, or an underlying network resource issue. Local socket timeout was &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TcpConnectionTimedOut">
            <summary>
              Looks up a localized string similar to The socket transfer timed out after {0}. You have exceeded the timeout set on your binding. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TcpConnectNoBufs">
            <summary>
              Looks up a localized string similar to Insufficient winsock resources available to complete socket connection initiation..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TcpLocalConnectionAborted">
            <summary>
              Looks up a localized string similar to The socket connection was aborted by your local machine. This could be caused by a channel Abort() call, or a transmission error from another thread using this socket..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TcpTransferError">
            <summary>
              Looks up a localized string similar to A TCP error ({0}: {1}) occurred while transmitting data..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ThreadAcquisitionTimedOut">
            <summary>
              Looks up a localized string similar to Cannot claim lock within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ThreadNeutralSemaphoreAborted">
            <summary>
              Looks up a localized string similar to The ThreadNeutralSemaphore has been aborted..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ThreadNeutralSemaphoreAsyncAbort">
            <summary>
              Looks up a localized string similar to The ThreadNeutralSemaphore.Abort is not supported for the asynchronous usage..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TimeoutOnOpen">
            <summary>
              Looks up a localized string similar to The open operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout. For more information on exception types and proper exception handling, please refer to http://go.microsoft.com/fwlink/?LinkId=761101.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TimeoutOnRequest">
            <summary>
              Looks up a localized string similar to The request operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout. For more information on exception types and proper exception handling, please refer to http://go.microsoft.com/fwlink/?LinkId=761101.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TimeSpanMustbeGreaterThanTimeSpanZero">
            <summary>
              Looks up a localized string similar to TimeSpan must be greater than TimeSpan.Zero..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TokenProviderEmptyAudience">
            <summary>
              Looks up a localized string similar to The token service did not return an audience..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TokenProviderEmptyExpiration">
            <summary>
              Looks up a localized string similar to The token service did not return a token expiration..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TokenProviderEmptyToken">
            <summary>
              Looks up a localized string similar to The token service did not return a token..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TokenProviderFailedSecurityToken">
            <summary>
              Looks up a localized string similar to The token provider was unable to provide a security token while accessing &apos;{0}&apos;. Token provider returned message: &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TokenProviderInvalidTokenParameter">
            <summary>
              Looks up a localized string similar to The token service returned an invalid parameter &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TokenProviderServiceUnavailable">
            <summary>
              Looks up a localized string similar to The token provider service was not available when obtaining a token for &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TokenProviderTimeout">
            <summary>
              Looks up a localized string similar to The timeout elapsed upon attempting to obtain a token while accessing &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TraceCodeAppDomainUnload">
            <summary>
              Looks up a localized string similar to AppDomain Unloading..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TraceCodeConnectionPoolIdleTimeoutReached">
            <summary>
              Looks up a localized string similar to A connection has exceeded the idle timeout of this connection pool ({0}) and been closed..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TraceCodeConnectionPoolLeaseTimeoutReached">
            <summary>
              Looks up a localized string similar to A connection has exceeded the connection lease timeout of this connection pool ({0}) and been closed..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TraceCodeConnectionPoolMaxOutboundConnectionsPerEndpointQuotaReached">
            <summary>
              Looks up a localized string similar to MaxOutboundConnectionsPerEndpoint quota ({0}) has been reached, so connection was closed and not stored in this connection pool..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TraceCodeEventLog">
            <summary>
              Looks up a localized string similar to Wrote to the event log..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TraceCodeFailedAcceptFromPool">
            <summary>
              Looks up a localized string similar to An attempt to reuse a pooled connection failed. Another attempt will be made with {0} remaining in the overall timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TraceCodeServerMaxPooledConnectionsQuotaReached">
            <summary>
              Looks up a localized string similar to MaxOutboundConnectionsPerEndpoint quota ({0}) has been reached, so the connection was closed and not reused by the listener..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TraceCodeTraceTruncatedQuotaExceeded">
            <summary>
              Looks up a localized string similar to A trace size quota was exceeded. The trace was truncated..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TraceCodeTransportListen">
            <summary>
              Looks up a localized string similar to Listening at &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TransactionNotSupportedForOperation">
            <summary>
              Looks up a localized string similar to Transactions are not supported for the operation &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.TransportManagerOpen">
            <summary>
              Looks up a localized string similar to This property cannot be changed after the transport manager has been opened..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.UnableToResolveHost">
            <summary>
              Looks up a localized string similar to Cannot resolve the host name of URI &quot;{0}&quot; using DNS..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.UnhandledException">
            <summary>
              Looks up a localized string similar to An exception went unhandled..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.UpgradeProtocolNotSupported">
            <summary>
              Looks up a localized string similar to Protocol Type {0} was sent to a service that does not support that type of upgrade..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.UpgradeRequestToNonupgradableService">
            <summary>
              Looks up a localized string similar to .Net Framing upgrade request for {0} was sent to a service that is not setup to receive upgrades..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.UriGeneratorSchemeMustNotBeEmpty">
            <summary>
              Looks up a localized string similar to The scheme parameter must not be empty..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.UriLengthExceedsMaxSupportedSize">
            <summary>
              Looks up a localized string similar to Uri {0} could not be set because its size ({1}) exceeds the max supported size ({2})..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ValueMustBeInRange">
            <summary>
              Looks up a localized string similar to The value of this argument must fall within the range {0} to {1}..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ValueMustBeNonNegative">
            <summary>
              Looks up a localized string similar to The value of this argument must be non-negative..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.ValueMustBePositive">
            <summary>
              Looks up a localized string similar to The value of this argument must be positive..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.WaitForMessageTimedOut">
            <summary>
              Looks up a localized string similar to WaitForMessage timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout..
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Properties.Resources.WriteCharsInvalidContent">
            <summary>
              Looks up a localized string similar to The contents of the buffer passed to PlainXmlWriter.WriteChars are invalid..
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder">
            <summary>Creates and manages the contents of connection strings. You can use this class to construct a connection string 
            for creating client messaging entities. It can also be used to perform basic validation on an existing connection string.</summary> 
            <code>
                // The following sample code takes an existing 
                // connection string, change the transport type to use Amqp,
                // and return the new connection string in string form
                var bulider = new ServiceBusConnectionStringBuilder(connectionString);
                bulider.TransportType = TransportType.Amqp;
                Console.WriteLine(bulider.ToString());
            </code>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder" /> class with a specified existing connection string.</summary> 
            <param name="connectionString">The connection string, which you can obtain from the Azure Management Portal.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Throws if The connection string is missing endpoints.The connection string does not have enough information to form a token provider. For example, this can happen if you supplied a SasIssuer name but not a SasIssuer key.The 
            <see cref="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OperationTimeout" /> value is not in a valid 
            <see cref="T:System.TimeSpan" /> format.The 
            <see cref="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.RuntimePort" /> or 
            <see cref="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.ManagementPort" /> values are not in an integer format.</exception> 
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.Endpoints">
            <summary>Gets a collection of service endpoints. Each endpoint must reference the same Service Bus namespace.</summary>
            <value>A set of endpoints.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.StsEndpoints">
            <summary>Gets a set of STS endpoints.</summary>
            <value>A set of STS endpoints.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OperationTimeout">
            <summary>Gets or sets the 
            <see cref="T:System.TimeSpan" /> that specifies how long the messaging operation has to complete before timing out.</summary> 
            <value>The 
            <see cref="T:System.TimeSpan" /> that specifies how long the messaging operation has to complete before timing out. The default value is one minute.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.RuntimePort">
            <summary>Gets or sets the TCP port number for runtime operation.</summary>
            <value>The runtime port.</value>
            <remarks>This is only used in server scenario. When generating
            connection string for Azure service, this should be left at its
            default value.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.ManagementPort">
            <summary>Gets or sets the TCP port number for management operations.</summary>
            <value>The management port.</value>
            <remarks>This is only used in server scenario. When generating
            connection string for Azure service, this should be left at its
            default value.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.EntityPath">
            <summary>Gets or sets the entity path for the 
            <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.Path" />, 
            <see cref="P:Microsoft.ServiceBus.Messaging.TopicDescription.Path" />, and 
            <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.Path" /> properties.</summary> 
            <value>Returns <see cref="T:System.String" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.Publisher">
            <summary>Get or sets the publisher identifier.</summary>
            <value>Returns <see cref="T:System.String" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedSecretIssuerName">
            <summary>Gets or sets the shared secret issuer name.</summary>
            <value>The shared secret issuer name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedSecretIssuerSecret">
            <summary>Gets or sets the shared secret issuer secret.</summary>
            <value>The shared secret issuer secret.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedAccessKeyName">
            <summary>Gets or sets the name of the shared access key.</summary>
            <value>The name of the shared access key.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedAccessKey">
            <summary>Gets or sets the shared access key for the connection authentication.</summary>
            <value>The shared access key for the connection authentication.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedAccessSignature">
            <summary>Gets or sets the SAS access token.</summary>
            <value>Returns <see cref="T:System.String" />.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.WindowsCredentialDomain">
            <summary>Gets or sets the Windows credential domain.</summary>
            <value>The Windows credential domain.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.WindowsCredentialUsername">
            <summary>Gets or sets the Windows credential user name.</summary>
            <value>The Windows credential user name.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.WindowsCredentialPassword">
            <summary>Gets or sets the Windows credential password.</summary>
            <value>The Windows credential password.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OAuthUsername">
            <summary>Gets or sets the authentication user name for the connection.</summary>
            <value>The authentication user name for the connection.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OAuthDomain">
            <summary>Gets or sets the authentication domain for the connection.</summary>
            <value>The authentication domain for the connection.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OAuthPassword">
            <summary>Gets or sets the authentication password for the connection.</summary>
            <value>The authentication password for the connection.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.TransportType">
            <summary>Gets or sets the transport type to be used for client messaging entities.</summary>
            <value>The transport type associated with the connection.</value>
            <remarks>If not set, default is <see cref="F:Microsoft.ServiceBus.Messaging.TransportType.Amqp"/> for <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient"/>, 
            otherwise default is <see cref="F:Microsoft.ServiceBus.Messaging.TransportType.NetMessaging"/></remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.EnableAmqpLinkRedirect">
            <summary />
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.IsIoTDeviceUri">
            <summary>
            gets or sets the bool which indicate if this connection string
            belongs to a DeveiceHub scenario or not.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.GetAbsoluteManagementEndpoints">
            <summary>Retrieves the absolute management endpoints.</summary>
            <returns>The absolute management endpoints</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.GetAbsoluteRuntimeEndpoints">
            <summary>Retrieves the absolute runtime endpoints.</summary>
            <returns>The absolute runtime endpoints.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
            <code>
                // The following sample code takes an existing 
                // connection string, change the transport type to use Amqp,
                // and return the new connection string in string form
                var bulider = new ServiceBusConnectionStringBuilder(connectionString);
                bulider.TransportType = TransportType.Amqp;
                Console.WriteLine(bulider.ToString());
            </code>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedAccessKey(System.Uri,System.String,System.String)">
            <summary>Create a connection string using the shared access key.</summary>
            <param name="endpoint">The endpoint.</param>
            <param name="keyName">The name of the shared access key.</param>
            <param name="key">The shared access key.</param>
            <returns>The created connection using the shared access key.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedAccessKey(System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String)">
            <summary>Create a connection string using the shared access key.</summary>
            <param name="endpoints">The set of endpoints.</param>
            <param name="runtimePort">The runtime port.</param>
            <param name="managementPort">The management port.</param>
            <param name="keyName">The name of the shared access key.</param>
            <param name="key">The shared access key</param>
            <returns>The created connection using the shared access key.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedAccessSignature(System.Uri,System.String,System.String,System.String)">
            <summary>Creates a connection string using SAS credentials.</summary>
            <param name="endpoint">The endpoint.</param>
            <param name="entityPath">The path to the messaging entity.</param>
            <param name="publisher">The publisher ID.</param>
            <param name="sharedAccessSignature">The SAS key.</param>
            <returns>Returns <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedSecret(System.Uri,System.String,System.String)">
            <summary>Creates a connection string using the shared secret credentials.</summary>
            <param name="endpoint">The endpoint.</param>
            <param name="issuer">The issuer</param>
            <param name="issuerSecret">The issuer secret.</param>
            <returns>The created connection using the shared secret credentials.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedSecret(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String)">
            <summary>Creates a connection string using the shared secret credentials.</summary>
            <param name="endpoints">The endpoints.</param>
            <param name="stsEndpoints">The set of security token service endpoints.</param>
            <param name="runtimePort">The runtime port.</param>
            <param name="managementPort">The management port.</param>
            <param name="issuer">The issuer.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <returns>The created connection using the shared secret credentials.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingWindowsCredential(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String,System.Security.SecureString)">
            <summary>Creates a connection string using Windows credentials.</summary>
            <param name="endpoints">The set of endpoints</param>
            <param name="stsEndpoints">The set of security token service endpoints.</param>
            <param name="runtimePort">The runtime port.</param>
            <param name="managementPort">The management port.</param>
            <param name="domain">The domain where the connection will be established.</param>
            <param name="user">The user.</param>
            <param name="password">The windows password.</param>
            <returns>The created connection string.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingOAuthCredential(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String,System.Security.SecureString)">
            <summary>Creates a connection string using authentication credentials.</summary>
            <param name="endpoints">The set of endpoints.</param>
            <param name="stsEndpoints">The set of security token service endpoints.</param>
            <param name="runtimePort">The runtime port.</param>
            <param name="managementPort">The management port.</param>
            <param name="domain">The domain where the connection will be established.</param>
            <param name="user">The authentication user.</param>
            <param name="password">The authentication password.</param>
            <returns>The created service bus connection string.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.ServiceBusEnvironment">
            <summary>Describes the Service Bus environment. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusEnvironment.DefaultIdentityHostName">
            <summary>Gets the default host name for the Access Control Service.</summary>
            <value>Returns the default identity host name. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusEnvironment.SystemConnectivity">
            <summary>Gets the singleton 
            <see cref="T:Microsoft.ServiceBus.ConnectivitySettings" /> instance that holds the connectivity settings for TCP and HTTP-based endpoints.</summary> 
            <value>Returns a <see cref="T:Microsoft.ServiceBus.ConnectivitySettings" /> that contains the connectivity settings.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusEnvironment.CreateAccessControlUri(System.String)">
            <summary>Creates a URI string to use with access control for the specified service namespace.</summary>
            <param name="serviceNamespace">The service namespace to create the URI for.</param>
            <returns>Returns a <see cref="T:System.Uri" /> that contains the specified URI.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String)">
            <summary>Constructs the Service Bus URI for an application, using the specified scheme, service namespace, and service path.</summary>
            <param name="scheme">The scheme of the URI.</param>
            <param name="serviceNamespace">The service namespace used by the application.</param>
            <param name="servicePath">The service path that follows the host name section of the URI.</param>
            <returns>Returns a <see cref="T:System.Uri" /> that contains the new URI.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String,System.Boolean)">
            <summary>Constructs the Service Bus URI for an application, using 
            the specified scheme, service namespace, service path, and relayed path prefix.</summary> 
            <param name="scheme">The scheme of the URI.</param>
            <param name="serviceNamespace">The service namespace used by the application.</param>
            <param name="servicePath">The service path that follows the host name section of the URI.</param>
            <param name="suppressRelayPathPrefix">True if the relay path prefix is suppressed; otherwise, false.</param>
            <returns>Returns a <see cref="T:System.Uri" /> that contains the new URI.</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.ServiceBusErrorData">
            <summary>Represents the data associated with the service bus error.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ServiceBusErrorData.RootTag">
            <summary>The tag root.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ServiceBusErrorData.HttpStatusCodeTag">
            <summary>The tag for the HTTP status code.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.ServiceBusErrorData.DetailTag">
            <summary>The tag for the error detail.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusErrorData.Code">
            <summary>Gets or sets the error code.</summary>
            <value>The error code.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusErrorData.Detail">
            <summary>Gets or sets the error details.</summary>
            <value>The error details.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusErrorData.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServiceBusErrorData" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusErrorData.GetServiceBusErrorData(System.Net.HttpWebResponse)">
            <summary>Gets the value of the service bus error data.</summary>
            <param name="webResponse">The HTTP web response.</param>
            <returns>The value of the service bus error data.</returns>
        </member>
        <member name="P:Microsoft.ServiceBus.ServiceBusErrorData.ExtensionData">
            <summary>Gets or sets the extension data objects for the error.</summary>
            <value>The extension data objects for the error.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusUriHelper.FilterQueryString(System.String,System.Int32,System.Int32)">
            <summary>
            Remove a queryString parameter and while leaving the rest of the queryString properly formatted including only those
            ampersands which are required after the query string parameter identified by removeStartIndex+removeLength is removed.
            <para/>Example1: queryString = &quot;a=b&amp;c=d&amp;e=f&quot;, removeStartIndex = 4, removeLength = 3 results in &quot;a=b&amp;e=f&quot;
            <para/>Example2: queryString = &quot;a=b&amp;c=d&quot;, removeStartIndex = 0, removeLength = 3 results in &quot;c=d&quot;
            <para/>Example3: queryString = &quot;a=b&amp;c=d&quot;, removeStartIndex = 4, removeLength = 3 results in &quot;a=b&quot;
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusUriHelper.ParseServiceNamespace(System.Uri,System.String,System.Boolean)">
            <summary>
            TODO: See if we can remove this API. This was moved from Microsoft.ServiceBus.Channels.dll so that
            Microsoft.Cloud.ServiceBus.Common.dll can use it.
            
            Validate the service namespace and the hostname in the input Uri and return the service namespace on successful validation
            </summary>
            <param name="uri">Uri to validate</param>
            <param name="expectedHostnameSuffix">expected hostname to compare against (e.g. ".servicebus.windows.net")</param>
            <param name="isReservedSuffixAllowed">true if reserved hostname suffixes are allowed in the Uri, false otherwise</param>
            <returns>the validated service namespace</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.ServiceBusUriHelper.ServiceBusStringExtension">
            <summary>
            TODO: See if we can remove this API. This was moved from Microsoft.ServiceBus.Channels.dll so that
            Microsoft.Cloud.ServiceBus.Common.dll can use it.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.ServiceBusUriHelper.ServiceBusStringExtension.IsValidServiceNamespace(System.String,System.Boolean)">
            <summary>
            Validate if a given servcie namespace candidate is a valid service namespace
            </summary>
            <param name="serviceNamespaceCandidate">servcie namespace candidate to be validated</param>
            <param name="isReservedSuffixAllowed">true if reserved hostname suffixes are allowed in the Uri, false otherwise</param>
            <returns>true if the given candidate is a valid service namespace, false otherwise</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.SR">
             <summary>
                This is a stub for auto-generated resource class, providing GetString function. Usage:
            
                    string s = SR.GetString(SR.MyIdenfitier);
             </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.ExtensionMethods.ToHostPortString(System.Net.EndPoint)">
            <summary>
            A Helper method to convert a System.Net.EndPoint to a string like "host:8080".
            This is necessary because DnsEndPoint.ToString() returns something like "Unspecified/hostname:80"
            (where "Unspecified" is the AddressFamily).
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.TrackingContextIteratorAsyncResult`1">
            <summary>
            This is a base class for IteratorAsyncResults that need a TrackingContext.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.ControllerCommand">
            <summary>Specifies an enumeration of controller commands.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.Update">
            <summary>The Update command.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.SendManifest">
            <summary>The SendManifest command.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.Enable">
            <summary>The Enable command.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.Disable">
            <summary>The Disable command.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventProviderClone">
            <summary>
            Only here because System.Diagnostics.EventProvider needs one more extensibility hook (when it gets a 
            controller callback)
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventProviderClone.#ctor(System.Guid)">
            <summary>
            Constructs a new EventProviderClone.  This causes the class to be registered with the OS an
            if a ETW controller turns on the logging then logging will start. 
            </summary>
            <param name="providerGuid">The GUID that identifies this provider to the system.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventProviderClone.Register(System.Guid)">
            <summary>
            This method registers the controlGuid of this class with ETW.
            We need to be running on Vista or above. If not an 
            PlatformNotSupported exception will be thrown. 
            If for some reason the ETW Register call failed
            a NotSupported exception will be thrown. 
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventProviderClone.Close">
            <summary>
            This method deregisters the controlGuid of this class with ETW.
            
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventProviderClone.Deregister">
            <summary>
            This method un-registers from ETW.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventProviderClone.GetDataFromController(Microsoft.ServiceBus.Tracing.EventProviderClone.ManifestEtw.EVENT_FILTER_DESCRIPTOR*,Microsoft.ServiceBus.Tracing.ControllerCommand@,System.Byte[]@,System.Int32@)">
            <summary>
            Gets any data to be passed from the controller to the provider.  It starts with what is passed
            into the callback, but unfortunately this data is only present for when the provider is active
            at the the time the controller issues the command.  To allow for providers to activate after the
            controller issued a command, we also check the registry and use that to get the data.  The function
            returns an array of bytes representing the data, the index into that byte array where the data
            starts, and the command being issued associated with that data.  
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventProviderClone.IsEnabled">
            <summary>
            IsEnabled, method used to test if provider is enabled
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventProviderClone.IsEnabled(System.Byte,System.Int64)">
            <summary>
            IsEnabled, method used to test if event is enabled
            </summary>
            <param name="level">
            Level  to test
            </param>
            <param name="keywords">
            Keyword  to test
            </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventProviderClone.WriteMessageEvent(System.String,System.Byte,System.Int64)">
            <summary>
            WriteMessageEvent, method to write a string with level and Keyword
            </summary>
            <param name="eventMessage"></param>
            <param name="eventLevel">
            Level  to test  
            </param>
            <param name="eventKeywords">
            Keyword  to test 
            </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventProviderClone.WriteMessageEvent(System.String)">
            <summary>
            WriteMessageEvent, method to write a string with level=0 and Keyword=0
            </summary>
            <param name="eventMessage">
            Message to log  
            </param> 
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventProviderClone.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])">
            <summary>
            WriteEvent, method to write a parameters with event schema properties
            </summary>
            <param name="eventDescriptor">
            Event Descriptor for this event. 
            </param>
            <param name="eventPayload"></param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventProviderClone.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)">
            <summary>
            WriteEvent, method to write a string with event schema properties
            </summary>
            <param name="eventDescriptor">
            Event Descriptor for this event. 
            </param>
            <param name="data">
            string to log. 
            </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventProviderClone.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)">
            <summary>
            WriteEvent, method to be used by generated code on a derived class
            </summary>
            <param name="eventDescriptor">
            Event Descriptor for this event. 
            </param>
            <param name="dataCount">
            number of event descriptors 
            </param>
            <param name="data">
            pointer  do the event data
            </param>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventSource.Name">
            <summary>
            The human-friendly name of the curEventSource.  It defaults to the simple name of the class
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventSource.Guid">
            <summary>
            Every curEventSource is assigned a GUID to uniquely identify it to the system. 
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.IsEnabled">
            <summary>
            Returns true if the curEventSource has been enabled at all.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,Microsoft.ServiceBus.Tracing.EventKeywords,Microsoft.ServiceBus.Tracing.EventChannel)">
            <summary>
            Returns true if events with >= 'level' and have one of 'keywords' set are enabled. 
            
            Note that the result of this function only an approximiation on whether a particular event is
            active or not.  It is only meant to be use as way of avoiding expensive
            computation for logging when logging is not on.   EventSources are free to have additional
            filtering.    
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.String)">
            <summary>
            Returns a string of the XML manifest associated with the curEventSource. The scheme for this XML is
            documented at in EventManifest Schema http://msdn.microsoft.com/en-us/library/aa384043(VS.85).aspx
            </summary>
            <param name="eventSourceType">event source type</param>
            <param name="assemblyPathToIncludeInManifest">The manifest XML fragment contains the string name of the DLL name in
            which it is embeded.  This parameter spcifies what name will be used</param>
            <param name="resourceFileName">the filename to extract the resource</param>
            <returns>The XML data string</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.SendCommand(Microsoft.ServiceBus.Tracing.EventSource,Microsoft.ServiceBus.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Send a command to a particular EventSource identified by 'eventSourceGuid' 
            
            If eventSourceGuid is Guid.Empty, then the command is sent to all eventSources that currently exist in
            the appdomain. 
            
            Calling this routine simply forwards the command to the EventSource.OnEventCommand
            callback.  What the EventSource does with the command and its arguments are from that point
            EventSource-specific.  
            
            The curEventSource is passed the EventListener that issued the command allong with the command and
            arguments.   The contract is that to the extent possible the curEventSource should not affect other
            EventListeners (eg filtering events), however sometimes this simply is not possible (if the
            command was to provoke a GC, or a System flush etc).   
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.GetSources">
            <summary>
            Return a snapshot of all the EventSources in the appdomain
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.OnEventCommand(Microsoft.ServiceBus.Tracing.EventCommandEventArgs)">
            <summary>
            This method is called when the curEventSource is updated by the controller.  
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.Dispose(System.Boolean)">
            <summary>
            Disposes of an EventSource.
            </summary>
            <remarks>
            Called from Dispose() with disposing=true, and from the finalizer (~MeasurementBlock) with disposing=false.
            Guidelines:
            1. We may be called more than once: do nothing after the first call.
            2. Avoid throwing exceptions if disposing is false, i.e. if we're being finalized.
            </remarks>
            <param name="disposing">True if called from Dispose(), false if called from the finalizer.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.IsEnabledByDefault(System.Int32,System.Boolean,System.Diagnostics.Tracing.EventLevel,Microsoft.ServiceBus.Tracing.EventKeywords)">
            <summary>
            Returns true if 'eventNum' is enabled if you only consider the level and matchAnyKeyword filters.
            It is possible that eventSources turn off the event based on additional filtering criteria.  
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventSource.OverideEventProvider">
            <summary>
            This class lets us hook the 'OnEventCommand' from the curEventSource.  
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventSource.EventMetadata">
            <summary>
            Used to hold all the static information about an event.  This includes everything in the event
            descriptor as well as some stuff we added specifically for EventSource. see the
            code:m_eventData for where we use this.  
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.WriteSBTraceEventWithLargeMessage(System.Int32,Microsoft.ServiceBus.Tracing.EventTraceActivity,System.Object[])">
             <summary>
             Use this method when StackTrace or large strings must be logged. Use WriteEvent otherwise.
             The stacktrace or exception or large string must be the last parameter passed to the method.
             
             Some of the exception traces are observed to be large and cannot be opened with Linqpad.
             So we want to limit the number of characters printed out a time. The idea below 
             to have a common logging function that can be used for all events that print stack trace 
             as part of the event log. 
            
             NOTE: This function assumes that stack Trace should be the last argument passed to this function 
             because we split large traces into multiple parts with the assumption that last argument is the 
             stack trace. 
             </summary>
             <param name="eventId">eventId</param>
             <param name="traceActivityId">traceActivityId</param>
             <param name="argsWithLastBeingLongMessage">The last item in list will be concatenated if too long.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.WriteSBEventWithLargeMessage(System.Int32,System.Object[])">
             <summary>
             Use this method when StackTrace or large strings must be logged. Use WriteEvent otherwise.
             The stacktrace or exception or large string must be the last parameter passed to the method.
             
             Some of the exception traces are observed to be large and cannot be opened with Linqpad.
             So we want to limit the number of characters printed out a time. The idea below 
             to have a common logging function that can be used for all events that print stack trace 
             as part of the event log. 
            
             NOTE: This function assumes that stack Trace should be the last argument passed to this function 
             because we split large traces into multiple parts with the assumption that last argument is the 
             stack trace. 
             </summary>
             <param name="eventId">eventId</param>
             <param name="argsWithLastBeingLongMessage">The last item in list will be concatenated if too long.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.EnableEventForDispatcher(Microsoft.ServiceBus.Tracing.EventDispatcher,System.Int32,System.Boolean)">
            <summary>
            If 'value is 'true' then set the curEventSource so that 'dispatcher' will recieve event with the eventId
            of 'eventId.  If value is 'false' disable the event for that dispatcher.   If 'eventId' is out of
            range return false, otherwise true.  
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.AnyEventEnabled">
            <summary>
            Returns true if any event at all is on.  
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSource.GetHelperCallFirstArg(System.Reflection.MethodInfo)">
            <summary>
            This method looks at the IL and tries to pattern match against the standard
            'boilerplate' event body 
            
                { if (Enabled()) WriteEvent(#, ...) } 
            
            If the pattern matches, it returns the literal number passed as the first parameter to
            the WriteEvent.  This is used to find common user errors (mismatching this
            number with the EventAttribute ID).  It is only used for validation.   
            </summary>
            <param name="method">The method to probe.</param>
            <returns>The literal value or -1 if the value could not be determined. </returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventListener">
            <summary>
            An code:EventListener represents the target for all events generated by EventSources (that is
            subclasses of code:EventSource), in the currnet appdomain. When a new EventListener is created
            it is logically attached to all eventSources in that appdomain. When the EventListener is Disposed, then
            it is disconnected from the event eventSources. Note that there is a internal list of STRONG references
            to EventListeners, which means that relying on the lack of references ot EventListeners to clean up
            EventListeners will NOT work. You must call EventListener.Dispose explicitly when a dispatcher is no
            longer needed.
            
            Once created, EventListeners can enable or disable on a per-curEventSource basis using verbosity levels
            (code:EventLevel) and bitfields code:EventKeywords to further restrict the set of events to be sent
            to the dispatcher. The dispatcher can also send arbitrary commands to a particular curEventSource using the
            'SendCommand' method. The meaning of the commands are curEventSource specific.
            
            The Null Guid (that is (new Guid()) has special meaning as a wildcard for 'all current eventSources in
            the appdomain'. Thus it is relatively easy to turn on all events in the appdomain if desired.
            
            It is possible for there to be many EventListener's defined in a single appdomain. Each dispatcher is
            logically independent of the other listeners. Thus when one dispatcher enables or disables events, it
            affects only that dispatcher (other listeners get the events they asked for). It is possible that
            commands sent with 'SendCommand' would do a semantic operation that would affect the other listeners
            (like doing a GC, or flushing data ...), but this is the exception rather than the rule.
            
            Thus the model is that each EventSource keeps a list of EventListeners that it is sending events
            to. Associated with each EventSource-dispatcher pair is a set of filtering criteria that determine for
            that curEventSource what events that dispatcher will recieve.
            
            Listeners receive the events on their 'OnEventWritten' method. Thus subclasses of EventListener must
            override this method to do something useful with the data.
            
            In addition, when new eventSources are created, the 'OnEventSourceCreate' method is called. The
            invariant associated with this callback is that every curEventSource gets exactly one
            'OnEventSourceCreate' call for ever curEventSource that can potentially send it log messages. In
            particular when a EventListener is created, typically a series of OnEventSourceCreate' calls are
            made to notify the new dispatcher of all the eventSources that existed before the EventListener was
            created.
            
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventListener.#ctor">
            <summary>
            Create a new EventListener in which all events start off truned off (use EnableEvents to turn
            them on).  
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventListener.Dispose">
            <summary>
            Dispose should be called when the EventListener no longer desires 'OnEvent*' callbacks. Because
            there is an internal list of strong references to all EventListeners, calling 'Displose' directly
            is the only way to actually make the listen die. Thus it is important that users of EventListener
            call Dispose when they are done with their logging.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventListener.EnableEvents(Microsoft.ServiceBus.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
             <summary>
             Enable all events from the curEventSource identified by 'eventSource' to the current dispatcher that have a
             verbosity level of 'level' or lower.
               
             This call can have the effect of REDUCING the number of events sent to the dispatcher if 'level'
             indicates a less verbose level than was previously enabled.
             
             This call never has an effect on other EventListeners.
            
             Returns 'true' if any curEventSource could be found that matches 'eventSourceGuid'
             </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventListener.EnableEvents(Microsoft.ServiceBus.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,Microsoft.ServiceBus.Tracing.EventKeywords)">
            <summary>
            Enable all events from the curEventSource identified by 'eventSourceGuid' to the current dispatcher that have a
            verbosity level of 'level' or lower and have a event keyword matching any of the bits in
            'machAnyKeyword'.
            
            This call can have the effect of REDUCING the number of events sent to the dispatcher if 'level'
            indicates a less verbose level than was previously enabled or if 'machAnyKeyword' has fewer
            keywords set than where previously set.
            
            If eventSourceGuid is Guid.Empty, then the affects all eventSources in the appdomain
            
            If eventSourceGuid is not Guid.Empty, this call has no effect on any other eventSources in the appdomain.
            
            This call never has an effect on other EventListeners.
            
            Returns 'true' if any curEventSource could be found that matches 'eventSourceGuid'        
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventListener.EnableEvents(Microsoft.ServiceBus.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,Microsoft.ServiceBus.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Enable all events from the curEventSource identified by 'eventSource' to the current dispatcher that have a
            verbosity level of 'level' or lower and have a event keyword matching any of the bits in
            'machAnyKeyword' as well as any (curEventSource specific) effect passing addingional 'key-value' arguments
            'arguments' might have.  
            
            This call can have the effect of REDUCING the number of events sent to the dispatcher if 'level'
            indicates a less verbose level than was previously enabled or if 'machAnyKeyword' has fewer
            keywords set than where previously set.
            
            This call never has an effect on other EventListeners.
            </summary>       
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventListener.DisableEvents(Microsoft.ServiceBus.Tracing.EventSource)">
            <summary>
            Disables all events coming from curEventSource identified by 'eventSource'.  
            
            If eventSourceGuid is Guid.Empty, then the affects all eventSources in the appdomain
            
            This call never has an effect on other EventListeners.      
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventListener.OnEventSourceCreated(Microsoft.ServiceBus.Tracing.EventSource)">
            <summary>
            This method is caleld whenever a new curEventSource is 'attached' to the dispatcher.
            This can happen for all existing EventSources when the EventListener is created
            as well as for any EventSources that come into existance after the EventListener
            has been created.
            
            These 'catch up' events are called during the construction of the EventListener.
            Subclasses need to be prepared for that.
            
            In a multi-threaded environment, it is possible that 'OnEventWritten' callbacks
            for a paritcular curEventSource to occur BEFORE the OnEventSourceCreated is issued.
            </summary>
            <param name="eventSource"></param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventListener.OnEventWritten(Microsoft.ServiceBus.Tracing.EventWrittenEventArgs)">
            <summary>
            This method is called whenever an event has been written by a EventSource for which the EventListener
            has enabled events.  
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventListener.EventSourceIndex(Microsoft.ServiceBus.Tracing.EventSource)">
            <summary>
            EventSourceIndex is small non-negative integer (suitable for indexing in an array)
            identifying EventSource. It is unique per-appdomain. Some EventListeners might find
            it useful to store addditional information about each curEventSource connected to it,
            and EventSourceIndex allows this extra infomation to be efficiently stored in a
            (growable) array (eg List(T)).
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventListener.AddEventSource(Microsoft.ServiceBus.Tracing.EventSource)">
            <summary>
            This routine adds newEventSource to the global list of eventSources, it also assigns the
            ID to the curEventSource (which is simply the oridinal in the global list).
            
            EventSources currently do not pro-actively remove themselves from this list. Instead
            when eventSources's are GCed, the weak handle in this list naturally gets nulled, and
            we will reuse the slot. Today this list never shrinks (but we do reuse entries
            that are in the list). This seems OK since the expectation is that EventSources
            tend to live for the lifetime of the appdomain anyway (they tend to be used in
            global variables).
            </summary>
            <param name="newEventSource"></param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventListener.RemoveReferencesToListenerInEventSources(Microsoft.ServiceBus.Tracing.EventListener)">
            <summary>
            Helper used in code:Dispose that removes any references to 'listenerToRemove' in any of the
            eventSources in the appdomain.  
            
            The EventListenersLock must be held before calling this routine. 
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventListener.Validate">
            <summary>
            Checks internal consistancy of EventSources/Listeners. 
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventListener.EventListenersLock">
            <summary>
            Gets a global lock that is intended to protect the code:s_Listeners linked list and the
            code:s_EventSources WeakReference list.  (We happen to use the s_EventSources list as
            the lock object)
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventCommandEventArgs">
            <summary>
            Passed to the code:EventSource.OnEventCommand callback
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventWrittenEventArgs">
            <summary>
            code:EventWrittenEventArgs is passed when the callback given in code:EventListener.OnEventWritten is
            fired.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventSourceAttribute.LocalizationResources">
            <summary>
            EventSources support localization of events.   The names used for events, opcodes, tasks, keyworks and maps 
            can be localized to several languages if desired.   This works by creating a ResX style string table 
            (by simply adding a 'Resource File' to your project).  This resource file is given a name e.g. 'DefaultNameSpace.ResourceFileName'
            which can be passed to the ResourceManager constructor to read the resoruces.  This name is the value
            of the LocalizationResources property. 
            
            LocalizationResources property is non-null, then EventSource will look up the localized strings for events by 
            using the following resource naming scheme
            
                event_EVENTNAME
                task_TASKNAME
                keyword_KEYWORDNAME
                map_MAPNAME
                
            where the capitpalized name is the name of the event, task, keywork, or map value that should be localized.   
            Note that the localized string for an event cooresponds to the Messsage string, and can have {0} values 
            which represent the payload values.  
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventAttribute">
            <summary>
            None instance methods in a class that subclasses code:EventSource that and return void are
            assumed by default to be methods that generate an event. Enough information can be deduced from the
            name of the method and its signature to generate basic schema information for the event. The
            code:EventAttribute allows you to specify additional event schema information for an event if
            desired.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventAttribute.Message">
            <summary>
            This is also used for TraceSource compatabilty.  If code:EventSource.TraceSourceSupport is
            on events will also be logged a tracesource with the same name as the curEventSource.  If this
            property is set then the payload will go to code:TraceSource.TraceEvent, and this string
            will be used as the message.  If this property is not set not set it goes to
            code:TraceSource.TraceData.   You can use standard .NET substitution operators (eg {1}) in 
            the string and they will be replaced with the 'ToString()' of the cooresponding part of the
            event payload.   
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.NonEventAttribute">
            <summary>
            By default all instance methods in a class that subclasses code:EventSource that and return
            void are assumed to be methods that generate an event. This default can be overriden by specifying
            the code:NonEventAttribute
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.ChannelAttribute.Type">
            <summary>
            Legal values are in ChannelTypes
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.ChannelAttribute.BufferSize">
            <summary>
            The publishing buffersize in KB
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventCommand">
            <summary>Specifies an enumeration of event commands.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.Update">
            <summary>The Update command.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.SendManifest">
            <summary>The SendManifest command.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.Enable">
            <summary>The Enable command.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.Disable">
            <summary>The Disable command.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventDispatcher">
            <summary>
            code:EventDispatchers are a simple 'helper' structure that holds the filtering state
            (m_EventEnabled) for a particular EventSource X EventListener tuple
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.ManifestBuilder">
            <summary>
            ManifestBuilder is designed to isolate the details of the message of the event from the
            rest of EventSource.  This one happens to create XML. 
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.ManifestBuilder.#ctor(System.String,System.Guid,System.String,System.String,System.Resources.ResourceManager)">
            <summary>
            Build a manifest for 'providerName' with the given GUID, which will be packaged into 'dllName'.
            'resources, is a resource manager.  If specified all messsages are localized using that manager.  
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.ManifestBuilder.AddChannel(System.String,System.Int32,Microsoft.ServiceBus.Tracing.ChannelAttribute)">
            <summary>
            Add a channel. 
            ChannelAttribute can be null
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.ManifestEnvelope">
            <summary>
            Used to send the m_rawManifest into the event dispatcher as a series of events.  
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventTraceActivity">
            <summary>
            This class holds the ActivityId that would be set on the thread for ETW during the trace. 
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventTask">
            <summary>
            WindowsEventTask
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventTask.None">
            <summary>
            Undefined task
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventOpcode">
            <summary>
            EventOpcode
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Info">
            <summary>
            An informational event
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Start">
            <summary>
            An activity start event
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Stop">
            <summary>
            An activity end event 
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.DataCollectionStart">
            <summary>
            A trace collection start event
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.DataCollectionStop">
            <summary>
            A trace collection end event
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Extension">
            <summary>
            An extensional event
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Reply">
            <summary>
            A reply event
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Resume">
            <summary>
            An event representing the activity resuming from the suspension
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Suspend">
            <summary>
            An event representing the activity is suspended, pending another activity's completion
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Send">
            <summary>
            An event representing the activity is transferred to another component, and can continue to work
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Receive">
            <summary>
            An event representing receiving an activity transfer from another component 
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventChannel">
            <summary>Enumerates the events associated with Azure Service Bus.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Default">
            <summary>The default event.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Application">
            <summary>The application event.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Security">
            <summary>The security event.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Setup">
            <summary>The setup event.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.System">
            <summary>The system event.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Reserved">
            <summary>The reserved event.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.EventKeywords">
            <summary>
            EventOpcode
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.None">
            <summary>
            Wild card value
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.WdiContext">
            <summary>
            WDI context events
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.WdiDiagnostic">
            <summary>
            WDI diagnostic events
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.Sqm">
            <summary>
            SQM events
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.AuditFailure">
            <summary>
            FAiled security audits
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.AuditSuccess">
            <summary>
            Successful security audits
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.CorrelationHint">
            <summary>
            Transfer events where the related Activity ID is a computed value and not a GUID
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.EventLogClassic">
            <summary>
            Events raised using classic eventlog API
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.All">
            <summary>
            Turns on everything.  
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.MessagingClientEventSource">
            <summary>
            ** Sample event Defintion **
            Note: The EventWrite prefix is only for backwards compatibility and new events should not use this prefix. 
            
            [Event(30000, Level = EventLevel.Verbose , Keywords = Keywords.Client, Channel = Channels.DebugChannel)]
            public void MessageAbandon(EventTraceActivity activity, string TrackingId, string SubsystemId, string TransportType, string LockTokens)
            {
                if (IsEnabled(EventLevel.Verbose, Keywords.Client, Channels.DebugChannel))
                {          
                    WriteEvent(30000, activity, TrackingId, SubsystemId, TransportType, LockTokens);
                }
            }
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.TrackingIdHeader">
            <summary>
            The TrackingIdHeader contains an identifier that uniquely identifies each request 
            during its lifetime in the ServiceBus.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingIdHeader.#ctor">
            <summary>
            Create a new header with a new Guid.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingIdHeader.#ctor(System.String)">
            <summary>
            Create a new header with the supplied Guid.
            </summary>
            <param name="id">a Guid value</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingIdHeader.Read(System.ServiceModel.Channels.MessageHeaders)">
            <summary>
            Read the TrackingIdHeader from MessageHeaders.
            </summary>
            <param name="messageHeaders">the MessageHeaders to read from</param>
            <returns>the TrackingIdHeader</returns>
            <exception cref="T:System.ArgumentException">if the TrackingId header is not present</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingIdHeader.Remove(System.ServiceModel.Channels.MessageHeaders)">
            <summary>
            Remove the TrackingIdHeader from MessageHeaders.
            </summary>
            <param name="messageHeaders">the MessageHeaders to remove from</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingIdHeader.TryRead(System.ServiceModel.Channels.MessageHeaders,Microsoft.ServiceBus.Tracing.TrackingIdHeader@)">
            <summary>
            Try to read the TrackingIdHeader from MessageHeaders.
            </summary>
            <param name="messageHeaders">the MessageHeaders</param>
            <param name="trackingIdHeader">the TrackingIdHeader (out)</param>
            <returns>true, if read successfully; false, otherwise</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingIdHeader.TryAddOrUpdate(System.ServiceModel.Channels.MessageHeaders,System.String)">
            <summary>
            Try to add or update the TrackingIdHeader from MessageHeaders.
            </summary>
            <param name="messageHeaders">the MessageHeaders</param>
            <param name="trackingId">the TrackingIdHeader</param>
            <returns>true, if successful; false, otherwise</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.TrackingContextMessageProperty">
            <summary>
            Stores a TrackingContext in WCF Message Properties
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContextMessageProperty.#ctor(Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary>
            Create a new TrackingIdMessageProperty with the provided Guid.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.TrackingContextMessageProperty.TrackingContext">
            <summary>
            The TrackingContext.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContextMessageProperty.Set(System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary>
            Add or update the TrackingIdMessageProperty.
            </summary>
            <param name="messageProperties">the MessageProperties collection to add</param>
            <param name="trackingContext">the TrackingContext instance to add</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContextMessageProperty.TryGet(System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.ServiceBus.Tracing.TrackingContextMessageProperty@)">
            <summary>
            Try to read the TrackingIdMessageProperty from Message properties.
            </summary>
            <param name="messageProperties">the Message properties</param>
            <param name="property">the TrackingIdMessageProperty (out)</param>
            <returns>true, if read successfully; false, otherwise</returns>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.TrackingContext">
            <summary>
            TrackingContext class is used to communicate tracking information for each request.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.TrackingContext.TrackingIdName">
            <summary>Specifies the attribute name for the tracking identifier in the returned token response.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.TrackingContext.SystemTrackerName">
            <summary>Specifies the name of system tracker.</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Tracing.TrackingContext.HeaderNamespace">
            <summary>Specifies the header namespace.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.TrackingContext.Current">
            <summary>
            Get the ambient TrackingContext if one is set.  In order to set TrackingContext.Current create a
            TrackingContext.Scope() in a using or try/finally block (always Dispose when finished).
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.TrackingContext.TrackingId">
            <summary> Returns the tracking id used in this context </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.TrackingContext.SystemTracker">
            <summary> Returns the system tracker used in this context </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.TrackingContext.ClientRequestId">
            <summary>
            Caller-specified request ID, in the form of a GUID with no decoration such as curly braces provided via CSM.
            If the caller provides this header – the resource provider *must* log this with their traces to facilitate tracing a single request
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.TrackingContext.CorrelationRequestId">
            <summary>
            Specifies the tracing correlation Id for the request; the resource provider *must* log this so that end-to-end requests can be correlated across Azure.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.ToString">
            <summary>
            Gets a string representation of this TrackingContext.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.CreateFromKey(System.String,System.String)">
            <summary>
            Return a tracking context for a key that is common for a subsystem. It generates a new Guid if the key is not present in the collection.
            </summary>
            <param name="key">key to lookup an existing Guid for TrackingId</param>
            <param name="overrideSystemTracker">subsystem-specific string like entityName to be used in the tracking context</param>
            <returns>TrackingContext</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.Create(System.Guid,System.String)">
            <summary>
            Return a tracking context for the given trackingId.
            </summary>
            <param name="guidTrackingId">TrackingId to use for the tracking context</param>
            <param name="subsystemId">subsystem-specific string like entityName to be used in the tracking context</param>
            <returns>TrackingContext</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.TryParse(System.String,Microsoft.ServiceBus.Tracing.TrackingContext@)">
            <summary>
            Return a tracking context for a string of given format: TrackingId:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, SystemTracker: xxxxxxx
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.Create">
            <summary>
            Generate TrackingContext with a new Guid/TrackingId.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.Create(System.Uri)">
            <summary>
            Create a new tracking context with a new Guid/TrackingId and given subsystemId.
            </summary>
            <param name="subsystemId">subsystem-specific Uri like entity address to be used in the tracking context</param>
            <returns>TrackingContext</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.Create(System.String,System.Uri,System.Boolean)">
            <summary>
            Create a new TrackingContext with the given TrackingId and SubsystemId.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.Create(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Return a tracking context for the given trackingId.
            </summary>
            <param name="trackingId">TrackingId to use for the tracking context</param>
            <param name="overrideSystemTracker">subsystem-specific string like entityName to be used in the tracking context</param>        
            <param name="correlationRequestId">Specifies the tracing correlation Id for the request; the resource provider *must* log this so that end-to-end requests can be correlated across Azure. </param>
            <param name="clientRequestId">A caller-defined value that identifies the given request.   If specified, this will be included in response information as a way to map the request. </param>
            <param name="appendRole">Generally false. Set to true only when the message is received at role boundaries</param>
            <returns>TrackingContext</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.Create(System.String,System.String,System.Boolean)">
            <summary>
            Return a tracking context for the given trackingId.
            </summary>
            <param name="trackingId">TrackingId to use for the tracking context</param>
            <param name="subsystemId">subsystem-specific string like entityName to be used in the tracking context</param>
            <param name="appendRole">Set to true when the message is received at role boundaries to append role identifier and number, e.g. '_G30'</param>
            <returns>TrackingContext</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.GetInstance(System.ServiceModel.Channels.Message,System.String,System.Boolean,System.ServiceModel.Web.WebOperationContext)">
            <summary>
            Return a tracking context using TrackingIdHeader/TrackingIdProperty/MessageId in the WCF message
            </summary>
            <param name="message">WCF message</param>
            <param name="subsytemId">subsystem-specific string like entityName to be used in the tracking context</param>
            <param name="appendRole">Generally false. Set to true when the message is received at role boundaries</param>
            <param name="webOperationContext">The web context that will be used to extract tracking information if avaliable.</param>
            <returns>TrackingContext</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.GetInstance(System.ServiceModel.Channels.Message,System.Boolean)">
            <summary>
            Used to generate TrackingContext given a WCF message and when the system tracker is not known.
            </summary>
            <param name="message">WCF Message that contains the tracking information</param>
            <param name="appendRole">Generally false. Set to true only when the message is received at role boundaries</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.SetCurrentRoleIdentifier(System.String,Microsoft.ServiceBus.Tracing.TrackingContext.RoleType)">
            <summary>
            Sets the role identifier for the process' app domain. The role identifier field is singleton.
            It is called externally outside TrackingContext to avoid dependency on Microsoft.WindowsAzure.ServiceRuntime
            </summary>
            <param name="roleInstanceId">the Role id</param>
            <param name="roleType">Type of the current role</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.CreateMessage(System.String)">
            <summary>
            If there is a value in TrackingContext.Current and the message doesn't already contain
            "TrackingId" then format the message with tracking information.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.CreateTrackableErrorMessage(System.String)">
            <summary>
            Ensures the given string contains a TrackingId. If one is already present, nothing occurs.
            Otherwise TrackingId, Timestamp, and if present, SystemTracker are added.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.GetTrackingId(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Extract a TrackingId given a properties and headers collection.  Does not write anything back into those collections.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.TrackingContext.GetSystemTracker(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Extract a SubsystemId given a properties and headers collection.  Does not write anything back into those collections.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.TrackingContext.Scope">
            <summary>
            Assign the given TrackingContext to TrackingContext.Current for the given scope.  
            TrackingContext.Scope.Dispose() restores the previous TrackingContext.Current.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.SystemTrackerHeader">
            <summary>
            The SystemTrackerHeader contains an identifier that uniquely identifies each subsystem entity 
            during its lifetime in the ServiceBus.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.SystemTrackerHeader.#ctor">
            <summary>
            Create a new header with empty tracker.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.SystemTrackerHeader.#ctor(System.String)">
            <summary>
            Create a new header with supplied tracker.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.SystemTrackerHeader.Tracker">
            <summary>
            The Tracker contained within the header.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.SystemTrackerHeader.Read(System.ServiceModel.Channels.MessageHeaders)">
            <summary>
            Read the SystemTrackerHeader from MessageHeaders.
            </summary>
            <param name="messageHeaders">the MessageHeaders to read from</param>
            <returns>the SystemTrackerHeader</returns>
            <exception cref="T:System.ArgumentException">if the SystemTrackerHeader header is not present</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.SystemTrackerHeader.Remove(System.ServiceModel.Channels.MessageHeaders)">
            <summary>
            Remove the SystemTrackerHeader from MessageHeaders.
            </summary>
            <param name="messageHeaders">the MessageHeaders to remove from</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.SystemTrackerHeader.TryRead(System.ServiceModel.Channels.MessageHeaders,Microsoft.ServiceBus.Tracing.SystemTrackerHeader@)">
            <summary>
            Try to read the SystemTrackerHeader from MessageHeaders.
            </summary>
            <param name="messageHeaders">the MessageHeaders</param>
            <param name="systemTrackerHeader">the SystemTrackerHeader (out)</param>
            <returns>true, if read successfully; false, otherwise</returns>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.keyword_Powershell">
            <summary>Gets localized string like: Configuration and Management Powershell cmdlets</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.keyword_Host">
            <summary>Gets localized string like: Host component</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.keyword_Gateway">
            <summary>Gets localized string like: Gateway component</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.keyword_Client">
            <summary>Gets localized string like: Client component</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageSendingTransfer">
            <summary>Gets localized string like: Tranferred activity to the outbound message.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_SetStateTransfer">
            <summary>Gets localized string like: Transferred activity to the SetState operation.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_GetStateTransfer">
            <summary>Gets localized string like: Transferred activity to the GetState operation.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageReceiveTransfer">
            <summary>Gets localized string like: Transferred activity to the Message receive operation.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessagePeekTransfer">
            <summary>Gets localized string like: Transferred activity to the Message peek operation.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_RenewSessionLockTransfer">
            <summary>Gets localized string like: Transferred activity to the RenewLock operation.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_RelayChannelConnectionTransfer">
            <summary>Gets localized string like: Attaching activity Id to Connection Activity Id.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionManagerStarting">
            <summary>Gets localized string like: HybridConnectionManager Service is starting.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionManagerStopping">
            <summary>Gets localized string like: HybridConnectionManager Service is stopping.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionManagerConfigSettingsChanged">
            <summary>Gets localized string like: HybridConnectionManager Service configuration settings changed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientServiceStarting">
            <summary>Gets localized string like: HybridConnectionClient Service is starting.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientServiceStopping">
            <summary>Gets localized string like: HybridConnectionClient Service is stopping.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientConfigSettingsChanged">
            <summary>Gets localized string like: HybridConnectionClient Service configuration settings changed.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.EventSource_UndefinedChannel(System.Object,System.Object)">
            <summary>Gets localized string like: Channel {0} used in event {1} is undefined. </summary>
            <param name="param0">Parameter 0 for string: Channel {0} used in event {1} is undefined. </param>
            <param name="param1">Parameter 1 for string: Channel {0} used in event {1} is undefined. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.ArgumentOutOfRange_MaxArgExceeded(System.Object)">
            <summary>Gets localized string like: Maximum number of arguments '{0}' exceeded. </summary>
            <param name="param0">Parameter 0 for string: Maximum number of arguments '{0}' exceeded. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.ArgumentOutOfRange_MaxStringsExceeded(System.Object)">
            <summary>Gets localized string like: Maximum number of string arguments '{0}' exceeded. </summary>
            <param name="param0">Parameter 0 for string: Maximum number of string arguments '{0}' exceeded. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageAbandon(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is abandoning a message. LockToken: '{3}' .</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is abandoning a message. LockToken: '{3}' .</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is abandoning a message. LockToken: '{3}' .</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is abandoning a message. LockToken: '{3}' .</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is abandoning a message. LockToken: '{3}' .</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageComplete(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is completing a message. LockToken: '{3}'.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is completing a message. LockToken: '{3}'.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is completing a message. LockToken: '{3}'.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is completing a message. LockToken: '{3}'.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is completing a message. LockToken: '{3}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageReceived(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver received a message. MessageId '{3}'.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver received a message. MessageId '{3}'.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver received a message. MessageId '{3}'.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver received a message. MessageId '{3}'.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver received a message. MessageId '{3}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageSending(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. The '{2}' message sender is sending a message. MessageId '{3}'.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message sender is sending a message. MessageId '{3}'.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message sender is sending a message. MessageId '{3}'.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message sender is sending a message. MessageId '{3}'.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message sender is sending a message. MessageId '{3}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ChannelFaulted(System.Object)">
            <summary>Gets localized string like: A ServiceBus Transport channel has faulted. Type: {0}.</summary>
            <param name="param0">Parameter 0 for string: A ServiceBus Transport channel has faulted. Type: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ChannelReceiveContextAbandon(System.Object)">
            <summary>Gets localized string like: The ServiceBus Transport channel is abandoning a ReceiveContext.  LockToken: '{0}'.</summary>
            <param name="param0">Parameter 0 for string: The ServiceBus Transport channel is abandoning a ReceiveContext.  LockToken: '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ChannelReceiveContextComplete(System.Object)">
            <summary>Gets localized string like: The ServiceBus Transport channel is completing a ReceiveContext.  LockToken: '{0}'.</summary>
            <param name="param0">Parameter 0 for string: The ServiceBus Transport channel is completing a ReceiveContext.  LockToken: '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ChannelSendingMessage(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The ServiceBus Transport channel is sending a message to address '{0}'. Action '{1}', MessageID '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The ServiceBus Transport channel is sending a message to address '{0}'. Action '{1}', MessageID '{2}'.</param>
            <param name="param1">Parameter 1 for string: The ServiceBus Transport channel is sending a message to address '{0}'. Action '{1}', MessageID '{2}'.</param>
            <param name="param2">Parameter 2 for string: The ServiceBus Transport channel is sending a message to address '{0}'. Action '{1}', MessageID '{2}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ChannelReceivedMessage(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The ServiceBus Transport channel is receiving a message from address '{0}'. Action '{1}', MessageID '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The ServiceBus Transport channel is receiving a message from address '{0}'. Action '{1}', MessageID '{2}'.</param>
            <param name="param1">Parameter 1 for string: The ServiceBus Transport channel is receiving a message from address '{0}'. Action '{1}', MessageID '{2}'.</param>
            <param name="param2">Parameter 2 for string: The ServiceBus Transport channel is receiving a message from address '{0}'. Action '{1}', MessageID '{2}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageSuspend(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is suspending a message.  LockToken: '{3}'.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is suspending a message.  LockToken: '{3}'.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is suspending a message.  LockToken: '{3}'.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is suspending a message.  LockToken: '{3}'.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is suspending a message.  LockToken: '{3}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageDefer(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is deferring a message.  LockToken: '{3}'.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is deferring a message.  LockToken: '{3}'.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is deferring a message.  LockToken: '{3}'.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is deferring a message.  LockToken: '{3}'.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is deferring a message.  LockToken: '{3}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_LogOperation(System.Object,System.Object)">
            <summary>Gets localized string like: Log: Operation: '{0}'. Details: {1}.</summary>
            <param name="param0">Parameter 0 for string: Log: Operation: '{0}'. Details: {1}.</param>
            <param name="param1">Parameter 1 for string: Log: Operation: '{0}'. Details: {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_LogOperationWarning(System.Object,System.Object)">
            <summary>Gets localized string like: Log: Operation: '{0}'. Details: {1}.</summary>
            <param name="param0">Parameter 0 for string: Log: Operation: '{0}'. Details: {1}.</param>
            <param name="param1">Parameter 1 for string: Log: Operation: '{0}'. Details: {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_RetryOperation(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Retrying operation '{0}'. Attempt: {1}. Reason: {2}.</summary>
            <param name="param0">Parameter 0 for string: Retrying operation '{0}'. Attempt: {1}. Reason: {2}.</param>
            <param name="param1">Parameter 1 for string: Retrying operation '{0}'. Attempt: {1}. Reason: {2}.</param>
            <param name="param2">Parameter 2 for string: Retrying operation '{0}'. Attempt: {1}. Reason: {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ThreadNeutralSemaphoreEnterFailed(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: ThreadNeutralSemaphore for '{0}' failed to be obtained {1} times within {2} ms.</summary>
            <param name="param0">Parameter 0 for string: ThreadNeutralSemaphore for '{0}' failed to be obtained {1} times within {2} ms.</param>
            <param name="param1">Parameter 1 for string: ThreadNeutralSemaphore for '{0}' failed to be obtained {1} times within {2} ms.</param>
            <param name="param2">Parameter 2 for string: ThreadNeutralSemaphore for '{0}' failed to be obtained {1} times within {2} ms.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_RuntimeChannelCreated(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: ServiceBus runtime channel is created. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}</summary>
            <param name="param0">Parameter 0 for string: ServiceBus runtime channel is created. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}</param>
            <param name="param1">Parameter 1 for string: ServiceBus runtime channel is created. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}</param>
            <param name="param2">Parameter 2 for string: ServiceBus runtime channel is created. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}</param>
            <param name="param3">Parameter 3 for string: ServiceBus runtime channel is created. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}</param>
            <param name="param4">Parameter 4 for string: ServiceBus runtime channel is created. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_RuntimeChannelAborting(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: ServiceBus runtime channel is aborting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}</summary>
            <param name="param0">Parameter 0 for string: ServiceBus runtime channel is aborting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}</param>
            <param name="param1">Parameter 1 for string: ServiceBus runtime channel is aborting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}</param>
            <param name="param2">Parameter 2 for string: ServiceBus runtime channel is aborting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}</param>
            <param name="param3">Parameter 3 for string: ServiceBus runtime channel is aborting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}</param>
            <param name="param4">Parameter 4 for string: ServiceBus runtime channel is aborting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_RuntimeChannelFaulting(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: ServiceBus runtime channel is faulting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</summary>
            <param name="param0">Parameter 0 for string: ServiceBus runtime channel is faulting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</param>
            <param name="param1">Parameter 1 for string: ServiceBus runtime channel is faulting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</param>
            <param name="param2">Parameter 2 for string: ServiceBus runtime channel is faulting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</param>
            <param name="param3">Parameter 3 for string: ServiceBus runtime channel is faulting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</param>
            <param name="param4">Parameter 4 for string: ServiceBus runtime channel is faulting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</param>
            <param name="param5">Parameter 5 for string: ServiceBus runtime channel is faulting. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_RuntimeChannelPingFailed(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: ServiceBus runtime channel failed to ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</summary>
            <param name="param0">Parameter 0 for string: ServiceBus runtime channel failed to ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</param>
            <param name="param1">Parameter 1 for string: ServiceBus runtime channel failed to ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</param>
            <param name="param2">Parameter 2 for string: ServiceBus runtime channel failed to ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</param>
            <param name="param3">Parameter 3 for string: ServiceBus runtime channel failed to ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</param>
            <param name="param4">Parameter 4 for string: ServiceBus runtime channel failed to ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</param>
            <param name="param5">Parameter 5 for string: ServiceBus runtime channel failed to ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, Reason: {5}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_RuntimeChannelPingIncorrectState(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: ServiceBus runtime channel detected incorrect state before starting ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}</summary>
            <param name="param0">Parameter 0 for string: ServiceBus runtime channel detected incorrect state before starting ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}</param>
            <param name="param1">Parameter 1 for string: ServiceBus runtime channel detected incorrect state before starting ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}</param>
            <param name="param2">Parameter 2 for string: ServiceBus runtime channel detected incorrect state before starting ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}</param>
            <param name="param3">Parameter 3 for string: ServiceBus runtime channel detected incorrect state before starting ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}</param>
            <param name="param4">Parameter 4 for string: ServiceBus runtime channel detected incorrect state before starting ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}</param>
            <param name="param5">Parameter 5 for string: ServiceBus runtime channel detected incorrect state before starting ping. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_RuntimeChannelStopPingWithIncorrectState(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: ServiceBus runtime channel stopping ping because of non-opened state. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}, PendingRequestCount: {6}</summary>
            <param name="param0">Parameter 0 for string: ServiceBus runtime channel stopping ping because of non-opened state. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}, PendingRequestCount: {6}</param>
            <param name="param1">Parameter 1 for string: ServiceBus runtime channel stopping ping because of non-opened state. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}, PendingRequestCount: {6}</param>
            <param name="param2">Parameter 2 for string: ServiceBus runtime channel stopping ping because of non-opened state. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}, PendingRequestCount: {6}</param>
            <param name="param3">Parameter 3 for string: ServiceBus runtime channel stopping ping because of non-opened state. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}, PendingRequestCount: {6}</param>
            <param name="param4">Parameter 4 for string: ServiceBus runtime channel stopping ping because of non-opened state. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}, PendingRequestCount: {6}</param>
            <param name="param5">Parameter 5 for string: ServiceBus runtime channel stopping ping because of non-opened state. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}, PendingRequestCount: {6}</param>
            <param name="param6">Parameter 6 for string: ServiceBus runtime channel stopping ping because of non-opened state. Type: {0}, LocalAddress: {1}, RemoteAddress: {2}, Via: {3}, Session: {4}, State: {5}, PendingRequestCount: {6}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_RetryPolicyIteration(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: [TrackingId:{0}] {1}: Operation {2} at iteration {3} is retrying after {4} sleep because of {5}:{6}.</summary>
            <param name="param0">Parameter 0 for string: [TrackingId:{0}] {1}: Operation {2} at iteration {3} is retrying after {4} sleep because of {5}:{6}.</param>
            <param name="param1">Parameter 1 for string: [TrackingId:{0}] {1}: Operation {2} at iteration {3} is retrying after {4} sleep because of {5}:{6}.</param>
            <param name="param2">Parameter 2 for string: [TrackingId:{0}] {1}: Operation {2} at iteration {3} is retrying after {4} sleep because of {5}:{6}.</param>
            <param name="param3">Parameter 3 for string: [TrackingId:{0}] {1}: Operation {2} at iteration {3} is retrying after {4} sleep because of {5}:{6}.</param>
            <param name="param4">Parameter 4 for string: [TrackingId:{0}] {1}: Operation {2} at iteration {3} is retrying after {4} sleep because of {5}:{6}.</param>
            <param name="param5">Parameter 5 for string: [TrackingId:{0}] {1}: Operation {2} at iteration {3} is retrying after {4} sleep because of {5}:{6}.</param>
            <param name="param6">Parameter 6 for string: [TrackingId:{0}] {1}: Operation {2} at iteration {3} is retrying after {4} sleep because of {5}:{6}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_EntityAbortFailed(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: [TrackingId:{0}] Entity '{1}' abort failed with {2}:{3}.</summary>
            <param name="param0">Parameter 0 for string: [TrackingId:{0}] Entity '{1}' abort failed with {2}:{3}.</param>
            <param name="param1">Parameter 1 for string: [TrackingId:{0}] Entity '{1}' abort failed with {2}:{3}.</param>
            <param name="param2">Parameter 2 for string: [TrackingId:{0}] Entity '{1}' abort failed with {2}:{3}.</param>
            <param name="param3">Parameter 3 for string: [TrackingId:{0}] Entity '{1}' abort failed with {2}:{3}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_RetryPolicyStreamNotSeekable(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: [TrackingId:{0}] {1}: Operation {2} cannot retry because stream does not support seeking.</summary>
            <param name="param0">Parameter 0 for string: [TrackingId:{0}] {1}: Operation {2} cannot retry because stream does not support seeking.</param>
            <param name="param1">Parameter 1 for string: [TrackingId:{0}] {1}: Operation {2} cannot retry because stream does not support seeking.</param>
            <param name="param2">Parameter 2 for string: [TrackingId:{0}] {1}: Operation {2} cannot retry because stream does not support seeking.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_RetryPolicyStreamNotClonable(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: [TrackingId:{0}] {1}: Operation {2} cannot retry because brokered message's stream cannot be cloned. [{3}]:{4}</summary>
            <param name="param0">Parameter 0 for string: [TrackingId:{0}] {1}: Operation {2} cannot retry because brokered message's stream cannot be cloned. [{3}]:{4}</param>
            <param name="param1">Parameter 1 for string: [TrackingId:{0}] {1}: Operation {2} cannot retry because brokered message's stream cannot be cloned. [{3}]:{4}</param>
            <param name="param2">Parameter 2 for string: [TrackingId:{0}] {1}: Operation {2} cannot retry because brokered message's stream cannot be cloned. [{3}]:{4}</param>
            <param name="param3">Parameter 3 for string: [TrackingId:{0}] {1}: Operation {2} cannot retry because brokered message's stream cannot be cloned. [{3}]:{4}</param>
            <param name="param4">Parameter 4 for string: [TrackingId:{0}] {1}: Operation {2} cannot retry because brokered message's stream cannot be cloned. [{3}]:{4}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AppDomainUnload(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: AppDomain unloading. AppDomain.FriendlyName {0}, ProcessName {1}, ProcessId {2}.</summary>
            <param name="param0">Parameter 0 for string: AppDomain unloading. AppDomain.FriendlyName {0}, ProcessName {1}, ProcessId {2}.</param>
            <param name="param1">Parameter 1 for string: AppDomain unloading. AppDomain.FriendlyName {0}, ProcessName {1}, ProcessId {2}.</param>
            <param name="param2">Parameter 2 for string: AppDomain unloading. AppDomain.FriendlyName {0}, ProcessName {1}, ProcessId {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ShipAssertExceptionMessage(System.Object)">
            <summary>Gets localized string like: An unexpected failure occurred. Applications should not attempt to handle this error. For diagnostic purposes, this English message is associated with the failure: {0}.</summary>
            <param name="param0">Parameter 0 for string: An unexpected failure occurred. Applications should not attempt to handle this error. For diagnostic purposes, this English message is associated with the failure: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ThrowingExceptionVerbose(System.Object)">
            <summary>Gets localized string like: Throwing an exception. Details: {0}.</summary>
            <param name="param0">Parameter 0 for string: Throwing an exception. Details: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ThrowingExceptionInformational(System.Object)">
            <summary>Gets localized string like: Throwing an exception. Details: {0}.</summary>
            <param name="param0">Parameter 0 for string: Throwing an exception. Details: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ThrowingExceptionWarning(System.Object)">
            <summary>Gets localized string like: Throwing an exception. Details: {0}.</summary>
            <param name="param0">Parameter 0 for string: Throwing an exception. Details: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ThrowingExceptionError(System.Object)">
            <summary>Gets localized string like: Throwing an exception. Details: {0}.</summary>
            <param name="param0">Parameter 0 for string: Throwing an exception. Details: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_UnhandledException(System.Object)">
            <summary>Gets localized string like: Unhandled exception. Source {0}</summary>
            <param name="param0">Parameter 0 for string: Unhandled exception. Source {0}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_TraceCodeEventLogCritical(System.Object)">
            <summary>Gets localized string like: Wrote to the EventLog. Data {0}</summary>
            <param name="param0">Parameter 0 for string: Wrote to the EventLog. Data {0}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_TraceCodeEventLogError(System.Object)">
            <summary>Gets localized string like: Wrote to the EventLog. Data {0}</summary>
            <param name="param0">Parameter 0 for string: Wrote to the EventLog. Data {0}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_TraceCodeEventLogInformational(System.Object)">
            <summary>Gets localized string like: Wrote to the EventLog. Data {0}</summary>
            <param name="param0">Parameter 0 for string: Wrote to the EventLog. Data {0}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_TraceCodeEventLogVerbose(System.Object)">
            <summary>Gets localized string like: Wrote to the EventLog. Data {0}</summary>
            <param name="param0">Parameter 0 for string: Wrote to the EventLog. Data {0}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HandledExceptionWarning(System.Object)">
            <summary>Gets localized string like: Handling an exception. Source {0}</summary>
            <param name="param0">Parameter 0 for string: Handling an exception. Source {0}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_SingletonManagerLoadSucceeded(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0} loaded an instance (key = {1}, value = {2}).</summary>
            <param name="param0">Parameter 0 for string: {0} loaded an instance (key = {1}, value = {2}).</param>
            <param name="param1">Parameter 1 for string: {0} loaded an instance (key = {1}, value = {2}).</param>
            <param name="param2">Parameter 2 for string: {0} loaded an instance (key = {1}, value = {2}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_SingletonManagerLoadFailed(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0} failed to load an instance (key = {1}, value = {2}) due to an error {3}.</summary>
            <param name="param0">Parameter 0 for string: {0} failed to load an instance (key = {1}, value = {2}) due to an error {3}.</param>
            <param name="param1">Parameter 1 for string: {0} failed to load an instance (key = {1}, value = {2}) due to an error {3}.</param>
            <param name="param2">Parameter 2 for string: {0} failed to load an instance (key = {1}, value = {2}) due to an error {3}.</param>
            <param name="param3">Parameter 3 for string: {0} failed to load an instance (key = {1}, value = {2}) due to an error {3}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ExceptionAsWarning(System.Object)">
            <summary>Gets localized string like: Exception details: '{0}'</summary>
            <param name="param0">Parameter 0 for string: Exception details: '{0}'</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ExceptionAsInformation(System.Object)">
            <summary>Gets localized string like: Exception details: '{0}'</summary>
            <param name="param0">Parameter 0 for string: Exception details: '{0}'</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HandledExceptionWithEntityName(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: An exception was handled. Affected entity name {0}, Exception message {1}, Stack Trace {2}</summary>
            <param name="param0">Parameter 0 for string: An exception was handled. Affected entity name {0}, Exception message {1}, Stack Trace {2}</param>
            <param name="param1">Parameter 1 for string: An exception was handled. Affected entity name {0}, Exception message {1}, Stack Trace {2}</param>
            <param name="param2">Parameter 2 for string: An exception was handled. Affected entity name {0}, Exception message {1}, Stack Trace {2}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_LogAsWarning(System.Object)">
            <summary>Gets localized string like: Details: {0}.</summary>
            <param name="param0">Parameter 0 for string: Details: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HandledExceptionWithFunctionName(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: An exception was handled at {0}. Exception: {1}. {2}</summary>
            <param name="param0">Parameter 0 for string: An exception was handled at {0}. Exception: {1}. {2}</param>
            <param name="param1">Parameter 1 for string: An exception was handled at {0}. Exception: {1}. {2}</param>
            <param name="param2">Parameter 2 for string: An exception was handled at {0}. Exception: {1}. {2}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HandledExceptionWarning(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: An exception was handled at {0}.{1}. {2} {3} Exception: {4}</summary>
            <param name="param0">Parameter 0 for string: An exception was handled at {0}.{1}. {2} {3} Exception: {4}</param>
            <param name="param1">Parameter 1 for string: An exception was handled at {0}.{1}. {2} {3} Exception: {4}</param>
            <param name="param2">Parameter 2 for string: An exception was handled at {0}.{1}. {2} {3} Exception: {4}</param>
            <param name="param3">Parameter 3 for string: An exception was handled at {0}.{1}. {2} {3} Exception: {4}</param>
            <param name="param4">Parameter 4 for string: An exception was handled at {0}.{1}. {2} {3} Exception: {4}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_NonSerializableException(System.Object)">
            <summary>Gets localized string like: Non-serializable exception was handled. Exception: '{0}'</summary>
            <param name="param0">Parameter 0 for string: Non-serializable exception was handled. Exception: '{0}'</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageRenew(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is renewing a message.  LockToken: '{3}'.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is renewing a message.  LockToken: '{3}'.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is renewing a message.  LockToken: '{3}'.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is renewing a message.  LockToken: '{3}'.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message receiver is renewing a message.  LockToken: '{3}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_BatchManagerExecutingBatchedObject(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. BatchManager is executing a batched object with a new tracking ID ({2}).</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. BatchManager is executing a batched object with a new tracking ID ({2}).</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. BatchManager is executing a batched object with a new tracking ID ({2}).</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. BatchManager is executing a batched object with a new tracking ID ({2}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_BatchManagerException(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. BatchManager encountered an exception. Function: {2}, Exception: {3}.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. BatchManager encountered an exception. Function: {2}, Exception: {3}.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. BatchManager encountered an exception. Function: {2}, Exception: {3}.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. BatchManager encountered an exception. Function: {2}, Exception: {3}.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. BatchManager encountered an exception. Function: {2}, Exception: {3}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_BatchManagerTransactionInDoubt(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. The result of BatchManager transaction is in-doubt. Transaction Id = {2}, Rollback called = {3}.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. The result of BatchManager transaction is in-doubt. Transaction Id = {2}, Rollback called = {3}.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. The result of BatchManager transaction is in-doubt. Transaction Id = {2}, Rollback called = {3}.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. The result of BatchManager transaction is in-doubt. Transaction Id = {2}, Rollback called = {3}.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. The result of BatchManager transaction is in-doubt. Transaction Id = {2}, Rollback called = {3}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_FailFastOccurred(System.Object)">
            <summary>Gets localized string like: Critical error occurred and running process was terminated. Error message is {0}.</summary>
            <param name="param0">Parameter 0 for string: Critical error occurred and running process was terminated. Error message is {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AcceptSessionRequestBegin(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. AcceptSession request started. Entity = {2}, SessionId = {3}.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request started. Entity = {2}, SessionId = {3}.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request started. Entity = {2}, SessionId = {3}.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request started. Entity = {2}, SessionId = {3}.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request started. Entity = {2}, SessionId = {3}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AcceptSessionRequestEnd(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. AcceptSession request ended. Entity = {2}, SessionId = {3}.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request ended. Entity = {2}, SessionId = {3}.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request ended. Entity = {2}, SessionId = {3}.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request ended. Entity = {2}, SessionId = {3}.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request ended. Entity = {2}, SessionId = {3}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AcceptSessionRequestFailed(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. AcceptSession request failed. Entity = {2}, SessionId = {3}, Error = {4}.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request failed. Entity = {2}, SessionId = {3}, Error = {4}.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request failed. Entity = {2}, SessionId = {3}, Error = {4}.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request failed. Entity = {2}, SessionId = {3}, Error = {4}.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request failed. Entity = {2}, SessionId = {3}, Error = {4}.</param>
            <param name="param4">Parameter 4 for string: TrackingId: {0}, SubsystemId: {1}. AcceptSession request failed. Entity = {2}, SessionId = {3}, Error = {4}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpLogOperation(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: {1} {2}.</summary>
            <param name="param0">Parameter 0 for string: {0}: {1} {2}.</param>
            <param name="param1">Parameter 1 for string: {0}: {1} {2}.</param>
            <param name="param2">Parameter 2 for string: {0}: {1} {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpLogOperationVerbose(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: {1} {2}.</summary>
            <param name="param0">Parameter 0 for string: {0}: {1} {2}.</param>
            <param name="param1">Parameter 1 for string: {0}: {1} {2}.</param>
            <param name="param2">Parameter 2 for string: {0}: {1} {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpLogError(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: Operation {1} failed with error {2}.</summary>
            <param name="param0">Parameter 0 for string: {0}: Operation {1} failed with error {2}.</param>
            <param name="param1">Parameter 1 for string: {0}: Operation {1} failed with error {2}.</param>
            <param name="param2">Parameter 2 for string: {0}: Operation {1} failed with error {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpAddSession(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: Add {1} (local-channel={2}, remote-channel={3}).</summary>
            <param name="param0">Parameter 0 for string: {0}: Add {1} (local-channel={2}, remote-channel={3}).</param>
            <param name="param1">Parameter 1 for string: {0}: Add {1} (local-channel={2}, remote-channel={3}).</param>
            <param name="param2">Parameter 2 for string: {0}: Add {1} (local-channel={2}, remote-channel={3}).</param>
            <param name="param3">Parameter 3 for string: {0}: Add {1} (local-channel={2}, remote-channel={3}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpRemoveSession(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: Remove {1} (local-channel={2}, remote-channel={3}).</summary>
            <param name="param0">Parameter 0 for string: {0}: Remove {1} (local-channel={2}, remote-channel={3}).</param>
            <param name="param1">Parameter 1 for string: {0}: Remove {1} (local-channel={2}, remote-channel={3}).</param>
            <param name="param2">Parameter 2 for string: {0}: Remove {1} (local-channel={2}, remote-channel={3}).</param>
            <param name="param3">Parameter 3 for string: {0}: Remove {1} (local-channel={2}, remote-channel={3}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpDispose(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: Dispose delivery (id={1}, settled={2}, state={3}).</summary>
            <param name="param0">Parameter 0 for string: {0}: Dispose delivery (id={1}, settled={2}, state={3}).</param>
            <param name="param1">Parameter 1 for string: {0}: Dispose delivery (id={1}, settled={2}, state={3}).</param>
            <param name="param2">Parameter 2 for string: {0}: Dispose delivery (id={1}, settled={2}, state={3}).</param>
            <param name="param3">Parameter 3 for string: {0}: Dispose delivery (id={1}, settled={2}, state={3}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpDeliveryNotFound(System.Object,System.Object)">
            <summary>Gets localized string like: {0}: The delivery tag {1} was not found in the unsettled map.</summary>
            <param name="param0">Parameter 0 for string: {0}: The delivery tag {1} was not found in the unsettled map.</param>
            <param name="param1">Parameter 1 for string: {0}: The delivery tag {1} was not found in the unsettled map.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpStateTransition(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: Action {1} changed the state from {2} to {3}.</summary>
            <param name="param0">Parameter 0 for string: {0}: Action {1} changed the state from {2} to {3}.</param>
            <param name="param1">Parameter 1 for string: {0}: Action {1} changed the state from {2} to {3}.</param>
            <param name="param2">Parameter 2 for string: {0}: Action {1} changed the state from {2} to {3}.</param>
            <param name="param3">Parameter 3 for string: {0}: Action {1} changed the state from {2} to {3}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpAttachLink(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}:{1}: Attach {2} (local handle={3}, remote handle={4}, name={5}, role={6}) {7}, {8}.</summary>
            <param name="param0">Parameter 0 for string: {0}:{1}: Attach {2} (local handle={3}, remote handle={4}, name={5}, role={6}) {7}, {8}.</param>
            <param name="param1">Parameter 1 for string: {0}:{1}: Attach {2} (local handle={3}, remote handle={4}, name={5}, role={6}) {7}, {8}.</param>
            <param name="param2">Parameter 2 for string: {0}:{1}: Attach {2} (local handle={3}, remote handle={4}, name={5}, role={6}) {7}, {8}.</param>
            <param name="param3">Parameter 3 for string: {0}:{1}: Attach {2} (local handle={3}, remote handle={4}, name={5}, role={6}) {7}, {8}.</param>
            <param name="param4">Parameter 4 for string: {0}:{1}: Attach {2} (local handle={3}, remote handle={4}, name={5}, role={6}) {7}, {8}.</param>
            <param name="param5">Parameter 5 for string: {0}:{1}: Attach {2} (local handle={3}, remote handle={4}, name={5}, role={6}) {7}, {8}.</param>
            <param name="param6">Parameter 6 for string: {0}:{1}: Attach {2} (local handle={3}, remote handle={4}, name={5}, role={6}) {7}, {8}.</param>
            <param name="param7">Parameter 7 for string: {0}:{1}: Attach {2} (local handle={3}, remote handle={4}, name={5}, role={6}) {7}, {8}.</param>
            <param name="param8">Parameter 8 for string: {0}:{1}: Attach {2} (local handle={3}, remote handle={4}, name={5}, role={6}) {7}, {8}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpRemoveLink(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}:{1}: Remove {2} (local handle={3}, remote handle={4}, name={5}).</summary>
            <param name="param0">Parameter 0 for string: {0}:{1}: Remove {2} (local handle={3}, remote handle={4}, name={5}).</param>
            <param name="param1">Parameter 1 for string: {0}:{1}: Remove {2} (local handle={3}, remote handle={4}, name={5}).</param>
            <param name="param2">Parameter 2 for string: {0}:{1}: Remove {2} (local handle={3}, remote handle={4}, name={5}).</param>
            <param name="param3">Parameter 3 for string: {0}:{1}: Remove {2} (local handle={3}, remote handle={4}, name={5}).</param>
            <param name="param4">Parameter 4 for string: {0}:{1}: Remove {2} (local handle={3}, remote handle={4}, name={5}).</param>
            <param name="param5">Parameter 5 for string: {0}:{1}: Remove {2} (local handle={3}, remote handle={4}, name={5}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpIoEvent(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}:{1}:{2}: Handle I/O event {3} (current queue size {4}).</summary>
            <param name="param0">Parameter 0 for string: {0}:{1}:{2}: Handle I/O event {3} (current queue size {4}).</param>
            <param name="param1">Parameter 1 for string: {0}:{1}:{2}: Handle I/O event {3} (current queue size {4}).</param>
            <param name="param2">Parameter 2 for string: {0}:{1}:{2}: Handle I/O event {3} (current queue size {4}).</param>
            <param name="param3">Parameter 3 for string: {0}:{1}:{2}: Handle I/O event {3} (current queue size {4}).</param>
            <param name="param4">Parameter 4 for string: {0}:{1}:{2}: Handle I/O event {3} (current queue size {4}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpReceiveMessage(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: Receive {1} (transfer count={2}).</summary>
            <param name="param0">Parameter 0 for string: {0}: Receive {1} (transfer count={2}).</param>
            <param name="param1">Parameter 1 for string: {0}: Receive {1} (transfer count={2}).</param>
            <param name="param2">Parameter 2 for string: {0}: Receive {1} (transfer count={2}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpCacheMessage(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: Caching {1} to message queue (CurrentQueueSize={2}, IsPrefetchingBySize={3}, TotalCacheSizeInBytes={4}, TotalLinkCredit={5}, CurrentLinkCredit={6}).</summary>
            <param name="param0">Parameter 0 for string: {0}: Caching {1} to message queue (CurrentQueueSize={2}, IsPrefetchingBySize={3}, TotalCacheSizeInBytes={4}, TotalLinkCredit={5}, CurrentLinkCredit={6}).</param>
            <param name="param1">Parameter 1 for string: {0}: Caching {1} to message queue (CurrentQueueSize={2}, IsPrefetchingBySize={3}, TotalCacheSizeInBytes={4}, TotalLinkCredit={5}, CurrentLinkCredit={6}).</param>
            <param name="param2">Parameter 2 for string: {0}: Caching {1} to message queue (CurrentQueueSize={2}, IsPrefetchingBySize={3}, TotalCacheSizeInBytes={4}, TotalLinkCredit={5}, CurrentLinkCredit={6}).</param>
            <param name="param3">Parameter 3 for string: {0}: Caching {1} to message queue (CurrentQueueSize={2}, IsPrefetchingBySize={3}, TotalCacheSizeInBytes={4}, TotalLinkCredit={5}, CurrentLinkCredit={6}).</param>
            <param name="param4">Parameter 4 for string: {0}: Caching {1} to message queue (CurrentQueueSize={2}, IsPrefetchingBySize={3}, TotalCacheSizeInBytes={4}, TotalLinkCredit={5}, CurrentLinkCredit={6}).</param>
            <param name="param5">Parameter 5 for string: {0}: Caching {1} to message queue (CurrentQueueSize={2}, IsPrefetchingBySize={3}, TotalCacheSizeInBytes={4}, TotalLinkCredit={5}, CurrentLinkCredit={6}).</param>
            <param name="param6">Parameter 6 for string: {0}: Caching {1} to message queue (CurrentQueueSize={2}, IsPrefetchingBySize={3}, TotalCacheSizeInBytes={4}, TotalLinkCredit={5}, CurrentLinkCredit={6}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpUpgradeTransport(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: Upgrade transport {1} to {2}.</summary>
            <param name="param0">Parameter 0 for string: {0}: Upgrade transport {1} to {2}.</param>
            <param name="param1">Parameter 1 for string: {0}: Upgrade transport {1} to {2}.</param>
            <param name="param2">Parameter 2 for string: {0}: Upgrade transport {1} to {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpInsecureTransport(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: Close transport {1} (isSecure={2}, isAuthenticated={3}) because it does not meet the security requirements.</summary>
            <param name="param0">Parameter 0 for string: {0}: Close transport {1} (isSecure={2}, isAuthenticated={3}) because it does not meet the security requirements.</param>
            <param name="param1">Parameter 1 for string: {0}: Close transport {1} (isSecure={2}, isAuthenticated={3}) because it does not meet the security requirements.</param>
            <param name="param2">Parameter 2 for string: {0}: Close transport {1} (isSecure={2}, isAuthenticated={3}) because it does not meet the security requirements.</param>
            <param name="param3">Parameter 3 for string: {0}: Close transport {1} (isSecure={2}, isAuthenticated={3}) because it does not meet the security requirements.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpOpenEntityFailed(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: Fail to open object {1} (name='{2}') for entity '{3}'. Error: {4}.</summary>
            <param name="param0">Parameter 0 for string: {0}: Fail to open object {1} (name='{2}') for entity '{3}'. Error: {4}.</param>
            <param name="param1">Parameter 1 for string: {0}: Fail to open object {1} (name='{2}') for entity '{3}'. Error: {4}.</param>
            <param name="param2">Parameter 2 for string: {0}: Fail to open object {1} (name='{2}') for entity '{3}'. Error: {4}.</param>
            <param name="param3">Parameter 3 for string: {0}: Fail to open object {1} (name='{2}') for entity '{3}'. Error: {4}.</param>
            <param name="param4">Parameter 4 for string: {0}: Fail to open object {1} (name='{2}') for entity '{3}'. Error: {4}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpOpenEntitySucceeded(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: Open {1} (name='{2}') for entity '{3}' succeeded.</summary>
            <param name="param0">Parameter 0 for string: {0}: Open {1} (name='{2}') for entity '{3}' succeeded.</param>
            <param name="param1">Parameter 1 for string: {0}: Open {1} (name='{2}') for entity '{3}' succeeded.</param>
            <param name="param2">Parameter 2 for string: {0}: Open {1} (name='{2}') for entity '{3}' succeeded.</param>
            <param name="param3">Parameter 3 for string: {0}: Open {1} (name='{2}') for entity '{3}' succeeded.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_DetectConnectivityModeFailed(System.Object,System.Object)">
            <summary>Gets localized string like: Detecting connectivity mode failed: EndPoint: {0}, TriedMode:{1}</summary>
            <param name="param0">Parameter 0 for string: Detecting connectivity mode failed: EndPoint: {0}, TriedMode:{1}</param>
            <param name="param1">Parameter 1 for string: Detecting connectivity mode failed: EndPoint: {0}, TriedMode:{1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_DetectConnectivityModeSucceeded(System.Object,System.Object)">
            <summary>Gets localized string like: Detecting connectivity mode succeeded: EndPoint: {0}, TriedMode: {1}</summary>
            <param name="param0">Parameter 0 for string: Detecting connectivity mode succeeded: EndPoint: {0}, TriedMode: {1}</param>
            <param name="param1">Parameter 1 for string: Detecting connectivity mode succeeded: EndPoint: {0}, TriedMode: {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpLinkRedirectionBegin(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Link redirection detected for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}'.</summary>
            <param name="param0">Parameter 0 for string: Link redirection detected for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}'.</param>
            <param name="param1">Parameter 1 for string: Link redirection detected for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}'.</param>
            <param name="param2">Parameter 2 for string: Link redirection detected for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}'.</param>
            <param name="param3">Parameter 3 for string: Link redirection detected for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}'.</param>
            <param name="param4">Parameter 4 for string: Link redirection detected for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpLinkRedirectionSucceeded(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}'.</summary>
            <param name="param0">Parameter 0 for string: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}'.</param>
            <param name="param1">Parameter 1 for string: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}'.</param>
            <param name="param2">Parameter 2 for string: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}'.</param>
            <param name="param3">Parameter 3 for string: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}'.</param>
            <param name="param4">Parameter 4 for string: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpLinkRedirectionFailed(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}', error:'{5}'.</summary>
            <param name="param0">Parameter 0 for string: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}', error:'{5}'.</param>
            <param name="param1">Parameter 1 for string: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}', error:'{5}'.</param>
            <param name="param2">Parameter 2 for string: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}', error:'{5}'.</param>
            <param name="param3">Parameter 3 for string: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}', error:'{5}'.</param>
            <param name="param4">Parameter 4 for string: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}', error:'{5}'.</param>
            <param name="param5">Parameter 5 for string: Link redirection completed for link:{0}. redirectEndpoint:'{1}', redirectHostName:'{2}', redirectedNetworkHost:'{3}', port:'{4}', error:'{5}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpLinkRedirectClientSetting(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: EnableLinkRedirect for factoryAddress '{0}' is set to: '{1}', with redirection setting: '{2}'.</summary>
            <param name="param0">Parameter 0 for string: EnableLinkRedirect for factoryAddress '{0}' is set to: '{1}', with redirection setting: '{2}'.</param>
            <param name="param1">Parameter 1 for string: EnableLinkRedirect for factoryAddress '{0}' is set to: '{1}', with redirection setting: '{2}'.</param>
            <param name="param2">Parameter 2 for string: EnableLinkRedirect for factoryAddress '{0}' is set to: '{1}', with redirection setting: '{2}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpReceiverAutoRedirectDisabled(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Auto-redirect disabled for namespace: '{0}', entity: '{1}' due to more than '{2}' errors have been encountered.</summary>
            <param name="param0">Parameter 0 for string: Auto-redirect disabled for namespace: '{0}', entity: '{1}' due to more than '{2}' errors have been encountered.</param>
            <param name="param1">Parameter 1 for string: Auto-redirect disabled for namespace: '{0}', entity: '{1}' due to more than '{2}' errors have been encountered.</param>
            <param name="param2">Parameter 2 for string: Auto-redirect disabled for namespace: '{0}', entity: '{1}' due to more than '{2}' errors have been encountered.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpReceiverContinuousErrorCountChanged(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Continuous error count has changed to: '{2}', for namespace: '{0}', entity: '{1}'.</summary>
            <param name="param0">Parameter 0 for string: Continuous error count has changed to: '{2}', for namespace: '{0}', entity: '{1}'.</param>
            <param name="param1">Parameter 1 for string: Continuous error count has changed to: '{2}', for namespace: '{0}', entity: '{1}'.</param>
            <param name="param2">Parameter 2 for string: Continuous error count has changed to: '{2}', for namespace: '{0}', entity: '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpManageLink(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Link manager is performing '{0}' on link '{1}' (info: {2}).</summary>
            <param name="param0">Parameter 0 for string: Link manager is performing '{0}' on link '{1}' (info: {2}).</param>
            <param name="param1">Parameter 1 for string: Link manager is performing '{0}' on link '{1}' (info: {2}).</param>
            <param name="param2">Parameter 2 for string: Link manager is performing '{0}' on link '{1}' (info: {2}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpListenSocketAcceptError(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The listener {0} encountered an error during accept (retry:{1}). Error: {2}.</summary>
            <param name="param0">Parameter 0 for string: The listener {0} encountered an error during accept (retry:{1}). Error: {2}.</param>
            <param name="param1">Parameter 1 for string: The listener {0} encountered an error during accept (retry:{1}). Error: {2}.</param>
            <param name="param2">Parameter 2 for string: The listener {0} encountered an error during accept (retry:{1}). Error: {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpDynamicBufferSizeChange(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: The {1} buffer size is dynamically changed from {2} to {3}.</summary>
            <param name="param0">Parameter 0 for string: {0}: The {1} buffer size is dynamically changed from {2} to {3}.</param>
            <param name="param1">Parameter 1 for string: {0}: The {1} buffer size is dynamically changed from {2} to {3}.</param>
            <param name="param2">Parameter 2 for string: {0}: The {1} buffer size is dynamically changed from {2} to {3}.</param>
            <param name="param3">Parameter 3 for string: {0}: The {1} buffer size is dynamically changed from {2} to {3}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpMissingHandle(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}:{1} The object of type {2} cannot be found using handle {3}.</summary>
            <param name="param0">Parameter 0 for string: {0}:{1} The object of type {2} cannot be found using handle {3}.</param>
            <param name="param1">Parameter 1 for string: {0}:{1} The object of type {2} cannot be found using handle {3}.</param>
            <param name="param2">Parameter 2 for string: {0}:{1} The object of type {2} cannot be found using handle {3}.</param>
            <param name="param3">Parameter 3 for string: {0}:{1} The object of type {2} cannot be found using handle {3}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpSessionWindowClosed(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}:{1} The session window is 0. Initial value is {2}. Next id is {3}.</summary>
            <param name="param0">Parameter 0 for string: {0}:{1} The session window is 0. Initial value is {2}. Next id is {3}.</param>
            <param name="param1">Parameter 1 for string: {0}:{1} The session window is 0. Initial value is {2}. Next id is {3}.</param>
            <param name="param2">Parameter 2 for string: {0}:{1} The session window is 0. Initial value is {2}. Next id is {3}.</param>
            <param name="param3">Parameter 3 for string: {0}:{1} The session window is 0. Initial value is {2}. Next id is {3}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqplinkDetach(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: The link (name='{1}', handle={2}) is being detached. Action: {3}, Error: {4}</summary>
            <param name="param0">Parameter 0 for string: {0}: The link (name='{1}', handle={2}) is being detached. Action: {3}, Error: {4}</param>
            <param name="param1">Parameter 1 for string: {0}: The link (name='{1}', handle={2}) is being detached. Action: {3}, Error: {4}</param>
            <param name="param2">Parameter 2 for string: {0}: The link (name='{1}', handle={2}) is being detached. Action: {3}, Error: {4}</param>
            <param name="param3">Parameter 3 for string: {0}: The link (name='{1}', handle={2}) is being detached. Action: {3}, Error: {4}</param>
            <param name="param4">Parameter 4 for string: {0}: The link (name='{1}', handle={2}) is being detached. Action: {3}, Error: {4}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpBufferHighTakeCount(System.Object)">
            <summary>Gets localized string like: The buffer manager '{0}' has high take count {0} (buffers taken are not returned).</summary>
            <param name="param0">Parameter 0 for string: The buffer manager '{0}' has high take count {0} (buffers taken are not returned).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.eventAmqpConnectionMetrics(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0}: namespace: {1}, operation: {2}, duration (ticks): {3}, total bytes: {4}, frame count: {5}.</summary>
            <param name="param0">Parameter 0 for string: {0}: namespace: {1}, operation: {2}, duration (ticks): {3}, total bytes: {4}, frame count: {5}.</param>
            <param name="param1">Parameter 1 for string: {0}: namespace: {1}, operation: {2}, duration (ticks): {3}, total bytes: {4}, frame count: {5}.</param>
            <param name="param2">Parameter 2 for string: {0}: namespace: {1}, operation: {2}, duration (ticks): {3}, total bytes: {4}, frame count: {5}.</param>
            <param name="param3">Parameter 3 for string: {0}: namespace: {1}, operation: {2}, duration (ticks): {3}, total bytes: {4}, frame count: {5}.</param>
            <param name="param4">Parameter 4 for string: {0}: namespace: {1}, operation: {2}, duration (ticks): {3}, total bytes: {4}, frame count: {5}.</param>
            <param name="param5">Parameter 5 for string: {0}: namespace: {1}, operation: {2}, duration (ticks): {3}, total bytes: {4}, frame count: {5}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_UnexpectedExceptionTelemetry(System.Object)">
            <summary>Gets localized string like: Encountered unexpected exception type {0} during BeginSend</summary>
            <param name="param0">Parameter 0 for string: Encountered unexpected exception type {0} during BeginSend</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceTransferQueueCreateError(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Failed to create transfer queue '{0}' in namespace '{1}'. Will retry. Exception: {2}</summary>
            <param name="param0">Parameter 0 for string: Failed to create transfer queue '{0}' in namespace '{1}'. Will retry. Exception: {2}</param>
            <param name="param1">Parameter 1 for string: Failed to create transfer queue '{0}' in namespace '{1}'. Will retry. Exception: {2}</param>
            <param name="param2">Parameter 2 for string: Failed to create transfer queue '{0}' in namespace '{1}'. Will retry. Exception: {2}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceTransferQueueCreateFailure(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Failed to create transfer queue '{0}' in namespace '{1}'. Will not retry. Exception: {2}</summary>
            <param name="param0">Parameter 0 for string: Failed to create transfer queue '{0}' in namespace '{1}'. Will not retry. Exception: {2}</param>
            <param name="param1">Parameter 1 for string: Failed to create transfer queue '{0}' in namespace '{1}'. Will not retry. Exception: {2}</param>
            <param name="param2">Parameter 2 for string: Failed to create transfer queue '{0}' in namespace '{1}'. Will not retry. Exception: {2}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceDeadletterException(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Paired namespace dead letter had an issue. Namespace '{0}', entity '{1}'. Exception: '{2}'.</summary>
            <param name="param0">Parameter 0 for string: Paired namespace dead letter had an issue. Namespace '{0}', entity '{1}'. Exception: '{2}'.</param>
            <param name="param1">Parameter 1 for string: Paired namespace dead letter had an issue. Namespace '{0}', entity '{1}'. Exception: '{2}'.</param>
            <param name="param2">Parameter 2 for string: Paired namespace dead letter had an issue. Namespace '{0}', entity '{1}'. Exception: '{2}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceDestinationSendException(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Paired namespace send failed getting messages to the destination. Namespace '{0}', entity '{1}'. Exception: '{2}'.</summary>
            <param name="param0">Parameter 0 for string: Paired namespace send failed getting messages to the destination. Namespace '{0}', entity '{1}'. Exception: '{2}'.</param>
            <param name="param1">Parameter 1 for string: Paired namespace send failed getting messages to the destination. Namespace '{0}', entity '{1}'. Exception: '{2}'.</param>
            <param name="param2">Parameter 2 for string: Paired namespace send failed getting messages to the destination. Namespace '{0}', entity '{1}'. Exception: '{2}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceCouldNotCreateMessageSender(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Error creating message sender. Namespace '{0}', entity '{1}', error '{2}'.</summary>
            <param name="param0">Parameter 0 for string: Error creating message sender. Namespace '{0}', entity '{1}', error '{2}'.</param>
            <param name="param1">Parameter 1 for string: Error creating message sender. Namespace '{0}', entity '{1}', error '{2}'.</param>
            <param name="param2">Parameter 2 for string: Error creating message sender. Namespace '{0}', entity '{1}', error '{2}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceMessageNoPathInBacklog(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Paired namespace: Message received from namespace '{0}', entity '{1}' had no path set. Message ID: '{2}'.</summary>
            <param name="param0">Parameter 0 for string: Paired namespace: Message received from namespace '{0}', entity '{1}' had no path set. Message ID: '{2}'.</param>
            <param name="param1">Parameter 1 for string: Paired namespace: Message received from namespace '{0}', entity '{1}' had no path set. Message ID: '{2}'.</param>
            <param name="param2">Parameter 2 for string: Paired namespace: Message received from namespace '{0}', entity '{1}' had no path set. Message ID: '{2}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceMessagePumpReceiveFailed(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Paired namespace: No messages received from namespace '{0}', entity '{1}'. Exception: '{2}'.</summary>
            <param name="param0">Parameter 0 for string: Paired namespace: No messages received from namespace '{0}', entity '{1}'. Exception: '{2}'.</param>
            <param name="param1">Parameter 1 for string: Paired namespace: No messages received from namespace '{0}', entity '{1}'. Exception: '{2}'.</param>
            <param name="param2">Parameter 2 for string: Paired namespace: No messages received from namespace '{0}', entity '{1}'. Exception: '{2}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceSendToBacklogFailed(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Paired namespace send to backlog queue failed. Namespace '{0}', entity '{1}'. Exception: '{2}'</summary>
            <param name="param0">Parameter 0 for string: Paired namespace send to backlog queue failed. Namespace '{0}', entity '{1}'. Exception: '{2}'</param>
            <param name="param1">Parameter 1 for string: Paired namespace send to backlog queue failed. Namespace '{0}', entity '{1}'. Exception: '{2}'</param>
            <param name="param2">Parameter 2 for string: Paired namespace send to backlog queue failed. Namespace '{0}', entity '{1}'. Exception: '{2}'</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespacePingException(System.Object)">
            <summary>Gets localized string like: Paired namespace ping caught an exception:'{0}'.</summary>
            <param name="param0">Parameter 0 for string: Paired namespace ping caught an exception:'{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceMessagePumpProcessQueueFailed(System.Object)">
            <summary>Gets localized string like: Processing the backlog queue experienced an error. Exception: '{0}'</summary>
            <param name="param0">Parameter 0 for string: Processing the backlog queue experienced an error. Exception: '{0}'</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_GetRuntimeEntityDescriptionCompleted(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription completed. Result: {3}</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription completed. Result: {3}</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription completed. Result: {3}</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription completed. Result: {3}</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription completed. Result: {3}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_GetRuntimeEntityDescriptionFailed(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription failed, but will continue retrying. Exception: {3}</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription failed, but will continue retrying. Exception: {3}</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription failed, but will continue retrying. Exception: {3}</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription failed, but will continue retrying. Exception: {3}</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription failed, but will continue retrying. Exception: {3}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_GetRuntimeEntityDescriptionStarted(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription started.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription started.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription started.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}, Entity: {2}. GetRuntimeEntityDescription started.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_AmqpInputSessionChannelMessageReceived(System.Object)">
            <summary>Gets localized string like: AmqpMessage received with destination {0}.</summary>
            <param name="param0">Parameter 0 for string: AmqpMessage received with destination {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceMessagePumpProcessCloseSenderFailed(System.Object)">
            <summary>Gets localized string like: Failed to close the sender to the primary. Exception: {0}</summary>
            <param name="param0">Parameter 0 for string: Failed to close the sender to the primary. Exception: {0}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceReceiveMessageFromSecondary(System.Object,System.Object)">
            <summary>Gets localized string like: Received BrokeredMessage from secondary. Sequence Number: {0}. Secondary queue: {1}. </summary>
            <param name="param0">Parameter 0 for string: Received BrokeredMessage from secondary. Sequence Number: {0}. Secondary queue: {1}. </param>
            <param name="param1">Parameter 1 for string: Received BrokeredMessage from secondary. Sequence Number: {0}. Secondary queue: {1}. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceSendingMessage(System.Object,System.Object)">
            <summary>Gets localized string like: About to send BrokeredMessage. Original Details: Sequence Number: {0}, Destination Path: {1}</summary>
            <param name="param0">Parameter 0 for string: About to send BrokeredMessage. Original Details: Sequence Number: {0}, Destination Path: {1}</param>
            <param name="param1">Parameter 1 for string: About to send BrokeredMessage. Original Details: Sequence Number: {0}, Destination Path: {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceSendMessageFailure(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Failed to send BrokeredMessage. Original Details: Sequence Number: {0}, Destination Path: {1}. Exception: {2}</summary>
            <param name="param0">Parameter 0 for string: Failed to send BrokeredMessage. Original Details: Sequence Number: {0}, Destination Path: {1}. Exception: {2}</param>
            <param name="param1">Parameter 1 for string: Failed to send BrokeredMessage. Original Details: Sequence Number: {0}, Destination Path: {1}. Exception: {2}</param>
            <param name="param2">Parameter 2 for string: Failed to send BrokeredMessage. Original Details: Sequence Number: {0}, Destination Path: {1}. Exception: {2}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceSendMessageSuccess(System.Object,System.Object)">
            <summary>Gets localized string like: Success. Sent BrokeredMessage. Original Details: Sequence Number: {0}, Destination Path: {1}</summary>
            <param name="param0">Parameter 0 for string: Success. Sent BrokeredMessage. Original Details: Sequence Number: {0}, Destination Path: {1}</param>
            <param name="param1">Parameter 1 for string: Success. Sent BrokeredMessage. Original Details: Sequence Number: {0}, Destination Path: {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PerformanceCounterCreationFailed(System.Object)">
            <summary>Gets localized string like: Exception occurred while creating performance counters. Exception message '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Exception occurred while creating performance counters. Exception message '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PerformanceCounterInstanceCreated(System.Object)">
            <summary>Gets localized string like: Performance counter {0} created.</summary>
            <param name="param0">Parameter 0 for string: Performance counter {0} created.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageReceivePumpUserCallbackException(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. Exception during MessageReceivePump from User Callback: {2}.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. Exception during MessageReceivePump from User Callback: {2}.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. Exception during MessageReceivePump from User Callback: {2}.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. Exception during MessageReceivePump from User Callback: {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageReceivePumpFailedToComplete(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump failed to Complete: {2}.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump failed to Complete: {2}.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump failed to Complete: {2}.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump failed to Complete: {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageReceivePumpFailedToAbandon(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump failed to Abandon: {2}.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump failed to Abandon: {2}.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump failed to Abandon: {2}.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump failed to Abandon: {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageReceivePumpUnexpectedException(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump unexpected exception: {2}.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump unexpected exception: {2}.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump unexpected exception: {2}.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump unexpected exception: {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageReceivePumpReceiveException(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump Receive exception: {2}.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump Receive exception: {2}.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump Receive exception: {2}.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump Receive exception: {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageReceivePumpStopped(System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump stopped.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump stopped.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. MessageReceivePump stopped.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageReceivePumpBackoff(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}, Backoff: {2} ms, Exception: {3}.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}, Backoff: {2} ms, Exception: {3}.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}, Backoff: {2} ms, Exception: {3}.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}, Backoff: {2} ms, Exception: {3}.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}, Backoff: {2} ms, Exception: {3}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceStartSyphon(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Syphon ID {0}. Starting syphon for Primary: {1}, Secondary {2}, Backlog queue count {3}.</summary>
            <param name="param0">Parameter 0 for string: Syphon ID {0}. Starting syphon for Primary: {1}, Secondary {2}, Backlog queue count {3}.</param>
            <param name="param1">Parameter 1 for string: Syphon ID {0}. Starting syphon for Primary: {1}, Secondary {2}, Backlog queue count {3}.</param>
            <param name="param2">Parameter 2 for string: Syphon ID {0}. Starting syphon for Primary: {1}, Secondary {2}, Backlog queue count {3}.</param>
            <param name="param3">Parameter 3 for string: Syphon ID {0}. Starting syphon for Primary: {1}, Secondary {2}, Backlog queue count {3}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_PairedNamespaceStopSyphon(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Syphon ID {0}. Stopping syphon for Primary: {1}, Secondary {2}.</summary>
            <param name="param0">Parameter 0 for string: Syphon ID {0}. Stopping syphon for Primary: {1}, Secondary {2}.</param>
            <param name="param1">Parameter 1 for string: Syphon ID {0}. Stopping syphon for Primary: {1}, Secondary {2}.</param>
            <param name="param2">Parameter 2 for string: Syphon ID {0}. Stopping syphon for Primary: {1}, Secondary {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_MessageCanceling(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId: {0}, SubsystemId: {1}. The '{2}' message sender is canceling a message. SequenceNumber '{3}'.</summary>
            <param name="param0">Parameter 0 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message sender is canceling a message. SequenceNumber '{3}'.</param>
            <param name="param1">Parameter 1 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message sender is canceling a message. SequenceNumber '{3}'.</param>
            <param name="param2">Parameter 2 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message sender is canceling a message. SequenceNumber '{3}'.</param>
            <param name="param3">Parameter 3 for string: TrackingId: {0}, SubsystemId: {1}. The '{2}' message sender is canceling a message. SequenceNumber '{3}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_NullReferenceErrorOccurred(System.Object)">
            <summary>Gets localized string like: Null reference exception occurred. Error = {0}.</summary>
            <param name="param0">Parameter 0 for string: Null reference exception occurred. Error = {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionStarted(System.Object)">
            <summary>Gets localized string like: HybridConnection running at Endpoint {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnection running at Endpoint {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionStopped(System.Object)">
            <summary>Gets localized string like: HybridConnection running at Endpoint {0} stopped.</summary>
            <param name="param0">Parameter 0 for string: HybridConnection running at Endpoint {0} stopped.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionFailedToReadResourceDescriptionMetaData(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: HybridConnection failed to read Persistent Endpoint Resource Description MetaData {0} {1} {2}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnection failed to read Persistent Endpoint Resource Description MetaData {0} {1} {2}.</param>
            <param name="param1">Parameter 1 for string: HybridConnection failed to read Persistent Endpoint Resource Description MetaData {0} {1} {2}.</param>
            <param name="param2">Parameter 2 for string: HybridConnection failed to read Persistent Endpoint Resource Description MetaData {0} {1} {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionFailedToStart(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: HybridConnection failed to start {0} {1} {2}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnection failed to start {0} {1} {2}.</param>
            <param name="param1">Parameter 1 for string: HybridConnection failed to start {0} {1} {2}.</param>
            <param name="param2">Parameter 2 for string: HybridConnection failed to start {0} {1} {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionSecurityException(System.Object,System.Object)">
            <summary>Gets localized string like: HybridConnection not allowed to serve {0} {1}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnection not allowed to serve {0} {1}.</param>
            <param name="param1">Parameter 1 for string: HybridConnection not allowed to serve {0} {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionFailedToStop(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: HybridConnection failed to stop {0} {1} {2}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnection failed to stop {0} {1} {2}.</param>
            <param name="param1">Parameter 1 for string: HybridConnection failed to stop {0} {1} {2}.</param>
            <param name="param2">Parameter 2 for string: HybridConnection failed to stop {0} {1} {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionInvalidConnectionString(System.Object)">
            <summary>Gets localized string like: HybridConnection failed to parse connection string {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnection failed to parse connection string {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionManagerConfigurationFileError(System.Object)">
            <summary>Gets localized string like: HybridConnectionManager Service encountered configuration file error: {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionManager Service encountered configuration file error: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionManagerManagementServerError(System.Object)">
            <summary>Gets localized string like: HybridConnectionManager Management Server error: {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionManager Management Server error: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionManagerManagementServiceStarting(System.Object)">
            <summary>Gets localized string like: HybridConnectionManager Management Server is starting on port {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionManager Management Server is starting on port {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionManagerManagementServiceStopping(System.Object)">
            <summary>Gets localized string like: HybridConnectionManager Management Server is stopping on port {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionManager Management Server is stopping on port {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_UnexpectedScheduledNotificationIdFormat(System.Object)">
            <summary>Gets localized string like: Unexpected scheduledNotificationId format {0}.</summary>
            <param name="param0">Parameter 0 for string: Unexpected scheduledNotificationId format {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_FailedToCancelNotification(System.Object,System.Object)">
            <summary>Gets localized string like: Exception occurred trying to cancel notification. ScheduledNotificationId: {0}, Exception: {1}.</summary>
            <param name="param0">Parameter 0 for string: Exception occurred trying to cancel notification. ScheduledNotificationId: {0}, Exception: {1}.</param>
            <param name="param1">Parameter 1 for string: Exception occurred trying to cancel notification. ScheduledNotificationId: {0}, Exception: {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientFailedToStart(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: HybridConnectionClient failed to start {0} {1} {2}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionClient failed to start {0} {1} {2}.</param>
            <param name="param1">Parameter 1 for string: HybridConnectionClient failed to start {0} {1} {2}.</param>
            <param name="param2">Parameter 2 for string: HybridConnectionClient failed to start {0} {1} {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientFailedToStop(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: HybridConnectionClient failed to stop {0} {1} {2}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionClient failed to stop {0} {1} {2}.</param>
            <param name="param1">Parameter 1 for string: HybridConnectionClient failed to stop {0} {1} {2}.</param>
            <param name="param2">Parameter 2 for string: HybridConnectionClient failed to stop {0} {1} {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientProxyError(System.Object)">
            <summary>Gets localized string like: HybridConnectionClient proxy error: {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionClient proxy error: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientStarted(System.Object)">
            <summary>Gets localized string like: HybridConnectionClient running at Endpoint {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionClient running at Endpoint {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientStopped(System.Object)">
            <summary>Gets localized string like: HybridConnectionClient running at Endpoint {0} stopped.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionClient running at Endpoint {0} stopped.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientTrace(System.Object)">
            <summary>Gets localized string like: HybridConnectionClient Trace: {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionClient Trace: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientConfigurationFileError(System.Object)">
            <summary>Gets localized string like: HybridConnectionClient Service encountered configuration file error: {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionClient Service encountered configuration file error: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionManagerTrace(System.Object)">
            <summary>Gets localized string like: HybridConnectionManager Trace: {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionManager Trace: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientManagementServerError(System.Object)">
            <summary>Gets localized string like: HybridConnectionClient Management Server error: {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionClient Management Server error: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientManagementServiceStarting(System.Object)">
            <summary>Gets localized string like: HybridConnectionClient Management Server is starting on port {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionClient Management Server is starting on port {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_HybridConnectionClientManagementServiceStopping(System.Object)">
            <summary>Gets localized string like: HybridConnectionClient Management Server is stopping on port {0}.</summary>
            <param name="param0">Parameter 0 for string: HybridConnectionClient Management Server is stopping on port {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_SingletonManagerUnloadSucceeded(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0} unloaded an instance (key = {1}, value = {2}).</summary>
            <param name="param0">Parameter 0 for string: {0} unloaded an instance (key = {1}, value = {2}).</param>
            <param name="param1">Parameter 1 for string: {0} unloaded an instance (key = {1}, value = {2}).</param>
            <param name="param2">Parameter 2 for string: {0} unloaded an instance (key = {1}, value = {2}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_BufferQuotaDecreased(System.Object,System.Object)">
            <summary>Gets localized string like: Quota for BufferSize {0} Increased to {1} </summary>
            <param name="param0">Parameter 0 for string: Quota for BufferSize {0} Increased to {1} </param>
            <param name="param1">Parameter 1 for string: Quota for BufferSize {0} Increased to {1} </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_BufferManagerAllocatedNewArray(System.Object)">
            <summary>Gets localized string like: New Bytes Array for BufferSize {0}</summary>
            <param name="param0">Parameter 0 for string: New Bytes Array for BufferSize {0}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_BufferQuotaIncreased(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Quota for BufferSize {0} Increased to {1} Number of Misses {2}</summary>
            <param name="param0">Parameter 0 for string: Quota for BufferSize {0} Increased to {1} Number of Misses {2}</param>
            <param name="param1">Parameter 1 for string: Quota for BufferSize {0} Increased to {1} Number of Misses {2}</param>
            <param name="param2">Parameter 2 for string: Quota for BufferSize {0} Increased to {1} Number of Misses {2}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_ProcessExited(System.Object)">
            <summary>Gets localized string like: Critical error occurred and running process exited. Error message is {0}.</summary>
            <param name="param0">Parameter 0 for string: Critical error occurred and running process exited. Error message is {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_OperationStarted(System.Object)">
            <summary>Gets localized string like: Operation {0} started.</summary>
            <param name="param0">Parameter 0 for string: Operation {0} started.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_OperationComplete(System.Object)">
            <summary>Gets localized string like: Operation {0} was complete.</summary>
            <param name="param0">Parameter 0 for string: Operation {0} was complete.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_CriticalErrorOccurred(System.Object,System.Object)">
            <summary>Gets localized string like: Operation {0} failed with an error {1}.</summary>
            <param name="param0">Parameter 0 for string: Operation {0} failed with an error {1}.</param>
            <param name="param1">Parameter 1 for string: Operation {0} failed with an error {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventDefinitionResources.event_BrokeredMessageDeserializationError(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: BrokeredMessage deserializing from store error. TrackingId: {0}, Entity: {1}, Bytes: {2}, Exception: {3}.</summary>
            <param name="param0">Parameter 0 for string: BrokeredMessage deserializing from store error. TrackingId: {0}, Entity: {1}, Bytes: {2}, Exception: {3}.</param>
            <param name="param1">Parameter 1 for string: BrokeredMessage deserializing from store error. TrackingId: {0}, Entity: {1}, Bytes: {2}, Exception: {3}.</param>
            <param name="param2">Parameter 2 for string: BrokeredMessage deserializing from store error. TrackingId: {0}, Entity: {1}, Bytes: {2}, Exception: {3}.</param>
            <param name="param3">Parameter 3 for string: BrokeredMessage deserializing from store error. TrackingId: {0}, Entity: {1}, Bytes: {2}, Exception: {3}.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_IllegalID">
            <summary>Gets localized string like: Event IDs must be greater than zero.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_IllegalOpcode">
            <summary>Gets localized string like: Opcode values less than 10 are reserved for system use.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_ListenerNotFound">
            <summary>Gets localized string like: Listener not found.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.EventSource_UndefinedChannel(System.Object,System.Object)">
            <summary>Gets localized string like: Channel {0} used in event {1} is undefined. </summary>
            <param name="param0">Parameter 0 for string: Channel {0} used in event {1} is undefined. </param>
            <param name="param1">Parameter 1 for string: Channel {0} used in event {1} is undefined. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.ArgumentOutOfRange_MaxArgExceeded(System.Object)">
            <summary>Gets localized string like: Maximum number of arguments '{0}' exceeded. </summary>
            <param name="param0">Parameter 0 for string: Maximum number of arguments '{0}' exceeded. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.ArgumentOutOfRange_MaxStringsExceeded(System.Object)">
            <summary>Gets localized string like: Maximum number of string arguments '{0}' exceeded. </summary>
            <param name="param0">Parameter 0 for string: Maximum number of string arguments '{0}' exceeded. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.ProviderGuidNotSpecified(System.Object)">
            <summary>Gets localized string like: EventSource derived class {0} should specify Guid attribute for the ETW provider guid.</summary>
            <param name="param0">Parameter 0 for string: EventSource derived class {0} should specify Guid attribute for the ETW provider guid.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_EventNotReturnVoid(System.Object)">
            <summary>Gets localized string like: Event attribute placed on method {0} which does not return 'void'.</summary>
            <param name="param0">Parameter 0 for string: Event attribute placed on method {0} which does not return 'void'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_FailedWithErrorCode(System.Object)">
            <summary>Gets localized string like: Failed with error code 0x{0:x}.</summary>
            <param name="param0">Parameter 0 for string: Failed with error code 0x{0:x}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_IllegalEventArg(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Error: event {0} is given event ID {1} but {2} was passed to the helper.</summary>
            <param name="param0">Parameter 0 for string: Error: event {0} is given event ID {1} but {2} was passed to the helper.</param>
            <param name="param1">Parameter 1 for string: Error: event {0} is given event ID {1} but {2} was passed to the helper.</param>
            <param name="param2">Parameter 2 for string: Error: event {0} is given event ID {1} but {2} was passed to the helper.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_IllegalField(System.Object,System.Object)">
            <summary>Gets localized string like: The type of {0} is not expected in {1}.</summary>
            <param name="param0">Parameter 0 for string: The type of {0} is not expected in {1}.</param>
            <param name="param1">Parameter 1 for string: The type of {0} is not expected in {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_KeywordValue(System.Object,System.Object)">
            <summary>Gets localized string like: Value 0x{0:x} for keyword {1} needs to be a power of 2.</summary>
            <param name="param0">Parameter 0 for string: Value 0x{0:x} for keyword {1} needs to be a power of 2.</param>
            <param name="param1">Parameter 1 for string: Value 0x{0:x} for keyword {1} needs to be a power of 2.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_SourceWithUsedGuid(System.Object)">
            <summary>Gets localized string like: Multiple events sources with the guid {0} have been created in the appdomain.</summary>
            <param name="param0">Parameter 0 for string: Multiple events sources with the guid {0} have been created in the appdomain.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_UndefinedKeyword(System.Object,System.Object)">
            <summary>Gets localized string like: Use of undefined keyword value 0x{0:x} for event {1}.</summary>
            <param name="param0">Parameter 0 for string: Use of undefined keyword value 0x{0:x} for event {1}.</param>
            <param name="param1">Parameter 1 for string: Use of undefined keyword value 0x{0:x} for event {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_UnsupportType(System.Object)">
            <summary>Gets localized string like: Unsupported type: {0}.</summary>
            <param name="param0">Parameter 0 for string: Unsupported type: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_UsedEventID(System.Object,System.Object)">
            <summary>Gets localized string like: Event {0} has ID {1} which is the same as a previously defined event.</summary>
            <param name="param0">Parameter 0 for string: Event {0} has ID {1} which is the same as a previously defined event.</param>
            <param name="param1">Parameter 1 for string: Event {0} has ID {1} which is the same as a previously defined event.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.EventSourceSR.Event_UsedEventName(System.Object)">
            <summary>Gets localized string like: Event name {0} used more than once. If you want to overload a method, the overloaded method should have a [Event(-1)] attribute to indicate the method should not have associated meta-data.</summary>
            <param name="param0">Parameter 0 for string: Event name {0} used more than once. If you want to overload a method, the overloaded method should have a [Event(-1)] attribute to indicate the method should not have associated meta-data.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.StringExtensions.EnsureEndsWith(System.String,System.String,System.StringComparison)">
            <summary>
            Ensures the given string ends with the requested pattern.  If it does no allocations are performed.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceBus.StringExtensions.Truncate(System.String,System.Int32)">
            <summary>
            Ensures that a string is no longer than the specified length.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.ServiceBusEventSource">
            <summary>
            EventSource for the new Dynamic EventSource type of Microsoft-Azure-ServiceBus traces.
            
            The default Level is Informational
            
            When defining Start/Stop tasks, the StopEvent.Id must be exactly StartEvent.Id + 1.
            
            Do not explicity include the Guid here, since EventSource has a mechanism to automatically
            map to an EventSource Guid based on the Name (Microsoft-Azure-ServiceBus).  The Guid will 
            be {853e0474-d044-58cd-5623-4b4ad2abfba9} as long as the name stays Microsoft-Azure-ServiceBus
            </summary>
        </member>
        <member name="T:Microsoft.ServiceBus.TransportClientEndpointBehavior">
            <summary>Describes the WCF endpoint behavior that is used to specify the Service Bus credentials for a particular endpoint.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" /> class.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.#ctor(Microsoft.ServiceBus.TokenProvider)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" /> class.</summary>
            <param name="tokenProvider">The token provider used as a binding parameter.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.TransportClientEndpointBehavior.TokenProvider">
            <summary>Gets or sets the token provider that is used as a binding parameter.</summary>
            <value>The token provider used as a binding parameter.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Adds this TransportClientEndpointBehavior to the bindingParameters collection.
            </summary>
            <param name="endpoint">The endpoint to modify.</param>
            <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            This implementation does nothing.
            </summary>
            <param name="endpoint">The endpoint that is to be customized.</param>
            <param name="clientRuntime">The client runtime to be customized.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
            <summary>
            This implementation does nothing.
            </summary>
            <param name="endpoint">The endpoint that is to be customized.</param>
            <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            This method does nothing.
            </summary>
            <param name="endpoint">The endpoint this behavior applies to.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Web.StreamMessageHelper">
            <summary>Helper class for creating a Message object from streaming content.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,Microsoft.ServiceBus.Web.StreamWriterDelegate)">
            <summary>Creates a message from a stream, using the specified version, action, and delegate.</summary>
            <returns>Returns a stream-created<see cref="T:System.ServiceModel.Channels.Message" />.</returns>
            <param name = "version" > Specifies the addressing and envelope versions to use for the newly created message. If the request is made using REST, the Addressing and Envelope version are None.</param>
            <param name = "action" > A description of how the message should be processed. For messages sent in response to a HTTP request, this value must be “GETRESPONSE”.</param>
            <param name = "writer" > A delegate that allows<see cref="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateMessage" /> to call back and ask for a Stream to populate the body of the message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.IO.Stream)">
            <summary>Creates a message, using the specified version, action, and stream.</summary>
            <returns>Returns a stream-created<see cref="T:System.ServiceModel.Channels.Message" />.</returns>
            <param name = "version" > Specifies the addressing and envelope versions to use for the newly created message. If the request is made using REST, the Addressing and Envelope version are None.</param>
            <param name = "action" > A description of how the message should be processed. For messages sent in response to a HTTP request, this value must be “GETRESPONSE”.</param>
            <param name = "stream" > A stream that contains content used to write the body of the new message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateJsonMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.IO.Stream)">
            <summary>Creates a JSON message with a specified version.</summary>
            <returns>The created JSON message.</returns>
            <param name = "version" > The message version.</param>
            <param name = "action" > A description of how the message should be processed.</param>
            <param name = "jsonStream" > A stream that contains content used to write the body of the new message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.GetStream(System.ServiceModel.Channels.Message)">
            <summary>Retrieves the stream of the specified message.</summary>
            <returns>Returns a<see cref= "T:System.IO.Stream" /> that contains the stream of the message. A Stream is always returned regardless of whether the message body is empty.</returns>
            <param name = "message" > The message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.GetStream(System.Xml.XmlDictionaryReader)">
            <summary>Retrieves the stream of the specified message with the specified reader.</summary>
            <returns>The stream of the specified message.</returns>
            <param name = "reader" > The reader.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.Web.StreamWriterDelegate">
            <summary>This delegate is used by StreamMessageHelper to write the body of streamed messages.</summary>
            <param name="output">The stream to write the message body to.</param>
        </member>
        <member name="T:Microsoft.ServiceBus.NamespaceManager">
            <summary>Represents an anchor class used in managing entities, such as queues, topics, subscriptions, and rules, in your 
            service namespace. You must provide service namespace address and access credentials in order to manage your service namespace.</summary> 
            <example>
            <code>
             NamespaceManagerSettings nsSettings = new NamespaceManagerSettings(); // with credentials and operation timeout
             NamespaceManager manager = new NamespaceManager(new Uri("baseUri"), nsSettings);
            </code>
            </example>
        </member>
        <member name="F:Microsoft.ServiceBus.NamespaceManager.ProtocolVersion">
            <summary>Specifies the string of the format "YYYY-MM" that indicates the client protocol version.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.String)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace address.</summary> 
            <param name="address">The full address of the service namespace.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given addresses.</summary>
            <param name="addresses">The full addresses of the service namespace.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Uri)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace URI base address. </summary> 
            <param name="address">The full URI address of the service namespace.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace URI base addresses.</summary> 
            <param name="addresses">The full URI addresses of the service namespace.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.String,Microsoft.ServiceBus.TokenProvider)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace base address and token provider.</summary> 
            <param name="address">The full address of the service namespace.</param>
            <param name="tokenProvider">The security token provider.</param>
            <exception cref="T:System.ArgumentException">
              <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="address" /> or <paramref name="tokenProvider" /> is null.</exception>
              <remarks>Even though it is not allowed to include paths in the namespace address, you can specify a credential that authorizes you to perform actions only on
                      some sublevels off of the base address.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given addresses and token provider.</summary> 
            <param name="addresses">The full addresses of the service namespace.</param>
            <param name="tokenProvider">The security token provider.</param>
            <remarks>Even though it is not allowed to include paths in the namespace addresses, you can specify a credential that authorizes you to perform actions only on
                      some sublevels off of the base addresses.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Uri,Microsoft.ServiceBus.TokenProvider)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace URI base address and 
            <see cref="T:Microsoft.ServiceBus.TokenProvider" /> object.</summary> 
            <param name="address">The full URI address of the service namespace.</param>
            <param name="tokenProvider">The security token provider object.</param>
            <exception cref="T:System.ArgumentException">
              <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="address" /> or <paramref name="tokenProvider" /> is null.</exception>
              <remarks>Even though it is not allowed to include paths in the namespace address, you can specify a credential that authorizes you to perform actions only on
                      some sublevels off of the base address, i.e. it is not a must that the credentials you specify be to the base adress itself.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace URI base addresses and token provider.</summary> 
            <param name="addresses">The full URI addresses of the service namespace.</param>
            <param name="tokenProvider">The security token provider.</param>
            <remarks>Even though it is not allowed to include paths in the namespace addresses, you can specify a credential that authorizes you to perform actions only on
                      some sublevels off of the base addresses, i.e. it is not a must that the credentials you specify be to the base adresses itself.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.String,Microsoft.ServiceBus.NamespaceManagerSettings)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace base address and 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object.</summary> 
            <param name="address">The full address of the service namespace.</param>
            <param name="settings">A 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object, which contains the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider" /> and 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> properties.</param> 
            <exception cref="T:System.ArgumentException">
              <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="address" /> or <paramref name="settings" /> is null.</exception>
              <remarks>Even though it is not allowed to include paths in the namespace address, you can specify a credential that authorizes you to perform actions only on
                      some sublevels off of the base address, i.e. it is not a must that the credentials you specify be to the base adress itself.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.NamespaceManagerSettings)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given addresses and settings.</summary> 
            <param name="addresses">The full addresses of the service namespace.</param>
            <param name="settings">A 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object, which contains the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider" /> and 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> properties.</param> 
            <remarks>Even though it is not allowed to include paths in the namespace address, you can specify a credential that authorizes you to perform actions only on
                      some sublevels off of the base addresses, i.e. it is not a must that the credentials you specify be to the base adresses itself.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Uri,Microsoft.ServiceBus.NamespaceManagerSettings)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace URI base address and 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object.</summary> 
            <param name="address">The full URI address of the service namespace.</param>
            <param name="settings">A 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object, which contains the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider" /> and 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> properties.</param> 
            <exception cref="T:System.ArgumentException">
              <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="address" /> or <paramref name="settings" /> is null.</exception>
              <remarks>Even though it is not allowed to include paths in the namespace address, you can specify a credential that authorizes you to perform actions only on
                      some sublevels off of the base address, i.e. it is not a must that the credentials you specify be to the base adress itself.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.NamespaceManagerSettings)">
            <summary>Initializes a new instance of the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace URI base addresses and settings.</summary> 
            <param name="addresses">The full URI addresses of the service namespace.</param>
            <param name="settings">A 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object, which contains the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider" /> and 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> properties.</param> 
            <remarks>Even though it is not allowed to include paths in the namespace addresses, you can specify a credential that authorizes you to perform actions only on
                      some sublevels off of the base addresses, i.e. it is not a must that the credentials you specify be to the base adresses itself.</remarks>
        </member>
        <member name="P:Microsoft.ServiceBus.NamespaceManager.Address">
            <summary>Gets the service namespace base address.</summary>
            <value>A <see cref="T:System.Uri" /> that represents the service namespace base address.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.NamespaceManager.Settings">
            <summary>Gets the service namespace client settings.</summary>
            <value>A <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object that represents the service namespace client settings.</value>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.Create">
            <summary>Creates a new instance of <see cref="T:Microsoft.ServiceBus.NamespaceManager" />.</summary>
            <returns>A new instance of <see cref="T:Microsoft.ServiceBus.NamespaceManager" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateFromConnectionString(System.String)">
            <summary>Creates a new instance of <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> using a specified connection string.</summary>
            <param name="connectionString">The connection sting used.</param>
            <returns>A new instance of <see cref="T:Microsoft.ServiceBus.NamespaceManager" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetVersionInfo">
            <summary>Retrieves a string of the format "YYYY-MM" that indicates the 
            maximum supported protocol version that the server or service can handle.</summary> 
            <returns>A string that indicates the maximum supported protocol version that the server or service can handle.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetVersionInfoAsync">
            <summary>Asynchronously retrieves a string of the format "YYYY-MM" that indicates 
            the maximum supported protocol version that the server or service can handle.</summary> 
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(System.String)">
            <summary>Creates a new queue in the service namespace with the given path.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> of the newly created queue.</returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="path" /> is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="path" /> is greater than 290 characters.</exception>
            <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">A queue or a topic with the 
            same name and path exists under the same service namespace.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">The 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider" /> credentials to perform this operation.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has 
            been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">The server is overloaded with logical operations. You can consider any of the following 
            actions:Wait and retry calling this function.Remove entities before retry (for example, receive messages before sending any more).</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueueAsync(System.String)">
            <summary>Asynchronously creates a new queue in the service namespace with the given path.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> of the newly created queue.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueueAsync(Microsoft.ServiceBus.Messaging.QueueDescription)">
            <summary>Asynchronously creates a new queue in the service namespace with the specified queue description.</summary>
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> object describing the attributes with which the new queue will be created.</param> 
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> of the newly created queue.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(Microsoft.ServiceBus.Messaging.QueueDescription)">
            <summary>Creates a new queue in the service namespace with the specified queue description.</summary>
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> object describing the attributes with which the new queue will be created.</param> 
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> of the newly created queue.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateRelay(System.String,Microsoft.ServiceBus.RelayType)">
            <summary>Creates a new relay in the service namespace with the given path and type.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <param name="type">The relay type.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> object for the newly created relay.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateRelay(Microsoft.ServiceBus.Messaging.RelayDescription)">
            <summary>Creates a new relay in the service namespace with the specified relay description.</summary>
            <param name="description">The description object describing the attributes with which the new relay will be created.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> object for the newly created relay.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateRelayAsync(System.String,Microsoft.ServiceBus.RelayType)">
            <summary>Asynchronously creates a new relay in the service namespace with the given path and type.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <param name="type">The relay type.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> object for the newly created relay.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateRelayAsync(Microsoft.ServiceBus.Messaging.RelayDescription)">
            <summary>Asynchronously creates a new relay in the service namespace with the specified relay description.</summary>
            <param name="description">The description object describing the attributes with which the new relay will be created.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> object for the newly created relay.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteRelay(System.String)">
            <summary>Deletes the relay described by the path relative to the service namespace base address.</summary>
            <param name="path">The path of the relay relative to the service namespace base address.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteRelayAsync(System.String)">
            <summary>Asynchronously deletes the relay described by the path relative to the service namespace base address.</summary>
            <param name="path">The path of the relay relative to the service namespace base address.</param>
            <returns>The asynchronous delete relay operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRelay(System.String)">
            <summary>Retrieves the details of a given relay endpoint.</summary>
            <param name="path">The relay path.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRelayAsync(System.String)">
            <summary>Asynchronously retrieves the details of a given relay endpoint.</summary>
            <param name="path">The relay path.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRelays">
            <summary>Retrieves a collection of all relays in the service namespace.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRelaysAsync">
            <summary>Asynchronously retrieves a collection of all relays in the service namespace.</summary>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.RelayExists(System.String)">
            <summary>Determines whether a relay exists in the service namespace.</summary>
            <param name="path">The path of the relay relative to the service namespace base address.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.RelayExistsAsync(System.String)">
            <summary>Asynchronously determines whether a relay exists in the service namespace.</summary>
            <param name="path">The path of the relay relative to the service namespace base address.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateRelay(Microsoft.ServiceBus.Messaging.RelayDescription)">
            <summary>Upddates a relay endpoint.</summary>
            <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> object describing the updated relay.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateRelayAsync(Microsoft.ServiceBus.Messaging.RelayDescription)">
            <summary>Asynchronously upddates a relay endpoint.</summary>
            <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> object describing the updated relay.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHub(System.String)">
            <summary>Creates a new Event Hub using default values, for the given input path.</summary>
            <param name="path">The path to the Event Hub.</param>
            <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHub(Microsoft.ServiceBus.Messaging.EventHubDescription)">
            <summary>Creates a new Event Hub using the specified <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</summary>
            <param name="description">The <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</param>
            <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHubAsync(System.String)">
            <summary>Asynchronously creates an event hub.</summary>
            <param name="path">The path to the Event Hub.</param>
            <returns>The task that completes the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHubAsync(Microsoft.ServiceBus.Messaging.EventHubDescription)">
            <summary>Asynchronously creates an event hub.</summary>
            <param name="description">An 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> object that describes the Event Hub to create.</param> 
            <returns>The task that completes the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHubIfNotExists(System.String)">
            <summary>Creates an Event Hub if it does not exist.</summary>
            <param name="path">The path to the Event Hub.</param>
            <returns>Returns an <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHubIfNotExists(Microsoft.ServiceBus.Messaging.EventHubDescription)">
            <summary>Creates an Event Hub if it does not exist.</summary>
            <param name="description">An 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> object that describes the Event Hub to create.</param> 
            <returns>Returns an<see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> object.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHubIfNotExistsAsync(System.String)">
            <summary>Asynchronously creates an Event Hub if it does not exist.</summary>
            <param name="path">The path of the event hub.</param>
            <returns>The task that completes the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHubIfNotExistsAsync(Microsoft.ServiceBus.Messaging.EventHubDescription)">
            <summary>Asynchronously creates an Event Hub if it does not exist.</summary>
            <param name="description">The event hub description.</param>
            <returns>The task that completes the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateEventHub(Microsoft.ServiceBus.Messaging.EventHubDescription)">
            <summary>Updates an Event Hub.</summary>
            <param name="description">An <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> object containing the updated information.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateEventHubAsync(Microsoft.ServiceBus.Messaging.EventHubDescription)">
            <summary>Asynchronously updates the event hub.</summary>
            <param name="description">The event hub description.</param>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteEventHub(System.String)">
            <summary>Deletes an Event Hub.</summary>
            <param name="path">The path to the Event Hub.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteEventHubAsync(System.String)">
            <summary>Asynchronously deletes an Event Hub.</summary>
            <param name="path">The path to the Event Hub.</param>
            <returns>The task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHub(System.String)">
            <summary>Gets information about an Event Hub.</summary>
            <param name="path">The path to the Event Hub.</param>
            <returns>Returns an <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> object that contains the Event Hub description.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubAsync(System.String)">
            <summary>Asynchronously gets information about an Event Hub.</summary>
            <param name="path">The path to the Event Hub.</param>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.EventHubExists(System.String)">
            <summary>Indicates whether or not an Event Hub exists.</summary>
            <param name="path">The path to the Event Hub.</param>
            <returns>Returns true if the Event Hub exists; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.EventHubExistsAsync(System.String)">
            <summary>Asynchronously determines whether the event hub exists from the service namespace. </summary>
            <param name="path">The path of the event hub.</param>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubs">
            <summary>Gets a collection representing a set of Event Hubs.</summary>
            <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> object representing the set of Event Hubs.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubsAsync">
            <summary>Asynchronously gets a list of Event Hubs.</summary>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRevokedPublishers(System.String)">
            <summary>Returns all revoked publishers in an Event Hub.</summary>
            <param name="entityPath">Path to the Event Hub. See <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.Path" />.</param>
            <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection containing the revoked publishers.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRevokedPublishersAsync(System.String)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetRevokedPublishers(System.String)" />.</summary>
            <param name="entityPath">Path to the Event Hub. See <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.Path" />.</param>
            <returns>Returns a <see cref="T:System.Threading.Tasks.Task`1" /> containing the revoked publishers.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.RevokePublisher(System.String,System.String)">
            <summary>Adds the publisher to the Event Hubs revocation list.</summary>
            <param name="entityPath">Event Hub path under which the publisher must be revoked. See 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</param> 
            <param name="publisher">The publisher to revoke.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.RevokedPublisherDescription" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.RevokePublisherAsync(System.String,System.String)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.RevokePublisher(System.String,System.String)" />.</summary>
            <param name="entityPath">Event Hub path under which the publisher must be revoked. See 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</param> 
            <param name="publisher">The publisher to revoke.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.RestorePublisher(System.String,System.String)">
            <summary>Removes the publisher from the Event Hubs revocation list.</summary>
            <param name="entityPath">Event Hub path under which the publisher was revoked and must be restored. See 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</param> 
            <param name="publisher">The revoked publisher.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.RestorePublisherAsync(System.String,System.String)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.RestorePublisher(System.String,System.String)" />.</summary>
            <param name="entityPath">Event Hub path under which the publisher was revoked and must be restored. See 
            <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</param> 
            <param name="publisher">The revoked publisher.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateQueue(Microsoft.ServiceBus.Messaging.QueueDescription)">
            <summary>Enables you to update the queue.</summary>
            <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> object describing the queue to be updated.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> of the updated queue.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateQueueAsync(Microsoft.ServiceBus.Messaging.QueueDescription)">
            <summary>Asynchronously enables you to update the queue.</summary>
            <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> object describing the queue to be updated.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.RenameQueue(System.String,System.String)">
            <summary>Renames a queue inside a namespace.</summary>
            <param name="path">The path to an existing queue.</param>
            <param name="newPath">The new path to the renamed queue.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="path" /> is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the length of <paramref name="path" /> is more than 290 characters.</exception>
            <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You can increase the value of the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the source queue 
            with the specified path does not exist.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when the target queue with 
            the same path exists within the same namespace.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">Thrown when the client does not have credentials to perform the operation.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown when an internal error or unexpected exception occurs.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.RenameQueueAsync(System.String,System.String)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.RenameQueue(System.String,System.String)" />.</summary>
            <param name="path">The path to an existing queue.</param>
            <param name="newPath">The new path to the renamed queue.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="path" /> is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the length of <paramref name="path" /> is more than 290 characters.</exception>
            <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You can increase the value of the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the source queue 
            with the specified path does not exist.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when the target queue with 
            the same path exists within the same namespace.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">Thrown when the client does not have credentials to perform the operation.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown when an internal error or unexpected exception occurs.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteQueue(System.String)">
            <summary>Deletes the queue described by the path relative to the service namespace base address.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <exception cref="T:System.ArgumentException">
              <paramref name="path" /> is empty or null, or <paramref name="path" /> starts or ends with "/".</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="path" /> is greater than 
            <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />.</exception> 
            <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Queue does not exist under this path.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider" /> credentials to perform this operation.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteQueueAsync(System.String)">
            <summary>Asynchronously deletes the queue described by the path relative to the service namespace base address.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <returns>The asynchronous delete queue operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueue(System.String)">
            <summary>Retrieves a queue from the service namespace.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> handle to the queue, or a 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> exception if the queue does not exist in the service namespace.</returns> 
            <exception cref="T:System.ArgumentException">
              <paramref name="path" /> is empty or null, or <paramref name="path" /> starts or ends with "/".</exception>
            <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">The 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider" /> credentials to perform this operation.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">The queue does not exist in the service namespace.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueueAsync(System.String)">
            <summary>Asynchronously retrieves a queue from the service namespace.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.QueueExists(System.String)">
            <summary>Determines whether a queue exists in the service namespace.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <returns>true if a queue exists in the service namespace; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.QueueExistsAsync(System.String)">
            <summary>Asynchronously determines whether a queue exists in the service namespace.</summary>
            <param name="path">The path of the queue relative to the service namespace base address.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueues">
            <summary>Retrieves an enumerable collection of all queues in the service namespace.</summary>
            <returns>An 
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all queues in the service namespace or returns an empty collection if no queue exists. </returns> 
            <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">The 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider" /> credentials to perform this operation.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueues(System.String)">
            <summary>Retrieves an enumerable collection of all queues in the service namespace with the specified filter. You can filter by 
            a combination of entity name (including starts with), entity length (Gt or Lt), created, updated, and accessed time (Gt or Lt).</summary> 
            <param name="filter">A string used to filter the queues to be retrieved.</param>
            <returns>An 
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all queues in the service namespace or returns an empty collection if no queue exists.</returns>
            <remarks>
            Filter expression formats:  {Propery} {Logical Operator} {Value} AND {Filter expression}
                                        {Function} {Logical Operator} {Value} AND {Filter expression}
            -----------------------------------------------------------------------------------------
            Available properties:       Path | ModifiedAt | AccessedAt | CreatedAt | MessageCount
            Logical operators:          Eq | Ne | Gt | Ge | Lt | Le  
            Value:                      A value of the corresponding property type
            Functions:                  startswith({Propery}, {Value})
            </remarks>
            <example>
            <code>
            var queuesWithMessages = namespaceManager.GetQueues("messageCount Gt 0");
            var queuesStartsWith = namespaceManager.GetQueues($"startswith(path, 'queue') eq true");
            </code>
            </example>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueuesAsync">
            <summary>Asynchronously retrieves an enumerable collection of all queues in the service namespace.</summary>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueuesAsync(System.String)">
            <summary>Asynchronously retrieves an enumerable collection of all queues in the service namespace with specified filter.</summary>
            <param name="filter">The string used to filter the queues to be retrieved.</param>
            <returns>The asynchronous operation.</returns>
            <remarks>
            Filter expression formats:  {Propery} {Logical Operator} {Value} AND {Filter expression}
                                        {Function} {Logical Operator} {Value} AND {Filter expression}
            -----------------------------------------------------------------------------------------
            Available properties:       Path | ModifiedAt | AccessedAt | CreatedAt | MessageCount
            Logical operators:          Eq | Ne | Gt | Ge | Lt | Le  
            Value:                      A value of the corresponding property type
            Functions:                  startswith({Propery}, {Value})
            </remarks>
            <example>
            <code>
            var queuesWithMessages = await namespaceManager.GetQueuesAsync("messageCount Gt 0");
            var queuesStartsWith = await namespaceManager.GetQueuesAsync($"startswith(path, 'queue') eq true");
            </code>
            </example>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(System.String)">
            <summary>Creates a new topic inside the service namespace with the given service namespace path.</summary>
            <param name="path">The path of the topic relative to the service namespace base address.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> of the newly created topic.</returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="path" /> is null or empty, or <paramref name="path" /> begins or ends with “/”.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length of <paramref name="path" /> is greater than 
            <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />.</exception> 
            <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">A queue or a topic with the 
            same name and path exists under the same service namespace.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">The 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider" /> credentials to perform this operation.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has 
            been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(Microsoft.ServiceBus.Messaging.TopicDescription)">
            <summary>Creates a new topic inside the service namespace with the specified topic description.</summary>
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> object describing the attributes with which the new topic will be created.</param> 
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> of the newly created topic.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopicAsync(System.String)">
            <summary>Asynchronously creates a new topic inside the service namespace with the given service namespace path.</summary>
            <param name="path">The path of the topic relative to the service namespace base address.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopicAsync(Microsoft.ServiceBus.Messaging.TopicDescription)">
            <summary>Asynchronously creates a new topic inside the service namespace with the specified topic description.</summary>
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> object describing the attributes with which the new topic will be created.</param> 
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateTopic(Microsoft.ServiceBus.Messaging.TopicDescription)">
            <summary>Enables you to update the topic.</summary>
            <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> object describing the topic to be updated.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> of the updated topic.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateTopicAsync(Microsoft.ServiceBus.Messaging.TopicDescription)">
            <summary>Asynchronously enables you to update the topic.</summary>
            <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> object describing the topic to be updated.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.RenameTopic(System.String,System.String)">
            <summary>Renames a topic inside a namespace.</summary>
            <param name="path">The path to an existing topic.</param>
            <param name="newPath">The new path to the renamed topic.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="path" /> is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the length of <paramref name="path" /> is more than 290 characters.</exception>
            <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You can increase the value of the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the source topic 
            with the specified path does not exist.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when the target topic with 
            the same path exists within the same namespace.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">Thrown when the client does not have credentials to perform the operation.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown when an internal error or unexpected exception occurs.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.RenameTopicAsync(System.String,System.String)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.RenameTopic(System.String,System.String)" />.</summary>
            <param name="path">The path to an existing topic.</param>
            <param name="newPath">The new path to the renamed topic.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="path" /> is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the length of <paramref name="path" /> is more than 290 characters.</exception>
            <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You can increase the value of the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the source topic 
            with the specified path does not exist.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when the target topic with 
            the same path exists within the same namespace.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">Thrown when the client does not have credentials to perform the operation.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown when an internal error or unexpected exception occurs.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteTopic(System.String)">
            <summary>Deletes the topic described by path relative to the service namespace base address.</summary>
            <param name="path">The path of the topic relative to the service namespace base address.</param>
            <exception cref="T:System.ArgumentException">
              <paramref name="path" /> is null or empty, or <paramref name="path" /> starts or ends with "/".</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteTopicAsync(System.String)">
            <summary>Asynchronously deletes the topic described by path relative to the service namespace base address.</summary>
            <param name="path">The path of the topic relative to the service namespace base address.</param>
            <returns>The asynchronous deleted topic operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopic(System.String)">
            <summary>Retrieves the topic from the service namespace.</summary>
            <param name="path">The path of the topic relative to the service namespace base address.</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> reference to the topic, or a 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> exception if the topic does not exist in the service namespace.</returns> 
            <exception cref="T:System.ArgumentException">
              <paramref name="path" /> is empty or null.</exception>
            <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">The 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider" /> credentials to perform this operation.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">The topic does not exist in the service namespace.</exception>
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopicAsync(System.String)">
            <summary>Asynchronously retrieves the topic from the service namespace.</summary>
            <param name="path">The path of the topic relative to the service namespace base address.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.TopicExists(System.String)">
            <summary>Determines whether a topic exists in the service namespace.</summary>
            <param name="path">The path of the topic relative to the service namespace base address.</param>
            <returns>true if a topic exists in the service namespace; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.TopicExistsAsync(System.String)">
            <summary>Asynchronously determines whether a topic exists in the service namespace.</summary>
            <param name="path">The path of the topic relative to the service namespace base address.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopics">
            <summary>Retrieves a collection of topics in a service namespace.</summary>
            <returns>An 
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of topics under the current namespace, or returns an empty collection if no topic exists.</returns> 
            <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the 
            <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception> 
            <exception cref="T:System.UnauthorizedAccessException">The 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your 
            <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct 
            <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider" /> credentials to perform this operation.</exception> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopics(System.String)">
            <summary>Retrieves a collection of topics in a service namespace with the specified filter. You can filter by a 
            combination of entity name (including starts with), entity length (Gt or Lt), created, updated, and accessed time (Gt or Lt).</summary> 
            <param name="filter">The string used to filter the topics to be retrieved.</param>
            <returns>An 
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of topics under the current namespace, or returns an empty collection if no topic exists.</returns> 
            <remarks>
            Filter expression formats:  {Propery} {Logical Operator} {Value} AND {Filter expression}
                                        {Function} {Logical Operator} {Value} AND {Filter expression}
            -----------------------------------------------------------------------------------------
            Available properties:       Path | ModifiedAt | AccessedAt | CreatedAt | MessageCount
            Logical operators:          Eq | Ne | Gt | Ge | Lt | Le  
            Value:                      A value of the corresponding property type
            Functions:                  startswith({Propery}, {Value})
            </remarks>
            <example>
            <code>
            var topicsWithMessages = namespaceManager.GetTopics("messageCount Gt 0");
            var topicsStartsWith = namespaceManager.GetTopics($"startswith(path, 'topic') eq true");
            </code>
            </example>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopicsAsync">
            <summary>Asynchronously retrieves a collection of topics in a service namespace.</summary>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopicsAsync(System.String)">
            <summary>Asynchronously retrieves a collection of topics in a service namespace.</summary>
            <param name="filter">The string used to filter the topics to be retrieved.</param>
            <returns>The asynchronous operation.</returns>
            <remarks>
            Filter expression formats:  {Propery} {Logical Operator} {Value} AND {Filter expression}
                                        {Function} {Logical Operator} {Value} AND {Filter expression}
            -----------------------------------------------------------------------------------------
            Available properties:       Path | ModifiedAt | AccessedAt | CreatedAt | MessageCount
            Logical operators:          Eq | Ne | Gt | Ge | Lt | Le  
            Value:                      A value of the corresponding property type
            Functions:                  startswith({Propery}, {Value})
            </remarks>
            <example>
            <code>
            var topicsWithMessages = await namespaceManager.GetTopicsAsync("messageCount Gt 0");
            var topicsStartsWith = await namespaceManager.GetTopicsAsync($"startswith(path, 'topic') eq true");
            </code>
            </example>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroup(System.String,System.String)">
            <summary>Creates an Event Hubs consumer group using default values, with 
            the specified Event Hubs path and a name for the consumer group.</summary> 
            <param name="eventHubPath">The path to the Event Hub.</param>
            <param name="name">The name of the consumer group.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroup(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
            <summary>Creates an Event Hubs consumer group using the specified 
            <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</summary> 
            <param name="description">The <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupAsync(System.String,System.String)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroup(System.String,System.String)" />.</summary>
            <param name="eventHubPath">The path to the Event Hub.</param>
            <param name="name">The name of the consumer group.</param>
            <returns>The task that completes the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupAsync(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroup(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)" />.</summary> 
            <param name="description">The <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</param>
            <returns>The task that completes the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupIfNotExists(System.String,System.String)">
            <summary>Creates a consumer group if it does not already exist, using the specified Event Hubs path and group name. If the group already exists, then return the stored 
            <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</summary> 
            <param name="eventHubPath">Path to the Event Hub.</param>
            <param name="name">The name of the consumer group to create.</param>
            <returns>Returns the newly-created 
            <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />. If the consumer group already exists, returns the existing 
            <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupIfNotExists(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
            <summary>Creates a consumer group if it does not already exist, using the specified 
            <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" /> as metadata. If the group already exists, then return the stored 
            <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</summary> 
            <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" /> object.</param>
            <returns>Returns the newly-created 
            <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />. If the consumer group already exists, returns the existing 
            <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupIfNotExistsAsync(System.String,System.String)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupIfNotExists(System.String,System.String)" />.</summary> 
            <param name="eventHubPath">The path to the Event Hub.</param>
            <param name="name">The name of the consumer group.</param>
            <returns>The task that completes the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupIfNotExistsAsync(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
            <summary>Asynchronous version of 
            <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupIfNotExists(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)" />.</summary> 
            <param name="description">The consumer group description.</param>
            <returns>The task that completes the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteConsumerGroup(System.String,System.String)">
            <summary>Deletes a consumer group.</summary>
            <param name="eventHubPath">The path to the Event Hub.</param>
            <param name="name">The name of the consumer group to delete.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteConsumerGroupAsync(System.String,System.String)">
            <summary>Asynchronously deletes a consumer group.</summary>
            <param name="eventHubPath">The path to the Event Hub.</param>
            <param name="name">The name of the consumer group to delete.</param>
            <returns>The task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetConsumerGroup(System.String,System.String)">
            <summary>Gets an Event Hubs consumer group.</summary>
            <param name="eventHubPath">The path to the Event Hub.</param>
            <param name="name">The name of the consumer group.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetConsumerGroupAsync(System.String,System.String)">
            <summary>Asynchronously gets a consumer group.</summary>
            <param name="eventHubPath">The path to the Event Hub.</param>
            <param name="name">The name of the consumer group.</param>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetConsumerGroups(System.String)">
            <summary>Gets a collection representing a set of consumer groups.</summary>
            <param name="eventHubPath">The path to the Event Hub.</param>
            <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> object representing the set of consumer groups.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetConsumerGroupsAsync(System.String)">
            <summary>Asynchronously gets a set of consumer groups.</summary>
            <param name="eventHubPath">The path to the Event Hub.</param>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateConsumerGroup(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
            <summary>Updates an Event Hubs consumer group.</summary>
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" /> object containing the updated information.</param> 
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateConsumerGroupAsync(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
            <summary>Asynchronously updates the consumer group.</summary>
            <param name="description">The consumer group description.</param>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String)">
            <summary>Creates a new subscription in the service namespace with the specified topic path and subscription name.</summary>
            <param name="topicPath">The topic path relative to the service namespace base address.</param>
            <param name="name">The name of the subscription.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
            <remarks> Be default, A "pass-through" filter is created for this subscription, which means 
            it will allow all message to go to this subscription. The name of the filter is 
            <see cref="F:Microsoft.ServiceBus.Messaging.RuleDescription.DefaultRuleName"/>.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.Filter)">
            <summary>Creates a new subscription in the service namespace with the specified topic path, subscription name, and filter expression.</summary>
            <param name="topicPath">The topic path relative to the service namespace base address.</param>
            <param name="name">The name of the subscription.</param>
            <param name="filter">The filter expression used to capture messages satisfying the filtering expression value.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
            <remarks> A default rule will be created using data from <paramref name="filter"/>
            and named as <see cref="F:Microsoft.ServiceBus.Messaging.RuleDescription.DefaultRuleName"/>. </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
            <summary>Creates a new subscription in the service namespace with the specified subscription description.</summary>
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param> 
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
            <remarks> Be default, A "pass-through" filter is created for this subscription, which means 
            it will allow all message to go to this subscription. The name of the filter is 
            <see cref="F:Microsoft.ServiceBus.Messaging.RuleDescription.DefaultRuleName"/>.</remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filter)">
            <summary>Creates a new subscription in the service namespace with the specified subscription description and filter expression.</summary>
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param> 
            <param name="filter">The filter expression used to capture messages satisfying the filtering expression value.</param>
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
            <remarks> A default rule will be created using data from <paramref name="filter"/>
            and named as <see cref="F:Microsoft.ServiceBus.Messaging.RuleDescription.DefaultRuleName"/>. </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription)">
            <summary>Creates a new subscription in the service namespace with the specified topic path, subscription name, and rule description.</summary>
            <param name="topicPath">The topic path relative to the service namespace base address.</param>
            <param name="name">The name of the subscription.</param>
            <param name="ruleDescription">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> object describing the attributes with which the messages are matched and acted upon.</param> 
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
            <remarks> A default rule will be created using data from <paramref name="ruleDescription"/>.
            If <see cref="P:Microsoft.ServiceBus.Messaging.RuleDescription.Name"/> is null or white space, then the name of the rule
            created will be <see cref="F:Microsoft.ServiceBus.Messaging.RuleDescription.DefaultRuleName"/>. </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription)">
            <summary>Creates a new subscription in the service namespace with the specified subscription description and rule description.</summary>
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param> 
            <param name="ruleDescription">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> object describing the attributes with which the messages are matched and acted upon.</param> 
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
            <remarks> A default rule will be created using data from <paramref name="ruleDescription"/>.
            If <see cref="P:Microsoft.ServiceBus.Messaging.RuleDescription.Name"/> is null or white space, then the name of the rule
            created will be <see cref="F:Microsoft.ServiceBus.Messaging.RuleDescription.DefaultRuleName"/>. </remarks>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(System.String,System.String)">
            <summary>Asynchronously creates a new subscription in the service namespace with the specified topic path and subscription name.</summary>
            <param name="topicPath">The topic path relative to the service namespace base address.</param>
            <param name="name">The name of the subscription.</param>
            <returns>The asynchronously created subscription.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(System.String,System.String,Microsoft.ServiceBus.Messaging.Filter)">
            <summary>Asynchronously creates a new subscription in the service namespace 
            with the specified topic path, subscription name, and filter expression.</summary> 
            <param name="topicPath">The topic path relative to the service namespace base address.</param>
            <param name="name">The name of the subscription.</param>
            <param name="filter">The filter expression used to capture messages satisfying the filtering expression value.</param>
            <returns>The asynchronously created subscription.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription)">
            <summary>Asynchronously creates a new subscription in the service namespace 
            with the specified topic path, subscription name, and rule description.</summary> 
            <param name="topicPath">The topic path relative to the service namespace base address.</param>
            <param name="name">The name of the subscription.</param>
            <param name="ruleDescription">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> object describing the attributes with which the messages are matched and acted upon.</param> 
            <returns>The asynchronously created subscription.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
            <summary>Asynchronously creates a new subscription in the service namespace with the specified subscription description.</summary>
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param> 
            <returns>The asynchronously created subscription.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filter)">
            <summary>Asynchronously creates a new subscription in the service 
            namespace with the specified subscription description and filter expression.</summary> 
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param> 
            <param name="filter">The filter expression used to capture messages satisfying the filtering expression value.</param>
            <returns>The asynchronously created subscription.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription)">
            <summary>Asynchronously creates a new subscription in the service 
            namespace with the specified subscription description and rule description.</summary> 
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param> 
            <param name="ruleDescription">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> object describing the attributes with which the messages are matched and acted upon.</param> 
            <returns>The asynchronously created subscription.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
            <summary>Enables you to update the subscription.</summary>
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the subscription to be updated.</param> 
            <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the updated subscription.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
            <summary>Asynchronously enables you to update the subscription.</summary>
            <param name="description">A 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the subscription to be updated.</param> 
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteSubscription(System.String,System.String)">
            <summary>Deletes the subscription with the specified topic path and subscription name.</summary>
            <param name="topicPath">The topic path relative to the service namespace base address.</param>
            <param name="name">The name of the subscription to delete.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteSubscriptionAsync(System.String,System.String)">
            <summary>Asynchronously deletes the subscription with the specified topic path and subscription name.</summary>
            <param name="topicPath">The topic path relative to the service namespace base address.</param>
            <param name="name">The name of the subscription to delete.</param>
            <returns>The asynchronous delete subscription operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscription(System.String,System.String)">
            <summary>Retrieves the topic from the service namespace.</summary>
            <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
            <param name="name">The name of the subscription.</param>
            <returns>A 
            <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> handle to the subscription, or a 
            <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> exception if the subscription does not exist in the service namespace.</returns> 
            <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">The subscription does 
            not exist in the service namespace.</exception> 
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptionAsync(System.String,System.String)">
            <summary>Asynchronously retrieves the topic from the service namespace.</summary>
            <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
            <param name="name">The name of the subscription.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.SubscriptionExists(System.String,System.String)">
            <summary>Determines whether a subscription exists in the service namespace.</summary>
            <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
            <param name="name">The name of the subscription.</param>
            <returns>true if a subscription exists in the service namespace; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.SubscriptionExistsAsync(System.String,System.String)">
            <summary>Asynchronously determines whether a subscription exists in the service namespace.</summary>
            <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
            <param name="name">The name of the subscription.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String)">
            <summary>Retrieves an enumerable collection of all subscriptions in the service namespace.</summary>
            <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
            <returns>An 
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all subscriptions in the service namespace or returns an empty collection if no subscription exists.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptionsAsync(System.String)">
            <summary>Asynchronously retrieves an enumerable collection of all subscriptions in the service namespace.</summary>
            <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String,System.String)">
            <summary>Retrieves an enumerable collection of all subscriptions in the service namespace with specified topic path and filter.</summary>
            <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
            <param name="filter">The string used to filter the subscriptions to be retrieved.</param>
            <returns>An 
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all subscriptions in the service namespace or returns an empty collection if no subscription exists.</returns> 
            <remarks>
            Filter expression formats:  {Propery} {Logical Operator} {Value} AND {Filter expression}
                                        {Function} {Logical Operator} {Value} AND {Filter expression}
            -----------------------------------------------------------------------------------------
            Available properties:       ModifiedAt | AccessedAt | CreatedAt | MessageCount
            Logical operators:          Eq | Ne | Gt | Ge | Lt | Le  
            Value:                      A value of the corresponding property type
            Functions:                  startswith({Propery}, {Value})
            </remarks>
            <example>
            <code>
            var subscriptionsWithMessages = namespaceManager.GetSubscriptions("topicName", "messageCount Gt 0");
            var subscriptionsStartsWith = namespaceManager.GetSubscriptions("topicName", $"startswith(path, 'subscription') eq true");
            </code>
            </example>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptionsAsync(System.String,System.String)">
            <summary>Asynchronously retrieves an enumerable collection of all subscriptions in the service namespace.</summary>
            <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
            <param name="filter">The string used to filter the subscriptions to be retrieved.</param>
            <returns>The asynchronous operation.</returns>
            <remarks>
            Filter expression formats:  {Propery} {Logical Operator} {Value} AND {Filter expression}
                                        {Function} {Logical Operator} {Value} AND {Filter expression}
            -----------------------------------------------------------------------------------------
            Available properties:       ModifiedAt | AccessedAt | CreatedAt | MessageCount
            Logical operators:          Eq | Ne | Gt | Ge | Lt | Le  
            Value:                      A value of the corresponding property type
            Functions:                  startswith({Propery}, {Value})
            </remarks>
            <example>
            <code>
            var subscriptionsWithMessages = await namespaceManager.GetSubscriptionsAsync("topicName", "messageCount Gt 0");
            var subscriptionsStartsWith = await namespaceManager.GetSubscriptionsAsync("topicName", $"startswith(path, 'subscription') eq true");
            </code>
            </example>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartitions(System.String)">
            <summary> Get partitions. </summary>
            <param name="eventHubPath"> EventHub path to find the partitions in them. </param>
            <returns> A collection of partitions for the EventHub path. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartitions(System.String,System.String)">
            <summary> Get partitions. </summary>
            <param name="eventHubPath"> EventHub path to find the partitions in them. </param>
            <param name="consumerGroupName"></param>
            <returns> A collection of partitions for the EventHub path. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartitionsAsync(System.String)">
            <summary> Get partitions. </summary>
            <param name="eventHubPath"> EventHub path to find the partitions in them. </param>
            <returns> A collection of partitions for the EventHub path. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartitionsAsync(System.String,System.String)">
            <summary> Get partitions. </summary>
            <param name="eventHubPath"> EventHub path to find the partitions in them. </param>
            <param name="consumerGroupName"></param>
            <returns> A collection of partitions for the EventHub path. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartition(System.String,System.String)">
            <summary>Returns information about the specified Event Hub partition. This method assumes that you want partition information for the partition 
            specified by the <paramref name="name" /> parameter that belongs to the default consumer group pointed to by <paramref name="eventHubPath" />.</summary> 
            <param name="eventHubPath">The path to the Event Hub.</param>
            <param name="name">The ID of the Event Hub partition.</param>
            <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.PartitionDescription" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartition(System.String,System.String,System.String)">
            <summary />
            <param name="eventHubPath" />
            <param name="consumerGroupName" />
            <param name="name" />
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartitionAsync(System.String,System.String)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartition(System.String,System.String)" />.</summary>
            <param name="eventHubPath">The path to the Event Hub.</param>
            <param name="name">The ID of the Event Hub partition.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartitionAsync(System.String,System.String,System.String)">
            <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartition(System.String,System.String)" />.</summary>
            <param name="eventHubPath">The path to the Event Hub.</param>
            <param name="consumerGroupName">The name of the Event Hubs consumer group.</param>
            <param name="name">The ID of the Event Hubs partition.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetEventHubPartition(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <summary> Begins a get partition. </summary>
            <param name="eventHubPath"> EventHub path to find the partition. </param>
            <param name="name">name of the Partiton id </param>
            <param name="consumerGroupName"></param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param>
            <param name="state">A user-defined object that contains information about the receive operation. This object is passed to 
                                the GetPartition delegate when the operation is complete. </param>
            <returns> An <see cref="T:System.IAsyncResult"/> that references the asynchronous GetPartition . </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetEventHubPartition(System.IAsyncResult)">
            <summary> Ends a get partition. </summary>
            <param name="result"> An <see cref="T:System.IAsyncResult"/> that references the GetPartition.  </param>
            <returns> Partition discription after end get partition. </returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String)">
            <summary>Retrieves an enumerable collection of all rules in the service namespace.</summary>
            <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
            <param name="subscriptionName">The name of the subscription.</param>
            <returns>An 
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all rules in the service namespace or returns an empty collection if no rule exists.</returns> 
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String,System.String)">
            <summary>Retrieves an enumerable collection of all rules in the 
            service namespace with specified topic path, subscription name and filter.</summary> 
            <param name="topicPath">The topic path relative to the service namespace base address.</param>
            <param name="subscriptionName">The name of the subscription.</param>
            <param name="filter">The string used to filter the rules to be retrieved.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of 
            all rules in the service namespace or returns an empty collection if no rule exists.</returns>
            <remarks>
            Filter expression format:   {Propery} {Logical Operator} {Value} {Filter expression}
            -----------------------------------------------------------------------------------------
            Available properties:       ModifiedAt | AccessedAt | CreatedAt
            Logical operators:          Eq | Ne | Gt | Ge | Lt | Le  
            Value:                      A value of the corresponding property type
            </remarks>
            <example>
            <code>
            var fiveMinutesAgo = DateTime.UtcNow.AddMinutes(-5).ToString("M/dd/yyyy hh:mm:ss");
            var rulesInTheLast5Minutes = namespaceManager.GetRules(topicName, subscriptionName, $"createdAt gt '{fiveMinutesAgo}'");
            </code>
            </example>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRulesAsync(System.String,System.String)">
            <summary>Asynchronously retrieves an enumerable collection of all rules in the service namespace.</summary>
            <param name="topicPath">The topic path relative to the service namespace base address.</param>
            <param name="subscriptionName">The name of the subscription.</param>
            <returns>The asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRulesAsync(System.String,System.String,System.String)">
            <summary>Asynchronously retrieves an enumerable collection of all rules in 
            the service namespace with specified topic path, subscription name and filter.</summary> 
            <param name="topicPath">The topic path relative to the service namespace base address.</param>
            <param name="subscriptionName">The name of the subscription.</param>
            <param name="filter">The string used to filter the rules to be retrieved.</param>
            <returns>The asynchronous operation.</returns>
            <remarks>
            Filter expression format:   {Propery} {Logical Operator} {Value} {Filter expression}
            -----------------------------------------------------------------------------------------
            Available properties:       ModifiedAt | AccessedAt | CreatedAt
            Logical operators:          Eq | Ne | Gt | Ge | Lt | Le  
            Value:                      A value of the corresponding property type
            </remarks>
            <example>
            <code>
            var fiveMinutesAgo = DateTime.UtcNow.AddMinutes(-5).ToString("M/dd/yyyy hh:mm:ss");
            var rulesInTheLast5Minutes = await namespaceManager.GetRulesAsync(topicName, subscriptionName, $"createdAt gt '{fiveMinutesAgo}'");
            </code>
            </example>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.EntityDescriptionSyndicationFeed`1.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Action{`0,System.String})">
            <summary> Constructor. </summary>
            <param name="feed">   The feed. </param>
            <param name="onFeedEntry"> the action that will act upon the feed. </param>
        </member>
        <member name="P:Microsoft.ServiceBus.NamespaceManager.EntityDescriptionSyndicationFeed`1.Feed">
            <summary> Gets or sets the feed. </summary>
            <value> The feed. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.NamespaceManager.EntityDescriptionSyndicationFeed`1.Entities">
            <summary> Gets the push agent. </summary>
            <value> The push agents. </value>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManager.QueueSyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
            <summary> Constructor. </summary>
            <param name="feed">   The feed. </param>
        </member>
        <member name="P:Microsoft.ServiceBus.NamespaceManager.QueueSyndicationFeed.Feed">
            <summary> Gets or sets the feed. </summary>
            <value> The feed. </value>
        </member>
        <member name="P:Microsoft.ServiceBus.NamespaceManager.QueueSyndicationFeed.Queues">
            <summary> Gets the queues. </summary>
            <value> The queues. </value>
        </member>
        <member name="T:Microsoft.ServiceBus.NamespaceManagerSettings">
            <summary>Contains the settings for the namespace manager.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.NamespaceManagerSettings.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout">
            <summary>Gets or sets the operation timeout period for all 
            service namespace management operations, such as GetQueue, CreateQueue, and so on.</summary> 
            <value>A <see cref="T:System.TimeSpan" /> object that represents the timeout period.</value>
            The default value is 1 minute.
        </member>
        <member name="P:Microsoft.ServiceBus.NamespaceManagerSettings.RetryPolicy">
            <summary>Gets or sets the base implementation of the retry mechanism 
            for unreliable actions and transient conditions associated with the namespace manager.</summary> 
            <value>The base implementation of the retry mechanism for 
            unreliable actions and transient conditions associated with the namespace manager.</value> 
        </member>
        <member name="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider">
            <summary>Gets or sets the security token provider.</summary>
            <value>The security token provider.</value>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MessageEntityNotOpened">
            <summary>Gets localized string like: This messaging entity is not in an open state.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MessageEntityDisposed">
            <summary>Gets localized string like: This messaging entity has already been closed, aborted, or disposed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.EventDataDisposed">
            <summary>Gets localized string like: This event data instance has already been disposed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MessageBodyConsumed">
            <summary>Gets localized string like: The message body cannot be read multiple times. To reuse it store the value after reading.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidXmlFormat">
            <summary>Gets localized string like: The XML returned is not in the expected format.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidIpAddressMask">
            <summary>Gets localized string like: The provided ip address mask does not follow the CIDR notation.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidIpAddressCIDRValue">
            <summary>Gets localized string like: The provided ip address mask contain invalid CIDR value. CIDR has to be a byte representation under 32. if 0, then it has to be the format '0.0.0.0/0'</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.BufferAlreadyReclaimed">
            <summary>Gets localized string like: The buffer has already been reclaimed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.CannotSendReceivedMessage">
            <summary>Gets localized string like: A received message cannot be directly sent to another entity. Construct a new message object instead.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.IsolationLevelNotSupported">
            <summary>Gets localized string like: The only supported IsolationLevel is 'IsolationLevel.Serializable'.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MessageBodyNull">
            <summary>Gets localized string like: The message body is null.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ReadNotSupported">
            <summary>Gets localized string like: Reading is not supported on this stream.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.SeekNotSupported">
            <summary>Gets localized string like: Seeking is not supported on this stream.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ValueMustBeNonNegative">
            <summary>Gets localized string like: The value of this argument must be non-negative.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.CannotSerializeMessageWithPartiallyConsumedBodyStream">
            <summary>Gets localized string like: Failed to serialize the message because its body stream has been partially consumed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.FailedToSerializeEntireBodyStream">
            <summary>Gets localized string like: Failed to serialize the message because the number of bytes read from its body stream did not match the expected length.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.FailedToDeSerializeEntireBodyStream">
            <summary>Gets localized string like: Failed to deserialize the message because the number of bytes read from its body stream did not match the expected length.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.CannotSerializeSessionStateWithPartiallyConsumedStream">
            <summary>Gets localized string like: Failed to serialize the session state because its state stream has been partially consumed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.FailedToSerializeEntireSessionStateStream">
            <summary>Gets localized string like: Failed to serialize the session state because the number of bytes read from its state stream did not match the expected length.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.FailedToDeSerializeEntireSessionStateStream">
            <summary>Gets localized string like: Failed to deserialize the session state because the number of bytes read from its state stream did not match the expected length.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.SbmpTransport">
            <summary>Gets localized string like: Sbmp</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MultipleResourceManagersNotSupported">
            <summary>Gets localized string like: Local transactions are not supported with other resource managers/DTC.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ServerDidNotReply">
            <summary>Gets localized string like: Internal Server Error: The server did not provide a meaningful reply; this might be caused by a premature session shutdown.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.CannotCreateClientOnSubQueue">
            <summary>Gets localized string like: Cannot directly create a client on a sub-queue. Create a client on the main queue and use that to create receivers on the appropriate sub-queue.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidOperationOnSessionBrowser">
            <summary>Gets localized string like: Cannot perform this operation on a session browser.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidBatchFlushInterval">
            <summary>Gets localized string like: The BatchFlushInterval that is specified in the settings is not valid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.FilterExpressionTooComplex">
            <summary>Gets localized string like: The filter expression computation time exceeded the allowed value. Reduce the complexity of the expression.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PeekLockModeRequired">
            <summary>Gets localized string like: This operation is only supported for a message receiver in 'PeekLock' receive mode.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ActionMustBeProcessed">
            <summary>Gets localized string like: The action must be processed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.FilterMustBeProcessed">
            <summary>Gets localized string like: The filter must be processed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.EntityClosedOrAborted">
            <summary>Gets localized string like: The operation cannot be performed because the entity has been closed or aborted.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MessagingCommunicationError">
            <summary>Gets localized string like: Error during communication with Service Bus. Check the connection information, then retry.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.BatchManagerAborted">
            <summary>Gets localized string like: This asynchronous operation was aborted because the overall batching operation was aborted.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.CannotCreateMessageSessionForSubQueue">
            <summary>Gets localized string like: Cannot create a MessageSession for a sub-queue.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.UseOverloadWithBaseAddress">
            <summary>Gets localized string like: Use overload which allows specifying a base address.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.RuleCreationActionRequiresFilterTemplate">
            <summary>Gets localized string like: Filter property must be set to a valid FilterTemplate instance.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.EmptyPropertyInCorrelationFilter">
            <summary>Gets localized string like: At least one system or user property must be set for a correlation filter.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidRefcountedCommunicationObject">
            <summary>Gets localized string like: The usage of RefcountedCommunicationObject is invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidStateMachineRefcountedCommunicationObject">
            <summary>Gets localized string like: Invalid state-machine in RefcountedCommunicationObject.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ConnectionStatusBehavior">
            <summary>Gets localized string like: ConnectionStatusBehavior requires an IChannelListener that exposes IConnectionStatus.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.StreamClosed">
            <summary>Gets localized string like: The Stream was closed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidCallFaultException">
            <summary>Gets localized string like: Invalid Call.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MaximumAttemptsExceeded">
            <summary>Gets localized string like: Maximum connect attempts exceeded.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ConnectFailed">
            <summary>Gets localized string like: Connect process failed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidID">
            <summary>Gets localized string like: The ID is invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.EndpointNotFound">
            <summary>Gets localized string like: Endpoint not found.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.DuplicateConnectionID">
            <summary>Gets localized string like: Duplicate connection ID.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidBufferSize">
            <summary>Gets localized string like: The buffer size is invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ListenerLengthArgumentOutOfRange">
            <summary>Gets localized string like: listener.Type length exceeds maximum allowed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.UnrecognizedCredentialType">
            <summary>Gets localized string like: CredentialType is either unrecognized or unable to create HTTP authorization token.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.LockedMessageInfo">
            <summary>Gets localized string like: Unable to retrieve the LockedMessageInfo property from message.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ReadOnlyPolicy">
            <summary>Gets localized string like: Policy is read-only.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.EndpointNotFoundFault">
            <summary>Gets localized string like: Endpoint not found.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.DuplicateConnectionIDFault">
            <summary>Gets localized string like: Duplicate connection ID.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidConfiguration">
            <summary>Gets localized string like: Invalid configuration. Unable to use transport protection with Hybrid mode.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.TransportSecurity">
            <summary>Gets localized string like: Transport security is required to protect the security token. The URI schema must be set to HTTPS.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.HTTPAuthTokenNotSupportedException">
            <summary>Gets localized string like: The token provider does not support HTTP authorization token.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.UnexpectedFormat">
            <summary>Gets localized string like: The message has an unexpected format other than SOAP and HTTP.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidChannelType">
            <summary>Gets localized string like: Invalid channel type.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.IncompatibleChannelListener">
            <summary>Gets localized string like: Incompatible channel listener settings.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NullSAMLs">
            <summary>Gets localized string like: SamlCredential and its SamlToken cannot be null or empty.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.STSURIFormat">
            <summary>Gets localized string like: stsUri must end with a '/'.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NullIssuerName">
            <summary>Gets localized string like: Parameter 'issuerName' cannot be null or empty.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NullIssuerSecret">
            <summary>Gets localized string like: Parameter 'issuerSecret' cannot be null or empty.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidIssuerSecret">
            <summary>Gets localized string like: The 'issuerSecret' is invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.TokenExpiresOn">
            <summary>Gets localized string like: The provided token does not specify the 'ExpiresOn' value.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidEncoding">
            <summary>Gets localized string like: The string has an invalid encoding format.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.UnsupportedEncodingType">
            <summary>Gets localized string like: The string has an unsupported encoding type.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NullSimpleWebToken">
            <summary>Gets localized string like: Parameter 'simpleWebToken' cannot be null or empty.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ArgumentOutOfRangeLessThanOne">
            <summary>Gets localized string like: 'value' must be at least 1.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.BeginGetWebTokenNotSupported">
            <summary>Gets localized string like: This TokenProvider does not support BeginGetWebToken call.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NullAppliesTo">
            <summary>Gets localized string like: Parameter appliesTo cannot be null or empty.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NullHostname">
            <summary>Gets localized string like: Hostname cannot be null or empty.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.TimeoutExceeded">
            <summary>Gets localized string like: The timeout is too large.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.AlreadyRunning">
            <summary>Gets localized string like: The pump is already running.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.RelayCertificateNotFound">
            <summary>Gets localized string like: Cannot find relay certificate.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MessageSizeExceeded">
            <summary>Gets localized string like: A request from the client instance has exceeded the maximum message size, and the underlying channel will be recreated. Validate the content size before retrying.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ExpectedBytesNotRead">
            <summary>Gets localized string like: Did not receive any bytes from expected read.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.HTTPConnectivityMode">
            <summary>Gets localized string like: Unable to connect to Service Bus using HTTP connectivity mode.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.DownstreamConnection">
            <summary>Gets localized string like: Unable to connect downstream.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ConnectionTermination">
            <summary>Gets localized string like: Unable to close connection.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.UpstreamConnection">
            <summary>Gets localized string like: Unable to connect upstream.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.URIEndpoint">
            <summary>Gets localized string like: Error creating endpoint Uri for connecting to the Service Bus.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.FaultyEndpointResponse">
            <summary>Gets localized string like: Faulty response from factory endpoint - locations were not returned.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.FactoryEndpoint">
            <summary>Gets localized string like: Unable to connect to factory endpoint.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.WebStreamShutdown">
            <summary>Gets localized string like: The web stream has been shut down - can no longer write to the stream.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ValueVisibility">
            <summary>Gets localized string like: Cannot set the value at this time.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MultipleConnectionModeAssertions">
            <summary>Gets localized string like: More than one relay 'connection-mode' assertion was found.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.UnsupportedTokenProviderType">
            <summary>Gets localized string like: Unsupported TokenProvider type.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.EnabledAutoFlowCreditIssuing">
            <summary>Gets localized string like: Manually issuing credit on a link with auto-flow enabled is not allowed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MismatchedListSizeEncodedValueLength">
            <summary>Gets localized string like: The list size must be exactly the same as the encoded value length.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MessageListenerAlreadyRegistered">
            <summary>Gets localized string like: Message listener is already registered.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.CreditListenerAlreadyRegistered">
            <summary>Gets localized string like: Credit listener is already registered.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.DispositionListenerAlreadyRegistered">
            <summary>Gets localized string like: Disposition listener is already registered.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.DispositionListenerSetNotSupported">
            <summary>Gets localized string like: Not supported when the disposition listener is set.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ServerCertificateAlreadySet">
            <summary>Gets localized string like: Cannot set target host because the server certificate is already set.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ClientTargetHostAlreadySet">
            <summary>Gets localized string like: Cannot set server certificate because the client target host is already set.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ClientTargetHostServerCertificateNotSet">
            <summary>Gets localized string like: Either the client target host or the server certificate must be set.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.TargetHostNotSet">
            <summary>Gets localized string like: TargetHost must be set.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ServerCertificateNotSet">
            <summary>Gets localized string like: Service certificate must be set.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.AsyncResultInUse">
            <summary>Gets localized string like: The asynchronous result is still in use.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.AsyncResultDifferent">
            <summary>Gets localized string like: The asynchronous result is different.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.AsyncResultNotInUse">
            <summary>Gets localized string like: The asynchronous result is not in use.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NullResourceDescription">
            <summary>Gets localized string like: Resource descriptions is null or empty.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NullResourceName">
            <summary>Gets localized string like: Resource names is null or empty.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NullServiceNameSpace">
            <summary>Gets localized string like: Service namespace cannot be null or empty.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PathSegmentASCIICharacters">
            <summary>Gets localized string like: Path segments in 'servicePath' can only contain ASCII characters.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.SystemTrackerHeaderMissing">
            <summary>Gets localized string like: A SystemTracker header was not present.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.SystemTrackerPropertyMissing">
            <summary>Gets localized string like: A SystemTracker property was not present.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.TrackingIDHeaderMissing">
            <summary>Gets localized string like: A TrackingID header was not present.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.TrackingIDPropertyMissing">
            <summary>Gets localized string like: A TrackingID property was not present.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MessageLockLost">
            <summary>Gets localized string like: The lock supplied is invalid. Either the lock expired, or the message has already been removed from the queue.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.SessionLockExpiredOnMessageSession">
            <summary>Gets localized string like: The session lock has expired on the MessageSession. Accept a new MessageSession.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.IOThreadTimerCannotAcceptMaxTimeSpan">
            <summary>Gets localized string like: IOThreadTimer cannot accept Timespan.MaxValue.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ConnectFailedCommunicationException">
            <summary>Gets localized string like: Socket communication error.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ErroConvertingToChar">
            <summary>Gets localized string like: Failed to convert to a char.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidLengthofReceivedContent">
            <summary>Gets localized string like: The length of received content is not correct.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidReceivedContent">
            <summary>Gets localized string like: Received empty content or invalid type of content.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidReceivedSessionId">
            <summary>Gets localized string like: The session id from received content does not match.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MoreThanOneAddressCandidate">
            <summary>Gets localized string like: More than one address candidate exists for the given type.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MoreThanOneIPEndPoint">
            <summary>Gets localized string like: More than one IPEndPoint exists for the given type.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NotSupportedTypeofChannel">
            <summary>Gets localized string like: Given type of channel is not supported.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NoValidHostAddress">
            <summary>Gets localized string like: Can't find appropriate address.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NullRawDataInToken">
            <summary>Gets localized string like: Can't read raw data from token.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NullRoot">
            <summary>Gets localized string like: The root is null.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ConnectionStringInvalidFormat">
            <summary>Gets localized string like: The Service Bus connection string is not of the expected format. Either there are unexpected properties within the string or the format is incorrect. Please check the string before trying again.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ArgumentInvalid">
            <summary>Gets localized string like: The supplied value contains invalid format for the argument.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.OnMessageAlreadyCalled">
            <summary>Gets localized string like: The method 'OnMessage' or 'OnMessageAsync' has already been called.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InternalServerError">
            <summary>Gets localized string like: The service was unable to process the request; please retry the operation. For more information on exception types and proper exception handling, please refer to http://go.microsoft.com/fwlink/?LinkId=761101</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidCombinationOfManageRight">
            <summary>Gets localized string like: Manage permission should also include Send and Listen.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.CannotHaveDuplicateAccessRights">
            <summary>Gets localized string like: The AccessRights on an Authorization Rule must be unique.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NotSupportedXMLFormatAsBodyTemplate">
            <summary>Gets localized string like: The bodyTemplate is not in accepted XML format. The first node of the bodyTemplate should be Badge/Tile/Toast, except wns/raw template, which need to be a valid XML.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NotSupportedXMLFormatAsPayload">
            <summary>Gets localized string like: The payload is not in accepted XML format. The first node should be Badge/Tile/Toast. If want to send raw notification, please set header to wns/raw.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ConnectionStringWithInvalidScheme">
            <summary>Gets localized string like: Connection string contains unsupported schema for endPoint. Only "sb://" is supported.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.SetTokenScopeNotSupported">
            <summary>Gets localized string like: This TokenProvider does not support changing the Token Scope.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.CannotHaveDuplicateSAARule">
            <summary>Gets localized string like: Each Shared Access Authorization Rule key name must be unique.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PairedNamespaceOnlyCallOnce">
            <summary>Gets localized string like: PairNamespace can only be called once per MessagingFactory.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PairedNamespaceMessagingFactoryAlreadyPaired">
            <summary>Gets localized string like: The secondary MessagingFactory inside the pairing option has already been paired to another MessagingFactory.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PairedNamespaceMessagingFactoryInOptionsAlreadyPaired">
            <summary>Gets localized string like: The MessagingFactory in the paired namespace option should not have any paired namespace option defined in itself.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PairedNamespaceMessagingFactoyCannotBeChanged">
            <summary>Gets localized string like: Cannot change the MessagingFactory once it has been set.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.BacklogDeadletterDescriptionNoQueuePath">
            <summary>Gets localized string like: The message appears to have been placed in a backlog queue by an agent that does not use the SendAvailability feature in the Service Bus SDK. Please do not use this queue for general scenarios.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.BacklogDeadletterReasonNoQueuePath">
            <summary>Gets localized string like: Destination queue not indicated in message when fetched from backlog.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.BacklogDeadletterReasonNotRetryable">
            <summary>Gets localized string like: The message cannot be delivered to the destination.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.SendAvailabilityNoTransferQueuesCreated">
            <summary>Gets localized string like: Send availability is not supported because no transfer queues were created or found.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PairedNamespaceInvalidBacklogQueueCount">
            <summary>Gets localized string like: The backlog queue cannot be empty.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PairedNamespacePrimaryAndSecondaryEqual">
            <summary>Gets localized string like: The primary and secondary paired namespaces are identical. The code must use different namespaces.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PairedNamespaceValidTimespanRange">
            <summary>Gets localized string like: Valid range is 1 to 30 minutes.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PairedNamespacePrimaryEntityUnreachable">
            <summary>Gets localized string like: The entity was created with a paired namespace. Ping detected that this entity is unreachable due to a non-transient error. The message will not be sent to the paired namespace. See the inner exception for more details.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NullAsString">
            <summary>Gets localized string like: (null)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PairedNamespacePropertyExtractionDlqReason">
            <summary>Gets localized string like: Invalid type in property.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.BodyIsNotSupportedExpression">
            <summary>Gets localized string like: Expression type '$body' is not supported.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ApnsCertificateExpired">
            <summary>Gets localized string like: The certificate specified in apple credentials is expired.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ApnsCertificateNotValid">
            <summary>Gets localized string like: The certificate specified in apple credentials is not valid yet.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ApnsCertificatePrivatekeyMissing">
            <summary>Gets localized string like: The certificate specified in apple credentials does not have a private key.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ApnsEndpointNotAllowed">
            <summary>Gets localized string like: The specified APNS Endpoint is not allowed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ApnsPropertiesNotSpecified">
            <summary>Gets localized string like: ApnsCertificate, CertificateKey or Endpoint is either not specified or invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ApnsRequiredPropertiesError">
            <summary>Gets localized string like: Only 3 properties ApnsCertificate, CertificateKey and Endpoint are required.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.CannotSpecifyExpirationTime">
            <summary>Gets localized string like: Cannot specify ExpirationTime.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ChannelUriNullOrEmpty">
            <summary>Gets localized string like: Channel URI is either null, empty or not absolute value.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.DeviceTokenHexaDecimalDigitError">
            <summary>Gets localized string like: One or more characters in device token is not a hexadecimal digit.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.DeviceTokenIsEmpty">
            <summary>Gets localized string like: Device token is either empty OR it has odd number of nibbles.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.EmptyExpiryValue">
            <summary>Gets localized string like: Expiry value is empty. When specified, a valid expiry value is required.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ExpiryDeserializationError">
            <summary>Gets localized string like: Expiry value could not be deserialized to a date time.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.FailedToDeserializeBodyTemplate">
            <summary>Gets localized string like: Failed to deserialize the body template.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.GcmEndpointNotSpecified">
            <summary>Gets localized string like: GcmEndpoint is either not specified or invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.GCMRegistrationInvalidId">
            <summary>Gets localized string like: GCM Registration Id is invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.GcmRequiredProperties">
            <summary>Gets localized string like: Only GoogleApiKey and GcmEndpoint are required.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.GoogleApiKeyNotSpecified">
            <summary>Gets localized string like: GoogleApiKey is either not specified or invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidGcmEndpoint">
            <summary>Gets localized string like: Invalid GcmEndpoint specified.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NokiaXEndpointNotSpecified">
            <summary>Gets localized string like: NokiaXEndpoint is either not specified or invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NokiaXRegistrationInvalidId">
            <summary>Gets localized string like: NokiaX Registration Id is invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NokiaXRequiredProperties">
            <summary>Gets localized string like: Only authorization key and NokiaXEndpoint are required.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NokiaXAuthorizationKeyNotSpecified">
            <summary>Gets localized string like: NokiaX Authorization Key is either not specified or invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidNokiaXEndpoint">
            <summary>Gets localized string like: Invalid NokiaXEndpoint specified.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.BaiduEndpointNotSpecified">
            <summary>Gets localized string like: BaiduEndpoint is either not specified or invalid. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.BaiduRegistrationInvalidId">
            <summary>Gets localized string like: Baidu Registration Id is invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.BaiduRequiredProperties">
            <summary>Gets localized string like: Only API key and NokiaXEndpoint are required.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.BaiduApiKeyNotSpecified">
            <summary>Gets localized string like: Baidu Api Key is either not specified or invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidBaiduEndpoint">
            <summary>Gets localized string like: Invalid BaiduEndpoint specified.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidWindowsLiveEndpoint">
            <summary>Gets localized string like: Invalid WindowsLiveEndpoint specified.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PackageSidAndSecretKeyAreRequired">
            <summary>Gets localized string like: Only 2 properties PackageSid and SecretKey are required.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PackageSidOrSecretKeyInvalid">
            <summary>Gets localized string like: PackageSid or SecretKey is either not specified or invalid"</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PropTokenNotAllowedInCompositeExpr">
            <summary>Gets localized string like: Token type '#(prop)' is not allowed in composite expression.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NotSupportedXMLFormatAsBodyTemplateForMpns">
            <summary>Gets localized string like: The bodyTemplate is not in accepted XML format. The first node of the bodyTemplate should be Tile/Toast, except raw template.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NotSupportedXMLFormatAsPayloadForMpns">
            <summary>Gets localized string like: The payload is not in accepted XML format. The first node should be Tile/Toast. If want to send raw notification, please set "X-NotificationClass" to "3" in header.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidMpnsCertificate">
            <summary>Gets localized string like: The certificate specified in mpns credentials is not valid yet.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MpnsCertificateExpired">
            <summary>Gets localized string like: The certificate specified in mpns credentials is expired.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MpnsCertificatePrivatekeyMissing">
            <summary>Gets localized string like: The certificate specified in mpns credentials does not have a private key.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MpnsInvalidPropeties">
            <summary>Gets localized string like: MpnsCertificate or CertificateKey is either not specified or invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MpnsRequiredPropertiesError">
            <summary>Gets localized string like: Only 2 properties MpnsCertificate and CertificateKey are required.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PartitionKeyMustBeEqualsToNonNullSessionId">
            <summary>Gets localized string like: PartitionKey must be equal to SessionId when SessionId has a value different than null. Assign null to SessionId to be able to set PartitionKey.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.UnsupportedBatchingDistinctPartitionKey">
            <summary>Gets localized string like: Batching brokered messages with distinct SessionId or PartitionKey is not supported for an entity with partitioning enabled.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.UnsupportedDeDupBatchingDistinctPartitionKey">
            <summary>Gets localized string like: Batching brokered messages with distinct SessionId, PartitionKey, or MessageId  is not supported for an entity with partitioning and duplicate detection enabled.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.TransactionPartitionKeyMissing">
            <summary>Gets localized string like: PartitionKey or SessionId is missing. Transaction with partitioned entities require PartitionKey or SessionId to be set in the brokered message.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PartitionedEntityViaSenderNeedsViaPatitionKey">
            <summary>Gets localized string like: Sending message through a via message sender requires BrokeredMessage.ViaPartitionKey to be set.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MessagingPartitioningUnsupportedBatchingLockTockens">
            <summary>Gets localized string like: Batching lock tokens for different partitions is not supported for an entity with partitioning enabled.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.UnsupportedBatchingSequenceNumbersForDistinctPartitions">
            <summary>Gets localized string like: ReceiveBatch of sequence numbers from different partitions is not supported for an entity with partitioning enabled. </summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MessagingPartitioningInvalidOperation">
            <summary>Gets localized string like: The operation is not supported for an entity with partitioning enabled.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidPayLoadFormat">
            <summary>Gets localized string like: Invalid payload format. Either Json object or valid Xml are allowed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.SessionHandlerAlreadyRegistered">
            <summary>Gets localized string like: A session handler is already registered or being registered.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidAdmAuthTokenUrl">
            <summary>Gets localized string like: AuthTokenUrl is invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ErrorNoCotent">
            <summary>Gets localized string like: The message contain no data.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.EventHubPathMismatch">
            <summary>Gets localized string like: EventHubDescription.Path must either be null or match EventHubClient.Path.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.CannotCreateReceiverWithDispatcher">
            <summary>Gets localized string like: Cannot explicitly create receiver when using a EventHubProcessor is attached.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.AdmRegistrationIdInvalid">
            <summary>Gets localized string like: ADM Registration Id is invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.InvalidAdmSendUrlTemplate">
            <summary>Gets localized string like: ADM send notification endpoint URL template is invalid.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ReceiveContextNull">
            <summary>Gets localized string like: The operation cannot be completed because the ReceiveContext is null.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.TokenAudience">
            <summary>Gets localized string like: The provided token does not specify the 'Audience' value.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ObjectIsReadOnly">
            <summary>Gets localized string like: This object is read-only and cannot be modified.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.CannotCheckpointWithCurrentConsumerGroup">
            <summary>Gets localized string like: Checkpoint is disabled for this ConsuemerGroup.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.EventDataListIsNullOrEmpty">
            <summary>Gets localized string like: There are no event data supplied. Please make sure input events are not empty.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PartitionKeyMustBeEqualsToNonNullPublisher">
            <summary>Gets localized string like: PartitionKey must be equal to Publisher while sending from Publisher</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PublisherMustBeEqualsToNonNullSessionId">
            <summary>Gets localized string like: Publisher must be equal to SessionId when SessionId has a Value</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NotificationHubOperationNotAllowedForSKU">
            <summary>Gets localized string like: This operation is not available for your tier</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.EventHubOperationNotSupported">
            <summary>Gets localized string like: The requested HTTP operation is not supported in an EventHub.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PublisherPolicyNotSupportedOnPartitionedSenders">
            <summary>Gets localized string like: Sending to Publisher is not supported when using Partitioned Senders.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PublisherPolicyNotSupportedOnEventHubClient">
            <summary>Gets localized string like: Sending to Publisher is not supported when using EventHubClient. Please use EventHubSender instead.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.SpecifyPublisherIdOnlyWithEntityPath">
            <summary>Gets localized string like: Publisher should be specified in conjunction with EntityPath only.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PublisherConflictError">
            <summary>Gets localized string like: Publisher property cannot be set to a different value in the incoming message.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.PublisherCannotBeSetByClient">
            <summary>Gets localized string like: Publisher property can only be set by the Service and cannot be set at Client. The only way to let Service to populate this property is - to send using publisher tokens. Refer to EventHubSender.CreateFromConnectionString(connStr).</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ExpressionHashInComposite">
            <summary>Gets localized string like: Token type '#(prop)' is not allowed in composite expression.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.SendBatchUnsuportedTransaction">
            <summary>Gets localized string like: Transactions are  not supported when sending batches of messages to different physical partitions for a queue or topic with EnablePartitioning set to true.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.MessagingPartitioningRuleActionNotAllowed">
            <summary>Gets localized string like: Rules with action is not supported in a partitioned topic.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.CompleteBatchUnsuportedTransaction">
            <summary>Gets localized string like: Transactions are  not supported when completing batches containing lock tokens belonging to different physical partitions for a queue or topic with EnablePartitioning set to true.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.OrchestrationIndefiniteResult">
            <summary>Gets localized string like: The service is unable to determine the successful completion of this request.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ApnsProvideOnlyOneCredentialType">
            <summary>Gets localized string like: Cannot set both token and certificate for APNS.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ApnsTokenPropertiesMissing">
            <summary>Gets localized string like: To use APNS token, the key id, application id and application name need to be set.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.ApnsEndpointNotSpecified">
            <summary>Gets localized string like: A valid endpoint for APNS is required.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRClient.NotSupportedNoneExclusiveSessionMode">
            <summary>Gets localized string like: None exclusive session mode supported only on Premium Messaging and sbmp client</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.IpAddressRejected(System.Object,System.Object)">
            <summary>Gets localized string like: The Ip address {0} has been rejected to connect to the endpoint {1}.</summary>
            <param name="param0">Parameter 0 for string: The Ip address {0} has been rejected to connect to the endpoint {1}.</param>
            <param name="param1">Parameter 1 for string: The Ip address {0} has been rejected to connect to the endpoint {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.CommunicationObjectFaulted(System.Object)">
            <summary>Gets localized string like: The communication object, {0}, cannot be used because it is in a faulted state.</summary>
            <param name="param0">Parameter 0 for string: The communication object, {0}, cannot be used because it is in a faulted state.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.EntityNameLengthExceedsLimit(System.Object,System.Object)">
            <summary>Gets localized string like: The entity path/name '{0}' exceeds the '{1}' character limit.</summary>
            <param name="param0">Parameter 0 for string: The entity path/name '{0}' exceeds the '{1}' character limit.</param>
            <param name="param1">Parameter 1 for string: The entity path/name '{0}' exceeds the '{1}' character limit.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.TemplateNameLengthExceedsLimit(System.Object)">
            <summary>Gets localized string like: The template name exceeds the '{0}' character limit.</summary>
            <param name="param0">Parameter 0 for string: The template name exceeds the '{0}' character limit.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.LockTimeExceedsMaximumAllowed(System.Object)">
            <summary>Gets localized string like: The supplied lock time exceeds the allowed maximum of '{0}' minutes.</summary>
            <param name="param0">Parameter 0 for string: The supplied lock time exceeds the allowed maximum of '{0}' minutes.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.DuplicateHistoryExpiryTimeExceedsMaximumAllowed(System.Object)">
            <summary>Gets localized string like: The supplied duplicate detection history duration exceeds the maximum allowed value of '{0}' minutes.</summary>
            <param name="param0">Parameter 0 for string: The supplied duplicate detection history duration exceeds the maximum allowed value of '{0}' minutes.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SQLSyntaxError(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}]</summary>
            <param name="param0">Parameter 0 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}]</param>
            <param name="param1">Parameter 1 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}]</param>
            <param name="param2">Parameter 2 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}]</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SQLSyntaxErrorDetailed(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}, Additional details= {3}] </summary>
            <param name="param0">Parameter 0 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}, Additional details= {3}] </param>
            <param name="param1">Parameter 1 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}, Additional details= {3}] </param>
            <param name="param2">Parameter 2 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}, Additional details= {3}] </param>
            <param name="param3">Parameter 3 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}, Additional details= {3}] </param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidUriScheme(System.Object,System.Object)">
            <summary>Gets localized string like: The provided URI scheme '{0}' is invalid; expected '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The provided URI scheme '{0}' is invalid; expected '{1}'.</param>
            <param name="param1">Parameter 1 for string: The provided URI scheme '{0}' is invalid; expected '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.BufferedOutputStreamQuotaExceeded(System.Object)">
            <summary>Gets localized string like: The size quota for this stream ({0}) has been exceeded.</summary>
            <param name="param0">Parameter 0 for string: The size quota for this stream ({0}) has been exceeded.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessagingEntityAlreadyExists(System.Object)">
            <summary>Gets localized string like: The messaging entity '{0}' already exists.</summary>
            <param name="param0">Parameter 0 for string: The messaging entity '{0}' already exists.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessagingEntityCouldNotBeFound(System.Object)">
            <summary>Gets localized string like: The messaging entity '{0}' could not be found.</summary>
            <param name="param0">Parameter 0 for string: The messaging entity '{0}' could not be found.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessagingEndpointCommunicationError(System.Object)">
            <summary>Gets localized string like: An error occurred during communication with '{0}'. Check the connection information, then retry.</summary>
            <param name="param0">Parameter 0 for string: An error occurred during communication with '{0}'. Check the connection information, then retry.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ChannelTypeNotSupported(System.Object)">
            <summary>Gets localized string like: The specified channel type {0} is not supported by this channel manager.</summary>
            <param name="param0">Parameter 0 for string: The specified channel type {0} is not supported by this channel manager.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ConfigInvalidBindingConfigurationName(System.Object,System.Object)">
            <summary>Gets localized string like: The {1} binding does not have a configured binding named '{0}'.</summary>
            <param name="param0">Parameter 0 for string: The {1} binding does not have a configured binding named '{0}'.</param>
            <param name="param1">Parameter 1 for string: The {1} binding does not have a configured binding named '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.NoAddressesFound(System.Object)">
            <summary>Gets localized string like: Could not resolve any addresses for entity '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Could not resolve any addresses for entity '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.CannotUseSameMessageInstanceInMultipleOperations(System.Object)">
            <summary>Gets localized string like: The operation cannot be performed because the brokered message '{0}' has already been consumed. Please use a new BrokeredMessage instance for the operation.</summary>
            <param name="param0">Parameter 0 for string: The operation cannot be performed because the brokered message '{0}' has already been consumed. Please use a new BrokeredMessage instance for the operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.TooManyMessageProperties(System.Object,System.Object)">
            <summary>Gets localized string like: A message cannot have more than '{0}' properties. Found '{1}' properties.</summary>
            <param name="param0">Parameter 0 for string: A message cannot have more than '{0}' properties. Found '{1}' properties.</param>
            <param name="param1">Parameter 1 for string: A message cannot have more than '{0}' properties. Found '{1}' properties.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExceededMessagePropertySizeLimit(System.Object,System.Object)">
            <summary>Gets localized string like: The size of message property '{0}' exceeds the limit of '{1}' bytes.</summary>
            <param name="param0">Parameter 0 for string: The size of message property '{0}' exceeds the limit of '{1}' bytes.</param>
            <param name="param1">Parameter 1 for string: The size of message property '{0}' exceeds the limit of '{1}' bytes.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.EntityNameNotFound(System.Object)">
            <summary>Gets localized string like: The endpoint address '{0}' must specify the name of the messaging entity. Expected 'sb://resourcelocator/entityname'.</summary>
            <param name="param0">Parameter 0 for string: The endpoint address '{0}' must specify the name of the messaging entity. Expected 'sb://resourcelocator/entityname'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.FailedToSerializeUnsupportedType(System.Object)">
            <summary>Gets localized string like: Serialization operation failed due to unsupported type {0}.</summary>
            <param name="param0">Parameter 0 for string: Serialization operation failed due to unsupported type {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.FailedToDeserializeUnsupportedProperty(System.Object)">
            <summary>Gets localized string like: Deserialize operation failed due to unsupported property {0}.</summary>
            <param name="param0">Parameter 0 for string: Deserialize operation failed due to unsupported property {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.OverflowWhenAddingException(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: There was an overflow when adding the values {0} and {1} of the type {2}.</summary>
            <param name="param0">Parameter 0 for string: There was an overflow when adding the values {0} and {1} of the type {2}.</param>
            <param name="param1">Parameter 1 for string: There was an overflow when adding the values {0} and {1} of the type {2}.</param>
            <param name="param2">Parameter 2 for string: There was an overflow when adding the values {0} and {1} of the type {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessageAttributeSetMethodNotAccessible(System.Object)">
            <summary>Gets localized string like: The property {0} cannot be assigned to.</summary>
            <param name="param0">Parameter 0 for string: The property {0} cannot be assigned to.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessageAttributeGetMethodNotAccessible(System.Object)">
            <summary>Gets localized string like: The property {0} cannot be assigned from.</summary>
            <param name="param0">Parameter 0 for string: The property {0} cannot be assigned from.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessageGetPropertyNotFound(System.Object,System.Object)">
            <summary>Gets localized string like: The specified property {0} does not exist, or it is not a gettable property of the {1} class.</summary>
            <param name="param0">Parameter 0 for string: The specified property {0} does not exist, or it is not a gettable property of the {1} class.</param>
            <param name="param1">Parameter 1 for string: The specified property {0} does not exist, or it is not a gettable property of the {1} class.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SqlFilterActionStatmentTooLong(System.Object,System.Object)">
            <summary>Gets localized string like: The length of the filter action statement is {0}, which exceeds the maximum length of {1}.</summary>
            <param name="param0">Parameter 0 for string: The length of the filter action statement is {0}, which exceeds the maximum length of {1}.</param>
            <param name="param1">Parameter 1 for string: The length of the filter action statement is {0}, which exceeds the maximum length of {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.FilterActionTooManyStatements(System.Object,System.Object)">
            <summary>Gets localized string like: There are {0} statements defined in the filter action, which exceeds the allowed maximum of {1}.</summary>
            <param name="param0">Parameter 0 for string: There are {0} statements defined in the filter action, which exceeds the allowed maximum of {1}.</param>
            <param name="param1">Parameter 1 for string: There are {0} statements defined in the filter action, which exceeds the allowed maximum of {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.NoCorrelationForChannelMessageId(System.Object,System.Object)">
            <summary>Gets localized string like: sessionId:messageId '{0}':'{1}' This correlation response was previously received or not expected.</summary>
            <param name="param0">Parameter 0 for string: sessionId:messageId '{0}':'{1}' This correlation response was previously received or not expected.</param>
            <param name="param1">Parameter 1 for string: sessionId:messageId '{0}':'{1}' This correlation response was previously received or not expected.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.NoCorrelationResponseForChannelMessageId(System.Object,System.Object)">
            <summary>Gets localized string like: sessionId:messageId '{0}':'{1}' There was no correlation response for the channel message.</summary>
            <param name="param0">Parameter 0 for string: sessionId:messageId '{0}':'{1}' There was no correlation response for the channel message.</param>
            <param name="param1">Parameter 1 for string: sessionId:messageId '{0}':'{1}' There was no correlation response for the channel message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SentCorrelationMessage(System.Object,System.Object)">
            <summary>Gets localized string like: sessionId:messageId '{0}':'{1}' Sent a correlation message over the channel session.</summary>
            <param name="param0">Parameter 0 for string: sessionId:messageId '{0}':'{1}' Sent a correlation message over the channel session.</param>
            <param name="param1">Parameter 1 for string: sessionId:messageId '{0}':'{1}' Sent a correlation message over the channel session.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ReceivedCorrelationMessage(System.Object,System.Object)">
            <summary>Gets localized string like: sessionId:relatesTo '{0}':'{1}' Received a correlation message over the channel session.</summary>
            <param name="param0">Parameter 0 for string: sessionId:relatesTo '{0}':'{1}' Received a correlation message over the channel session.</param>
            <param name="param1">Parameter 1 for string: sessionId:relatesTo '{0}':'{1}' Received a correlation message over the channel session.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.OperationRequestTimedOut(System.Object)">
            <summary>Gets localized string like: The request has timed out after {0} milliseconds. The successful completion of the request cannot be determined. Additional queries should be made to determine whether or not the operation has succeeded. For more information on exception types and proper exception handling, please refer to http://go.microsoft.com/fwlink/?LinkId=761101</summary>
            <param name="param0">Parameter 0 for string: The request has timed out after {0} milliseconds. The successful completion of the request cannot be determined. Additional queries should be made to determine whether or not the operation has succeeded. For more information on exception types and proper exception handling, please refer to http://go.microsoft.com/fwlink/?LinkId=761101</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.QueueProvisioningError(System.Object,System.Object)">
            <summary>Gets localized string like: An error occurred while creating the queue '{0}'. {1}</summary>
            <param name="param0">Parameter 0 for string: An error occurred while creating the queue '{0}'. {1}</param>
            <param name="param1">Parameter 1 for string: An error occurred while creating the queue '{0}'. {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.QueueUnProvisioningError(System.Object,System.Object)">
            <summary>Gets localized string like: An error occurred while deleting the queue '{0}'. {1}</summary>
            <param name="param0">Parameter 0 for string: An error occurred while deleting the queue '{0}'. {1}</param>
            <param name="param1">Parameter 1 for string: An error occurred while deleting the queue '{0}'. {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SubscriptionProvisioningError(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: An error occurred while creating the subscription '{0}' for the topic {1}. {2}</summary>
            <param name="param0">Parameter 0 for string: An error occurred while creating the subscription '{0}' for the topic {1}. {2}</param>
            <param name="param1">Parameter 1 for string: An error occurred while creating the subscription '{0}' for the topic {1}. {2}</param>
            <param name="param2">Parameter 2 for string: An error occurred while creating the subscription '{0}' for the topic {1}. {2}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.TopicProvisioningError(System.Object,System.Object)">
            <summary>Gets localized string like: An error occurred while creating the topic '{0}'. {1}</summary>
            <param name="param0">Parameter 0 for string: An error occurred while creating the topic '{0}'. {1}</param>
            <param name="param1">Parameter 1 for string: An error occurred while creating the topic '{0}'. {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.TopicUnProvisioningError(System.Object,System.Object)">
            <summary>Gets localized string like: An error occurred while deleting the topic '{0}'. {1}</summary>
            <param name="param0">Parameter 0 for string: An error occurred while deleting the topic '{0}'. {1}</param>
            <param name="param1">Parameter 1 for string: An error occurred while deleting the topic '{0}'. {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.IncompatibleQueueExport(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Incompatible queue export type. Expected type {0} or {1}. Specified type is {2}.</summary>
            <param name="param0">Parameter 0 for string: Incompatible queue export type. Expected type {0} or {1}. Specified type is {2}.</param>
            <param name="param1">Parameter 1 for string: Incompatible queue export type. Expected type {0} or {1}. Specified type is {2}.</param>
            <param name="param2">Parameter 2 for string: Incompatible queue export type. Expected type {0} or {1}. Specified type is {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.IncompatibleTopicExport(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Incompatible topic export type. Expected type {0} or {1}. Specified type is {2}.</summary>
            <param name="param0">Parameter 0 for string: Incompatible topic export type. Expected type {0} or {1}. Specified type is {2}.</param>
            <param name="param1">Parameter 1 for string: Incompatible topic export type. Expected type {0} or {1}. Specified type is {2}.</param>
            <param name="param2">Parameter 2 for string: Incompatible topic export type. Expected type {0} or {1}. Specified type is {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidSubQueueNameString(System.Object)">
            <summary>Gets localized string like: Provide a valid sub-queue name. The allowed values are: '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Provide a valid sub-queue name. The allowed values are: '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.CannotConvertFilterAction(System.Object)">
            <summary>Gets localized string like: Cannot convert the filter action of type '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Cannot convert the filter action of type '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.CannotConvertFilterExpression(System.Object)">
            <summary>Gets localized string like: Cannot convert the filter expression of type '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Cannot convert the filter expression of type '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidAddressPath(System.Object)">
            <summary>Gets localized string like: The Uri address given contains a path which is not allowed. Remove the path from the supplied Uri {0}.</summary>
            <param name="param0">Parameter 0 for string: The Uri address given contains a path which is not allowed. Remove the path from the supplied Uri {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidEntityNameFormatWithSlash(System.Object)">
            <summary>Gets localized string like: The entity name or path cannot contain '/' as prefix or suffix. The supplied value is '{0}'.</summary>
            <param name="param0">Parameter 0 for string: The entity name or path cannot contain '/' as prefix or suffix. The supplied value is '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidCharacterInEntityName(System.Object,System.Object)">
            <summary>Gets localized string like: The entity name or path contains an invalid character '{0}'. The supplied value is '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The entity name or path contains an invalid character '{0}'. The supplied value is '{1}'.</param>
            <param name="param1">Parameter 1 for string: The entity name or path contains an invalid character '{0}'. The supplied value is '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ArgumentOutOfRange(System.Object,System.Object)">
            <summary>Gets localized string like: The value supplied must be between {0} and {1}.</summary>
            <param name="param0">Parameter 0 for string: The value supplied must be between {0} and {1}.</param>
            <param name="param1">Parameter 1 for string: The value supplied must be between {0} and {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SqlFilterStatmentTooLong(System.Object,System.Object)">
            <summary>Gets localized string like: The length of the filter statement is {0}, which exceeds the maximum length of {1}</summary>
            <param name="param0">Parameter 0 for string: The length of the filter statement is {0}, which exceeds the maximum length of {1}</param>
            <param name="param1">Parameter 1 for string: The length of the filter statement is {0}, which exceeds the maximum length of {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessageIdIsNullOrEmptyOrOverMaxValue(System.Object)">
            <summary>Gets localized string like: The message ID is either null, empty, or exceeds the maximum allowed size of {0} characters.</summary>
            <param name="param0">Parameter 0 for string: The message ID is either null, empty, or exceeds the maximum allowed size of {0} characters.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SessionIdIsOverMaxValue(System.Object)">
            <summary>Gets localized string like: The session ID exceeds the maximum allowed size of {0} characters.</summary>
            <param name="param0">Parameter 0 for string: The session ID exceeds the maximum allowed size of {0} characters.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidManagementEntityType(System.Object,System.Object)">
            <summary>Gets localized string like: Cannot get entity '{0}' because it is not of type {1}. Check that you are using method(s) with the correct entity type.</summary>
            <param name="param0">Parameter 0 for string: Cannot get entity '{0}' because it is not of type {1}. Check that you are using method(s) with the correct entity type.</param>
            <param name="param1">Parameter 1 for string: Cannot get entity '{0}' because it is not of type {1}. Check that you are using method(s) with the correct entity type.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.TrackableExceptionMessageFormat(System.Object,System.Object)">
            <summary>Gets localized string like: {0} {1}</summary>
            <param name="param0">Parameter 0 for string: {0} {1}</param>
            <param name="param1">Parameter 1 for string: {0} {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.TrackableExceptionReferenceFormat(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: {0} Reference:{1}, {2}</summary>
            <param name="param0">Parameter 0 for string: {0} Reference:{1}, {2}</param>
            <param name="param1">Parameter 1 for string: {0} Reference:{1}, {2}</param>
            <param name="param2">Parameter 2 for string: {0} Reference:{1}, {2}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.TrackingIdAndTimestampFormat(System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId:{0}, Timestamp:{1}</summary>
            <param name="param0">Parameter 0 for string: TrackingId:{0}, Timestamp:{1}</param>
            <param name="param1">Parameter 1 for string: TrackingId:{0}, Timestamp:{1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.TrackingIdSystemTrackerAndTimestampFormat(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: TrackingId:{0}, SystemTracker:{1}, Timestamp:{2}</summary>
            <param name="param0">Parameter 0 for string: TrackingId:{0}, SystemTracker:{1}, Timestamp:{2}</param>
            <param name="param1">Parameter 1 for string: TrackingId:{0}, SystemTracker:{1}, Timestamp:{2}</param>
            <param name="param2">Parameter 2 for string: TrackingId:{0}, SystemTracker:{1}, Timestamp:{2}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SqlFilterActionCannotRemoveSystemProperty(System.Object)">
            <summary>Gets localized string like: A system property cannot be removed. The system property specified was '{0}'.</summary>
            <param name="param0">Parameter 0 for string: A system property cannot be removed. The system property specified was '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.FilterScopeNotSupported(System.Object)">
            <summary>Gets localized string like: The specified scope ({0}) is not supported.</summary>
            <param name="param0">Parameter 0 for string: The specified scope ({0}) is not supported.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.NotSupportedCompatibilityLevel(System.Object)">
            <summary>Gets localized string like: The specified compatibility level ({0}) is not supported.</summary>
            <param name="param0">Parameter 0 for string: The specified compatibility level ({0}) is not supported.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessageSetPropertyNotFound(System.Object,System.Object)">
            <summary>Gets localized string like: The specified property ({0}) does not exist or it is not a settable property of the {1} class.</summary>
            <param name="param0">Parameter 0 for string: The specified property ({0}) does not exist or it is not a settable property of the {1} class.</param>
            <param name="param1">Parameter 1 for string: The specified property ({0}) does not exist or it is not a settable property of the {1} class.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SqlFilterReservedKeyword(System.Object)">
            <summary>Gets localized string like: '{0}' is a reserved keyword. Use a delimited identifier if you intended to use a reserved keyword as a property name.</summary>
            <param name="param0">Parameter 0 for string: '{0}' is a reserved keyword. Use a delimited identifier if you intended to use a reserved keyword as a property name.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.DelimitedIdentifierNotTerminated(System.Object)">
            <summary>Gets localized string like: The delimited identifier ({0}) was not terminated properly.</summary>
            <param name="param0">Parameter 0 for string: The delimited identifier ({0}) was not terminated properly.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.StringLiteralNotTerminated(System.Object)">
            <summary>Gets localized string like: The string ({0}) was not terminated properly.</summary>
            <param name="param0">Parameter 0 for string: The string ({0}) was not terminated properly.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.FilterFunctionIncorrectNumberOfArguments(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' function expects {1} argument(s), but {2} argument(s) was/were specified.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' function expects {1} argument(s), but {2} argument(s) was/were specified.</param>
            <param name="param1">Parameter 1 for string: The '{0}' function expects {1} argument(s), but {2} argument(s) was/were specified.</param>
            <param name="param2">Parameter 2 for string: The '{0}' function expects {1} argument(s), but {2} argument(s) was/were specified.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.FilterUnknownFunctionName(System.Object)">
            <summary>Gets localized string like: The specified function name ({0}) is unknown. Make sure the function name is correct.</summary>
            <param name="param0">Parameter 0 for string: The specified function name ({0}) is unknown. Make sure the function name is correct.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.StringIsTooLong(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The string ('{0}...') length is {1} and it is longer than allowed. Maximum string length allowed is {2}.</summary>
            <param name="param0">Parameter 0 for string: The string ('{0}...') length is {1} and it is longer than allowed. Maximum string length allowed is {2}.</param>
            <param name="param1">Parameter 1 for string: The string ('{0}...') length is {1} and it is longer than allowed. Maximum string length allowed is {2}.</param>
            <param name="param2">Parameter 2 for string: The string ('{0}...') length is {1} and it is longer than allowed. Maximum string length allowed is {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidCharactersInEntityName(System.Object,System.Object)">
            <summary>Gets localized string like: {0} '{1}' contains character(s) that are not allowed by Service Bus. Entity names or path can contain only letters, numbers, periods (.), hyphens (-), and underscores (_).</summary>
            <param name="param0">Parameter 0 for string: {0} '{1}' contains character(s) that are not allowed by Service Bus. Entity names or path can contain only letters, numbers, periods (.), hyphens (-), and underscores (_).</param>
            <param name="param1">Parameter 1 for string: {0} '{1}' contains character(s) that are not allowed by Service Bus. Entity names or path can contain only letters, numbers, periods (.), hyphens (-), and underscores (_).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PropertyIsNullOrEmpty(System.Object)">
            <summary>Gets localized string like: The property '{0}' is null or empty.</summary>
            <param name="param0">Parameter 0 for string: The property '{0}' is null or empty.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessagingEntityIsDisabledException(System.Object)">
            <summary>Gets localized string like: Messaging entity '{0}' is currently disabled.</summary>
            <param name="param0">Parameter 0 for string: Messaging entity '{0}' is currently disabled.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PropertyReferenceUsedWithoutInitializes(System.Object)">
            <summary>Gets localized string like: A PropertyReference instance ({0}) is used without being part of RuleCreationAction.Initializes property.</summary>
            <param name="param0">Parameter 0 for string: A PropertyReference instance ({0}) is used without being part of RuleCreationAction.Initializes property.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.X509InUnTrustedStore(System.Object)">
            <summary>Gets localized string like: Certificate '{0}' is in the untrusted store.</summary>
            <param name="param0">Parameter 0 for string: Certificate '{0}' is in the untrusted store.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.X509InvalidUsageTime(System.Object)">
            <summary>Gets localized string like: Certificate '{0}' is not used in its valid time period.</summary>
            <param name="param0">Parameter 0 for string: Certificate '{0}' is not used in its valid time period.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.X509CRLCheckFailed(System.Object)">
            <summary>Gets localized string like: CRL check failed for certificate '{0}'.</summary>
            <param name="param0">Parameter 0 for string: CRL check failed for certificate '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.CannotFindTransactionResult(System.Object)">
            <summary>Gets localized string like: Cannot find transaction result for the transaction id '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Cannot find transaction result for the transaction id '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpectedTypeInvalidCastException(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Unexpected type encountered. Expected '{0}' or '{1}', but received '{2}'.</summary>
            <param name="param0">Parameter 0 for string: Unexpected type encountered. Expected '{0}' or '{1}', but received '{2}'.</param>
            <param name="param1">Parameter 1 for string: Unexpected type encountered. Expected '{0}' or '{1}', but received '{2}'.</param>
            <param name="param2">Parameter 2 for string: Unexpected type encountered. Expected '{0}' or '{1}', but received '{2}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidElement(System.Object)">
            <summary>Gets localized string like: Invalid element: {0}.</summary>
            <param name="param0">Parameter 0 for string: Invalid element: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnsupportedChannelType(System.Object)">
            <summary>Gets localized string like: {0} is not a supported channel-type</summary>
            <param name="param0">Parameter 0 for string: {0} is not a supported channel-type</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnsupportedConnectivityMode(System.Object)">
            <summary>Gets localized string like: Unsupported ConnectivityMode '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Unsupported ConnectivityMode '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessageHeaderRetrieval(System.Object)">
            <summary>Gets localized string like: Unable to retrieve the '{0}' header from the message.</summary>
            <param name="param0">Parameter 0 for string: Unable to retrieve the '{0}' header from the message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ResponseHeaderRetrieval(System.Object)">
            <summary>Gets localized string like: Unable to retrieve the '{0}' header from the response.</summary>
            <param name="param0">Parameter 0 for string: Unable to retrieve the '{0}' header from the response.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.XMLContentReadFault(System.Object)">
            <summary>Gets localized string like: {0}: unable to read Atom XML content.</summary>
            <param name="param0">Parameter 0 for string: {0}: unable to read Atom XML content.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.IncorrectContentTypeFault(System.Object)">
            <summary>Gets localized string like: {0}: ContentType is incorrect</summary>
            <param name="param0">Parameter 0 for string: {0}: ContentType is incorrect</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnableToReach(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Unable to reach {0} via TCP ({1}, {2}) or HTTP (80, 443).</summary>
            <param name="param0">Parameter 0 for string: Unable to reach {0} via TCP ({1}, {2}) or HTTP (80, 443).</param>
            <param name="param1">Parameter 1 for string: Unable to reach {0} via TCP ({1}, {2}) or HTTP (80, 443).</param>
            <param name="param2">Parameter 2 for string: Unable to reach {0} via TCP ({1}, {2}) or HTTP (80, 443).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MaxRedirectsExceeded(System.Object)">
            <summary>Gets localized string like: Exceeded the maximum allowed redirects: {0}.</summary>
            <param name="param0">Parameter 0 for string: Exceeded the maximum allowed redirects: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidDNSClaims(System.Object)">
            <summary>Gets localized string like: Found {0} DNS claims in authorization context.</summary>
            <param name="param0">Parameter 0 for string: Found {0} DNS claims in authorization context.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.BaseAddressScheme(System.Object)">
            <summary>Gets localized string like: Scheme of base address must be '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Scheme of base address must be '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnsupportedAction(System.Object)">
            <summary>Gets localized string like: Unsupported action '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Unsupported action '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MismatchServiceBusDomain(System.Object,System.Object)">
            <summary>Gets localized string like: The Uri provided {0} does not match Service Bus domain: {1}.</summary>
            <param name="param0">Parameter 0 for string: The Uri provided {0} does not match Service Bus domain: {1}.</param>
            <param name="param1">Parameter 1 for string: The Uri provided {0} does not match Service Bus domain: {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnsupportedServiceBusDomainPrefix(System.Object,System.Object)">
            <summary>Gets localized string like: Uri {0} cannot support more than 1 prefix for Service Bus domain: {1}.</summary>
            <param name="param0">Parameter 0 for string: Uri {0} cannot support more than 1 prefix for Service Bus domain: {1}.</param>
            <param name="param1">Parameter 1 for string: Uri {0} cannot support more than 1 prefix for Service Bus domain: {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnexpectedSSL(System.Object)">
            <summary>Gets localized string like: Unexpected SSL signal value '{0}' found in preamble message.</summary>
            <param name="param0">Parameter 0 for string: Unexpected SSL signal value '{0}' found in preamble message.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidFrameSize(System.Object,System.Object)">
            <summary>Gets localized string like: Invalid frame size:{0}, maximum frame size:{1}.</summary>
            <param name="param0">Parameter 0 for string: Invalid frame size:{0}, maximum frame size:{1}.</param>
            <param name="param1">Parameter 1 for string: Invalid frame size:{0}, maximum frame size:{1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.FeatureNotSupported(System.Object)">
            <summary>Gets localized string like: The feature '{0}' is not supported with the current configuration.</summary>
            <param name="param0">Parameter 0 for string: The feature '{0}' is not supported with the current configuration.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.BrokeredMessageApplicationProperties(System.Object)">
            <summary>Gets localized string like: {0} is not currently supported in BrokeredMessage application properties.</summary>
            <param name="param0">Parameter 0 for string: {0} is not currently supported in BrokeredMessage application properties.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.NullEmptyRights(System.Object)">
            <summary>Gets localized string like: Rights cannot be null, empty or greater than {0}.</summary>
            <param name="param0">Parameter 0 for string: Rights cannot be null, empty or greater than {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnsupportedRight(System.Object,System.Object)">
            <summary>Gets localized string like: Unsupported Right '{0}'. The Supported Rights are '{1}'.</summary>
            <param name="param0">Parameter 0 for string: Unsupported Right '{0}'. The Supported Rights are '{1}'.</param>
            <param name="param1">Parameter 1 for string: Unsupported Right '{0}'. The Supported Rights are '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnsupportedGetClaim(System.Object)">
            <summary>Gets localized string like: GetClaim does not support linkInfo.LinkType '{0}'.</summary>
            <param name="param0">Parameter 0 for string: GetClaim does not support linkInfo.LinkType '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidSchemeValue(System.Object)">
            <summary>Gets localized string like: Invalid scheme value, must be http, or https, or {0}.</summary>
            <param name="param0">Parameter 0 for string: Invalid scheme value, must be http, or https, or {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidServiceNameSpace(System.Object)">
            <summary>Gets localized string like: Invalid service namespace: \"{0}\".</summary>
            <param name="param0">Parameter 0 for string: Invalid service namespace: \"{0}\".</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InputURIPath(System.Object)">
            <summary>Gets localized string like: Current environment is onebox but input Uri has an invalid path {0}.</summary>
            <param name="param0">Parameter 0 for string: Current environment is onebox but input Uri has an invalid path {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnexpedtedURIHostName(System.Object)">
            <summary>Gets localized string like: The Uri \"{0}\" has an unexpected hostname.</summary>
            <param name="param0">Parameter 0 for string: The Uri \"{0}\" has an unexpected hostname.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.URIServiceNameSpace(System.Object)">
            <summary>Gets localized string like: The Uri \"{0}\" has an invalid service namespace.</summary>
            <param name="param0">Parameter 0 for string: The Uri \"{0}\" has an invalid service namespace.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.OpenChannelFailed(System.Object)">
            <summary>Gets localized string like: Channel Open did not complete within the specified timeout of {0}.</summary>
            <param name="param0">Parameter 0 for string: Channel Open did not complete within the specified timeout of {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExtraParameterSpecifiedForSqlExpression(System.Object)">
            <summary>Gets localized string like: The specified parameter ({0}) in Parameters property was not used in the expression specified in SqlExpression.</summary>
            <param name="param0">Parameter 0 for string: The specified parameter ({0}) in Parameters property was not used in the expression specified in SqlExpression.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ParameterNotSpecifiedForSqlExpression(System.Object)">
            <summary>Gets localized string like: A parameter ({0}) used in the expression specified in SqlExpression is missing from the Parameters property.</summary>
            <param name="param0">Parameter 0 for string: A parameter ({0}) used in the expression specified in SqlExpression is missing from the Parameters property.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.BadUriFormat(System.Object)">
            <summary>Gets localized string like: Uri Bad format: {0}</summary>
            <param name="param0">Parameter 0 for string: Uri Bad format: {0}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.NotSupportFrameCode(System.Object)">
            <summary>Gets localized string like: Unsupported type {0} for array.</summary>
            <param name="param0">Parameter 0 for string: Unsupported type {0} for array.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessagingEntityUpdateConflict(System.Object)">
            <summary>Gets localized string like: Another update request is in progress for the entity {0}.</summary>
            <param name="param0">Parameter 0 for string: Another update request is in progress for the entity {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.NotSupportedPropertyType(System.Object)">
            <summary>Gets localized string like: '{0}' is not a supported type.</summary>
            <param name="param0">Parameter 0 for string: '{0}' is not a supported type.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.AppSettingsConfigDuplicateSetting(System.Object)">
            <summary>Gets localized string like: A duplicate property '{0}' was found in the Service Bus connection string.</summary>
            <param name="param0">Parameter 0 for string: A duplicate property '{0}' was found in the Service Bus connection string.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.AppSettingsConfigMissingSetting(System.Object,System.Object)">
            <summary>Gets localized string like: Configuration is missing required information. Make sure the property '{0}' is defined as part of '{1}' key within 'appSettings' section, or Windows Azure configuration settings.</summary>
            <param name="param0">Parameter 0 for string: Configuration is missing required information. Make sure the property '{0}' is defined as part of '{1}' key within 'appSettings' section, or Windows Azure configuration settings.</param>
            <param name="param1">Parameter 1 for string: Configuration is missing required information. Make sure the property '{0}' is defined as part of '{1}' key within 'appSettings' section, or Windows Azure configuration settings.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.AppSettingsConfigSettingInvalidKey(System.Object)">
            <summary>Gets localized string like: The Service Bus connection string contains invalid property. '{0}' is not a valid property within the connection string.</summary>
            <param name="param0">Parameter 0 for string: The Service Bus connection string contains invalid property. '{0}' is not a valid property within the connection string.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.AppSettingsConfigSettingInvalidValue(System.Object)">
            <summary>Gets localized string like: The Service Bus connection string contains invalid value. The property '{0}' has invalid value. Check the format of the value before retrying.</summary>
            <param name="param0">Parameter 0 for string: The Service Bus connection string contains invalid value. The property '{0}' has invalid value. Check the format of the value before retrying.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.AppSettingsConfigSettingInvalidValueSafe(System.Object,System.Object)">
            <summary>Gets localized string like: The Service Bus connection string contains invalid value. The property '{0}' has invalid value '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The Service Bus connection string contains invalid value. The property '{0}' has invalid value '{1}'.</param>
            <param name="param1">Parameter 1 for string: The Service Bus connection string contains invalid value. The property '{0}' has invalid value '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.AppSettingsCreateFactoryWithInvalidConnectionString(System.Object)">
            <summary>Gets localized string like: Unable to create MessagingFactory using connection string. {0} See inner exception for details. Check your connection string and then try again. For more information please see http://go.microsoft.com/fwlink/?LinkID=249089</summary>
            <param name="param0">Parameter 0 for string: Unable to create MessagingFactory using connection string. {0} See inner exception for details. Check your connection string and then try again. For more information please see http://go.microsoft.com/fwlink/?LinkID=249089</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.AppSettingsCreateManagerWithInvalidConnectionString(System.Object)">
            <summary>Gets localized string like: Unable to create NamespaceManager using connection string. {0} See inner exception for details. Check your connection string and then try again. For more information please see http://go.microsoft.com/fwlink/?LinkID=249089</summary>
            <param name="param0">Parameter 0 for string: Unable to create NamespaceManager using connection string. {0} See inner exception for details. Check your connection string and then try again. For more information please see http://go.microsoft.com/fwlink/?LinkID=249089</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.AppSettingsConfigIncompleteSettingCombination(System.Object,System.Object)">
            <summary>Gets localized string like: Some of the configuration is missing a required component. Make sure all or none of the following properties are defined as part of '{0}' key within 'appSettings' section, or Windows Azure configuration settings: [{1}]</summary>
            <param name="param0">Parameter 0 for string: Some of the configuration is missing a required component. Make sure all or none of the following properties are defined as part of '{0}' key within 'appSettings' section, or Windows Azure configuration settings: [{1}]</param>
            <param name="param1">Parameter 1 for string: Some of the configuration is missing a required component. Make sure all or none of the following properties are defined as part of '{0}' key within 'appSettings' section, or Windows Azure configuration settings: [{1}]</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessagingEntityMoved(System.Object)">
            <summary>Gets localized string like: The messaging entity '{0}' has been moved to a different container</summary>
            <param name="param0">Parameter 0 for string: The messaging entity '{0}' has been moved to a different container</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ArgumentInvalidCombination(System.Object)">
            <summary>Gets localized string like: Please make sure either all or none of the following arguments are defined: '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Please make sure either all or none of the following arguments are defined: '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.BrokeredMessageStreamNotCloneable(System.Object)">
            <summary>Gets localized string like: The stream of type '{0}' within the BrokeredMessage is not cloneable.</summary>
            <param name="param0">Parameter 0 for string: The stream of type '{0}' within the BrokeredMessage is not cloneable.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PropertyInvalidCombination(System.Object,System.Object)">
            <summary>Gets localized string like: The Value of Property '{0}' cannot be less than Value of Property '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The Value of Property '{0}' cannot be less than Value of Property '{1}'.</param>
            <param name="param1">Parameter 1 for string: The Value of Property '{0}' cannot be less than Value of Property '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessagingEntityIsDisabledForReceiveException(System.Object)">
            <summary>Gets localized string like: Messaging entity '{0}' is currently disabled for Receive operations.</summary>
            <param name="param0">Parameter 0 for string: Messaging entity '{0}' is currently disabled for Receive operations.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessagingEntityIsDisabledForSendException(System.Object)">
            <summary>Gets localized string like: Messaging entity '{0}' is currently disabled for Send operations.</summary>
            <param name="param0">Parameter 0 for string: Messaging entity '{0}' is currently disabled for Send operations.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SqlSettingNotFound(System.Object)">
            <summary>Gets localized string like: Could not find '{0}' setting in gateway</summary>
            <param name="param0">Parameter 0 for string: Could not find '{0}' setting in gateway</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MaxConcurrentCallsMustBeGreaterThanZero(System.Object)">
            <summary>Gets localized string like: The specified value ({0}) is invalid. "maxConcurrentCalls" must be greater than zero.</summary>
            <param name="param0">Parameter 0 for string: The specified value ({0}) is invalid. "maxConcurrentCalls" must be greater than zero.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InstanceAlreadyRunning(System.Object)">
            <summary>Gets localized string like: This '{0}' instance has already been started once. To start another instance, please create a new '{0}' object and start that.</summary>
            <param name="param0">Parameter 0 for string: This '{0}' instance has already been started once. To start another instance, please create a new '{0}' object and start that.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.BacklogDeadletterDescriptionNotRetryable(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: An exception was received when sending the message to queue '{0}'. Exception: {1}: {2}</summary>
            <param name="param0">Parameter 0 for string: An exception was received when sending the message to queue '{0}'. Exception: {1}: {2}</param>
            <param name="param1">Parameter 1 for string: An exception was received when sending the message to queue '{0}'. Exception: {1}: {2}</param>
            <param name="param2">Parameter 2 for string: An exception was received when sending the message to queue '{0}'. Exception: {1}: {2}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PairedNamespacePropertyExtractionDlqDescription(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Could not use property '{0}' in message id '{1}'. Expected type '{2}' but received type '{3}' with string value '{4}'.</summary>
            <param name="param0">Parameter 0 for string: Could not use property '{0}' in message id '{1}'. Expected type '{2}' but received type '{3}' with string value '{4}'.</param>
            <param name="param1">Parameter 1 for string: Could not use property '{0}' in message id '{1}'. Expected type '{2}' but received type '{3}' with string value '{4}'.</param>
            <param name="param2">Parameter 2 for string: Could not use property '{0}' in message id '{1}'. Expected type '{2}' but received type '{3}' with string value '{4}'.</param>
            <param name="param3">Parameter 3 for string: Could not use property '{0}' in message id '{1}'. Expected type '{2}' but received type '{3}' with string value '{4}'.</param>
            <param name="param4">Parameter 4 for string: Could not use property '{0}' in message id '{1}'. Expected type '{2}' but received type '{3}' with string value '{4}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ApnsCertificateNotUsable(System.Object)">
            <summary>Gets localized string like: Unable to use the certificate specified in apple credentials. The error is: '{0}'</summary>
            <param name="param0">Parameter 0 for string: Unable to use the certificate specified in apple credentials. The error is: '{0}'</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidToken(System.Object,System.Object)">
            <summary>Gets localized string like: Invalid token '{0}' in expression :'{1}'.</summary>
            <param name="param0">Parameter 0 for string: Invalid token '{0}' in expression :'{1}'.</param>
            <param name="param1">Parameter 1 for string: Invalid token '{0}' in expression :'{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.LitteralMissing(System.Object,System.Object)">
            <summary>Gets localized string like: Expression is '{0}'. Literal is missing closing notation. Current invalid token is '{1}'.</summary>
            <param name="param0">Parameter 0 for string: Expression is '{0}'. Literal is missing closing notation. Current invalid token is '{1}'.</param>
            <param name="param1">Parameter 1 for string: Expression is '{0}'. Literal is missing closing notation. Current invalid token is '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MissingWNSHeader(System.Object)">
            <summary>Gets localized string like: Must contain WNS Header : '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Must contain WNS Header : '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PropertyLengthError(System.Object,System.Object)">
            <summary>Gets localized string like: Property name is of length: ' {0}'. Maximum allowed length is '{1}'.</summary>
            <param name="param0">Parameter 0 for string: Property name is of length: ' {0}'. Maximum allowed length is '{1}'.</param>
            <param name="param1">Parameter 1 for string: Property name is of length: ' {0}'. Maximum allowed length is '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PropertyNameError(System.Object)">
            <summary>Gets localized string like: Property Name: '{0}', Only ASCII-7 alphanumeric characters and '_' are permitted in the property name.</summary>
            <param name="param0">Parameter 0 for string: Property Name: '{0}', Only ASCII-7 alphanumeric characters and '_' are permitted in the property name.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.TokenBeginError(System.Object,System.Object)">
            <summary>Gets localized string like: Token has to begin with one of these characters . % ' "" $.  Invalid token is '{0}', Expression '{1}'.</summary>
            <param name="param0">Parameter 0 for string: Token has to begin with one of these characters . % ' "" $.  Invalid token is '{0}', Expression '{1}'.</param>
            <param name="param1">Parameter 1 for string: Token has to begin with one of these characters . % ' "" $.  Invalid token is '{0}', Expression '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnsupportedChannelUri(System.Object)">
            <summary>Gets localized string like: Unsupported channel uri: '{0}'</summary>
            <param name="param0">Parameter 0 for string: Unsupported channel uri: '{0}'</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnsupportedExpression(System.Object)">
            <summary>Gets localized string like: Unsupported expression :'{0}'</summary>
            <param name="param0">Parameter 0 for string: Unsupported expression :'{0}'</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.WNSHeaderNullOrEmpty(System.Object)">
            <summary>Gets localized string like: WNS header '{0}' is null or empty.</summary>
            <param name="param0">Parameter 0 for string: WNS header '{0}' is null or empty.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.FaultingPairedMessagingFactory(System.Object,System.Object)">
            <summary>Gets localized string like: Pairing error: MessageFactory at '{0}' is open and MessagingFactory at '{1}' is not open. Faulting MessagingFactory at '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Pairing error: MessageFactory at '{0}' is open and MessagingFactory at '{1}' is not open. Faulting MessagingFactory at '{0}'.</param>
            <param name="param1">Parameter 1 for string: Pairing error: MessageFactory at '{0}' is open and MessagingFactory at '{1}' is not open. Faulting MessagingFactory at '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MissingMpnsHeader(System.Object)">
            <summary>Gets localized string like: Must contain Mpns Header : '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Must contain Mpns Header : '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MpnsCertificateError(System.Object)">
            <summary>Gets localized string like: Unable to use the certificate specified in mpns credentials. The error is  : '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Unable to use the certificate specified in mpns credentials. The error is  : '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MpnsHeaderIsNullOrEmpty(System.Object)">
            <summary>Gets localized string like: MPNS header '{0}' is null or empty.</summary>
            <param name="param0">Parameter 0 for string: MPNS header '{0}' is null or empty.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnknownApiVersion(System.Object)">
            <summary>Gets localized string like: The api-version in the query string is not supported. Either remove it from the Uri or use one of '{0}'.</summary>
            <param name="param0">Parameter 0 for string: The api-version in the query string is not supported. Either remove it from the Uri or use one of '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PropertyOverMaxValue(System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' property exceeds the maximum allowed size of {1} characters.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' property exceeds the maximum allowed size of {1} characters.</param>
            <param name="param1">Parameter 1 for string: The '{0}' property exceeds the maximum allowed size of {1} characters.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SessionHandlerDoesNotHaveDefaultConstructor(System.Object)">
            <summary>Gets localized string like: The specified type ({0}) does not have a public default constructor.</summary>
            <param name="param0">Parameter 0 for string: The specified type ({0}) does not have a public default constructor.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SessionHandlerMissingInterfaces(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The specified type ({0}) does not implement {1} or {2}.</summary>
            <param name="param0">Parameter 0 for string: The specified type ({0}) does not implement {1} or {2}.</param>
            <param name="param1">Parameter 1 for string: The specified type ({0}) does not implement {1} or {2}.</param>
            <param name="param2">Parameter 2 for string: The specified type ({0}) does not implement {1} or {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PropertyMustBeEqualOrLessThanOtherProperty(System.Object,System.Object)">
            <summary>Gets localized string like: {0} property must be equal or less than {1} property.</summary>
            <param name="param0">Parameter 0 for string: {0} property must be equal or less than {1} property.</param>
            <param name="param1">Parameter 1 for string: {0} property must be equal or less than {1} property.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ValueMustBePositive(System.Object)">
            <summary>Gets localized string like: The specified value ({0}) is not valid. The value must be positive. </summary>
            <param name="param0">Parameter 0 for string: The specified value ({0}) is not valid. The value must be positive. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessagingEntityGone(System.Object)">
            <summary>Gets localized string like: The messaging entity '{0}' is not valid anymore.</summary>
            <param name="param0">Parameter 0 for string: The messaging entity '{0}' is not valid anymore.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.OnlyNPropertiesRequired(System.Object,System.Object)">
            <summary>Gets localized string like: Only {0} properties are required: {1}.</summary>
            <param name="param0">Parameter 0 for string: Only {0} properties are required: {1}.</param>
            <param name="param1">Parameter 1 for string: Only {0} properties are required: {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.RequiredPropertiesNotSpecified(System.Object)">
            <summary>Gets localized string like: Required properties are not specified: {0}.</summary>
            <param name="param0">Parameter 0 for string: Required properties are not specified: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.RequiredPropertyNotSpecified(System.Object)">
            <summary>Gets localized string like: Required property is not specified: {0}.</summary>
            <param name="param0">Parameter 0 for string: Required property is not specified: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidMethodWhilePeeking(System.Object)">
            <summary>Gets localized string like: The operation '{0}' cannot be completed because the message was received through Peek. Make sure the message is obtained from a Receive() call instead.</summary>
            <param name="param0">Parameter 0 for string: The operation '{0}' cannot be completed because the message was received through Peek. Make sure the message is obtained from a Receive() call instead.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.DominatingPropertyMustBeEqualsToNonNullDormantProperty(System.Object,System.Object)">
            <summary>Gets localized string like: {0} must be equal to {1} when {1} has a value different than null. Assign null to {1} to be able to set {0}.</summary>
            <param name="param0">Parameter 0 for string: {0} must be equal to {1} when {1} has a value different than null. Assign null to {1} to be able to set {0}.</param>
            <param name="param1">Parameter 1 for string: {0} must be equal to {1} when {1} has a value different than null. Assign null to {1} to be able to set {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InvalidEventHubCheckpointSettings(System.Object)">
            <summary>Gets localized string like: EventHubReceiver can only have either client side starting offset or datetime, or create use a consumer group with checkpoint enabled (EnableCheckpoint={0})</summary>
            <param name="param0">Parameter 0 for string: EventHubReceiver can only have either client side starting offset or datetime, or create use a consumer group with checkpoint enabled (EnableCheckpoint={0})</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.EventHubUnsupportedOperation(System.Object)">
            <summary>Gets localized string like: '{0}' is not a supported operation for EventHub.</summary>
            <param name="param0">Parameter 0 for string: '{0}' is not a supported operation for EventHub.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.EventHubSendBatchMismatchPartitionKey(System.Object,System.Object)">
            <summary>Gets localized string like: All event data in a SendBatch operation must have the same partition key. Expected key is '{0}' but encountered another key of '{1}'.</summary>
            <param name="param0">Parameter 0 for string: All event data in a SendBatch operation must have the same partition key. Expected key is '{0}' but encountered another key of '{1}'.</param>
            <param name="param1">Parameter 1 for string: All event data in a SendBatch operation must have the same partition key. Expected key is '{0}' but encountered another key of '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.EventHubSendBatchMismatchPublisher(System.Object,System.Object)">
            <summary>Gets localized string like: All event data in a SendBatch operation must have the same publisher name. Expected name is '{0}' but encountered another name of '{1}'.</summary>
            <param name="param0">Parameter 0 for string: All event data in a SendBatch operation must have the same publisher name. Expected name is '{0}' but encountered another name of '{1}'.</param>
            <param name="param1">Parameter 1 for string: All event data in a SendBatch operation must have the same publisher name. Expected name is '{0}' but encountered another name of '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.EventHubUnsupportedTransport(System.Object)">
            <summary>Gets localized string like: '{0}' is not a supported transport type for EventHub. Use AMQP.</summary>
            <param name="param0">Parameter 0 for string: '{0}' is not a supported transport type for EventHub. Use AMQP.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.RetryPolicyInvalidBackoffPeriod(System.Object,System.Object)">
            <summary>Gets localized string like: The minimum back off period '{0}' cannot exceed the maximum back off period of '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The minimum back off period '{0}' cannot exceed the maximum back off period of '{1}'.</param>
            <param name="param1">Parameter 1 for string: The minimum back off period '{0}' cannot exceed the maximum back off period of '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessagingEntityRequestConflict(System.Object)">
            <summary>Gets localized string like: Request on entity {0} conflicted with another request</summary>
            <param name="param0">Parameter 0 for string: Request on entity {0} conflicted with another request</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PartitionInvalidPartitionKey(System.Object,System.Object)">
            <summary>Gets localized string like: The specified partition key '{0}' is invalid for partition '{1}'. Do not set a value when sending using a PartitionedSender.  Otherwise use EventHubClient.Send.</summary>
            <param name="param0">Parameter 0 for string: The specified partition key '{0}' is invalid for partition '{1}'. Do not set a value when sending using a PartitionedSender.  Otherwise use EventHubClient.Send.</param>
            <param name="param1">Parameter 1 for string: The specified partition key '{0}' is invalid for partition '{1}'. Do not set a value when sending using a PartitionedSender.  Otherwise use EventHubClient.Send.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.CannotSendAnEmptyEvent(System.Object)">
            <summary>Gets localized string like: Sending empty {0} is not a valid operation.</summary>
            <param name="param0">Parameter 0 for string: Sending empty {0} is not a valid operation.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.InitialOffsetProviderReturnTypeNotSupported(System.Object)">
            <summary>Gets localized string like: Values of type '{0}' not supported as valid initial offsets.  Only string and DateTime are valid offset types for EventProcessorOptions.InitialOffsetProvider.</summary>
            <param name="param0">Parameter 0 for string: Values of type '{0}' not supported as valid initial offsets.  Only string and DateTime are valid offset types for EventProcessorOptions.InitialOffsetProvider.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PublisherIsRevokedException(System.Object)">
            <summary>Gets localized string like: Publisher: {0}, was revoked access to Send messages to EventHub.</summary>
            <param name="param0">Parameter 0 for string: Publisher: {0}, was revoked access to Send messages to EventHub.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SpecifyConnStrEntityPath(System.Object)">
            <summary>Gets localized string like: {0} name should be specified as EntityPath in connectionString.</summary>
            <param name="param0">Parameter 0 for string: {0} name should be specified as EntityPath in connectionString.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SpecifyEntityNameInPathArg(System.Object)">
            <summary>Gets localized string like: {0} name should not be specified as EntityPath while using this Overload. Instead, please use 'path' parameter.</summary>
            <param name="param0">Parameter 0 for string: {0} name should not be specified as EntityPath while using this Overload. Instead, please use 'path' parameter.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.UnsupportedConnStr4MsgFactory(System.Object)">
            <summary>Gets localized string like: ConnectionString used to create {0} shouldn't include EntityPath as {0} is at Namespace level.</summary>
            <param name="param0">Parameter 0 for string: ConnectionString used to create {0} shouldn't include EntityPath as {0} is at Namespace level.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SasTokenShouldBeAlone(System.Object,System.Object)">
            <summary>Gets localized string like: {0} cannot be specified along with {1}. {0} alone should be sufficient to Authenticate the request.</summary>
            <param name="param0">Parameter 0 for string: {0} cannot be specified along with {1}. {0} alone should be sufficient to Authenticate the request.</param>
            <param name="param1">Parameter 1 for string: {0} cannot be specified along with {1}. {0} alone should be sufficient to Authenticate the request.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.AppSettingsConfigInvalidCombination(System.Object,System.Object)">
            <summary>Gets localized string like: The Service Bus connection string contains invalid combination. {0} should be specified alone and shouldn't be combined with {1}.</summary>
            <param name="param0">Parameter 0 for string: The Service Bus connection string contains invalid combination. {0} should be specified alone and shouldn't be combined with {1}.</param>
            <param name="param1">Parameter 1 for string: The Service Bus connection string contains invalid combination. {0} should be specified alone and shouldn't be combined with {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.SettingPublisherNotAllowed(System.Object)">
            <summary>Gets localized string like: Setting the SystemProperty : Publisher ({0}) on EventData is not allowed. Use connection string to specify the Publisher.</summary>
            <param name="param0">Parameter 0 for string: Setting the SystemProperty : Publisher ({0}) on EventData is not allowed. Use connection string to specify the Publisher.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpressionIsNotPositiveInteger(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Expression is {0}. {2} is not a positive integer. The current invalid token is {1}</summary>
            <param name="param0">Parameter 0 for string: Expression is {0}. {2} is not a positive integer. The current invalid token is {1}</param>
            <param name="param1">Parameter 1 for string: Expression is {0}. {2} is not a positive integer. The current invalid token is {1}</param>
            <param name="param2">Parameter 2 for string: Expression is {0}. {2} is not a positive integer. The current invalid token is {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpressionErrorParseDotFormat(System.Object,System.Object)">
            <summary>Gets localized string like: Expression is {0}. Error trying to parse for .(prop , n) format. The current invalid token is {1}</summary>
            <param name="param0">Parameter 0 for string: Expression is {0}. Error trying to parse for .(prop , n) format. The current invalid token is {1}</param>
            <param name="param1">Parameter 1 for string: Expression is {0}. Error trying to parse for .(prop , n) format. The current invalid token is {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpressionErrorParsePercentFormat(System.Object,System.Object)">
            <summary>Gets localized string like: Expression is {0}. The expression %(prop , n) is not a valid. The current invalid token is {1}</summary>
            <param name="param0">Parameter 0 for string: Expression is {0}. The expression %(prop , n) is not a valid. The current invalid token is {1}</param>
            <param name="param1">Parameter 1 for string: Expression is {0}. The expression %(prop , n) is not a valid. The current invalid token is {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpressionMissingClosingParentheses(System.Object,System.Object)">
            <summary>Gets localized string like: Expression is {0}. Missing closing parentheses. Current invalid token is {1}</summary>
            <param name="param0">Parameter 0 for string: Expression is {0}. Missing closing parentheses. Current invalid token is {1}</param>
            <param name="param1">Parameter 1 for string: Expression is {0}. Missing closing parentheses. Current invalid token is {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpressionMissingDefaultEnd(System.Object,System.Object)">
            <summary>Gets localized string like: Expression is {0}. Missing default's end. Current invalid token is {1}</summary>
            <param name="param0">Parameter 0 for string: Expression is {0}. Missing default's end. Current invalid token is {1}</param>
            <param name="param1">Parameter 1 for string: Expression is {0}. Missing default's end. Current invalid token is {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpressionMissingProperty(System.Object,System.Object)">
            <summary>Gets localized string like: Expression is {0}. Missing property. Current invalid token is {1}</summary>
            <param name="param0">Parameter 0 for string: Expression is {0}. Missing property. Current invalid token is {1}</param>
            <param name="param1">Parameter 1 for string: Expression is {0}. Missing property. Current invalid token is {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpressionMissingOpenParentheses(System.Object,System.Object)">
            <summary>Gets localized string like: Expression is {0}. The character following $ or . or % should be a ( The current invalid token is {1}</summary>
            <param name="param0">Parameter 0 for string: Expression is {0}. The character following $ or . or % should be a ( The current invalid token is {1}</param>
            <param name="param1">Parameter 1 for string: Expression is {0}. The character following $ or . or % should be a ( The current invalid token is {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpressionLiteralMissingClosingNotation(System.Object,System.Object)">
            <summary>Gets localized string like: Expression is {0}. Literal is missing closing notation. Current invalid token is {1}</summary>
            <param name="param0">Parameter 0 for string: Expression is {0}. Literal is missing closing notation. Current invalid token is {1}</param>
            <param name="param1">Parameter 1 for string: Expression is {0}. Literal is missing closing notation. Current invalid token is {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpressionInvalidCompositionOperator(System.Object,System.Object)">
            <summary>Gets localized string like: Expression is {0}. Only valid composition operator is +. Current invalid token is : {1}</summary>
            <param name="param0">Parameter 0 for string: Expression is {0}. Only valid composition operator is +. Current invalid token is : {1}</param>
            <param name="param1">Parameter 1 for string: Expression is {0}. Only valid composition operator is +. Current invalid token is : {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PropertyTooLong(System.Object,System.Object)">
            <summary>Gets localized string like: Property name is of length. {0}. Maximum allowed length is {1}</summary>
            <param name="param0">Parameter 0 for string: Property name is of length. {0}. Maximum allowed length is {1}</param>
            <param name="param1">Parameter 1 for string: Property name is of length. {0}. Maximum allowed length is {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PropertyNameIsBad(System.Object)">
            <summary>Gets localized string like: Property name is {0}. Only ASCII-7 alphanumeric characters and '_' are permitted in the property name</summary>
            <param name="param0">Parameter 0 for string: Property name is {0}. Only ASCII-7 alphanumeric characters and '_' are permitted in the property name</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpressionInvalidTokenType(System.Object,System.Object)">
            <summary>Gets localized string like: Expression is {0}. Token has to begin with one of these characters . % ' "" $. Current invalid token is {1}</summary>
            <param name="param0">Parameter 0 for string: Expression is {0}. Token has to begin with one of these characters . % ' "" $. Current invalid token is {1}</param>
            <param name="param1">Parameter 1 for string: Expression is {0}. Token has to begin with one of these characters . % ' "" $. Current invalid token is {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpressionInvalidToken(System.Object,System.Object)">
            <summary>Gets localized string like: Expression is {0}. Error is it contains an invalid token : {1}</summary>
            <param name="param0">Parameter 0 for string: Expression is {0}. Error is it contains an invalid token : {1}</param>
            <param name="param1">Parameter 1 for string: Expression is {0}. Error is it contains an invalid token : {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ExpressionMissingClosingParenthesesNoToken(System.Object)">
            <summary>Gets localized string like: Expression is {0}. Error is closing parenthesis is missing</summary>
            <param name="param0">Parameter 0 for string: Expression is {0}. Error is closing parenthesis is missing</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.AmqpMessageDecodeFailure(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The receiver received an AMQP message that cannot be decoded. Reference: {0}, Code: {1}, Details: {2}.</summary>
            <param name="param0">Parameter 0 for string: The receiver received an AMQP message that cannot be decoded. Reference: {0}, Code: {1}, Details: {2}.</param>
            <param name="param1">Parameter 1 for string: The receiver received an AMQP message that cannot be decoded. Reference: {0}, Code: {1}, Details: {2}.</param>
            <param name="param2">Parameter 2 for string: The receiver received an AMQP message that cannot be decoded. Reference: {0}, Code: {1}, Details: {2}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.PublisherTokenNeedExactMatch(System.Object)">
            <summary>Gets localized string like: Wrong audience in authorization header token. Resource Uri in the Publisher token should exactly match the Audience Uri. Only EventHub level SAS Keys should be used for Token generation. Tracking Id: {0}.</summary>
            <param name="param0">Parameter 0 for string: Wrong audience in authorization header token. Resource Uri in the Publisher token should exactly match the Audience Uri. Only EventHub level SAS Keys should be used for Token generation. Tracking Id: {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessagingPartitioningOperationNotSupported(System.Object)">
            <summary>Gets localized string like: The operation '{0}' is not supported for an entity with partitioning enabled.</summary>
            <param name="param0">Parameter 0 for string: The operation '{0}' is not supported for an entity with partitioning enabled.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.MessagingPartitioningSdkOperationNotSupported(System.Object)">
            <summary>Gets localized string like: This SDK does not support operation '{0}' for an entity with partitioning enabled. Please use a newer version of the SDK.</summary>
            <param name="param0">Parameter 0 for string: This SDK does not support operation '{0}' for an entity with partitioning enabled. Please use a newer version of the SDK.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ArchiveInputHasQuotes(System.Object)">
            <summary>Gets localized string like: Please remove the quotes surrounding '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Please remove the quotes surrounding '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ArchivePathIsInvalid(System.Object)">
            <summary>Gets localized string like: Invalid archive path provided. Error: '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Invalid archive path provided. Error: '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ArchiveNullOrEmptyInput(System.Object)">
            <summary>Gets localized string like: '{0}' is null or empty.</summary>
            <param name="param0">Parameter 0 for string: '{0}' is null or empty.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ReceiverNameOverMaxValue(System.Object)">
            <summary>Gets localized string like: The receiverName parameter exceeds the maximum allowed size of {0} characters.</summary>
            <param name="param0">Parameter 0 for string: The receiverName parameter exceeds the maximum allowed size of {0} characters.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRClient.ArchiveNameCustomPartLength(System.Object)">
            <summary>Gets localized string like: Max length for custom part in an archive name format is '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Max length for custom part in an archive name format is '{0}'.</param>
        </member>
        <member name="P:Microsoft.ServiceBus.SRAmqp.AmqpFramingError">
            <summary>Gets localized string like: A valid frame header cannot be formed from the incoming byte stream.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRAmqp.AmqpFieldSessionId">
            <summary>Gets localized string like: No session-id was specified for a session receiver.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRAmqp.AmqpUnopenObject">
            <summary>Gets localized string like: The object is not open.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRAmqp.AmqpDynamicTerminusNotSupported">
            <summary>Gets localized string like: Dynamic terminus is not currently supported.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRAmqp.AmqpInvalidRemoteIp">
            <summary>Gets localized string like: Unable to get valid source IP address for connection.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRAmqp.AmqpBufferAlreadyReclaimed">
            <summary>Gets localized string like: The buffer has already been reclaimed.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRAmqp.AmqpCannotCloneSentMessage">
            <summary>Gets localized string like: A message cannot be cloned after it has been sent.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRAmqp.AmqpCannotResendMessage">
            <summary>Gets localized string like: A message cannot be sent because it is either received from a link or is already sent over a link.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRAmqp.AmqpUnssuportedTokenType">
            <summary>Gets localized string like: The token type is not supported by this client implementation.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.SRAmqp.AmqpEmptyMessageNotAllowed">
            <summary>Gets localized string like: Sending an emtpy message is not allowed. At least one message section must be initialized.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpNoValidAddressForHost(System.Object)">
            <summary>Gets localized string like: No valid IP addresses were found for host {0}.</summary>
            <param name="param0">Parameter 0 for string: No valid IP addresses were found for host {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidPerformativeCode(System.Object)">
            <summary>Gets localized string like: The descriptor code of the performative '{0}' cannot be processed by the link.</summary>
            <param name="param0">Parameter 0 for string: The descriptor code of the performative '{0}' cannot be processed by the link.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidFormatCode(System.Object,System.Object)">
            <summary>Gets localized string like: The format code '{0}' at frame buffer offset '{1}' is invalid or unexpected.</summary>
            <param name="param0">Parameter 0 for string: The format code '{0}' at frame buffer offset '{1}' is invalid or unexpected.</param>
            <param name="param1">Parameter 1 for string: The format code '{0}' at frame buffer offset '{1}' is invalid or unexpected.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidMessageSectionCode(System.Object)">
            <summary>Gets localized string like: The value '{0}' is not a valid message section code or name.</summary>
            <param name="param0">Parameter 0 for string: The value '{0}' is not a valid message section code or name.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpRequiredFieldNotSet(System.Object,System.Object)">
            <summary>Gets localized string like: The required field '{0}' is not set in '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The required field '{0}' is not set in '{1}'.</param>
            <param name="param1">Parameter 1 for string: The required field '{0}' is not set in '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpApplicationProperties(System.Object)">
            <summary>Gets localized string like: Type {0} is not currently supported in AMQP application properties.</summary>
            <param name="param0">Parameter 0 for string: Type {0} is not currently supported in AMQP application properties.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpObjectAborted(System.Object)">
            <summary>Gets localized string like: The AMQP object {0} is aborted.</summary>
            <param name="param0">Parameter 0 for string: The AMQP object {0} is aborted.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpObjectClosing(System.Object,System.Object)">
            <summary>Gets localized string like: The AMQP object {0} is closing. Operation '{1}' cannot be performed.</summary>
            <param name="param0">Parameter 0 for string: The AMQP object {0} is closing. Operation '{1}' cannot be performed.</param>
            <param name="param1">Parameter 1 for string: The AMQP object {0} is closing. Operation '{1}' cannot be performed.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpIllegalOperationState(System.Object,System.Object)">
            <summary>Gets localized string like: operation: {0}, state: {1}</summary>
            <param name="param0">Parameter 0 for string: operation: {0}, state: {1}</param>
            <param name="param1">Parameter 1 for string: operation: {0}, state: {1}</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidMessageBodyType(System.Object,System.Object)">
            <summary>Gets localized string like: The message body type is {0} which is different from the requested {1}.</summary>
            <param name="param0">Parameter 0 for string: The message body type is {0} which is different from the requested {1}.</param>
            <param name="param1">Parameter 1 for string: The message body type is {0} which is different from the requested {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpChannelNotFound(System.Object,System.Object)">
            <summary>Gets localized string like: The session channel '{0}' cannot be found in connection '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The session channel '{0}' cannot be found in connection '{1}'.</param>
            <param name="param1">Parameter 1 for string: The session channel '{0}' cannot be found in connection '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpHandleNotFound(System.Object,System.Object)">
            <summary>Gets localized string like: The link handle '{0}' cannot be found in session '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The link handle '{0}' cannot be found in session '{1}'.</param>
            <param name="param1">Parameter 1 for string: The link handle '{0}' cannot be found in session '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpHandleInUse(System.Object,System.Object)">
            <summary>Gets localized string like: The handle '{0}' is already associated with object '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The handle '{0}' is already associated with object '{1}'.</param>
            <param name="param1">Parameter 1 for string: The handle '{0}' is already associated with object '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpHandleExceeded(System.Object)">
            <summary>Gets localized string like: Cannot allocate more handles to the current session or connection. The maximum number of handles allowed is {0}. Please free up resources and try again.</summary>
            <param name="param0">Parameter 0 for string: Cannot allocate more handles to the current session or connection. The maximum number of handles allowed is {0}. Please free up resources and try again.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpNotSupportMechanism(System.Object,System.Object)">
            <summary>Gets localized string like: None of the server sasl-mechanisms ({0}) are supported by the client ({1}).</summary>
            <param name="param0">Parameter 0 for string: None of the server sasl-mechanisms ({0}) are supported by the client ({1}).</param>
            <param name="param1">Parameter 1 for string: None of the server sasl-mechanisms ({0}) are supported by the client ({1}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpMessageSizeExceeded(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The received message (delivery-id:{0}, size:{1} bytes) exceeds the limit ({2} bytes) currently allowed on the link.</summary>
            <param name="param0">Parameter 0 for string: The received message (delivery-id:{0}, size:{1} bytes) exceeds the limit ({2} bytes) currently allowed on the link.</param>
            <param name="param1">Parameter 1 for string: The received message (delivery-id:{0}, size:{1} bytes) exceeds the limit ({2} bytes) currently allowed on the link.</param>
            <param name="param2">Parameter 2 for string: The received message (delivery-id:{0}, size:{1} bytes) exceeds the limit ({2} bytes) currently allowed on the link.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpConnectionInactive(System.Object,System.Object)">
            <summary>Gets localized string like: The connection was inactive for more than the allowed {0} milliseconds and is closed by container '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The connection was inactive for more than the allowed {0} milliseconds and is closed by container '{1}'.</param>
            <param name="param1">Parameter 1 for string: The connection was inactive for more than the allowed {0} milliseconds and is closed by container '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpTransferLimitExceeded(System.Object)">
            <summary>Gets localized string like: There is no link credit to accept the delivery (id={0}).</summary>
            <param name="param0">Parameter 0 for string: There is no link credit to accept the delivery (id={0}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpProtocolVersionNotSupported(System.Object,System.Object)">
            <summary>Gets localized string like: The requested protocol version '{0}' is not supported. The supported version is '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The requested protocol version '{0}' is not supported. The supported version is '{1}'.</param>
            <param name="param1">Parameter 1 for string: The requested protocol version '{0}' is not supported. The supported version is '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpProtocolVersionNotSet(System.Object)">
            <summary>Gets localized string like: At least one protocol version must be set for {0}.</summary>
            <param name="param0">Parameter 0 for string: At least one protocol version must be set for {0}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidType(System.Object)">
            <summary>Gets localized string like: The type {0} is not supported.</summary>
            <param name="param0">Parameter 0 for string: The type {0} is not supported.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpOperationNotSupported(System.Object)">
            <summary>Gets localized string like: {0} is not supported over AMQP.</summary>
            <param name="param0">Parameter 0 for string: {0} is not supported over AMQP.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidReOpenOperation(System.Object,System.Object)">
            <summary>Gets localized string like: Open was already called for the object '{0}' (state={1}).</summary>
            <param name="param0">Parameter 0 for string: Open was already called for the object '{0}' (state={1}).</param>
            <param name="param1">Parameter 1 for string: Open was already called for the object '{0}' (state={1}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpTimeout(System.Object,System.Object)">
            <summary>Gets localized string like: The operation did not complete within the allocated time {0} for object {1}. For more information on exception types and proper exception handling, please refer to http://go.microsoft.com/fwlink/?LinkId=761101</summary>
            <param name="param0">Parameter 0 for string: The operation did not complete within the allocated time {0} for object {1}. For more information on exception types and proper exception handling, please refer to http://go.microsoft.com/fwlink/?LinkId=761101</param>
            <param name="param1">Parameter 1 for string: The operation did not complete within the allocated time {0} for object {1}. For more information on exception types and proper exception handling, please refer to http://go.microsoft.com/fwlink/?LinkId=761101</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpDeliveryIDInUse(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The delivery id is already used (id:{0}, next-id:{1}, ulw:{2}, index:{3}).</summary>
            <param name="param0">Parameter 0 for string: The delivery id is already used (id:{0}, next-id:{1}, ulw:{2}, index:{3}).</param>
            <param name="param1">Parameter 1 for string: The delivery id is already used (id:{0}, next-id:{1}, ulw:{2}, index:{3}).</param>
            <param name="param2">Parameter 2 for string: The delivery id is already used (id:{0}, next-id:{1}, ulw:{2}, index:{3}).</param>
            <param name="param3">Parameter 3 for string: The delivery id is already used (id:{0}, next-id:{1}, ulw:{2}, index:{3}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpEncodingTypeMismatch(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The Encoding value of type ({0}:{1}) is different from that of its base type ({2}:{3}).</summary>
            <param name="param0">Parameter 0 for string: The Encoding value of type ({0}:{1}) is different from that of its base type ({2}:{3}).</param>
            <param name="param1">Parameter 1 for string: The Encoding value of type ({0}:{1}) is different from that of its base type ({2}:{3}).</param>
            <param name="param2">Parameter 2 for string: The Encoding value of type ({0}:{1}) is different from that of its base type ({2}:{3}).</param>
            <param name="param3">Parameter 3 for string: The Encoding value of type ({0}:{1}) is different from that of its base type ({2}:{3}).</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpDuplicateMemberOrder(System.Object,System.Object)">
            <summary>Gets localized string like: The order {0} is defined more than once for type {1}. Please specify the Order property of AmqpMemberAttribute explicitly to avoid this error.</summary>
            <param name="param0">Parameter 0 for string: The order {0} is defined more than once for type {1}. Please specify the Order property of AmqpMemberAttribute explicitly to avoid this error.</param>
            <param name="param1">Parameter 1 for string: The order {0} is defined more than once for type {1}. Please specify the Order property of AmqpMemberAttribute explicitly to avoid this error.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpUnknownDescriptor(System.Object,System.Object)">
            <summary>Gets localized string like: The descriptor {0} is unknown while deserializing {1}. This usually happens if a wrong type is given to the ReadObject method or KnownTypesAttribute is not defined.</summary>
            <param name="param0">Parameter 0 for string: The descriptor {0} is unknown while deserializing {1}. This usually happens if a wrong type is given to the ReadObject method or KnownTypesAttribute is not defined.</param>
            <param name="param1">Parameter 1 for string: The descriptor {0} is unknown while deserializing {1}. This usually happens if a wrong type is given to the ReadObject method or KnownTypesAttribute is not defined.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInsufficientBufferSize(System.Object,System.Object)">
            <summary>Gets localized string like: The requested data size '{0}' is greater than the length of the remaining buffer '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The requested data size '{0}' is greater than the length of the remaining buffer '{1}'.</param>
            <param name="param1">Parameter 1 for string: The requested data size '{0}' is greater than the length of the remaining buffer '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpErrorOccurred(System.Object)">
            <summary>Gets localized string like: An AMQP error occurred (condition='{0}').</summary>
            <param name="param0">Parameter 0 for string: An AMQP error occurred (condition='{0}').</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidLinkAttachAddress(System.Object,System.Object)">
            <summary>Gets localized string like: The hostname within the Target or Source address URL in the ATTACH frame ('{0}') is different than the hostname passed in the connection OPEN ('{1}').</summary>
            <param name="param0">Parameter 0 for string: The hostname within the Target or Source address URL in the ATTACH frame ('{0}') is different than the hostname passed in the connection OPEN ('{1}').</param>
            <param name="param1">Parameter 1 for string: The hostname within the Target or Source address URL in the ATTACH frame ('{0}') is different than the hostname passed in the connection OPEN ('{1}').</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidPublisherOperationForMessagingSku(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The operation cannot be performed against publisher '{0}' because the targeted namespace '{1}' is of {2} tier.</summary>
            <param name="param0">Parameter 0 for string: The operation cannot be performed against publisher '{0}' because the targeted namespace '{1}' is of {2} tier.</param>
            <param name="param1">Parameter 1 for string: The operation cannot be performed against publisher '{0}' because the targeted namespace '{1}' is of {2} tier.</param>
            <param name="param2">Parameter 2 for string: The operation cannot be performed against publisher '{0}' because the targeted namespace '{1}' is of {2} tier.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpGlobalOpaqueAddressesNotSupported(System.Object)">
            <summary>Gets localized string like: Global opaque (non-DNS) addresses are not supported ('{0}')</summary>
            <param name="param0">Parameter 0 for string: Global opaque (non-DNS) addresses are not supported ('{0}')</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidLinkAttachScheme(System.Object)">
            <summary>Gets localized string like: The scheme of the Target or Source address URL in the ATTACH frame ('{0}') is invalid. Only 'amqp' and 'amqps' schemes are supported.</summary>
            <param name="param0">Parameter 0 for string: The scheme of the Target or Source address URL in the ATTACH frame ('{0}') is invalid. Only 'amqp' and 'amqps' schemes are supported.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpIdleTimeoutNotSupported(System.Object,System.Object)">
            <summary>Gets localized string like: Idle timeout value specified in connection OPEN ('{0} ms') is not supported. Minimum idle timeout is '{1}' ms.</summary>
            <param name="param0">Parameter 0 for string: Idle timeout value specified in connection OPEN ('{0} ms') is not supported. Minimum idle timeout is '{1}' ms.</param>
            <param name="param1">Parameter 1 for string: Idle timeout value specified in connection OPEN ('{0} ms') is not supported. Minimum idle timeout is '{1}' ms.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidSequenceNumberComparison(System.Object,System.Object)">
            <summary>Gets localized string like: Comparison of {0} and {1} is invalid because the result is undefined.</summary>
            <param name="param0">Parameter 0 for string: Comparison of {0} and {1} is invalid because the result is undefined.</param>
            <param name="param1">Parameter 1 for string: Comparison of {0} and {1} is invalid because the result is undefined.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidPropertyType(System.Object,System.Object)">
            <summary>Gets localized string like: Invalid type for property '{0}' in the '{1}' section.</summary>
            <param name="param0">Parameter 0 for string: Invalid type for property '{0}' in the '{1}' section.</param>
            <param name="param1">Parameter 1 for string: Invalid type for property '{0}' in the '{1}' section.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidPropertyValue(System.Object,System.Object)">
            <summary>Gets localized string like: Invalid value for property '{0}' in the '{1}' section.</summary>
            <param name="param0">Parameter 0 for string: Invalid value for property '{0}' in the '{1}' section.</param>
            <param name="param1">Parameter 1 for string: Invalid value for property '{0}' in the '{1}' section.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpMissingOrInvalidProperty(System.Object,System.Object)">
            <summary>Gets localized string like: Property '{0}' in the '{1}' section is either missing, has the wrong type, or has an unexpected value.</summary>
            <param name="param0">Parameter 0 for string: Property '{0}' in the '{1}' section is either missing, has the wrong type, or has an unexpected value.</param>
            <param name="param1">Parameter 1 for string: Property '{0}' in the '{1}' section is either missing, has the wrong type, or has an unexpected value.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpMissingProperty(System.Object,System.Object)">
            <summary>Gets localized string like: Missing property '{0}' in the '{1}' section.</summary>
            <param name="param0">Parameter 0 for string: Missing property '{0}' in the '{1}' section.</param>
            <param name="param1">Parameter 1 for string: Missing property '{0}' in the '{1}' section.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpPutTokenAudienceMismatch(System.Object,System.Object)">
            <summary>Gets localized string like: 'put-token' operation: the 'name' application property value '{0}' should match the token audience value. Expected: '{1}' </summary>
            <param name="param0">Parameter 0 for string: 'put-token' operation: the 'name' application property value '{0}' should match the token audience value. Expected: '{1}' </param>
            <param name="param1">Parameter 1 for string: 'put-token' operation: the 'name' application property value '{0}' should match the token audience value. Expected: '{1}' </param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpPutTokenFailed(System.Object,System.Object)">
            <summary>Gets localized string like: Put token failed. status-code: {0}, status-description: {1}.</summary>
            <param name="param0">Parameter 0 for string: Put token failed. status-code: {0}, status-description: {1}.</param>
            <param name="param1">Parameter 1 for string: Put token failed. status-code: {0}, status-description: {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpCbsLinkAlreadyOpen(System.Object)">
            <summary>Gets localized string like: A link to connection '{0}' $cbs node has already been opened.</summary>
            <param name="param0">Parameter 0 for string: A link to connection '{0}' $cbs node has already been opened.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpInvalidCommand(System.Object)">
            <summary>Gets localized string like: Invalid command '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Invalid command '{0}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpManagementLinkAlreadyOpen(System.Object)">
            <summary>Gets localized string like: A link to connection '{0}' $management node has already been opened.</summary>
            <param name="param0">Parameter 0 for string: A link to connection '{0}' $management node has already been opened.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpManagementOperationFailed(System.Object,System.Object)">
            <summary>Gets localized string like: Management operation failed. status-code: {0}, status-description: {1}.</summary>
            <param name="param0">Parameter 0 for string: Management operation failed. status-code: {0}, status-description: {1}.</param>
            <param name="param1">Parameter 1 for string: Management operation failed. status-code: {0}, status-description: {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpLinkNameInUse(System.Object,System.Object)">
            <summary>Gets localized string like: A link with name '{0}' is already attached in session {1}.</summary>
            <param name="param0">Parameter 0 for string: A link with name '{0}' is already attached in session {1}.</param>
            <param name="param1">Parameter 1 for string: A link with name '{0}' is already attached in session {1}.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpEntityManagementLinkAlreadyRegistered(System.Object,System.Object)">
            <summary>Gets localized string like: A link with the same '{0}' value '{1}' address has been already registered to the entity management node $management.</summary>
            <param name="param0">Parameter 0 for string: A link with the same '{0}' value '{1}' address has been already registered to the entity management node $management.</param>
            <param name="param1">Parameter 1 for string: A link with the same '{0}' value '{1}' address has been already registered to the entity management node $management.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpEntityManagementRequestHandlerNotFound(System.Object)">
            <summary>Gets localized string like: A request handler with id '{0}' was not found in the entity management node $management. </summary>
            <param name="param0">Parameter 0 for string: A request handler with id '{0}' was not found in the entity management node $management. </param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpEntityManagementResponseLinkNotFound(System.Object)">
            <summary>Gets localized string like: The response link '{0}' was not found in the entity management node $management.</summary>
            <param name="param0">Parameter 0 for string: The response link '{0}' was not found in the entity management node $management.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpRequiredFieldNotSetOrInvalidType(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The required field '{0}' has an invalid type or is not set at '{1}'. The type should be '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The required field '{0}' has an invalid type or is not set at '{1}'. The type should be '{2}'.</param>
            <param name="param1">Parameter 1 for string: The required field '{0}' has an invalid type or is not set at '{1}'. The type should be '{2}'.</param>
            <param name="param2">Parameter 2 for string: The required field '{0}' has an invalid type or is not set at '{1}'. The type should be '{2}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpTransportUpgradeNotAllowed(System.Object,System.Object)">
            <summary>Gets localized string like: Cannot upgrade transport from type '{0}' to '{1}'.</summary>
            <param name="param0">Parameter 0 for string: Cannot upgrade transport from type '{0}' to '{1}'.</param>
            <param name="param1">Parameter 1 for string: Cannot upgrade transport from type '{0}' to '{1}'.</param>
        </member>
        <member name="M:Microsoft.ServiceBus.SRAmqp.AmqpIncorrectProtocolName(System.Object)">
            <summary>Gets localized string like: The received protocol header contains incorrect protocol name. Expect: 'A' 'M' 'Q' 'P', Actual bytes '{0}'.</summary>
            <param name="param0">Parameter 0 for string: The received protocol header contains incorrect protocol name. Expect: 'A' 'M' 'Q' 'P', Actual bytes '{0}'.</param>
        </member>
        <member name="T:System.Threading.Async.AsyncProducerConsumerCollection`1">
            <summary>Provides an asynchronous producer/consumer collection.</summary>
        </member>
        <member name="F:System.Threading.Async.AsyncProducerConsumerCollection`1._semaphore">
            <summary>Asynchronous semaphore used to keep track of asynchronous work.</summary>
        </member>
        <member name="F:System.Threading.Async.AsyncProducerConsumerCollection`1._collection">
            <summary>The data stored in the collection.</summary>
        </member>
        <member name="M:System.Threading.Async.AsyncProducerConsumerCollection`1.#ctor">
            <summary>Initializes the asynchronous producer/consumer collection to store data in a first-in-first-out (FIFO) order.</summary>
        </member>
        <member name="M:System.Threading.Async.AsyncProducerConsumerCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})">
            <summary>Initializes the asynchronous producer/consumer collection.</summary>
            <param name="collection">The underlying collection to use to store data.</param>
        </member>
        <member name="M:System.Threading.Async.AsyncProducerConsumerCollection`1.Add(`0)">
            <summary>Adds an element to the collection.</summary>
            <param name="item">The item to be added.</param>
        </member>
        <member name="M:System.Threading.Async.AsyncProducerConsumerCollection`1.Take">
            <summary>Takes an element from the collection asynchronously.</summary>
            <returns>A Task that represents the element removed from the collection.</returns>
        </member>
        <member name="P:System.Threading.Async.AsyncProducerConsumerCollection`1.Count">
            <summary>Gets the number of elements in the collection.</summary>
        </member>
        <member name="M:System.Threading.Async.AsyncProducerConsumerCollection`1.Dispose">
            <summary>Disposes of the collection.</summary>
        </member>
        <member name="T:System.Threading.Async.AsyncSemaphore">
            <summary>Provides an asynchronous semaphore.</summary>
        </member>
        <member name="F:System.Threading.Async.AsyncSemaphore._currentCount">
            <summary>The current count.</summary>
        </member>
        <member name="F:System.Threading.Async.AsyncSemaphore._maxCount">
            <summary>The maximum count. If _maxCount isn't positive, the instance has been disposed.</summary>
        </member>
        <member name="F:System.Threading.Async.AsyncSemaphore._waitingTasks">
            <summary>Tasks waiting to be completed when the semaphore has count available.</summary>
        </member>
        <member name="M:System.Threading.Async.AsyncSemaphore.#ctor">
            <summary>Initializes the SemaphoreAsync with a count of zero and a maximum count of Int32.MaxValue.</summary>
        </member>
        <member name="M:System.Threading.Async.AsyncSemaphore.#ctor(System.Int32)">
            <summary>Initializes the SemaphoreAsync with the specified count and a maximum count of Int32.MaxValue.</summary>
            <param name="initialCount">The initial count to use as the current count.</param>
        </member>
        <member name="M:System.Threading.Async.AsyncSemaphore.#ctor(System.Int32,System.Int32)">
            <summary>Initializes the SemaphoreAsync with the specified counts.</summary>
            <param name="initialCount">The initial count to use as the current count.</param>
            <param name="maxCount">The maximum count allowed.</param>
        </member>
        <member name="P:System.Threading.Async.AsyncSemaphore.CurrentCount">
            <summary>Gets the current count.</summary>
        </member>
        <member name="P:System.Threading.Async.AsyncSemaphore.MaximumCount">
            <summary>Gets the maximum count.</summary>
        </member>
        <member name="P:System.Threading.Async.AsyncSemaphore.WaitingCount">
            <summary>Gets the number of operations currently waiting on the semaphore.</summary>
        </member>
        <member name="M:System.Threading.Async.AsyncSemaphore.WaitAsync">
            <summary>Waits for a unit to be available in the semaphore.</summary>
            <returns>A Task that will be completed when a unit is available and this Wait operation succeeds.</returns>
        </member>
        <member name="M:System.Threading.Async.AsyncSemaphore.Queue(System.Action)">
            <summary>
            Queues an action that will be executed when space is available
            in the semaphore.
            </summary>
            <param name="action">The action to be executed.</param>
            <returns>
            A Task that represents the execution of the action.
            </returns>
            <remarks>
            Release does not need to be called for this action, as it will be handled implicitly
            by the Queue method.
            </remarks>
        </member>
        <member name="M:System.Threading.Async.AsyncSemaphore.Queue``1(System.Func{``0})">
            <summary>
            Queues a function that will be executed when space is available
            in the semaphore.
            </summary>
            <param name="function">The function to be executed.</param>
            <returns>
            A Task that represents the execution of the function.
            </returns>
            <remarks>
            Release does not need to be called for this function, as it will be handled implicitly
            by the Queue method.
            </remarks>
        </member>
        <member name="M:System.Threading.Async.AsyncSemaphore.Release">
            <summary>Releases a unit of work to the semaphore.</summary>
        </member>
        <member name="M:System.Threading.Async.AsyncSemaphore.Dispose">
            <summary>Releases the resources used by the semaphore.</summary>
        </member>
        <member name="T:System.Threading.Tasks.CompletedTask">
            <summary>Provides access to an already completed task.</summary>
            <remarks>A completed task can be useful for using ContinueWith overloads where there aren't StartNew equivalents.</remarks>
        </member>
        <member name="F:System.Threading.Tasks.CompletedTask.Default">
            <summary>
            Gets a completed Task.
            Once we move to .NET 4.6 this can be removed and replaced with Task.CompletedTask
            </summary>
        </member>
        <member name="T:System.Threading.Tasks.CompletedTask`1">
            <summary>Provides access to an already completed task.</summary>
            <remarks>A completed task can be useful for using ContinueWith overloads where there aren't StartNew equivalents.</remarks>
        </member>
        <member name="M:System.Threading.Tasks.CompletedTask`1.#cctor">
            <summary>Initializes a Task.</summary>
        </member>
        <member name="F:System.Threading.Tasks.CompletedTask`1.Default">
            <summary>Gets a completed Task.</summary>
        </member>
        <member name="T:System.Threading.Tasks.Schedulers.QueuedTaskScheduler">
            <summary>
            Provides a TaskScheduler that provides control over priorities, fairness, and the underlying threads utilized.
            </summary>
        </member>
        <member name="T:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerDebugView">
            <summary>Debug view for the QueuedTaskScheduler.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerDebugView._scheduler">
            <summary>The scheduler.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerDebugView.#ctor(System.Threading.Tasks.Schedulers.QueuedTaskScheduler)">
            <summary>Initializes the debug view.</summary>
            <param name="scheduler">The scheduler.</param>
        </member>
        <member name="P:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerDebugView.ScheduledTasks">
            <summary>Gets all of the Tasks queued to the scheduler directly.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerDebugView.Queues">
            <summary>Gets the prioritized and fair queues.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler._queueGroups">
            <summary>
            A sorted list of round-robin queue lists.  Tasks with the smallest priority value
            are preferred.  Priority groups are round-robin'd through in order of priority.
            </summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler._disposeCancellation">
            <summary>Cancellation token used for disposal.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler._concurrencyLevel">
            <summary>
            The maximum allowed concurrency level of this scheduler.  If custom threads are
            used, this represents the number of created threads.
            </summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler._taskProcessingThread">
            <summary>Whether we're processing tasks on the current thread.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler._targetScheduler">
            <summary>The scheduler onto which actual work is scheduled.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler._nonthreadsafeTaskQueue">
            <summary>The queue of tasks to process when using an underlying target scheduler.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler._delegatesQueuedOrRunning">
            <summary>The number of Tasks that have been queued or that are running whiel using an underlying scheduler.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler._threads">
            <summary>The threads used by the scheduler to process work.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler._blockingTaskQueue">
            <summary>The collection of tasks to be executed on our custom threads.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.#ctor">
            <summary>Initializes the scheduler.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.#ctor(System.Threading.Tasks.TaskScheduler)">
            <summary>Initializes the scheduler.</summary>
            <param name="targetScheduler">The target underlying scheduler onto which this sceduler's work is queued.</param>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)">
            <summary>Initializes the scheduler.</summary>
            <param name="targetScheduler">The target underlying scheduler onto which this sceduler's work is queued.</param>
            <param name="maxConcurrencyLevel">The maximum degree of concurrency allowed for this scheduler's work.</param>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.#ctor(System.Int32)">
            <summary>Initializes the scheduler.</summary>
            <param name="threadCount">The number of threads to create and use for processing work items.</param>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.#ctor(System.Int32,System.String,System.Boolean,System.Threading.ThreadPriority,System.Threading.ApartmentState,System.Int32,System.Action,System.Action)">
            <summary>Initializes the scheduler.</summary>
            <param name="threadCount">The number of threads to create and use for processing work items.</param>
            <param name="threadName">The name to use for each of the created threads.</param>
            <param name="useForegroundThreads">A Boolean value that indicates whether to use foreground threads instead of background.</param>
            <param name="threadPriority">The priority to assign to each thread.</param>
            <param name="threadApartmentState">The apartment state to use for each thread.</param>
            <param name="threadMaxStackSize">The stack size to use for each thread.</param>
            <param name="threadInit">An initialization routine to run on each thread.</param>
            <param name="threadFinally">A finalization routine to run on each thread.</param>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.ThreadBasedDispatchLoop(System.Action,System.Action)">
            <summary>The dispatch loop run by all threads in this scheduler.</summary>
            <param name="threadInit">An initialization routine to run when the thread begins.</param>
            <param name="threadFinally">A finalization routine to run before the thread ends.</param>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.FindNextTask_NeedsLock(System.Threading.Tasks.Task@,System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue@)">
            <summary>Find the next task that should be executed, based on priorities and fairness and the like.</summary>
            <param name="targetTask">The found task, or null if none was found.</param>
            <param name="queueForTargetTask">
            The scheduler associated with the found task.  Due to security checks inside of TPL,  
            this scheduler needs to be used to execute that task.
            </param>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueueTask(System.Threading.Tasks.Task)">
            <summary>Queues a task to the scheduler.</summary>
            <param name="task">The task to be queued.</param>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.ProcessPrioritizedAndBatchedTasks">
            <summary>
            Process tasks one at a time in the best order.  
            This should be run in a Task generated by QueueTask.
            It's been separated out into its own method to show up better in Parallel Tasks.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.NotifyNewWorkItem">
            <summary>Notifies the pool that there's a new item to be executed in one of the round-robin queues.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)">
            <summary>Tries to execute a task synchronously on the current thread.</summary>
            <param name="task">The task to execute.</param>
            <param name="taskWasPreviouslyQueued">Whether the task was previously queued.</param>
            <returns>true if the task was executed; otherwise, false.</returns>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.GetScheduledTasks">
            <summary>Gets the tasks scheduled to this scheduler.</summary>
            <returns>An enumerable of all tasks queued to this scheduler.</returns>
            <remarks>This does not include the tasks on sub-schedulers.  Those will be retrieved by the debugger separately.</remarks>
        </member>
        <member name="P:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.MaximumConcurrencyLevel">
            <summary>Gets the maximum concurrency level to use when processing tasks.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.Dispose">
            <summary>Initiates shutdown of the scheduler.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.ActivateNewQueue">
            <summary>Creates and activates a new scheduling queue for this scheduler.</summary>
            <returns>The newly created and activated queue at priority 0.</returns>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.ActivateNewQueue(System.Int32)">
            <summary>Creates and activates a new scheduling queue for this scheduler.</summary>
            <param name="priority">The priority level for the new queue.</param>
            <returns>The newly created and activated queue at the specified priority.</returns>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.RemoveQueue_NeedsLock(System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue)">
            <summary>Removes a scheduler from the group.</summary>
            <param name="queue">The scheduler to be removed.</param>
        </member>
        <member name="T:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueueGroup">
            <summary>A group of queues a the same priority level.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueueGroup.NextQueueIndex">
            <summary>The starting index for the next round-robin traversal.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueueGroup.CreateSearchOrder">
            <summary>Creates a search order through this group.</summary>
            <returns>An enumerable of indices for this group.</returns>
        </member>
        <member name="T:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue">
            <summary>Provides a scheduling queue associatd with a QueuedTaskScheduler.</summary>
        </member>
        <member name="T:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.QueuedTaskSchedulerQueueDebugView">
            <summary>A debug view for the queue.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.QueuedTaskSchedulerQueueDebugView._queue">
            <summary>The queue.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.QueuedTaskSchedulerQueueDebugView.#ctor(System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue)">
            <summary>Initializes the debug view.</summary>
            <param name="queue">The queue to be debugged.</param>
        </member>
        <member name="P:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.QueuedTaskSchedulerQueueDebugView.Priority">
            <summary>Gets the priority of this queue in its associated scheduler.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.QueuedTaskSchedulerQueueDebugView.Id">
            <summary>Gets the ID of this scheduler.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.QueuedTaskSchedulerQueueDebugView.ScheduledTasks">
            <summary>Gets all of the tasks scheduled to this queue.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.QueuedTaskSchedulerQueueDebugView.AssociatedScheduler">
            <summary>Gets the QueuedTaskScheduler with which this queue is associated.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue._pool">
            <summary>The scheduler with which this pool is associated.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue._workItems">
            <summary>The work items stored in this queue.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue._disposed">
            <summary>Whether this queue has been disposed.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue._priority">
            <summary>Gets the priority for this queue.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.#ctor(System.Int32,System.Threading.Tasks.Schedulers.QueuedTaskScheduler)">
            <summary>Initializes the queue.</summary>
            <param name="priority">The priority associated with this queue.</param>
            <param name="pool">The scheduler with which this queue is associated.</param>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.GetScheduledTasks">
            <summary>Gets the tasks scheduled to this scheduler.</summary>
            <returns>An enumerable of all tasks queued to this scheduler.</returns>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.QueueTask(System.Threading.Tasks.Task)">
            <summary>Queues a task to the scheduler.</summary>
            <param name="task">The task to be queued.</param>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)">
            <summary>Tries to execute a task synchronously on the current thread.</summary>
            <param name="task">The task to execute.</param>
            <param name="taskWasPreviouslyQueued">Whether the task was previously queued.</param>
            <returns>true if the task was executed; otherwise, false.</returns>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.ExecuteTask(System.Threading.Tasks.Task)">
            <summary>Runs the specified ask.</summary>
            <param name="task">The task to execute.</param>
        </member>
        <member name="P:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.MaximumConcurrencyLevel">
            <summary>Gets the maximum concurrency level to use when processing tasks.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Schedulers.QueuedTaskScheduler.QueuedTaskSchedulerQueue.Dispose">
            <summary>Signals that the queue should be removed from the scheduler as soon as the queue is empty.</summary>
        </member>
        <member name="T:Babel.ParserGenerator.IMerge`1">
            <summary>
            Classes implementing this interface must supply a
            method that merges two location objects to return
            a new object of the same type.
            MPPG-generated parsers have the default location
            action equivalent to "@$ = @1.Merge(@N);" where N
            is the right-hand-side length of the production.
            </summary>
            <typeparam name="YYLTYPE"></typeparam>
        </member>
        <member name="T:Babel.ParserGenerator.LexLocation">
            <summary>
            This is the default class that carries location
            information from the scanner to the parser.
            If you don't declare "%YYLTYPE Foo" the parser
            will expect to deal with this type.
            </summary>
        </member>
        <member name="T:Babel.ParserGenerator.AScanner`2">
            <summary>
            Abstract scanner class that MPPG expects its scanners to extend.
            </summary>
            <typeparam name="YYSTYPE"></typeparam>
            <typeparam name="YYLTYPE"></typeparam>
        </member>
    </members>
</doc>
