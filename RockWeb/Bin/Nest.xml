<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nest</name>
    </assembly>
    <members>
        <member name="T:Nest.IAggregate">
            <summary>
            Represents the result of an aggregation on the response
            </summary>
        </member>
        <member name="T:Nest.IAggregation">
            <summary>
            Represents an aggregation on the request
            </summary>
        </member>
        <member name="M:Nest.AggregationContainerDescriptor`1._SetInnerAggregation``2(System.String,System.Func{``0,``1},System.Action{Nest.IAggregationContainer,``1})">
            <summary>
            Fluent methods do not assign to properties on `this` directly but on IAggregationContainers inside `this.Aggregations[string, IContainer]
            </summary>
        </member>
        <member name="P:Nest.FiltersAggregation.OtherBucket">
            <summary>
            Gets or sets whether to add a bucket to the response which will contain all documents
            that do not match any of the given filters.
            When set to <c>true</c>, the other bucket will be returned either in a bucket
            (named "_other_" by default) if named filters are being used,
             or as the last bucket if anonymous filters are being used
            When set to <c>false</c>, does not compute
            the other bucket.
            </summary>
        </member>
        <member name="P:Nest.FiltersAggregation.OtherBucketKey">
            <summary>
            Gets or sets the key for the other bucket to a value other than the default "_other_".
            Setting this parameter will implicitly set the <see cref="P:Nest.FiltersAggregation.OtherBucket"/> parameter to true
            </summary>
        </member>
        <member name="M:Nest.FiltersAggregationDescriptor`1.OtherBucket(System.Boolean)">
            <summary>
            Adds a bucket to the response which will contain all documents
            that do not match any of the given filters.
            When set to <c>true</c>, the other bucket will be returned either in a bucket
            (named "_other_" by default) if named filters are being used,
             or as the last bucket if anonymous filters are being used
            When set to <c>false</c>, does not compute
            the other bucket.
            </summary>
            <param name="otherBucket">whether to set the other bucket</param>
            <returns>the <see cref="T:Nest.FiltersAggregationDescriptor`1"/></returns>
        </member>
        <member name="M:Nest.FiltersAggregationDescriptor`1.OtherBucketKey(System.String)">
            <summary>
            Sets the key for the other bucket to a value other than the default "_other_".
            Setting this parameter will implicitly set the <see cref="M:Nest.FiltersAggregationDescriptor`1.OtherBucket(System.Boolean)"/> parameter to true
            </summary>
            <param name="otherBucketKey">the name for the other bucket</param>
            <returns>the <see cref="T:Nest.FiltersAggregationDescriptor`1"/></returns>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision1">
            <summary>
            5,009.4km x 4,992.6km
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision2">
            <summary>
            1,252.3km x 624.1km
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision3">
            <summary>
            156.5km x 156km
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision4">
            <summary>
            39.1km x 19.5km
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision5">
            <summary>
            4.9km x 4.9km
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision6">
            <summary>
            1.2km x 609.4m
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision7">
            <summary>
            152.9m x 152.4m
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision8">
            <summary>
            38.2m x 19m
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision9">
            <summary>
            4.8m x 4.8m
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision10">
            <summary>
            1.2m x 59.5cm
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision11">
            <summary>
            14.9cm x 14.9cm
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision12">
            <summary>
            3.7cm x 1.9cm
            </summary>
        </member>
        <member name="T:Nest.TermsAggregationCollectMode">
            <summary>
            Determines how the terms aggregation is executed
            </summary>
        </member>
        <member name="F:Nest.TermsAggregationCollectMode.DepthFirst">
            <summary>
            Order by using field values directly in order to aggregate data per-bucket 
            </summary>
        </member>
        <member name="F:Nest.TermsAggregationCollectMode.BreadthFirst">
            <summary>
            Order by using ordinals of the field values instead of the values themselves
            </summary>
        </member>
        <member name="T:Nest.TermsAggregationExecutionHint">
            <summary>
            Determines how the terms aggregation is executed
            </summary>
        </member>
        <member name="F:Nest.TermsAggregationExecutionHint.Map">
            <summary>
            Order by using field values directly in order to aggregate data per-bucket 
            </summary>
        </member>
        <member name="F:Nest.TermsAggregationExecutionHint.GlobalOrdinals">
            <summary>
            Order by using ordinals of the field and preemptively allocating one bucket per ordinal value
            </summary>
        </member>
        <member name="F:Nest.TermsAggregationExecutionHint.GlobalOrdinalsHash">
            <summary>
            Order by using ordinals of the field and dynamically allocating one bucket per ordinal value
            </summary>
        </member>
        <member name="F:Nest.TermsAggregationExecutionHint.GlobalOrdinalsLowCardinality">
            <summary>
            Order by using per-segment ordinals to compute counts and remap these counts to global counts using global ordinals
            </summary>
        </member>
        <member name="M:Nest.ScriptedMetricAggregate.Value``1">
            <summary>
            Get the result of the scripted metric aggregation as T
            </summary>
            <typeparam name="T">The type that best represents the result of your scripted metric aggrgation</typeparam>
        </member>
        <member name="P:Nest.Aggregations.Visitor.IAggregationVisitor.Depth">
            <summary>
            The current depth of the node being visited
            </summary>
        </member>
        <member name="P:Nest.Aggregations.Visitor.IAggregationVisitor.Scope">
            <summary>
            Hints the relation with the parent, i.e aggregations contained inside a bucket aggregation will have AggregationVisitorScope.Bucket set.
            </summary>
        </member>
        <member name="M:Nest.Aggregations.Visitor.IAggregationVisitor.Visit(Nest.IAggregationContainer)">
            <summary>
            Visit the aggregation container just before we dispatch into the aggregation it holds
            </summary>
            <param name="aggregationContainer"></param>
        </member>
        <member name="M:Nest.Aggregations.Visitor.IAggregationVisitor.Visit(Nest.IAggregation)">
            <summary>
            Visit every aggregation item just before they are visited by their specialized Visit() implementation
            </summary>
            <param name="aggregation">The IAggregation object that will be visited</param>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Custom(System.String,System.Func{Nest.CustomAnalyzerDescriptor,Nest.ICustomAnalyzer})">
            <summary>
            An analyzer of type custom that allows to combine a Tokenizer with zero or more Token Filters, 
            and zero or more Char Filters. 
            <para>The custom analyzer accepts a logical/registered name of the tokenizer to use, and a list of 
            logical/registered names of token filters.</para>
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Keyword(System.String,System.Func{Nest.KeywordAnalyzerDescriptor,Nest.IKeywordAnalyzer})">
            <summary>
            An analyzer of type keyword that “tokenizes” an entire stream as a single token. This is useful for data like zip codes, ids and so on. 
            <para>Note, when using mapping definitions, it make more sense to simply mark the field as not_analyzed.</para>
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Language(System.String,System.Func{Nest.LanguageAnalyzerDescriptor,Nest.ILanguageAnalyzer})">
            <summary>
            A set of analyzers aimed at analyzing specific language text. 
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Pattern(System.String,System.Func{Nest.PatternAnalyzerDescriptor,Nest.IPatternAnalyzer})">
            <summary>
            An analyzer of type pattern that can flexibly separate text into terms via a regular expression. 
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Simple(System.String,System.Func{Nest.SimpleAnalyzerDescriptor,Nest.ISimpleAnalyzer})">
            <summary>
            An analyzer of type simple that is built using a Lower Case Tokenizer.
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Snowball(System.String,System.Func{Nest.SnowballAnalyzerDescriptor,Nest.ISnowballAnalyzer})">
            <summary>
            An analyzer of type snowball that uses the standard tokenizer, with standard filter, lowercase filter, stop filter, and snowball filter.
            <para> The Snowball Analyzer is a stemming analyzer from Lucene that is originally based on the snowball project from snowball.tartarus.org.</para>
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Standard(System.String,System.Func{Nest.StandardAnalyzerDescriptor,Nest.IStandardAnalyzer})">
            <summary>
            An analyzer of type standard that is built of using Standard Tokenizer, with Standard Token Filter, Lower Case Token Filter, and Stop Token Filter.
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Stop(System.String,System.Func{Nest.StopAnalyzerDescriptor,Nest.IStopAnalyzer})">
            <summary>
            An analyzer of type stop that is built using a Lower Case Tokenizer, with Stop Token Filter.
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Whitespace(System.String,System.Func{Nest.WhitespaceAnalyzerDescriptor,Nest.IWhitespaceAnalyzer})">
            <summary>
            An analyzer of type whitespace that is built using a Whitespace Tokenizer.
            </summary>
        </member>
        <member name="T:Nest.ICustomAnalyzer">
            <summary>
            An analyzer of type custom that allows to combine a Tokenizer with zero or more Token Filters, 
            and zero or more Char Filters. 
            <para>The custom analyzer accepts a logical/registered name of the tokenizer to use, and a list of 
            logical/registered names of token filters.</para>
            </summary>
        </member>
        <member name="P:Nest.ICustomAnalyzer.CharFilter">
            <summary>
            The logical / registered name of the tokenizer to use.
            </summary>
        </member>
        <member name="P:Nest.ICustomAnalyzer.Filter">
            <summary>
            An optional list of logical / registered name of token filters.
            </summary>
        </member>
        <member name="P:Nest.ICustomAnalyzer.Tokenizer">
            <summary>
            An optional list of logical / registered name of char filters.
            </summary>
        </member>
        <member name="P:Nest.ICustomAnalyzer.PositionOffsetGap">
            <summary>
            An optional number of positions to increment between each field value of a 
            field using this analyzer.
            </summary>
        </member>
        <member name="P:Nest.CustomAnalyzer.Tokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CustomAnalyzer.Filter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CustomAnalyzer.CharFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CustomAnalyzer.PositionOffsetGap">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomAnalyzerDescriptor.Filters(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomAnalyzerDescriptor.Filters(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomAnalyzerDescriptor.CharFilters(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomAnalyzerDescriptor.CharFilters(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomAnalyzerDescriptor.Tokenizer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomAnalyzerDescriptor.PositionOffsetGap(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKeywordAnalyzer">
            <summary>
            An analyzer of type keyword that “tokenizes” an entire stream as a single token. This is useful for data like zip codes, ids and so on. 
            <para>Note, when using mapping definitions, it make more sense to simply mark the field as not_analyzed.</para>
            </summary>
        </member>
        <member name="T:Nest.KeywordAnalyzer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KeywordAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ILanguageAnalyzer">
            <summary>
            A set of analyzers aimed at analyzing specific language text. 
            </summary>
        </member>
        <member name="P:Nest.ILanguageAnalyzer.StopWords">
            <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
        </member>
        <member name="P:Nest.ILanguageAnalyzer.StemExclusionList">
            <summary>
            The stem_exclusion parameter allows you to specify an array of lowercase words that should not be stemmed. 
            </summary>
        </member>
        <member name="P:Nest.ILanguageAnalyzer.StopwordsPath">
            <summary>
            A path (either relative to config location, or absolute) to a stopwords file configuration.
            </summary>
        </member>
        <member name="T:Nest.LanguageAnalyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LanguageAnalyzer.StopWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LanguageAnalyzer.StemExclusionList">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LanguageAnalyzer.StopwordsPath">
            <inheritdoc/>
        </member>
        <member name="T:Nest.LanguageAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPatternAnalyzer">
            <summary>
            An analyzer of type pattern that can flexibly separate text into terms via a regular expression. 
            </summary>
        </member>
        <member name="P:Nest.IPatternAnalyzer.StopWords">
            <summary>
            A list of stopword to initialize the stop filter with. Defaults to an empty list
            </summary>
        </member>
        <member name="T:Nest.PatternAnalyzer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.PatternAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ISimpleAnalyzer">
            <summary>
            An analyzer of type simple that is built using a Lower Case Tokenizer.
            </summary>
        </member>
        <member name="T:Nest.SimpleAnalyzer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.SimpleAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ISnowballAnalyzer">
            <summary>
            An analyzer of type snowball that uses the standard tokenizer, with standard filter, lowercase filter, stop filter, and snowball filter.
            <para> The Snowball Analyzer is a stemming analyzer from Lucene that is originally based on the snowball project from snowball.tartarus.org.</para>
            </summary>
        </member>
        <member name="T:Nest.SnowballAnalyzer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.SnowballAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStandardAnalyzer">
            <summary>
            An analyzer of type standard that is built of using Standard Tokenizer, with Standard Token Filter, Lower Case Token Filter, and Stop Token Filter.
            </summary>
        </member>
        <member name="P:Nest.IStandardAnalyzer.StopWords">
            <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
        </member>
        <member name="P:Nest.IStandardAnalyzer.MaxTokenLength">
            <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
        </member>
        <member name="T:Nest.StandardAnalyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StandardAnalyzer.StopWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StandardAnalyzer.MaxTokenLength">
            <inheritdoc/>
        </member>
        <member name="T:Nest.StandardAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStopAnalyzer">
            <summary>
            An analyzer of type stop that is built using a Lower Case Tokenizer, with Stop Token Filter.
            </summary>
        </member>
        <member name="P:Nest.IStopAnalyzer.StopWords">
            <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
        </member>
        <member name="P:Nest.IStopAnalyzer.StopwordsPath">
            <summary>
            A path (either relative to config location, or absolute) to a stopwords file configuration.
            </summary>
        </member>
        <member name="T:Nest.StopAnalyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StopAnalyzer.StopWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StopAnalyzer.StopwordsPath">
            <inheritdoc/>
        </member>
        <member name="T:Nest.StopAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IWhitespaceAnalyzer">
            <summary>
            An analyzer of type whitespace that is built using a Whitespace Tokenizer.
            </summary>
        </member>
        <member name="T:Nest.WhitespaceAnalyzer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.WhitespaceAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CharFiltersDescriptor.PatternReplace(System.String,System.Func{Nest.PatternReplaceCharFilterDescriptor,Nest.IPatternReplaceCharFilter})">
            <summary>
            The pattern_replace char filter allows the use of a regex to manipulate the characters in a string before analysis. 
            </summary>
        </member>
        <member name="M:Nest.CharFiltersDescriptor.HtmlStrip(System.String,System.Func{Nest.HtmlStripCharFilterDescriptor,Nest.IHtmlStripCharFilter})">
            <summary>
            A char filter of type html_strip stripping out HTML elements from an analyzed text.
            </summary>
        </member>
        <member name="M:Nest.CharFiltersDescriptor.Mapping(System.String,System.Func{Nest.MappingCharFilterDescriptor,Nest.IMappingCharFilter})">
            <summary>
            A char filter of type mapping replacing characters of an analyzed text with given mapping.
            </summary>
        </member>
        <member name="T:Nest.IHtmlStripCharFilter">
            <summary>
            A char filter of type html_strip stripping out HTML elements from an analyzed text.
            </summary>
        </member>
        <member name="T:Nest.HtmlStripCharFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.HtmlStripCharFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IMappingCharFilter">
            <summary>
            A char filter of type mapping replacing characters of an analyzed text with given mapping.
            </summary>
        </member>
        <member name="T:Nest.MappingCharFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MappingCharFilter.Mappings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MappingCharFilter.MappingsPath">
            <inheritdoc/>
        </member>
        <member name="T:Nest.MappingCharFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MappingCharFilterDescriptor.Mappings(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MappingCharFilterDescriptor.Mappings(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MappingCharFilterDescriptor.MappingsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPatternReplaceCharFilter">
            <summary>
            The pattern_replace char filter allows the use of a regex to manipulate the characters in a string before analysis. 
            </summary>
        </member>
        <member name="T:Nest.PatternReplaceCharFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternReplaceCharFilter.Pattern">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternReplaceCharFilter.Replacement">
            <inheritdoc/>
        </member>
        <member name="T:Nest.PatternReplaceCharFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternReplaceCharFilterDescriptor.Pattern(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternReplaceCharFilterDescriptor.Replacement(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.Language">
            <summary>
            Language types used for language analyzers
            </summary>
        </member>
        <member name="T:Nest.SnowballLanguage">
            <summary>
            Snowball compatible languages 
            </summary>
        </member>
        <member name="T:Nest.IAsciiFoldingTokenFilter">
            <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are 
            <para> not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one exists.</para>
            </summary>
        </member>
        <member name="T:Nest.AsciiFoldingTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.AsciiFoldingTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AsciiFoldingTokenFilterDescriptor.PreserveOriginal(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ICommonGramsTokenFilter">
             <summary>
             Token filter that generates bigrams for frequently occuring terms. Single terms are still indexed.
            <para>Note, common_words or common_words_path field is required.</para>
             </summary>
        </member>
        <member name="P:Nest.ICommonGramsTokenFilter.CommonWords">
            <summary>
            A list of common words to use.
            </summary>
        </member>
        <member name="P:Nest.ICommonGramsTokenFilter.CommonWordsPath">
            <summary>
            A path (either relative to config location, or absolute) to a list of common words.
            </summary>
        </member>
        <member name="P:Nest.ICommonGramsTokenFilter.IgnoreCase">
            <summary>
            If true, common words matching will be case insensitive.
            </summary>
        </member>
        <member name="P:Nest.ICommonGramsTokenFilter.QueryMode">
            <summary>
            Generates bigrams then removes common words and single terms followed by a common word.
            </summary>
        </member>
        <member name="T:Nest.CommonGramsTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CommonGramsTokenFilter.CommonWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CommonGramsTokenFilter.CommonWordsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CommonGramsTokenFilter.IgnoreCase">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CommonGramsTokenFilter.QueryMode">
            <inheritdoc/>
        </member>
        <member name="T:Nest.CommonGramsTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonGramsTokenFilterDescriptor.QueryMode(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonGramsTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonGramsTokenFilterDescriptor.CommonWordsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonGramsTokenFilterDescriptor.CommonWords(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonGramsTokenFilterDescriptor.CommonWords(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ICompoundWordTokenFilter">
            <summary>
            Token filters that allow to decompose compound words.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.WordList">
            <summary>
            A list of words to use.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.WordListPath">
            <summary>
            A path (either relative to config location, or absolute) to a list of words.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.HyphenationPatternsPath">
            <summary>
            A path (either relative to config location, or absolute) to a FOP XML hyphenation pattern file.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.MinWordSize">
            <summary>
            Minimum word size.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.MinSubwordSize">
            <summary>
            Minimum subword size.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.MaxSubwordSize">
            <summary>
            Maximum subword size.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.OnlyLongestMatch">
            <summary>
            Only matching the longest.
            </summary>
        </member>
        <member name="P:Nest.CompoundWordTokenFilterBase.WordList">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CompoundWordTokenFilterBase.WordListPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CompoundWordTokenFilterBase.MinWordSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CompoundWordTokenFilterBase.MinSubwordSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CompoundWordTokenFilterBase.MaxSubwordSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CompoundWordTokenFilterBase.OnlyLongestMatch">
            <inheritdoc/>
        </member>
        <member name="T:Nest.CompoundWordTokenFilterDescriptorBase`2">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.WordList(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.WordList(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.WordListPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.HyphenationPatternsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.MinWordSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.MinSubwordSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.MaxSubwordSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.OnlyLongestMatch(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.DictionaryDecompounderTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.DictionaryDecompounderTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IHyphenationDecompounderTokenFilter">
            <summary>
            Token filters that allow to decompose compound words.
            </summary>
        </member>
        <member name="T:Nest.HyphenationDecompounderTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.HyphenationDecompounderTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IDelimitedPayloadTokenFilter">
            <summary>
            Splits tokens into tokens and payload whenever a delimiter character is found.
            </summary>
        </member>
        <member name="P:Nest.IDelimitedPayloadTokenFilter.Delimiter">
            <summary>
            Character used for splitting the tokens.
            </summary>
        </member>
        <member name="P:Nest.IDelimitedPayloadTokenFilter.Encoding">
            <summary>
            The type of the payload. int for integer, float for float and identity for characters. 
            </summary>
        </member>
        <member name="T:Nest.DelimitedPayloadTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DelimitedPayloadTokenFilter.Delimiter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DelimitedPayloadTokenFilter.Encoding">
            <inheritdoc/>
        </member>
        <member name="T:Nest.DelimitedPayloadTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DelimitedPayloadTokenFilterDescriptor.Delimiter(System.Char)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DelimitedPayloadTokenFilterDescriptor.Encoding(System.Nullable{Nest.DelimitedPayloadEncoding})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IEdgeNGramTokenFilter">
            <summary>
            A token filter of type edgeNGram.
            </summary>
        </member>
        <member name="P:Nest.IEdgeNGramTokenFilter.MinGram">
             <summary>
            Defaults to 1. 
             </summary>
        </member>
        <member name="P:Nest.IEdgeNGramTokenFilter.MaxGram">
             <summary>
            Defaults to 2. 
             </summary>
        </member>
        <member name="P:Nest.IEdgeNGramTokenFilter.Side">
            <summary>
            Either front or back. Defaults to front.
            </summary>
        </member>
        <member name="T:Nest.EdgeNGramTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.EdgeNGramTokenFilter.MinGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.EdgeNGramTokenFilter.MaxGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.EdgeNGramTokenFilter.Side">
            <inheritdoc/>
        </member>
        <member name="T:Nest.EdgeNGramTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenFilterDescriptor.MinGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenFilterDescriptor.MaxGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenFilterDescriptor.Side(System.Nullable{Nest.EdgeNGramSide})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IElisionTokenFilter">
            <summary>
            A token filter which removes elisions. For example, “l’avion” (the plane) will tokenized as “avion” (plane).
            </summary>
        </member>
        <member name="P:Nest.IElisionTokenFilter.Articles">
            <summary>
            Accepts articles setting which is a set of stop words articles
            </summary>
        </member>
        <member name="T:Nest.ElisionTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ElisionTokenFilter.Articles">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ElisionTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElisionTokenFilterDescriptor.Articles(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElisionTokenFilterDescriptor.Articles(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IHunspellTokenFilter">
             <summary>
             Basic support for hunspell stemming. 
            <para> Hunspell dictionaries will be picked up from a dedicated hunspell directory on the filesystem.</para>
             </summary>
        </member>
        <member name="P:Nest.IHunspellTokenFilter.IgnoreCase">
            <summary>
            If true, dictionary matching will be case insensitive.
            </summary>
        </member>
        <member name="P:Nest.IHunspellTokenFilter.Locale">
            <summary>
            A locale for this filter. If this is unset, the lang or language are used instead - so one of these has to be set.
            </summary>
        </member>
        <member name="P:Nest.IHunspellTokenFilter.Dictionary">
            <summary>
            The name of a dictionary.The path to your hunspell dictionaries should be configured via 
            `indices.analysis.hunspell.dictionary.location` before.
            </summary>
        </member>
        <member name="P:Nest.IHunspellTokenFilter.Dedup">
            <summary>
            If only unique terms should be returned, this needs to be set to true.
            </summary>
        </member>
        <member name="P:Nest.IHunspellTokenFilter.LongestOnly">
            <summary>
            If only the longest term should be returned, set this to true.
            </summary>
        </member>
        <member name="T:Nest.HunspellTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HunspellTokenFilter.IgnoreCase">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HunspellTokenFilter.Locale">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HunspellTokenFilter.Dictionary">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HunspellTokenFilter.Dedup">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HunspellTokenFilter.LongestOnly">
            <inheritdoc/>
        </member>
        <member name="T:Nest.HunspellTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HunspellTokenFilterDescriptor.LongestOnly(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HunspellTokenFilterDescriptor.Dedup(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HunspellTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HunspellTokenFilterDescriptor.Locale(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HunspellTokenFilterDescriptor.Dictionary(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKeepTypesTokenFilter">
            <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
        </member>
        <member name="P:Nest.IKeepTypesTokenFilter.Types">
            <summary>
            A list of types to keep.
            </summary>
        </member>
        <member name="T:Nest.KeepTypesTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeepTypesTokenFilter.Types">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KeepTypesTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeepTypesTokenFilterDescriptor.Types(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeepTypesTokenFilterDescriptor.Types(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKeepWordsTokenFilter">
            <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
        </member>
        <member name="P:Nest.IKeepWordsTokenFilter.KeepWords">
            <summary>
            A list of words to keep.
            </summary>
        </member>
        <member name="P:Nest.IKeepWordsTokenFilter.KeepWordsPath">
            <summary>
            A path to a words file.
            </summary>
        </member>
        <member name="P:Nest.IKeepWordsTokenFilter.KeepWordsCase">
            <summary>
            A boolean indicating whether to lower case the words.
            </summary>
        </member>
        <member name="T:Nest.KeepWordsTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeepWordsTokenFilter.KeepWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeepWordsTokenFilter.KeepWordsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeepWordsTokenFilter.KeepWordsCase">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KeepWordsTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeepWordsTokenFilterDescriptor.KeepWordsCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeepWordsTokenFilterDescriptor.KeepWordsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeepWordsTokenFilterDescriptor.KeepWords(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeepWordsTokenFilterDescriptor.KeepWords(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKeywordMarkerTokenFilter">
            <summary>
            Protects words from being modified by stemmers. Must be placed before any stemming filters.
            </summary>
        </member>
        <member name="P:Nest.IKeywordMarkerTokenFilter.Keywords">
            <summary>
            A list of words to use.
            </summary>
        </member>
        <member name="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath">
            <summary>
            A path (either relative to config location, or absolute) to a list of words.
            </summary>
        </member>
        <member name="P:Nest.IKeywordMarkerTokenFilter.IgnoreCase">
            <summary>
            Set to true to lower case all words first. Defaults to false.
            </summary>
        </member>
        <member name="T:Nest.KeywordMarkerTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeywordMarkerTokenFilter.Keywords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeywordMarkerTokenFilter.KeywordsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeywordMarkerTokenFilter.IgnoreCase">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KeywordMarkerTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.KeywordsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.Keywords(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.Keywords(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKStemTokenFilter">
             <summary>
            The kstem token filter is a high performance filter for english. 
            <para> All terms must already be lowercased (use lowercase filter) for this filter to work correctly.</para>
             </summary>
        </member>
        <member name="T:Nest.KStemTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KStemTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ILengthTokenFilter">
            <summary>
            A token filter of type length that removes words that are too long or too short for the stream.
            </summary>
        </member>
        <member name="P:Nest.ILengthTokenFilter.Min">
            <summary>
            The minimum number. Defaults to 0. 
            </summary>
        </member>
        <member name="P:Nest.ILengthTokenFilter.Max">
            <summary>
            The maximum number. Defaults to Integer.MAX_VALUE.
            </summary>
        </member>
        <member name="T:Nest.LengthTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LengthTokenFilter.Min">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LengthTokenFilter.Max">
            <inheritdoc/>
        </member>
        <member name="T:Nest.LengthTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.LengthTokenFilterDescriptor.Min(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.LengthTokenFilterDescriptor.Max(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ILimitTokenCountTokenFilter">
            <summary>
            Limits the number of tokens that are indexed per document and field.
            </summary>
        </member>
        <member name="P:Nest.ILimitTokenCountTokenFilter.MaxTokenCount">
            <summary>
            The maximum number of tokens that should be indexed per document and field.
            </summary>
        </member>
        <member name="P:Nest.ILimitTokenCountTokenFilter.ConsumeAllTokens">
            <summary>
            If set to true the filter exhaust the stream even if max_token_count tokens have been consumed already.
            </summary>
        </member>
        <member name="T:Nest.LimitTokenCountTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LimitTokenCountTokenFilter.MaxTokenCount">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LimitTokenCountTokenFilter.ConsumeAllTokens">
            <inheritdoc/>
        </member>
        <member name="T:Nest.LimitTokenCountTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.LimitTokenCountTokenFilterDescriptor.ConsumeAllToken(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.LimitTokenCountTokenFilterDescriptor.MaxTokenCount(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ILowercaseTokenFilter">
             <summary>
             A token filter of type lowercase that normalizes token text to lower case.
            <para> Lowercase token filter supports Greek and Turkish lowercase token filters through the language parameter.</para>
             </summary>
        </member>
        <member name="P:Nest.ILowercaseTokenFilter.Language">
            <summary>
            Lowercase token filter supports Greek, Irish, and Turkish lowercase token filters through the language parameter
            </summary>
        </member>
        <member name="T:Nest.LowercaseTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LowercaseTokenFilter.Language">
            <inheritdoc/>
        </member>
        <member name="T:Nest.LowercaseTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.LowercaseTokenFilterDescriptor.Language(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.INGramTokenFilter">
            <summary>
            A token filter of type nGram.
            </summary>
        </member>
        <member name="P:Nest.INGramTokenFilter.MinGram">
            <summary>
            Defaults to 1. 
            </summary>
        </member>
        <member name="P:Nest.INGramTokenFilter.MaxGram">
            <summary>
            Defaults to 2 
            </summary>
        </member>
        <member name="T:Nest.NGramTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.NGramTokenFilter.MinGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.NGramTokenFilter.MaxGram">
            <inheritdoc/>
        </member>
        <member name="T:Nest.NGramTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NGramTokenFilterDescriptor.MinGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NGramTokenFilterDescriptor.MaxGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPatternCaptureTokenFilter">
            <summary>
            The pattern_capture token filter, unlike the pattern tokenizer, emits a token for every capture group in the regular expression.
            </summary>
        </member>
        <member name="P:Nest.IPatternCaptureTokenFilter.Patterns">
            <summary>
            The regular expression patterns to capture
            </summary>
        </member>
        <member name="P:Nest.IPatternCaptureTokenFilter.PreserveOriginal">
            <summary>
            If preserve_original is set to true then it would also emit the original token
            </summary>
        </member>
        <member name="T:Nest.PatternCaptureTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternCaptureTokenFilter.Patterns">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternCaptureTokenFilter.PreserveOriginal">
            <inheritdoc/>
        </member>
        <member name="T:Nest.PatternCaptureTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternCaptureTokenFilterDescriptor.PreserveOriginal(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternCaptureTokenFilterDescriptor.Patterns(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternCaptureTokenFilterDescriptor.Patterns(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPatternReplaceTokenFilter">
            <summary>
            The pattern_replace token filter allows to easily handle string replacements based on a regular expression. 
            </summary>
        </member>
        <member name="P:Nest.IPatternReplaceTokenFilter.Pattern">
            <summary>
            The regular expression
            </summary>
        </member>
        <member name="P:Nest.IPatternReplaceTokenFilter.Replacement">
            <summary>
            Replacement string
            </summary>
        </member>
        <member name="T:Nest.PatternReplaceTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternReplaceTokenFilter.Pattern">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternReplaceTokenFilter.Replacement">
            <inheritdoc/>
        </member>
        <member name="T:Nest.PatternReplaceTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternReplaceTokenFilterDescriptor.Pattern(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternReplaceTokenFilterDescriptor.Replacement(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPhoneticTokenFilter">
            <summary>
            The phonetic token filter is provided as a plugin.
            </summary>
        </member>
        <member name="P:Nest.IPhoneticTokenFilter.Encoder">
            <summary>
            The type of phonetic encoding to use
            </summary>
        </member>
        <member name="P:Nest.IPhoneticTokenFilter.Replace">
             <summary>
            The replace parameter (defaults to true) controls if the token processed should be replaced 
             with the encoded one (set it to true), or added (set it to false). 
             </summary>
        </member>
        <member name="T:Nest.PhoneticTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PhoneticTokenFilter.Encoder">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PhoneticTokenFilter.Replace">
            <inheritdoc/>
        </member>
        <member name="T:Nest.PhoneticTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PhoneticTokenFilterDescriptor.Replace(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PhoneticTokenFilterDescriptor.Encoder(System.Nullable{Nest.PhoneticEncoder})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPorterStemTokenFilter">
            <summary>
            A token filter of type porterStem that transforms the token stream as per the Porter stemming algorithm.
            </summary>
        </member>
        <member name="T:Nest.PorterStemTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.PorterStemTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IReverseTokenFilter">
            <summary>
            A token filter of type reverse that simply reverses the tokens.
            </summary>
        </member>
        <member name="T:Nest.ReverseTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ReverseTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IShingleTokenFilter">
            <summary>
            A token filter of type shingle that constructs shingles (token n-grams) from a token stream. 
            <para>In other words, it creates combinations of tokens as a single token. </para>
            </summary>
        </member>
        <member name="P:Nest.IShingleTokenFilter.MinShingleSize">
            <summary>
            The minimum shingle size. Defaults to 2.
            </summary>
        </member>
        <member name="P:Nest.IShingleTokenFilter.MaxShingleSize">
            <summary>
            The maximum shingle size. Defaults to 2.
            </summary>
        </member>
        <member name="P:Nest.IShingleTokenFilter.OutputUnigrams">
            <summary>
            If true the output will contain the input tokens (unigrams) as well as the shingles. Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IShingleTokenFilter.OutputUnigramsIfNoShingles">
            <summary>
            If output_unigrams is false the output will contain the input tokens (unigrams) if no shingles are available. 
            <para>Note if output_unigrams is set to true this setting has no effect. Defaults to false.</para>
            </summary>
        </member>
        <member name="P:Nest.IShingleTokenFilter.TokenSeparator">
            <summary>
            The string to use when joining adjacent tokens to form a shingle. Defaults to " ".
            </summary>
        </member>
        <member name="P:Nest.IShingleTokenFilter.FillerToken">
            <summary>
            The string to use as a replacement for each position at which there is no actual token in the stream. For instance this string is used if the position increment is greater than one when a stop filter is used together with the shingle filter. Defaults to "_"
            </summary>
        </member>
        <member name="T:Nest.ShingleTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShingleTokenFilter.MinShingleSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShingleTokenFilter.MaxShingleSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShingleTokenFilter.OutputUnigrams">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShingleTokenFilter.OutputUnigramsIfNoShingles">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShingleTokenFilter.TokenSeparator">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShingleTokenFilter.FillerToken">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ShingleTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShingleTokenFilterDescriptor.OutputUnigrams(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShingleTokenFilterDescriptor.OutputUnigramsIfNoShingles(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShingleTokenFilterDescriptor.MinShingleSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShingleTokenFilterDescriptor.MaxShingleSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShingleTokenFilterDescriptor.TokenSeparator(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShingleTokenFilterDescriptor.FillerToken(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ISnowballTokenFilter">
            <summary>
            A filter that stems words using a Snowball-generated stemmer.
            </summary>
        </member>
        <member name="T:Nest.SnowballTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SnowballTokenFilter.Language">
            <inheritdoc/>
        </member>
        <member name="T:Nest.SnowballTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SnowballTokenFilterDescriptor.Language(System.Nullable{Nest.SnowballLanguage})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStandardTokenFilter">
            <summary>
            A token filter of type standard that normalizes tokens extracted with the Standard Tokenizer.
            </summary>
        </member>
        <member name="T:Nest.StandardTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.StandardTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStemmerOverrideTokenFilter">
            <summary>
            Overrides stemming algorithms, by applying a custom mapping, then protecting these terms from being modified by stemmers. Must be placed before any stemming filters.
            </summary>
        </member>
        <member name="P:Nest.IStemmerOverrideTokenFilter.Rules">
            <summary>
            A list of mapping rules to use.
            </summary>
        </member>
        <member name="P:Nest.IStemmerOverrideTokenFilter.RulesPath">
            <summary>
            A path (either relative to config location, or absolute) to a list of mappings.
            </summary>
        </member>
        <member name="T:Nest.StemmerOverrideTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StemmerOverrideTokenFilter.Rules">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StemmerOverrideTokenFilter.RulesPath">
            <inheritdoc/>
        </member>
        <member name="T:Nest.StemmerOverrideTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StemmerOverrideTokenFilterDescriptor.Rules(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StemmerOverrideTokenFilterDescriptor.Rules(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StemmerOverrideTokenFilterDescriptor.RulesPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStemmerTokenFilter">
            <summary>
            A filter that stems words (similar to snowball, but with more options).
            </summary>
        </member>
        <member name="T:Nest.StemmerTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StemmerTokenFilterDescriptor.Language(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStopTokenFilter">
            <summary>
            A token filter of type stop that removes stop words from token streams.
            </summary>
        </member>
        <member name="P:Nest.IStopTokenFilter.StopWords">
            <summary>
            A list of stop words to use. Defaults to `_english_` stop words.
            </summary>
        </member>
        <member name="P:Nest.IStopTokenFilter.IgnoreCase">
            <summary>
            Set to true to lower case all words first. Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IStopTokenFilter.StopWordsPath">
            <summary>
            A path (either relative to config location, or absolute) to a stopwords 
            file configuration. Each stop word should be in its own "line" 
            (separated by a line break). The file must be UTF-8 encoded.
            </summary>
        </member>
        <member name="P:Nest.IStopTokenFilter.RemoveTrailing">
            <summary>
            Set to false in order to not ignore the last term of a search if it is a stop word. 
            This is very useful for  the completion suggester as a query like green a can
            be extended to green apple even though  you remove stop words in general. Defaults to true.
            </summary>
        </member>
        <member name="T:Nest.StopTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StopTokenFilter.StopWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StopTokenFilter.IgnoreCase">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StopTokenFilter.StopWordsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StopTokenFilter.RemoveTrailing">
            <inheritdoc/>
        </member>
        <member name="T:Nest.StopTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StopTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StopTokenFilterDescriptor.RemoveTrailing(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StopTokenFilterDescriptor.StopWords(Nest.StopWords)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StopTokenFilterDescriptor.StopWords(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StopTokenFilterDescriptor.StopWords(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StopTokenFilterDescriptor.StopWordsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ISynonymTokenFilter">
            <summary>
            The synonym token filter allows to easily handle synonyms during the analysis process. 
            </summary>
        </member>
        <member name="P:Nest.ISynonymTokenFilter.SynonymsPath">
            <summary>
             a path a synonyms file relative to the node's `config` location.
            </summary>
        </member>
        <member name="T:Nest.SynonymTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymTokenFilter.SynonymsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymTokenFilter.Format">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymTokenFilter.Synonyms">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymTokenFilter.IgnoreCase">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymTokenFilter.Expand">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymTokenFilter.Tokenizer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.SynonymTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.Expand(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.Tokenizer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.SynonymsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.Format(System.Nullable{Nest.SynonymFormat})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.Synonyms(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.Synonyms(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.DictionaryDecompounder(System.String,System.Func{Nest.DictionaryDecompounderTokenFilterDescriptor,Nest.IDictionaryDecompounderTokenFilter})">
            <summary>
            Token filters that allow to decompose compound words using a dictionary
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.HyphenationDecompounder(System.String,System.Func{Nest.HyphenationDecompounderTokenFilterDescriptor,Nest.IHyphenationDecompounderTokenFilter})">
            <summary>
            Token filters that allow to decompose compound words using FOP XML
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.EdgeNGram(System.String,System.Func{Nest.EdgeNGramTokenFilterDescriptor,Nest.IEdgeNGramTokenFilter})">
            <summary>
            A token filter of type edgeNGram.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Phonetic(System.String,System.Func{Nest.PhoneticTokenFilterDescriptor,Nest.IPhoneticTokenFilter})">
            <summary>
            The phonetic token filter is provided as a plugin.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Shingle(System.String,System.Func{Nest.ShingleTokenFilterDescriptor,Nest.IShingleTokenFilter})">
            <summary>
            A token filter of type shingle that constructs shingles (token n-grams) from a token stream. 
            <para>In other words, it creates combinations of tokens as a single token. </para>
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Stop(System.String,System.Func{Nest.StopTokenFilterDescriptor,Nest.IStopTokenFilter})">
            <summary>
            A token filter of type stop that removes stop words from token streams.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Synonym(System.String,System.Func{Nest.SynonymTokenFilterDescriptor,Nest.ISynonymTokenFilter})">
            <summary>
            The synonym token filter allows to easily handle synonyms during the analysis process. 
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.WordDelimiter(System.String,System.Func{Nest.WordDelimiterTokenFilterDescriptor,Nest.IWordDelimiterTokenFilter})">
            <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are 
            <para> not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one exists.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.AsciiFolding(System.String,System.Func{Nest.AsciiFoldingTokenFilterDescriptor,Nest.IAsciiFoldingTokenFilter})">
            <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are 
            <para> not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one exists.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.CommonGrams(System.String,System.Func{Nest.CommonGramsTokenFilterDescriptor,Nest.ICommonGramsTokenFilter})">
             <summary>
             Token filter that generates bigrams for frequently occuring terms. Single terms are still indexed.
            <para>Note, common_words or common_words_path field is required.</para>
             </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.DelimitedPayload(System.String,System.Func{Nest.DelimitedPayloadTokenFilterDescriptor,Nest.IDelimitedPayloadTokenFilter})">
            <summary>
            Splits tokens into tokens and payload whenever a delimiter character is found.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Elision(System.String,System.Func{Nest.ElisionTokenFilterDescriptor,Nest.IElisionTokenFilter})">
            <summary>
            A token filter which removes elisions. For example, “l’avion” (the plane) will tokenized as “avion” (plane).
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Hunspell(System.String,System.Func{Nest.HunspellTokenFilterDescriptor,Nest.IHunspellTokenFilter})">
             <summary>
             Basic support for hunspell stemming. 
            <para> Hunspell dictionaries will be picked up from a dedicated hunspell directory on the filesystem.</para>
             </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.KeepTypes(System.String,System.Func{Nest.KeepTypesTokenFilterDescriptor,Nest.IKeepTypesTokenFilter})">
            <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.KeepWords(System.String,System.Func{Nest.KeepWordsTokenFilterDescriptor,Nest.IKeepWordsTokenFilter})">
            <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.KeywordMarker(System.String,System.Func{Nest.KeywordMarkerTokenFilterDescriptor,Nest.IKeywordMarkerTokenFilter})">
            <summary>
            Protects words from being modified by stemmers. Must be placed before any stemming filters.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.KStem(System.String,System.Func{Nest.KStemTokenFilterDescriptor,Nest.IKStemTokenFilter})">
             <summary>
            The kstem token filter is a high performance filter for english. 
            <para> All terms must already be lowercased (use lowercase filter) for this filter to work correctly.</para>
             </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Length(System.String,System.Func{Nest.LengthTokenFilterDescriptor,Nest.ILengthTokenFilter})">
            <summary>
            A token filter of type length that removes words that are too long or too short for the stream.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.LimitTokenCount(System.String,System.Func{Nest.LimitTokenCountTokenFilterDescriptor,Nest.ILimitTokenCountTokenFilter})">
            <summary>
            Limits the number of tokens that are indexed per document and field.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Lowercase(System.String,System.Func{Nest.LowercaseTokenFilterDescriptor,Nest.ILowercaseTokenFilter})">
             <summary>
             A token filter of type lowercase that normalizes token text to lower case.
            <para> Lowercase token filter supports Greek and Turkish lowercase token filters through the language parameter.</para>
             </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.NGram(System.String,System.Func{Nest.NGramTokenFilterDescriptor,Nest.INGramTokenFilter})">
            <summary>
            A token filter of type nGram.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.PatternCapture(System.String,System.Func{Nest.PatternCaptureTokenFilterDescriptor,Nest.IPatternCaptureTokenFilter})">
            <summary>
            The pattern_capture token filter, unlike the pattern tokenizer, emits a token for every capture group in the regular expression.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.PatternReplace(System.String,System.Func{Nest.PatternReplaceTokenFilterDescriptor,Nest.IPatternReplaceTokenFilter})">
            <summary>
            The pattern_replace token filter allows to easily handle string replacements based on a regular expression. 
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.PorterStem(System.String,System.Func{Nest.PorterStemTokenFilterDescriptor,Nest.IPorterStemTokenFilter})">
            <summary>
            A token filter of type porterStem that transforms the token stream as per the Porter stemming algorithm.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Reverse(System.String,System.Func{Nest.ReverseTokenFilterDescriptor,Nest.IReverseTokenFilter})">
            <summary>
            A token filter of type reverse that simply reverses the tokens.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Snowball(System.String,System.Func{Nest.SnowballTokenFilterDescriptor,Nest.ISnowballTokenFilter})">
            <summary>
            A filter that stems words using a Snowball-generated stemmer.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Standard(System.String,System.Func{Nest.StandardTokenFilterDescriptor,Nest.IStandardTokenFilter})">
            <summary>
            A token filter of type standard that normalizes tokens extracted with the Standard Tokenizer.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Stemmer(System.String,System.Func{Nest.StemmerTokenFilterDescriptor,Nest.IStemmerTokenFilter})">
            <summary>
            A filter that stems words (similar to snowball, but with more options).
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.StemmerOverride(System.String,System.Func{Nest.StemmerOverrideTokenFilterDescriptor,Nest.IStemmerOverrideTokenFilter})">
            <summary>
            Overrides stemming algorithms, by applying a custom mapping, then protecting these terms from being modified by stemmers. Must be placed before any stemming filters.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Trim(System.String,System.Func{Nest.TrimTokenFilterDescriptor,Nest.ITrimTokenFilter})">
            <summary>
            The trim token filter trims surrounding whitespaces around a token.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Truncate(System.String,System.Func{Nest.TruncateTokenFilterDescriptor,Nest.ITruncateTokenFilter})">
            <summary>
            The truncate token filter can be used to truncate tokens into a specific length. This can come in handy with keyword (single token) 
            <para> based mapped fields that are used for sorting in order to reduce memory usage.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Unique(System.String,System.Func{Nest.UniqueTokenFilterDescriptor,Nest.IUniqueTokenFilter})">
            <summary>
            The unique token filter can be used to only index unique tokens during analysis. By default it is applied on all the token stream
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Uppercase(System.String,System.Func{Nest.UppercaseTokenFilterDescriptor,Nest.IUppercaseTokenFilter})">
            <summary>
            A token filter of type uppercase that normalizes token text to upper case.
            </summary>
        </member>
        <member name="T:Nest.ITrimTokenFilter">
            <summary>
            The trim token filter trims surrounding whitespaces around a token.
            </summary>
        </member>
        <member name="T:Nest.TrimTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.TrimTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ITruncateTokenFilter">
            <summary>
            The truncate token filter can be used to truncate tokens into a specific length. This can come in handy with keyword (single token) 
            <para> based mapped fields that are used for sorting in order to reduce memory usage.</para>
            </summary>
        </member>
        <member name="P:Nest.ITruncateTokenFilter.Length">
            <summary>
            length parameter which control the number of characters to truncate to, defaults to 10.
            </summary>
        </member>
        <member name="T:Nest.TruncateTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TruncateTokenFilter.Length">
            <inheritdoc/>
        </member>
        <member name="T:Nest.TruncateTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TruncateTokenFilterDescriptor.Length(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IUniqueTokenFilter">
            <summary>
            The unique token filter can be used to only index unique tokens during analysis. By default it is applied on all the token stream
            </summary>
        </member>
        <member name="P:Nest.IUniqueTokenFilter.OnlyOnSamePosition">
            <summary>
             If only_on_same_position is set to true, it will only remove duplicate tokens on the same position.
            </summary>
        </member>
        <member name="T:Nest.UniqueTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UniqueTokenFilter.OnlyOnSamePosition">
            <inheritdoc/>
        </member>
        <member name="T:Nest.UniqueTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UniqueTokenFilterDescriptor.OnlyOnSamePosition(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IUppercaseTokenFilter">
            <summary>
            A token filter of type uppercase that normalizes token text to upper case.
            </summary>
        </member>
        <member name="T:Nest.UppercaseTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.UppercaseTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IWordDelimiterTokenFilter">
            <summary>
            Named word_delimiter, it Splits words into subwords and performs optional transformations on subword groups.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.GenerateWordParts">
            <summary>
            If true causes parts of words to be generated: "PowerShot" ⇒ "Power" "Shot". Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.GenerateNumberParts">
            <summary>
            If true causes number subwords to be generated: "500-42" ⇒ "500" "42". Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.CatenateWords">
            <summary>
            If true causes maximum runs of word parts to be catenated: "wi-fi" ⇒ "wifi". Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.CatenateNumbers">
            <summary>
            If true causes maximum runs of number parts to be catenated: "500-42" ⇒ "50042". Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.CatenateAll">
            <summary>
            If true causes all subword parts to be catenated: "wi-fi-4000" ⇒ "wifi4000". Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.SplitOnCaseChange">
            <summary>
            If true causes "PowerShot" to be two tokens; ("Power-Shot" remains two parts regards). Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.PreserveOriginal">
            <summary>
            If true includes original words in subwords: "500-42" ⇒ "500-42" "500" "42". Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.SplitOnNumerics">
            <summary>
            If true causes "j2se" to be three tokens; "j" "2" "se". Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.StemEnglishPossessive">
            <summary>
            If true causes trailing "'s" to be removed for each subword: "O’Neil’s" ⇒ "O", "Neil". Defaults to true. 
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.ProtectedWords">
            <summary>
             A list of protected words from being delimiter.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.ProtectedWordsPath">
             <summary>
            protected_words_path which resolved to a file configured with protected words (one on each line). 
             Automatically resolves to config/ based location if exists.
             </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.TypeTable">
            <summary>
            A custom type mapping table
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.TypeTablePath">
            <summary>
            A path to a custom type mapping table file
            </summary>
        </member>
        <member name="T:Nest.WordDelimiterTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.GenerateWordParts">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.GenerateNumberParts">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.CatenateWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.CatenateNumbers">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.CatenateAll">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.SplitOnCaseChange">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.PreserveOriginal">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.SplitOnNumerics">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.StemEnglishPossessive">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.ProtectedWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.ProtectedWordsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.TypeTable">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.TypeTablePath">
            <inheritdoc/>
        </member>
        <member name="T:Nest.WordDelimiterTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.GenerateWordParts(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.GenerateNumberParts(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.CatenateWords(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.CatenateNumbers(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.CatenateAll(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.SplitOnCaseChange(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.SplitOnNumerics(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.PreserveOriginal(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.StemEnglishPossessive(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.ProtectedWords(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.ProtectedWords(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.ProtectedWordsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.TypeTable(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.TypeTable(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.TypeTablePath(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKeywordTokenizer">
            <summary>
            A tokenizer of type keyword that emits the entire input as a single input.
            </summary>
        </member>
        <member name="P:Nest.IKeywordTokenizer.BufferSize">
            <summary>
            The term buffer size. Defaults to 256.
            </summary>
        </member>
        <member name="T:Nest.KeywordTokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeywordTokenizer.BufferSize">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KeywordTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeywordTokenizerDescriptor.BufferSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ILetterTokenizer">
            <summary>
            A tokenizer of type letter that divides text at non-letters. That’s to say, it defines tokens as maximal strings of adjacent letters. 
            <para>Note, this does a decent job for most European languages, but does a terrible job for some Asian languages, where words are not separated by spaces.</para>
            </summary>
        </member>
        <member name="T:Nest.LetterTokenizer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.LetterTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ILowercaseTokenizer">
            <summary>
            A tokenizer of type lowercase that performs the function of Letter Tokenizer and Lower Case Token Filter together. 
            <para>It divides text at non-letters and converts them to lower case. </para>
            <para>While it is functionally equivalent to the combination of Letter Tokenizer and Lower Case Token Filter, </para>
            <para>there is a performance advantage to doing the two tasks at once, hence this (redundant) implementation.</para>
            </summary>
        </member>
        <member name="T:Nest.LowercaseTokenizer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.LowercaseTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IEdgeNGramTokenizer">
            <summary>
            A tokenizer of type edgeNGram.
            </summary>
        </member>
        <member name="P:Nest.IEdgeNGramTokenizer.MinGram">
            <summary>
            Minimum size in codepoints of a single n-gram
            </summary>
        </member>
        <member name="P:Nest.IEdgeNGramTokenizer.MaxGram">
            <summary>
            Maximum size in codepoints of a single n-gram
            </summary>
        </member>
        <member name="P:Nest.IEdgeNGramTokenizer.TokenChars">
            <summary>
            Characters classes to keep in the tokens, Elasticsearch
             will split on characters that don’t belong to any of these classes.
            </summary>
        </member>
        <member name="T:Nest.EdgeNGramTokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.EdgeNGramTokenizer.MinGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.EdgeNGramTokenizer.MaxGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.EdgeNGramTokenizer.TokenChars">
            <inheritdoc/>
        </member>
        <member name="T:Nest.EdgeNGramTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenizerDescriptor.MinGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenizerDescriptor.MaxGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenizerDescriptor.TokenChars(System.Collections.Generic.IEnumerable{Nest.TokenChar})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenizerDescriptor.TokenChars(Nest.TokenChar[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.INGramTokenizer">
            <summary>
            A tokenizer of type nGram.
            </summary>
        </member>
        <member name="P:Nest.INGramTokenizer.MinGram">
            <summary>
            Minimum size in codepoints of a single n-gram, defaults to 1.
            </summary>
        </member>
        <member name="P:Nest.INGramTokenizer.MaxGram">
            <summary>
            Maximum size in codepoints of a single n-gram, defaults to 2.
            </summary>
        </member>
        <member name="P:Nest.INGramTokenizer.TokenChars">
            <summary>
            Characters classes to keep in the tokens, Elasticsearch will
            split on characters that don’t belong to any of these classes. 
            </summary>
        </member>
        <member name="T:Nest.NGramTokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.NGramTokenizer.MinGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.NGramTokenizer.MaxGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.NGramTokenizer.TokenChars">
            <inheritdoc/>
        </member>
        <member name="T:Nest.NGramTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NGramTokenizerDescriptor.MinGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NGramTokenizerDescriptor.MaxGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NGramTokenizerDescriptor.TokenChars(System.Collections.Generic.IEnumerable{Nest.TokenChar})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NGramTokenizerDescriptor.TokenChars(Nest.TokenChar[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPathHierarchyTokenizer">
             <summary>
             The path_hierarchy tokenizer takes something like this:
            <para>/something/something/else</para>
            <para>And produces tokens:</para>
            <para></para>
            <para>/something</para>
            <para>/something/something</para>
            <para>/something/something/else</para>
             </summary>
        </member>
        <member name="P:Nest.IPathHierarchyTokenizer.Delimiter">
            <summary>
            The character delimiter to use, defaults to /.
            </summary>
        </member>
        <member name="P:Nest.IPathHierarchyTokenizer.Replacement">
            <summary>
            An optional replacement character to use. Defaults to the delimiter
            </summary>
        </member>
        <member name="P:Nest.IPathHierarchyTokenizer.BufferSize">
            <summary>
            The buffer size to use, defaults to 1024.
            </summary>
        </member>
        <member name="P:Nest.IPathHierarchyTokenizer.Reverse">
            <summary>
            Generates tokens in reverse order, defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IPathHierarchyTokenizer.Skip">
            <summary>
            Controls initial tokens to skip, defaults to 0.
            </summary>
        </member>
        <member name="T:Nest.PathHierarchyTokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.Delimiter">
            <summary/>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.Replacement">
            <summary/>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.BufferSize">
            <summary/>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.Reverse">
            <summary/>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.Skip">
            <summary/>
        </member>
        <member name="T:Nest.PathHierarchyTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PathHierarchyTokenizerDescriptor.BufferSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PathHierarchyTokenizerDescriptor.Skip(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PathHierarchyTokenizerDescriptor.Reverse(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PathHierarchyTokenizerDescriptor.Delimiter(System.Nullable{System.Char})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PathHierarchyTokenizerDescriptor.Replacement(System.Nullable{System.Char})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPatternTokenizer">
            <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression. 
            </summary>
        </member>
        <member name="P:Nest.IPatternTokenizer.Pattern">
            <summary>
            The regular expression pattern, defaults to \W+.
            </summary>
        </member>
        <member name="P:Nest.IPatternTokenizer.Flags">
            <summary>
            The regular expression flags.
            </summary>
        </member>
        <member name="P:Nest.IPatternTokenizer.Group">
            <summary>
            Which group to extract into tokens. Defaults to -1 (split).
            </summary>
        </member>
        <member name="T:Nest.PatternTokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternTokenizer.Pattern">
            <summary/>
        </member>
        <member name="P:Nest.PatternTokenizer.Flags">
            <summary/>
        </member>
        <member name="P:Nest.PatternTokenizer.Group">
            <summary/>
        </member>
        <member name="T:Nest.PatternTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternTokenizerDescriptor.Group(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternTokenizerDescriptor.Pattern(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternTokenizerDescriptor.Flags(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStandardTokenizer">
            <summary>
            A tokenizer of type standard providing grammar based tokenizer that is a good tokenizer for most European language documents. 
            <para>The tokenizer implements the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29.</para>
            </summary>
        </member>
        <member name="P:Nest.IStandardTokenizer.MaxTokenLength">
            <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
        </member>
        <member name="T:Nest.StandardTokenizer">
            <summary/>
        </member>
        <member name="P:Nest.StandardTokenizer.MaxTokenLength">
            <summary/>
        </member>
        <member name="M:Nest.StandardTokenizerDescriptor.MaxTokenLength(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TokenizersDescriptor.EdgeNGram(System.String,System.Func{Nest.EdgeNGramTokenizerDescriptor,Nest.IEdgeNGramTokenizer})">
            <summary>
            A tokenizer of type edgeNGram.
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.NGram(System.String,System.Func{Nest.NGramTokenizerDescriptor,Nest.INGramTokenizer})">
            <summary>
            A tokenizer of type nGram.
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Keyword(System.String,System.Func{Nest.KeywordTokenizerDescriptor,Nest.IKeywordTokenizer})">
            <summary>
            A tokenizer of type keyword that emits the entire input as a single input.
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Letter(System.String,System.Func{Nest.LetterTokenizerDescriptor,Nest.ILetterTokenizer})">
            <summary>
            A tokenizer of type letter that divides text at non-letters. That’s to say, it defines tokens as maximal strings of adjacent letters. 
            <para>Note, this does a decent job for most European languages, but does a terrible job for some Asian languages, where words are not separated by spaces.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Lowercase(System.String,System.Func{Nest.LowercaseTokenizerDescriptor,Nest.ILowercaseTokenizer})">
            <summary>
            A tokenizer of type lowercase that performs the function of Letter Tokenizer and Lower Case Token Filter together. 
            <para>It divides text at non-letters and converts them to lower case. </para>
            <para>While it is functionally equivalent to the combination of Letter Tokenizer and Lower Case Token Filter, </para>
            <para>there is a performance advantage to doing the two tasks at once, hence this (redundant) implementation.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.PathHierarchy(System.String,System.Func{Nest.PathHierarchyTokenizerDescriptor,Nest.IPathHierarchyTokenizer})">
             <summary>
             The path_hierarchy tokenizer takes something like this:
            <para>/something/something/else</para>
            <para>And produces tokens:</para>
            <para></para>
            <para>/something</para>
            <para>/something/something</para>
            <para>/something/something/else</para>
             </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Pattern(System.String,System.Func{Nest.PatternTokenizerDescriptor,Nest.IPatternTokenizer})">
            <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression. 
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Standard(System.String,System.Func{Nest.StandardTokenizerDescriptor,Nest.IStandardTokenizer})">
            <summary>
            A tokenizer of type standard providing grammar based tokenizer that is a good tokenizer for most European language documents. 
            <para>The tokenizer implements the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.UaxEmailUrl(System.String,System.Func{Nest.UaxEmailUrlTokenizerDescriptor,Nest.IUaxEmailUrlTokenizer})">
            <summary>
            A tokenizer of type uax_url_email which works exactly like the standard tokenizer, but tokenizes emails and urls as single tokens
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Whitespace(System.String,System.Func{Nest.WhitespaceTokenizerDescriptor,Nest.IWhitespaceTokenizer})">
            <summary>
            A tokenizer of type whitespace that divides text at whitespace.
            </summary>
        </member>
        <member name="T:Nest.IUaxEmailUrlTokenizer">
            <summary>
            A tokenizer of type uax_url_email which works exactly like the standard tokenizer, but tokenizes emails and urls as single tokens
            </summary>
        </member>
        <member name="P:Nest.IUaxEmailUrlTokenizer.MaxTokenLength">
            <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
        </member>
        <member name="T:Nest.UaxEmailUrlTokenizer">
            <summary/>
        </member>
        <member name="P:Nest.UaxEmailUrlTokenizer.MaxTokenLength">
            <summary/>
        </member>
        <member name="T:Nest.UaxEmailUrlTokenizerDescriptor">
            <summary/>
        </member>
        <member name="M:Nest.UaxEmailUrlTokenizerDescriptor.MaxTokenLength(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IWhitespaceTokenizer">
            <summary>
            A tokenizer of type whitespace that divides text at whitespace.
            </summary>
        </member>
        <member name="T:Nest.WhitespaceTokenizer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.WhitespaceTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.CatHelpRequest">
            <summary>Request parameters for CatHelp <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html</pre></summary>
        </member>
        <member name="P:Nest.CatHelpRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatHelpRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatHelpRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatHelpDescriptor">
            <summary>descriptor for CatHelp <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html</pre></summary>
        </member>
        <member name="M:Nest.CatHelpDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatHelpDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatHelpDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="M:Nest.IElasticClient.CatHelp(System.Func{Nest.CatHelpDescriptor,Nest.ICatHelpRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHelp(Nest.ICatHelpRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHelpAsync(System.Func{Nest.CatHelpDescriptor,Nest.ICatHelpRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHelpAsync(Nest.ICatHelpRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRepositories(System.Func{Nest.CatRepositoriesDescriptor,Nest.ICatRepositoriesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRepositories(Nest.ICatRepositoriesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRepositoriesAsync(System.Func{Nest.CatRepositoriesDescriptor,Nest.ICatRepositoriesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRepositoriesAsync(Nest.ICatRepositoriesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodeAttributes(System.Func{Nest.CatNodeAttributesDescriptor,Nest.ICatNodeAttributesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodeAttributes(Nest.ICatNodeAttributesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodeAttributesAsync(System.Func{Nest.CatNodeAttributesDescriptor,Nest.ICatNodeAttributesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodeAttributesAsync(Nest.ICatNodeAttributesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSnapshots(Nest.Names,System.Func{Nest.CatSnapshotsDescriptor,Nest.ICatSnapshotsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSnapshots(Nest.ICatSnapshotsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSnapshotsAsync(Nest.Names,System.Func{Nest.CatSnapshotsDescriptor,Nest.ICatSnapshotsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSnapshotsAsync(Nest.ICatSnapshotsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAliases(System.Func{Nest.CatAliasesDescriptor,Nest.ICatAliasesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAliases(Nest.ICatAliasesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAliasesAsync(System.Func{Nest.CatAliasesDescriptor,Nest.ICatAliasesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAliasesAsync(Nest.ICatAliasesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAllocation(System.Func{Nest.CatAllocationDescriptor,Nest.ICatAllocationRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAllocation(Nest.ICatAllocationRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAllocationAsync(System.Func{Nest.CatAllocationDescriptor,Nest.ICatAllocationRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAllocationAsync(Nest.ICatAllocationRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatCount(System.Func{Nest.CatCountDescriptor,Nest.ICatCountRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatCount(Nest.ICatCountRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatCountAsync(System.Func{Nest.CatCountDescriptor,Nest.ICatCountRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatCountAsync(Nest.ICatCountRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatFielddata(System.Func{Nest.CatFielddataDescriptor,Nest.ICatFielddataRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatFielddata(Nest.ICatFielddataRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatFielddataAsync(System.Func{Nest.CatFielddataDescriptor,Nest.ICatFielddataRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatFielddataAsync(Nest.ICatFielddataRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHealth(System.Func{Nest.CatHealthDescriptor,Nest.ICatHealthRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHealth(Nest.ICatHealthRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHealthAsync(System.Func{Nest.CatHealthDescriptor,Nest.ICatHealthRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHealthAsync(Nest.ICatHealthRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatIndices(System.Func{Nest.CatIndicesDescriptor,Nest.ICatIndicesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatIndices(Nest.ICatIndicesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatIndicesAsync(System.Func{Nest.CatIndicesDescriptor,Nest.ICatIndicesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatIndicesAsync(Nest.ICatIndicesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatMaster(System.Func{Nest.CatMasterDescriptor,Nest.ICatMasterRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatMaster(Nest.ICatMasterRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatMasterAsync(System.Func{Nest.CatMasterDescriptor,Nest.ICatMasterRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatMasterAsync(Nest.ICatMasterRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodes(System.Func{Nest.CatNodesDescriptor,Nest.ICatNodesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodes(Nest.ICatNodesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodesAsync(System.Func{Nest.CatNodesDescriptor,Nest.ICatNodesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodesAsync(Nest.ICatNodesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPendingTasks(System.Func{Nest.CatPendingTasksDescriptor,Nest.ICatPendingTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPendingTasks(Nest.ICatPendingTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPendingTasksAsync(System.Func{Nest.CatPendingTasksDescriptor,Nest.ICatPendingTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPendingTasksAsync(Nest.ICatPendingTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPlugins(System.Func{Nest.CatPluginsDescriptor,Nest.ICatPluginsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPlugins(Nest.ICatPluginsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPluginsAsync(System.Func{Nest.CatPluginsDescriptor,Nest.ICatPluginsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPluginsAsync(Nest.ICatPluginsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRecovery(System.Func{Nest.CatRecoveryDescriptor,Nest.ICatRecoveryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRecovery(Nest.ICatRecoveryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRecoveryAsync(System.Func{Nest.CatRecoveryDescriptor,Nest.ICatRecoveryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRecoveryAsync(Nest.ICatRecoveryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSegments(System.Func{Nest.CatSegmentsDescriptor,Nest.ICatSegmentsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSegments(Nest.ICatSegmentsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSegmentsAsync(System.Func{Nest.CatSegmentsDescriptor,Nest.ICatSegmentsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSegmentsAsync(Nest.ICatSegmentsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatShards(System.Func{Nest.CatShardsDescriptor,Nest.ICatShardsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatShards(Nest.ICatShardsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatShardsAsync(System.Func{Nest.CatShardsDescriptor,Nest.ICatShardsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatShardsAsync(Nest.ICatShardsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatThreadPool(System.Func{Nest.CatThreadPoolDescriptor,Nest.ICatThreadPoolRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatThreadPool(Nest.ICatThreadPoolRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatThreadPoolAsync(System.Func{Nest.CatThreadPoolDescriptor,Nest.ICatThreadPoolRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatThreadPoolAsync(Nest.ICatThreadPoolRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterHealth(System.Func{Nest.ClusterHealthDescriptor,Nest.IClusterHealthRequest})">
            <summary>
            The cluster health API allows to get a very simple status on the health of the cluster.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-health.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-health.html</a>
            </summary>
            <param name="selector">An optional descriptor to further describe the cluster health operation</param>
        </member>
        <member name="M:Nest.IElasticClient.ClusterHealth(Nest.IClusterHealthRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterHealthAsync(System.Func{Nest.ClusterHealthDescriptor,Nest.IClusterHealthRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterHealthAsync(Nest.IClusterHealthRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPendingTasks(System.Func{Nest.ClusterPendingTasksDescriptor,Nest.IClusterPendingTasksRequest})">
            <summary>
            Returns a list of any cluster-level changes (e.g. create index, update mapping, allocate or fail shard) which have not yet been executed.
            <para> </para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-pending.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-pending.html</a>
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPendingTasksAsync(System.Func{Nest.ClusterPendingTasksDescriptor,Nest.IClusterPendingTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPendingTasks(Nest.IClusterPendingTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPendingTasksAsync(Nest.IClusterPendingTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterReroute(System.Func{Nest.ClusterRerouteDescriptor,Nest.IClusterRerouteRequest})">
            <summary>
            Allows to explicitly execute a cluster reroute allocation command including specific commands. 
            For example, a shard can be moved from one node to another explicitly, an allocation can be canceled, 
            or an unassigned shard can be explicitly allocated on a specific node.
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.ClusterRerouteAsync(System.Func{Nest.ClusterRerouteDescriptor,Nest.IClusterRerouteRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterReroute(Nest.IClusterRerouteRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterRerouteAsync(Nest.IClusterRerouteRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterGetSettings(System.Func{Nest.ClusterGetSettingsDescriptor,Nest.IClusterGetSettingsRequest})">
            <summary>
            Gets cluster wide specific settings. Settings updated can either be persistent 
            (applied cross restarts) or transient (will not survive a full cluster restart). 
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-update-settings.html
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.ClusterGetSettingsAsync(System.Func{Nest.ClusterGetSettingsDescriptor,Nest.IClusterGetSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterGetSettings(Nest.IClusterGetSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterGetSettingsAsync(Nest.IClusterGetSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPutSettings(System.Func{Nest.ClusterPutSettingsDescriptor,Nest.IClusterPutSettingsRequest})">
            <summary>
            Allows to update cluster wide specific settings. Settings updated can either be persistent 
            (applied cross restarts) or transient (will not survive a full cluster restart). 
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-update-settings.html
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPutSettingsAsync(System.Func{Nest.ClusterPutSettingsDescriptor,Nest.IClusterPutSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPutSettings(Nest.IClusterPutSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPutSettingsAsync(Nest.IClusterPutSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterState(System.Func{Nest.ClusterStateDescriptor,Nest.IClusterStateRequest})">
            <summary>
            The cluster state API allows to get a comprehensive state information of the whole cluster.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-state.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-state.html</a>
            </summary>
            <param name="selector">A descriptor that describes the parameters for the cluster state operation</param>
        </member>
        <member name="M:Nest.IElasticClient.ClusterState(Nest.IClusterStateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterStateAsync(System.Func{Nest.ClusterStateDescriptor,Nest.IClusterStateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterStateAsync(Nest.IClusterStateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterStats(System.Func{Nest.ClusterStatsDescriptor,Nest.IClusterStatsRequest})">
            <summary>
            allows to retrieve statistics from a cluster wide perspective. The API returns basic index metrics 
            (shard numbers, store size, memory usage) and information about the current nodes that form the 
            cluster (number, roles, os, jvm versions, memory usage, cpu and installed plugins).
            </summary>
            <para> </para><a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/_cluster_stats.html">https://www.elastic.co/guide/en/elasticsearch/guide/current/_cluster_stats.html</a>
            <param name="selector">A descriptor that describes the cluster stats operation</param>
        </member>
        <member name="M:Nest.IElasticClient.ClusterStatsAsync(System.Func{Nest.ClusterStatsDescriptor,Nest.IClusterStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterStats(Nest.IClusterStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterStatsAsync(Nest.IClusterStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesHotThreads(System.Func{Nest.NodesHotThreadsDescriptor,Nest.INodesHotThreadsRequest})">
            <summary>
            An API allowing to get the current hot threads on each node in the cluster.
            </summary>
            <param name="selector"></param>
            <returns>An optional descriptor to further describe the nodes hot threads operation</returns>
        </member>
        <member name="M:Nest.IElasticClient.NodesHotThreads(Nest.INodesHotThreadsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesHotThreadsAsync(System.Func{Nest.NodesHotThreadsDescriptor,Nest.INodesHotThreadsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesHotThreadsAsync(Nest.INodesHotThreadsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesInfo(System.Func{Nest.NodesInfoDescriptor,Nest.INodesInfoRequest})">
            <summary>
            The cluster nodes info API allows to retrieve one or more (or all) of the cluster nodes information.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-nodes-info.html
            </summary>
            <param name="selector">An optional descriptor to further describe the nodes info operation</param>
        </member>
        <member name="M:Nest.IElasticClient.NodesInfo(Nest.INodesInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesInfoAsync(System.Func{Nest.NodesInfoDescriptor,Nest.INodesInfoRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesInfoAsync(Nest.INodesInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesStats(System.Func{Nest.NodesStatsDescriptor,Nest.INodesStatsRequest})">
            <summary>
            The cluster nodes stats API allows to retrieve one or more (or all) of the cluster nodes statistics.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-nodes-stats.html
            </summary>
            <param name="selector">An optional descriptor to further describe the nodes stats operation</param>
        </member>
        <member name="M:Nest.IElasticClient.NodesStats(Nest.INodesStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesStatsAsync(System.Func{Nest.NodesStatsDescriptor,Nest.INodesStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesStatsAsync(Nest.INodesStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Ping(System.Func{Nest.PingDescriptor,Nest.IPingRequest})">
            <summary>
            Executes a HEAD request to the cluster to determine whether it's up or not.
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.PingAsync(System.Func{Nest.PingDescriptor,Nest.IPingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Ping(Nest.IPingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PingAsync(Nest.IPingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RootNodeInfo(System.Func{Nest.RootNodeInfoDescriptor,Nest.IRootNodeInfoRequest})">
            <summary>
            Does a request to the root of an elasticsearch node
            </summary>
            <param name="selector">A descriptor to further describe the root operation</param>
        </member>
        <member name="M:Nest.IElasticClient.RootNodeInfo(Nest.IRootNodeInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RootNodeInfoAsync(System.Func{Nest.RootNodeInfoDescriptor,Nest.IRootNodeInfoRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RootNodeInfoAsync(Nest.IRootNodeInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TasksCancel(System.Func{Nest.TasksCancelDescriptor,Nest.ITasksCancelRequest})">
            <summary>
            Does a request to the root of an elasticsearch node
            </summary>
            <param name="selector">A descriptor to further describe the root operation</param>
        </member>
        <member name="M:Nest.IElasticClient.TasksCancel(Nest.ITasksCancelRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TasksCancelAsync(System.Func{Nest.TasksCancelDescriptor,Nest.ITasksCancelRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TasksCancelAsync(Nest.ITasksCancelRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TasksList(System.Func{Nest.TasksListDescriptor,Nest.ITasksListRequest})">
            <summary>
            Does a request to the root of an elasticsearch node
            </summary>
            <param name="selector">A descriptor to further describe the root operation</param>
        </member>
        <member name="M:Nest.IElasticClient.TasksList(Nest.ITasksListRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TasksListAsync(System.Func{Nest.TasksListDescriptor,Nest.ITasksListRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TasksListAsync(Nest.ITasksListRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Bulk(Nest.IBulkRequest)">
            <summary>
            The bulk API makes it possible to perform many index/delete operations in a single API call.
            This can greatly increase the indexing speed.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
            <param name="request">A descriptor the describe the index/create/delete operation for this bulk operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Bulk(System.Func{Nest.BulkDescriptor,Nest.IBulkRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.BulkAsync(Nest.IBulkRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.BulkAsync(System.Func{Nest.BulkDescriptor,Nest.IBulkRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateByQuery``1(Nest.Indices,Nest.Types,System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest})">
            <summary>
            The delete by query API allows to delete documents from one or more indices and one or more types based on a query.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</a>
            </summary>
            <typeparam name="T">The type used to infer the default index and typename as well as describe the strongly
             typed parts of the query</typeparam>
            <param name="selector">An optional descriptor to further describe the delete by query operation</param>
        </member>
        <member name="M:Nest.IElasticClient.UpdateByQuery(Nest.IUpdateByQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateByQueryAsync``1(Nest.Indices,Nest.Types,System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateByQueryAsync(Nest.IUpdateByQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteByQuery``1(Nest.Indices,Nest.Types,System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest})">
            <summary>
            The delete by query API allows to delete documents from one or more indices and one or more types based on a query.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</a>
            </summary>
            <typeparam name="T">The type used to infer the default index and typename as well as describe the strongly
             typed parts of the query</typeparam>
            <param name="selector">An optional descriptor to further describe the delete by query operation</param>
        </member>
        <member name="M:Nest.IElasticClient.DeleteByQuery(Nest.IDeleteByQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteByQueryAsync``1(Nest.Indices,Nest.Types,System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteByQueryAsync(Nest.IDeleteByQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiGet(System.Func{Nest.MultiGetDescriptor,Nest.IMultiGetRequest})">
            <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing). 
            The response includes a docs array with all the fetched documents, each element similar in structure to a document 
            provided by the get API.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <param name="selector">A descriptor describing which documents should be fetched</param>
        </member>
        <member name="M:Nest.IElasticClient.MultiGet(Nest.IMultiGetRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiGetAsync(System.Func{Nest.MultiGetDescriptor,Nest.IMultiGetRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiGetAsync(Nest.IMultiGetRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiTermVectors(System.Func{Nest.MultiTermVectorsDescriptor,Nest.IMultiTermVectorsRequest})">
            <summary>
            Multi termvectors API allows to get multiple termvectors based on an index, type and id.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-termvectors.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-termvectors.html</a>
            </summary>
            <param name="selector">The descriptor describing the multi termvectors operation</param>
        </member>
        <member name="M:Nest.IElasticClient.MultiTermVectors(Nest.IMultiTermVectorsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiTermVectorsAsync(System.Func{Nest.MultiTermVectorsDescriptor,Nest.IMultiTermVectorsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiTermVectorsAsync(Nest.IMultiTermVectorsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ReindexOnServer(System.Func{Nest.ReindexOnServerDescriptor,Nest.IReindexOnServerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ReindexOnServer(Nest.IReindexOnServerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ReindexOnServerAsync(System.Func{Nest.ReindexOnServerDescriptor,Nest.IReindexOnServerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ReindexOnServerAsync(Nest.IReindexOnServerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Reindex``1(Nest.IndexName,Nest.IndexName,System.Func{Nest.ReindexDescriptor{``0},Nest.IReindexRequest})">
            <summary>
            Helper method that allows you to reindex from one index into another using SCAN and SCROLL.
            </summary>
            <param name="from">the index that documents will be reindexed from</param>
            <param name="to">the index that documents will be reindexed to</param>
            <param name="selector">the descriptor to describe the reindex operation</param>
            <returns>An IObservable&lt;IReindexResponse&lt;T&gt;$gt; you can subscribe to to listen to the progress of the reindex process</returns>
        </member>
        <member name="M:Nest.IElasticClient.Reindex``1(Nest.IReindexRequest)">
            <summary>
            Helper method that allows you to reindex from one index into another using SCAN and SCROLL.
            </summary>
            <param name="request">a request object to describe the reindex operation</param>
            <returns>An IObservable&lt;IReindexResponse&lt;T&gt;$gt; you can subscribe to to listen to the progress of the reindex process</returns>
        </member>
        <member name="M:Nest.IElasticClient.Delete``1(Nest.DocumentPath{``0},System.Func{Nest.DeleteDescriptor{``0},Nest.IDeleteRequest})">
             <summary>
            The delete API allows to delete a typed JSON document from a specific index based on its id. 
             <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-delete.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-delete.html</a>
             </summary>
             <typeparam name="T">The type used to infer the default index and typename</typeparam>
             <param name="selector">Describe the delete operation, i.e type/index/id</param>
        </member>
        <member name="M:Nest.IElasticClient.Delete(Nest.IDeleteRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteAsync``1(Nest.DocumentPath{``0},System.Func{Nest.DeleteDescriptor{``0},Nest.IDeleteRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteAsync(Nest.IDeleteRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DocumentExists``1(Nest.DocumentPath{``0},System.Func{Nest.DocumentExistsDescriptor{``0},Nest.IDocumentExistsRequest})">
            <summary>
            Check if a document exists without returning its contents
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-get.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-get.html</a>
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="selector">Describe what document we are looking for</param>
        </member>
        <member name="M:Nest.IElasticClient.DocumentExists(Nest.IDocumentExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DocumentExistsAsync``1(Nest.DocumentPath{``0},System.Func{Nest.DocumentExistsDescriptor{``0},Nest.IDocumentExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DocumentExistsAsync(Nest.IDocumentExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Get``1(Nest.DocumentPath{``0},System.Func{Nest.GetDescriptor{``0},Nest.IGetRequest})">
            <summary>
            Use the /{index}/{type}/{id} to get the document and its metadata
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-get.html#_source
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="selector">A descriptor that describes which document's source to fetch</param>
        </member>
        <member name="M:Nest.IElasticClient.Get``1(Nest.IGetRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAsync``1(Nest.DocumentPath{``0},System.Func{Nest.GetDescriptor{``0},Nest.IGetRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAsync``1(Nest.IGetRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Index``1(``0,System.Func{Nest.IndexDescriptor{``0},Nest.IIndexRequest})">
            <summary>
            The index API adds or updates a typed JSON document in a specific index, making it searchable. 
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-index_.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-index_.html</a>
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="object">The object to be indexed, Id will be inferred (Id property or IdProperty attribute on type)</param>
            <param name="selector">Optionally furter describe the index operation i.e override type/index/id</param>
        </member>
        <member name="M:Nest.IElasticClient.Index(Nest.IIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexAsync``1(``0,System.Func{Nest.IndexDescriptor{``0},Nest.IIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexAsync(Nest.IIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Source``1(Nest.DocumentPath{``0},System.Func{Nest.SourceDescriptor{``0},Nest.ISourceRequest})">
            <summary>
            Use the /{index}/{type}/{id}/_source endpoint to get just the _source field of the document, 
            without any additional content around it. 
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-get.html#_source">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-get.html#_source</a>
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="document">The document path</param>
            <param name="selector">A descriptor that describes which document's source to fetch</param>
        </member>
        <member name="M:Nest.IElasticClient.Source``1(Nest.ISourceRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SourceAsync``1(Nest.DocumentPath{``0},System.Func{Nest.SourceDescriptor{``0},Nest.ISourceRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SourceAsync``1(Nest.ISourceRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TermVectors``1(System.Func{Nest.TermVectorsDescriptor{``0},Nest.ITermVectorsRequest{``0}})">
            <summary>
            Returns information and statistics on terms in the fields of a particular document as stored in the index.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-termvectors.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-termvectors.html</a>
            </summary>
            <typeparam name="T">The type of the document</typeparam>
            <param name="selector">A descriptor for the terms vector operation</param>
        </member>
        <member name="M:Nest.IElasticClient.TermVectors``1(Nest.ITermVectorsRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TermVectorsAsync``1(System.Func{Nest.TermVectorsDescriptor{``0},Nest.ITermVectorsRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TermVectorsAsync``1(Nest.ITermVectorsRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Update``1(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``0},Nest.IUpdateRequest{``0,``0}})">
            <summary>
            The update API allows to update a document based on a script provided. 
            <para>The operation gets the document (collocated with the shard) from the index, runs the script 
            (with optional script language and parameters), and index back the result 
            (also allows to delete, or ignore the operation). </para>
            <para>It uses versioning to make sure no updates have happened during the "get" and "reindex".</para>
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-update.html
            </summary>
            <typeparam name="TDocument">The type to describe the document to be updated</typeparam>
            <param name="selector">a descriptor that describes the update operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Update``1(Nest.IUpdateRequest{``0,``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Update``2(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``1},Nest.IUpdateRequest{``0,``1}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Update``2(Nest.IUpdateRequest{``0,``1})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateAsync``1(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``0},Nest.IUpdateRequest{``0,``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateAsync``1(Nest.IUpdateRequest{``0,``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateAsync``2(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``1},Nest.IUpdateRequest{``0,``1}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateAsync``2(Nest.IUpdateRequest{``0,``1})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AliasExists(System.Func{Nest.AliasExistsDescriptor,Nest.IAliasExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AliasExists(Nest.IAliasExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AliasExistsAsync(System.Func{Nest.AliasExistsDescriptor,Nest.IAliasExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AliasExistsAsync(Nest.IAliasExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Alias(System.Func{Nest.BulkAliasDescriptor,Nest.IBulkAliasRequest})">
            <summary>
            APIs in elasticsearch accept an index name when working against a specific index, and several indices when applicable. 
            <para>The index aliases API allow to alias an index with a name, with all APIs automatically converting the alias name to the 
            actual index name.</para><para> An alias can also be mapped to more than one index, and when specifying it, the alias 
            will automatically expand to the aliases indices.i</para><para> An alias can also be associated with a filter that will 
            automatically be applied when searching, and routing values.</para>
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-aliases.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the alias operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Alias(Nest.IBulkAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AliasAsync(System.Func{Nest.BulkAliasDescriptor,Nest.IBulkAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AliasAsync(Nest.IBulkAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteAlias(Nest.IDeleteAliasRequest)">
            <summary>
            Delete an index alias
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-aliases.html#deleting
            </summary>
            <param name="request">A descriptor that describes the delete alias request</param>
        </member>
        <member name="M:Nest.IElasticClient.DeleteAliasAsync(Nest.IDeleteAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteAlias(Nest.Indices,Nest.Names,System.Func{Nest.DeleteAliasDescriptor,Nest.IDeleteAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteAliasAsync(Nest.Indices,Nest.Names,System.Func{Nest.DeleteAliasDescriptor,Nest.IDeleteAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAliases(System.Func{Nest.GetAliasesDescriptor,Nest.IGetAliasesRequest})">
            <summary>
            The get index alias api allows to filter by alias name and index name. This api redirects to the master and fetches 
            the requested index aliases, if available. This api only serialises the found index aliases.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-aliases.html#alias-retrieving
            </summary>
            <param name="selector">A descriptor that describes which aliases/indexes we are interested int</param>
        </member>
        <member name="M:Nest.IElasticClient.GetAliases(Nest.IGetAliasesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAliasesAsync(System.Func{Nest.GetAliasesDescriptor,Nest.IGetAliasesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAliasesAsync(Nest.IGetAliasesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAlias(System.Func{Nest.GetAliasDescriptor,Nest.IGetAliasRequest})">
            <summary>
            The get index alias api allows to filter by alias name and index name. This api redirects to the master and fetches 
            the requested index aliases, if available. This api only serialises the found index aliases.
            <para> Difference with GetAlias is that this call will also return indices without aliases set</para>
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-aliases.html#alias-retrieving
            </summary>
            <param name="selector">A descriptor that describes which aliases/indexes we are interested int</param>
        </member>
        <member name="M:Nest.IElasticClient.GetAlias(Nest.IGetAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAliasAsync(System.Func{Nest.GetAliasDescriptor,Nest.IGetAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAliasAsync(Nest.IGetAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutAlias(Nest.IPutAliasRequest)">
            <summary>
            Add a single index alias
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-aliases.html#alias-adding
            </summary>
            <param name="request">A descriptor that describes the put alias request</param>
        </member>
        <member name="M:Nest.IElasticClient.PutAliasAsync(Nest.IPutAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutAlias(Nest.Indices,Nest.Name,System.Func{Nest.PutAliasDescriptor,Nest.IPutAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutAliasAsync(Nest.Indices,Nest.Name,System.Func{Nest.PutAliasDescriptor,Nest.IPutAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Analyze(System.Func{Nest.AnalyzeDescriptor,Nest.IAnalyzeRequest})">
            <summary>
            Performs the analysis process on a text and return the tokens breakdown of the text.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-analyze.html
            </summary>
            <param name="selector">A descriptor that describes the analyze operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Analyze(Nest.IAnalyzeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AnalyzeAsync(System.Func{Nest.AnalyzeDescriptor,Nest.IAnalyzeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AnalyzeAsync(Nest.IAnalyzeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateIndex(Nest.IndexName,System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest})">
            <summary>
            The create index API allows to instantiate an index. Elasticsearch provides support for multiple indices, 
            including executing operations across several indices.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-create-index.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-create-index.html</a>
            </summary>
            <param name="selector">A descriptor that describes the parameters for the create index operation</param>
        </member>
        <member name="M:Nest.IElasticClient.CreateIndex(Nest.ICreateIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateIndexAsync(Nest.IndexName,System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateIndexAsync(Nest.ICreateIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndex(Nest.Indices,System.Func{Nest.DeleteIndexDescriptor,Nest.IDeleteIndexRequest})">
            <summary>
            The delete index API allows to delete an existing index.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-delete-index.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the delete index operation</param>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndex(Nest.IDeleteIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndexAsync(Nest.Indices,System.Func{Nest.DeleteIndexDescriptor,Nest.IDeleteIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndexAsync(Nest.IDeleteIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndex(Nest.Indices,System.Func{Nest.GetIndexDescriptor,Nest.IGetIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndex(Nest.IGetIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexAsync(Nest.Indices,System.Func{Nest.GetIndexDescriptor,Nest.IGetIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexAsync(Nest.IGetIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexExists(Nest.Indices,System.Func{Nest.IndexExistsDescriptor,Nest.IIndexExistsRequest})">
            <summary>
            Used to check if the index (indices) exists or not. 
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-exists.html
            </summary>
            <param name="selector">A descriptor that describes the index exist operation</param>
        </member>
        <member name="M:Nest.IElasticClient.IndexExists(Nest.IIndexExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexExistsAsync(Nest.Indices,System.Func{Nest.IndexExistsDescriptor,Nest.IIndexExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexExistsAsync(Nest.IIndexExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CloseIndex(Nest.Indices,System.Func{Nest.CloseIndexDescriptor,Nest.ICloseIndexRequest})">
            <summary>
            The open and close index APIs allow to close an index, and later on opening it. 
            A closed index has almost no overhead on the cluster (except for maintaining its metadata), and is blocked 
            for read/write operations. 
            A closed index can be opened which will then go through the normal recovery process.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-open-close.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-open-close.html</a>
            </summary>
            <param name="selector">A descriptor thata describes the close index operation</param>
        </member>
        <member name="M:Nest.IElasticClient.CloseIndex(Nest.ICloseIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CloseIndexAsync(Nest.Indices,System.Func{Nest.CloseIndexDescriptor,Nest.ICloseIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CloseIndexAsync(Nest.ICloseIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.OpenIndex(Nest.Indices,System.Func{Nest.OpenIndexDescriptor,Nest.IOpenIndexRequest})">
            <summary>
            The open and close index APIs allow to close an index, and later on opening it. 
            A closed index has almost no overhead on the cluster (except for maintaining its metadata), and is blocked 
            for read/write operations. 
            A closed index can be opened which will then go through the normal recovery process.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-open-close.html
            </summary>
            <param name="selector">A descriptor that describes the open index operation</param>
        </member>
        <member name="M:Nest.IElasticClient.OpenIndex(Nest.IOpenIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.OpenIndexAsync(Nest.Indices,System.Func{Nest.OpenIndexDescriptor,Nest.IOpenIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.OpenIndexAsync(Nest.IOpenIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TypeExists(Nest.Indices,Nest.Types,System.Func{Nest.TypeExistsDescriptor,Nest.ITypeExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TypeExists(Nest.ITypeExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TypeExistsAsync(Nest.Indices,Nest.Types,System.Func{Nest.TypeExistsDescriptor,Nest.ITypeExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TypeExistsAsync(Nest.ITypeExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexSettings(System.Func{Nest.GetIndexSettingsDescriptor,Nest.IGetIndexSettingsRequest})">
            <summary>
            The get settings API allows to retrieve settings of index/indices.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-settings.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the get index settings operation</param>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexSettings(Nest.IGetIndexSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexSettingsAsync(System.Func{Nest.GetIndexSettingsDescriptor,Nest.IGetIndexSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexSettingsAsync(Nest.IGetIndexSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndexTemplate(Nest.Name,System.Func{Nest.DeleteIndexTemplateDescriptor,Nest.IDeleteIndexTemplateRequest})">
            <summary>
            Deletes an index template
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-templates.html#delete">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-templates.html#delete</a>
            </summary>
            <param name="name">The name of the template to delete</param>
            <param name="selector">An optional selector specifying additional parameters for the delete template operation</param>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndexTemplate(Nest.IDeleteIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndexTemplateAsync(Nest.Name,System.Func{Nest.DeleteIndexTemplateDescriptor,Nest.IDeleteIndexTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndexTemplateAsync(Nest.IDeleteIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexTemplate(System.Func{Nest.GetIndexTemplateDescriptor,Nest.IGetIndexTemplateRequest})">
            <summary>
            Gets an index template
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-templates.html#getting
            </summary>
            <param name="name">The name of the template to get</param>
            <param name="selector">An optional selector specifying additional parameters for the get template operation</param>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexTemplate(Nest.IGetIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexTemplateAsync(System.Func{Nest.GetIndexTemplateDescriptor,Nest.IGetIndexTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexTemplateAsync(Nest.IGetIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexTemplateExists(Nest.Name,System.Func{Nest.IndexTemplateExistsDescriptor,Nest.IIndexTemplateExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexTemplateExists(Nest.IIndexTemplateExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexTemplateExistsAsync(Nest.Name,System.Func{Nest.IndexTemplateExistsDescriptor,Nest.IIndexTemplateExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexTemplateExistsAsync(Nest.IIndexTemplateExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutIndexTemplate(Nest.Name,System.Func{Nest.PutIndexTemplateDescriptor,Nest.IPutIndexTemplateRequest})">
            <summary>
            Index templates allow to define templates that will automatically be applied to new indices created. 
            <para>The templates include both settings and mappings, and a simple pattern template that controls if 
            the template will be applied to the index created. </para>
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-templates.html
            </summary>
            <param name="name">The name of the template to register</param>
            <param name="selector">An optional selector specifying additional parameters for the put template operation</param>
        </member>
        <member name="M:Nest.IElasticClient.PutIndexTemplate(Nest.IPutIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutIndexTemplateAsync(Nest.Name,System.Func{Nest.PutIndexTemplateDescriptor,Nest.IPutIndexTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutIndexTemplateAsync(Nest.IPutIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateIndexSettings(Nest.Indices,System.Func{Nest.UpdateIndexSettingsDescriptor,Nest.IUpdateIndexSettingsRequest})">
            <summary>
            Change specific index level settings in real time. Note not all index settings CAN be updated.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-update-settings.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-update-settings.html</a>
            </summary>
            <param name="selector">A descriptor that strongly types all the updateable settings</param>
        </member>
        <member name="M:Nest.IElasticClient.UpdateIndexSettings(Nest.IUpdateIndexSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateIndexSettingsAsync(Nest.Indices,System.Func{Nest.UpdateIndexSettingsDescriptor,Nest.IUpdateIndexSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateIndexSettingsAsync(Nest.IUpdateIndexSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetFieldMapping``1(Nest.Fields,System.Func{Nest.GetFieldMappingDescriptor{``0},Nest.IGetFieldMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetFieldMapping(Nest.IGetFieldMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetFieldMappingAsync``1(Nest.Fields,System.Func{Nest.GetFieldMappingDescriptor{``0},Nest.IGetFieldMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetFieldMappingAsync(Nest.IGetFieldMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetMapping``1(System.Func{Nest.GetMappingDescriptor{``0},Nest.IGetMappingRequest})">
            <summary>
            The get mapping API allows to retrieve mapping definitions for an index or index/type.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-mapping.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the get mapping operation</param>
        </member>
        <member name="M:Nest.IElasticClient.GetMapping(Nest.IGetMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetMappingAsync``1(System.Func{Nest.GetMappingDescriptor{``0},Nest.IGetMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetMappingAsync(Nest.IGetMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Map``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest})">
            <summary>
            The put mapping API allows to register specific mapping definition for a specific type.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-put-mapping.html
            </summary>
            <typeparam name="T">The type we want to map in elasticsearch</typeparam>
            <param name="selector">A descriptor to describe the mapping of our type</param>
        </member>
        <member name="M:Nest.IElasticClient.Map(Nest.IPutMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MapAsync``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MapAsync(Nest.IPutMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RecoveryStatus(Nest.Indices,System.Func{Nest.RecoveryStatusDescriptor,Nest.IRecoveryStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RecoveryStatus(Nest.IRecoveryStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RecoveryStatusAsync(Nest.Indices,System.Func{Nest.RecoveryStatusDescriptor,Nest.IRecoveryStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RecoveryStatusAsync(Nest.IRecoveryStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Segments(Nest.Indices,System.Func{Nest.SegmentsDescriptor,Nest.ISegmentsRequest})">
            <summary>
            Provide low level segments information that a Lucene index (shard level) is built with. 
            Allows to be used to provide more information on the state of a shard and an index, possibly optimization information,
            data "wasted" on deletes, and so on.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-segments.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the segments operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Segments(Nest.ISegmentsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SegmentsAsync(Nest.Indices,System.Func{Nest.SegmentsDescriptor,Nest.ISegmentsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SegmentsAsync(Nest.ISegmentsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndicesShardStores(System.Func{Nest.IndicesShardStoresDescriptor,Nest.IIndicesShardStoresRequest})">
            <summary>
            Indices level stats provide statistics on different operations happening on an index. The API provides statistics on
            the index level scope (though most stats can also be retrieved using node level scope).
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-stats.html
            </summary>
            <param name="selector">Optionaly further describe the indices stats operation</param>
        </member>
        <member name="M:Nest.IElasticClient.IndicesShardStores(Nest.IIndicesShardStoresRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndicesShardStoresAsync(System.Func{Nest.IndicesShardStoresDescriptor,Nest.IIndicesShardStoresRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndicesShardStoresAsync(Nest.IIndicesShardStoresRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndicesStats(Nest.Indices,System.Func{Nest.IndicesStatsDescriptor,Nest.IIndicesStatsRequest})">
            <summary>
            Indices level stats provide statistics on different operations happening on an index. The API provides statistics on 
            the index level scope (though most stats can also be retrieved using node level scope).
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-stats.html
            </summary>
            <param name="selector">Optionaly further describe the indices stats operation</param>
        </member>
        <member name="M:Nest.IElasticClient.IndicesStats(Nest.IIndicesStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndicesStatsAsync(Nest.Indices,System.Func{Nest.IndicesStatsDescriptor,Nest.IIndicesStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndicesStatsAsync(Nest.IIndicesStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCache(Nest.Indices,System.Func{Nest.ClearCacheDescriptor,Nest.IClearCacheRequest})">
            <summary>
            The clear cache API allows to clear either all caches or specific cached associated with one ore more indices.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-clearcache.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the clear cache operation</param>
        </member>
        <member name="M:Nest.IElasticClient.ClearCache(Nest.IClearCacheRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCacheAsync(Nest.Indices,System.Func{Nest.ClearCacheDescriptor,Nest.IClearCacheRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCacheAsync(Nest.IClearCacheRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Flush(Nest.Indices,System.Func{Nest.FlushDescriptor,Nest.IFlushRequest})">
            <summary>
            The flush API allows to flush one or more indices through an API. The flush process of an index basically 
            frees memory from the index by flushing data to the index storage and clearing the internal transaction log. 
            By default, Elasticsearch uses memory heuristics in order to automatically trigger 
            flush operations as required in order to clear memory.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-flush.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the flush operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Flush(Nest.IFlushRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FlushAsync(Nest.Indices,System.Func{Nest.FlushDescriptor,Nest.IFlushRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FlushAsync(Nest.IFlushRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ForceMerge(Nest.IForceMergeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ForceMergeAsync(Nest.Indices,System.Func{Nest.ForceMergeDescriptor,Nest.IForceMergeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ForceMergeAsync(Nest.IForceMergeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Optimize(Nest.Indices,System.Func{Nest.OptimizeDescriptor,Nest.IOptimizeRequest})">
            <summary>
            The optimize API allows to optimize one or more indices through an API. The optimize process basically optimizes 
            the index for faster search operations (and relates to the number of segments a Lucene index holds within each shard).
             The optimize operation allows to reduce the number of segments by merging them.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-optimize.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-optimize.html</a>
            </summary>
            <param name="selector">An optional descriptor that further describes the optimize operation, i.e limit it to one index</param>
        </member>
        <member name="M:Nest.IElasticClient.Optimize(Nest.IOptimizeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.OptimizeAsync(Nest.Indices,System.Func{Nest.OptimizeDescriptor,Nest.IOptimizeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.OptimizeAsync(Nest.IOptimizeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Refresh(Nest.Indices,System.Func{Nest.RefreshDescriptor,Nest.IRefreshRequest})">
            <summary>
            The refresh API allows to explicitly refresh one or more index, making all operations performed since the last refresh 
            available for search. The (near) real-time capabilities depend on the index engine used. 
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-refresh.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-refresh.html</a>
            </summary>
            <param name="selector">A descriptor that describes the parameters for the refresh operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Refresh(Nest.IRefreshRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RefreshAsync(Nest.Indices,System.Func{Nest.RefreshDescriptor,Nest.IRefreshRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RefreshAsync(Nest.IRefreshRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SyncedFlush(Nest.Indices,System.Func{Nest.SyncedFlushDescriptor,Nest.ISyncedFlushRequest})">
            <summary>
            The Synced Flush API allows an administrator to initiate a synced flush manually. 
            This can be particularly useful for a planned (rolling) cluster restart where you 
            can stop indexing and don’t want to wait the default 5 minutes for idle indices to 
            be sync-flushed automatically.
            </summary>
            <param name="selector">A descriptor that describes the parameters for the synced flush operation</param>
            <returns></returns>
        </member>
        <member name="M:Nest.IElasticClient.SyncedFlush(Nest.ISyncedFlushRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SyncedFlushAsync(Nest.Indices,System.Func{Nest.SyncedFlushDescriptor,Nest.ISyncedFlushRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SyncedFlushAsync(Nest.ISyncedFlushRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Upgrade(Nest.IUpgradeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Upgrade(Nest.Indices,System.Func{Nest.UpgradeDescriptor,Nest.IUpgradeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpgradeAsync(Nest.IUpgradeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpgradeAsync(Nest.Indices,System.Func{Nest.UpgradeDescriptor,Nest.IUpgradeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpgradeStatus(Nest.IUpgradeStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpgradeStatus(System.Func{Nest.UpgradeStatusDescriptor,Nest.IUpgradeStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpgradeStatusAsync(Nest.IUpgradeStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpgradeStatusAsync(System.Func{Nest.UpgradeStatusDescriptor,Nest.IUpgradeStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteWarmer(Nest.Indices,Nest.Names,System.Func{Nest.DeleteWarmerDescriptor,Nest.IDeleteWarmerRequest})">
            <summary>
            Deletes a warmer
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-warmers.html#removing
            </summary>
            <param name="name">The name of the warmer to delete</param>
            <param name="selector">An optional selector specifying additional parameters for the delete warmer operation</param>
        </member>
        <member name="M:Nest.IElasticClient.DeleteWarmer(Nest.IDeleteWarmerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteWarmerAsync(Nest.Indices,Nest.Names,System.Func{Nest.DeleteWarmerDescriptor,Nest.IDeleteWarmerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteWarmerAsync(Nest.IDeleteWarmerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetWarmer(System.Func{Nest.GetWarmerDescriptor,Nest.IGetWarmerRequest})">
            <summary>
            Getting a warmer for specific index (or alias, or several indices) based on its name. 
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-warmers.html#warmer-retrieving
            </summary>
            <param name="name">The name of the warmer to get</param>
            <param name="selector">An optional selector specifying additional parameters for the get warmer operation</param>
        </member>
        <member name="M:Nest.IElasticClient.GetWarmer(Nest.IGetWarmerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetWarmerAsync(System.Func{Nest.GetWarmerDescriptor,Nest.IGetWarmerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetWarmerAsync(Nest.IGetWarmerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutWarmer(Nest.Name,System.Func{Nest.PutWarmerDescriptor,Nest.IPutWarmerRequest})">
            <summary>
            Allows to put a warmup search request on a specific index (or indices), with the body composing of a regular 
            search request. Types can be provided as part of the URI if the search request is designed to be run only 
            against the specific types.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-warmers.html#warmer-adding
            </summary>
            <param name="name">The name for the warmer that you want to register</param>
            <param name="selector">A descriptor that further describes what the warmer should look like</param>
        </member>
        <member name="M:Nest.IElasticClient.PutWarmer(Nest.IPutWarmerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutWarmerAsync(Nest.Name,System.Func{Nest.PutWarmerDescriptor,Nest.IPutWarmerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutWarmerAsync(Nest.IPutWarmerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteScript(Nest.Name,Nest.Id,System.Func{Nest.DeleteScriptDescriptor,Nest.IDeleteScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteScript(Nest.IDeleteScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteScriptAsync(Nest.Name,Nest.Id,System.Func{Nest.DeleteScriptDescriptor,Nest.IDeleteScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteScriptAsync(Nest.IDeleteScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetScript(Nest.Name,Nest.Id,System.Func{Nest.GetScriptDescriptor,Nest.IGetScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetScript(Nest.IGetScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetScriptAsync(Nest.Name,Nest.Id,System.Func{Nest.GetScriptDescriptor,Nest.IGetScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetScriptAsync(Nest.IGetScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutScript(Nest.Name,Nest.Id,System.Func{Nest.PutScriptDescriptor,Nest.IPutScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutScript(Nest.IPutScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutScriptAsync(Nest.Name,Nest.Id,System.Func{Nest.PutScriptDescriptor,Nest.IPutScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutScriptAsync(Nest.IPutScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateRepository(Nest.Name,System.Func{Nest.CreateRepositoryDescriptor,Nest.ICreateRepositoryRequest})">
            <summary>
            Before any snapshot or restore operation can be performed a snapshot repository should be registered in Elasticsearch. 
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html#_repositories
            </summary>
            <param name="repository">The name for the repository</param>
            <param name="selector">describe what the repository looks like</param>
        </member>
        <member name="M:Nest.IElasticClient.CreateRepository(Nest.ICreateRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateRepositoryAsync(Nest.Name,System.Func{Nest.CreateRepositoryDescriptor,Nest.ICreateRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateRepositoryAsync(Nest.ICreateRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRepository(Nest.Names,System.Func{Nest.DeleteRepositoryDescriptor,Nest.IDeleteRepositoryRequest})">
            <summary>
            Delete a repository, if you have ongoing restore operations be sure to delete the indices being restored into first.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html#_repositories
            </summary>
            <param name="repository">The name of the repository</param>
            <param name="selector">Optionaly provide the delete operation with more details</param>>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRepository(Nest.IDeleteRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRepositoryAsync(Nest.Names,System.Func{Nest.DeleteRepositoryDescriptor,Nest.IDeleteRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRepositoryAsync(Nest.IDeleteRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRepository(System.Func{Nest.GetRepositoryDescriptor,Nest.IGetRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRepository(Nest.IGetRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRepositoryAsync(System.Func{Nest.GetRepositoryDescriptor,Nest.IGetRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRepositoryAsync(Nest.IGetRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.VerifyRepository(Nest.Name,System.Func{Nest.VerifyRepositoryDescriptor,Nest.IVerifyRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.VerifyRepository(Nest.IVerifyRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.VerifyRepositoryAsync(Nest.Name,System.Func{Nest.VerifyRepositoryDescriptor,Nest.IVerifyRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.VerifyRepositoryAsync(Nest.IVerifyRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Restore(Nest.Name,Nest.Name,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest})">
            <summary>
            Restore a snapshot
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html#_restore
            </summary>
            <param name="repository">The repository name that holds our snapshot</param>
            <param name="snapshotName">The name of the snapshot that we want to restore</param>
            <param name="selector">Optionally further describe the restore operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Restore(Nest.IRestoreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RestoreAsync(Nest.Name,Nest.Name,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RestoreAsync(Nest.IRestoreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RestoreObservable(Nest.Name,Nest.Name,System.TimeSpan,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RestoreObservable(System.TimeSpan,Nest.IRestoreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSnapshot(Nest.Name,Nest.Name,System.Func{Nest.DeleteSnapshotDescriptor,Nest.IDeleteSnapshotRequest})">
            <summary>
            Delete a snapshot
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html#_snapshot
            </summary>
            <param name="repository">The repository name under which the snapshot we want to delete lives</param>
            <param name="snapshotName">The name of the snapshot that we want to delete</param>
            <param name="selector">Optionally further describe the delete snapshot operation</param>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSnapshot(Nest.IDeleteSnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSnapshotAsync(Nest.Name,Nest.Name,System.Func{Nest.DeleteSnapshotDescriptor,Nest.IDeleteSnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSnapshotAsync(Nest.IDeleteSnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSnapshot(Nest.Name,Nest.Names,System.Func{Nest.GetSnapshotDescriptor,Nest.IGetSnapshotRequest})">
            <summary>
            Gets information about one or more snapshots
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html#_snapshot
            </summary>
            <param name="repository">The repository name under which the snapshots live</param>
            <param name="snapshotName">The names of the snapshots we want information from (can be _all or wildcards)</param>
            <param name="selector">Optionally further describe the get snapshot operation</param>
        </member>
        <member name="M:Nest.IElasticClient.GetSnapshot(Nest.IGetSnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSnapshotAsync(Nest.Name,Nest.Names,System.Func{Nest.GetSnapshotDescriptor,Nest.IGetSnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSnapshotAsync(Nest.IGetSnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotObservable(Nest.Name,Nest.Name,System.TimeSpan,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotObservable(System.TimeSpan,Nest.ISnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotStatus(System.Func{Nest.SnapshotStatusDescriptor,Nest.ISnapshotStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotStatus(Nest.ISnapshotStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotStatusAsync(System.Func{Nest.SnapshotStatusDescriptor,Nest.ISnapshotStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotStatusAsync(Nest.ISnapshotStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Snapshot(Nest.Name,Nest.Name,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest})">
            <summary>
            A repository can contain multiple snapshots of the same cluster. Snapshot are identified by unique names within the cluster.
            /// <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html#_snapshot
            </summary>
            <param name="repository">The name of the repository we want to create a snapshot in</param>
            <param name="snapshotName">The name of the snapshot</param>
            <param name="selector">Optionally provide more details about the snapshot operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Snapshot(Nest.ISnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotAsync(Nest.Name,Nest.Name,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotAsync(Nest.ISnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Count``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest})">
            <summary>
            The count API allows to easily execute a query and get the number of matches for that query. 
            It can be executed across one or more indices and across one or more types. 
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-count.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-count.html</a>
            </summary>
            <typeparam name="T">The type used to infer the default index and typename as well as describe the strongly
             typed parts of the query</typeparam>
            <param name="selector">An optional descriptor to further describe the count operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Count``1(Nest.ICountRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CountAsync``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CountAsync``1(Nest.ICountRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Explain``1(Nest.DocumentPath{``0},System.Func{Nest.ExplainDescriptor{``0},Nest.IExplainRequest{``0}})">
            <summary>
            The explain api computes a score explanation for a query and a specific document. 
            This can give useful feedback whether a document matches or didn’t match a specific query.
            <para> </para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-explain.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-explain.html</a>
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.Explain``1(Nest.IExplainRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ExplainAsync``1(Nest.DocumentPath{``0},System.Func{Nest.ExplainDescriptor{``0},Nest.IExplainRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ExplainAsync``1(Nest.IExplainRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FieldStats(Nest.Indices,System.Func{Nest.FieldStatsDescriptor,Nest.IFieldStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FieldStats(Nest.IFieldStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FieldStatsAsync(Nest.Indices,System.Func{Nest.FieldStatsDescriptor,Nest.IFieldStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FieldStatsAsync(Nest.IFieldStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiSearch(System.Func{Nest.MultiSearchDescriptor,Nest.IMultiSearchRequest})">
            <summary>
            The multi search API allows to execute several search requests within the same API.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-multi-search.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-multi-search.html</a>
            </summary>
            <param name="selector">A descriptor that describes the search operations on the multi search api</param>
        </member>
        <member name="M:Nest.IElasticClient.MultiSearch(Nest.IMultiSearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiSearchAsync(System.Func{Nest.MultiSearchDescriptor,Nest.IMultiSearchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiSearchAsync(Nest.IMultiSearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiPercolate(System.Func{Nest.MultiPercolateDescriptor,Nest.IMultiPercolateRequest})">
            <summary>
            The multi percolate API allows to bundle multiple percolate requests into a single request, 
            similar to what the multi search API does to search requests.
            <para> </para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-percolate.html#_multi_percolate_api">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-percolate.html#_multi_percolate_api</a>
            </summary>
            <param name="selector">A descriptor to describe the multi percolate operation</param>
        </member>
        <member name="M:Nest.IElasticClient.MultiPercolate(Nest.IMultiPercolateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiPercolateAsync(System.Func{Nest.MultiPercolateDescriptor,Nest.IMultiPercolateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiPercolateAsync(Nest.IMultiPercolateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PercolateCount``1(System.Func{Nest.PercolateCountDescriptor{``0},Nest.IPercolateCountRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PercolateCount``1(Nest.IPercolateCountRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PercolateCountAsync``1(Nest.IPercolateCountRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Percolate``1(System.Func{Nest.PercolateDescriptor{``0},Nest.IPercolateRequest{``0}})">
            <summary>
            Percolate a document
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-percolate.html
            </summary>
            <typeparam name="T">The type to infer the index/type from, and of the object that is being percolated</typeparam>
            <param name="selector">An optional descriptor describing the percolate operation further</param>
        </member>
        <member name="M:Nest.IElasticClient.Percolate``1(Nest.IPercolateRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PercolateAsync``1(System.Func{Nest.PercolateDescriptor{``0},Nest.IPercolateRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PercolateAsync``1(Nest.IPercolateRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RegisterPercolator``1(Nest.Name,System.Func{Nest.RegisterPercolatorDescriptor{``0},Nest.IRegisterPercolatorRequest})">
            <summary>
            Register a percolator
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-percolate.html
            </summary>
            <typeparam name="T">The type to infer the index/type from, will also be used to strongly type the query</typeparam>
            <param name="name">The name for the percolator</param>
            <param name="selector">An optional descriptor describing the register percolator operation further</param>
        </member>
        <member name="M:Nest.IElasticClient.RegisterPercolator(Nest.IRegisterPercolatorRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RegisterPercolatorAsync``1(Nest.Name,System.Func{Nest.RegisterPercolatorDescriptor{``0},Nest.IRegisterPercolatorRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RegisterPercolatorAsync(Nest.IRegisterPercolatorRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UnregisterPercolator``1(Nest.Name,System.Func{Nest.UnregisterPercolatorDescriptor{``0},Nest.IUnregisterPercolatorRequest})">
            <summary>
            Unregister a percolator
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-percolate.html
            </summary>
            <param name="name">The name for the percolator</param>
            <param name="selector">An optional descriptor describing the unregister percolator operation further</param>
        </member>
        <member name="M:Nest.IElasticClient.UnregisterPercolator(Nest.IUnregisterPercolatorRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UnregisterPercolatorAsync``1(Nest.Name,System.Func{Nest.UnregisterPercolatorDescriptor{``0},Nest.IUnregisterPercolatorRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UnregisterPercolatorAsync(Nest.IUnregisterPercolatorRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearScroll(System.Func{Nest.ClearScrollDescriptor,Nest.IClearScrollRequest})">
            <summary>
            Deletes a registered scroll request on the cluster 
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-request-scroll.html
            </summary>
            <param name="selector">Specify the scroll id as well as request specific configuration</param>
        </member>
        <member name="M:Nest.IElasticClient.ClearScroll(Nest.IClearScrollRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearScrollAsync(System.Func{Nest.ClearScrollDescriptor,Nest.IClearScrollRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearScrollAsync(Nest.IClearScrollRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Scroll``1(Nest.IScrollRequest)">
            <summary>
            A search request can be scrolled by specifying the scroll parameter. 
            <para>The scroll parameter is a time value parameter (for example: scroll=5m), 
            indicating for how long the nodes that participate in the search will maintain relevant resources in
            order to continue and support it.</para><para> 
            This is very similar in its idea to opening a cursor against a database.</para>
            <para> </para><para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-request-scroll.html</para>
            </summary>
            <typeparam name="T">The type that represents the result hits</typeparam>
            <param name="request">A descriptor that describes the scroll operation</param>
            <returns>A query response holding <typeparamref name="T"/> hits as well as the ScrollId for the next scroll operation</returns>
        </member>
        <member name="M:Nest.IElasticClient.Scroll``1(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ScrollAsync``1(Nest.IScrollRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ScrollAsync``1(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchExists``1(System.Func{Nest.SearchExistsDescriptor{``0},Nest.ISearchExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchExists(Nest.ISearchExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchExistsAsync``1(System.Func{Nest.SearchExistsDescriptor{``0},Nest.ISearchExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchExistsAsync(Nest.ISearchExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchShards``1(System.Func{Nest.SearchShardsDescriptor{``0},Nest.ISearchShardsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchShards(Nest.ISearchShardsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchShardsAsync``1(System.Func{Nest.SearchShardsDescriptor{``0},Nest.ISearchShardsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchShardsAsync(Nest.ISearchShardsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSearchTemplate(Nest.Id,System.Func{Nest.DeleteSearchTemplateDescriptor,Nest.IDeleteSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSearchTemplate(Nest.IDeleteSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSearchTemplateAsync(Nest.Id,System.Func{Nest.DeleteSearchTemplateDescriptor,Nest.IDeleteSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSearchTemplateAsync(Nest.IDeleteSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplate``1(System.Func{Nest.SearchTemplateDescriptor{``0},Nest.ISearchTemplateRequest})">
            <summary>
            The /_search/template endpoint allows to use the mustache language to pre render search 
            requests, before they are executed and fill existing templates with template parameters.
            </summary>
            <typeparam name="T">The type used to infer the index and typename as well describe the query strongly typed</typeparam>
            <param name="selector">A descriptor that describes the parameters for the search operation</param>
            <returns></returns>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplate``2(System.Func{Nest.SearchTemplateDescriptor{``0},Nest.ISearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplate``1(Nest.ISearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplate``2(Nest.ISearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplateAsync``1(System.Func{Nest.SearchTemplateDescriptor{``0},Nest.ISearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplateAsync``2(System.Func{Nest.SearchTemplateDescriptor{``0},Nest.ISearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplateAsync``1(Nest.ISearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplateAsync``2(Nest.ISearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RenderSearchTemplate(System.Func{Nest.RenderSearchTemplateDescriptor,Nest.IRenderSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RenderSearchTemplate(Nest.IRenderSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RenderSearchTemplateAsync(System.Func{Nest.RenderSearchTemplateDescriptor,Nest.IRenderSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RenderSearchTemplateAsync(Nest.IRenderSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSearchTemplate(Nest.Id,System.Func{Nest.GetSearchTemplateDescriptor,Nest.IGetSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSearchTemplate(Nest.IGetSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSearchTemplateAsync(Nest.Id,System.Func{Nest.GetSearchTemplateDescriptor,Nest.IGetSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSearchTemplateAsync(Nest.IGetSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutSearchTemplate(Nest.Id,System.Func{Nest.PutSearchTemplateDescriptor,Nest.IPutSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutSearchTemplate(Nest.IPutSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutSearchTemplateAsync(Nest.Id,System.Func{Nest.PutSearchTemplateDescriptor,Nest.IPutSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutSearchTemplateAsync(Nest.IPutSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Search``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
            <summary>
            The search API allows to execute a search query and get back search hits that match the query.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-search.html
            </summary>
            <typeparam name="T">The type used to infer the index and typename as well describe the query strongly typed</typeparam>
            <param name="selector">A descriptor that describes the parameters for the search operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Search``1(Nest.ISearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Search``2(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Search``2(Nest.ISearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchAsync``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
            <inheritdoc/>
            <typeparam name="T">The type used to infer the index and typename as well describe the query strongly typed</typeparam>
            <param name="selector">A descriptor that describes the parameters for the search operation</param>
        </member>
        <member name="M:Nest.IElasticClient.SearchAsync``1(Nest.ISearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchAsync``2(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchAsync``2(Nest.ISearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Suggest``1(System.Func{Nest.SuggestDescriptor{``0},Nest.ISuggestRequest})">
            <summary>
            The suggest feature suggests similar looking terms based on a provided text by using a suggester. 
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-suggesters.html
            </summary>
            <typeparam name="T">The type used to strongly type parts of the suggest operation</typeparam>
            <param name="selector">The suggesters to use this operation (can be multiple)</param>
        </member>
        <member name="M:Nest.IElasticClient.Suggest(Nest.ISuggestRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SuggestAsync``1(System.Func{Nest.SuggestDescriptor{``0},Nest.ISuggestRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SuggestAsync(Nest.ISuggestRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ValidateQuery``1(System.Func{Nest.ValidateQueryDescriptor{``0},Nest.IValidateQueryRequest})">
            <summary>
            The validate API allows a user to validate a potentially expensive query without executing it.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-validate.html
            </summary>
            <typeparam name="T">The type used to describe the query</typeparam>
            <param name="selector">A descriptor that describes the query operation</param>
        </member>
        <member name="M:Nest.IElasticClient.ValidateQuery(Nest.IValidateQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ValidateQueryAsync``1(System.Func{Nest.ValidateQueryDescriptor{``0},Nest.IValidateQueryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ValidateQueryAsync(Nest.IValidateQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GraphExplore``1(System.Func{Nest.GraphExploreDescriptor{``0},Nest.IGraphExploreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GraphExplore(Nest.IGraphExploreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GraphExploreAsync``1(System.Func{Nest.GraphExploreDescriptor{``0},Nest.IGraphExploreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GraphExploreAsync(Nest.IGraphExploreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteLicense(System.Func{Nest.DeleteLicenseDescriptor,Nest.IDeleteLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteLicense(Nest.IDeleteLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteLicenseAsync(System.Func{Nest.DeleteLicenseDescriptor,Nest.IDeleteLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteLicenseAsync(Nest.IDeleteLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetLicense(System.Func{Nest.GetLicenseDescriptor,Nest.IGetLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetLicense(Nest.IGetLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetLicenseAsync(System.Func{Nest.GetLicenseDescriptor,Nest.IGetLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetLicenseAsync(Nest.IGetLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PostLicense(System.Func{Nest.PostLicenseDescriptor,Nest.IPostLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PostLicense(Nest.IPostLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PostLicenseAsync(System.Func{Nest.PostLicenseDescriptor,Nest.IPostLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PostLicenseAsync(Nest.IPostLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Authenticate(System.Func{Nest.AuthenticateDescriptor,Nest.IAuthenticateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Authenticate(Nest.IAuthenticateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AuthenticateAsync(System.Func{Nest.AuthenticateDescriptor,Nest.IAuthenticateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AuthenticateAsync(Nest.IAuthenticateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRealms(Nest.Names,System.Func{Nest.ClearCachedRealmsDescriptor,Nest.IClearCachedRealmsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRealms(Nest.IClearCachedRealmsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRealmsAsync(Nest.Names,System.Func{Nest.ClearCachedRealmsDescriptor,Nest.IClearCachedRealmsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRealmsAsync(Nest.IClearCachedRealmsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRoles(Nest.Names,System.Func{Nest.ClearCachedRolesDescriptor,Nest.IClearCachedRolesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRoles(Nest.IClearCachedRolesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRolesAsync(Nest.Names,System.Func{Nest.ClearCachedRolesDescriptor,Nest.IClearCachedRolesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRolesAsync(Nest.IClearCachedRolesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRole(Nest.Name,System.Func{Nest.DeleteRoleDescriptor,Nest.IDeleteRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRole(Nest.IDeleteRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRoleAsync(Nest.Name,System.Func{Nest.DeleteRoleDescriptor,Nest.IDeleteRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRoleAsync(Nest.IDeleteRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRole(System.Func{Nest.GetRoleDescriptor,Nest.IGetRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRole(Nest.IGetRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRoleAsync(System.Func{Nest.GetRoleDescriptor,Nest.IGetRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRoleAsync(Nest.IGetRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutRole(Nest.Name,System.Func{Nest.PutRoleDescriptor,Nest.IPutRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutRole(Nest.IPutRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutRoleAsync(Nest.Name,System.Func{Nest.PutRoleDescriptor,Nest.IPutRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutRoleAsync(Nest.IPutRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteUser(Nest.Name,System.Func{Nest.DeleteUserDescriptor,Nest.IDeleteUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteUser(Nest.IDeleteUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteUserAsync(Nest.Name,System.Func{Nest.DeleteUserDescriptor,Nest.IDeleteUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteUserAsync(Nest.IDeleteUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetUser(System.Func{Nest.GetUserDescriptor,Nest.IGetUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetUser(Nest.IGetUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetUserAsync(System.Func{Nest.GetUserDescriptor,Nest.IGetUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetUserAsync(Nest.IGetUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutUser(Nest.Name,System.Func{Nest.PutUserDescriptor,Nest.IPutUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutUser(Nest.IPutUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutUserAsync(Nest.Name,System.Func{Nest.PutUserDescriptor,Nest.IPutUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutUserAsync(Nest.IPutUserRequest)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ElasticClient">
            <summary>
            ElasticClient is NEST's strongly typed client which exposes fully mapped elasticsearch endpoints
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.CatHelp(System.Func{Nest.CatHelpDescriptor,Nest.ICatHelpRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHelp(Nest.ICatHelpRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHelpAsync(System.Func{Nest.CatHelpDescriptor,Nest.ICatHelpRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHelpAsync(Nest.ICatHelpRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRepositories(System.Func{Nest.CatRepositoriesDescriptor,Nest.ICatRepositoriesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRepositories(Nest.ICatRepositoriesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRepositoriesAsync(System.Func{Nest.CatRepositoriesDescriptor,Nest.ICatRepositoriesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRepositoriesAsync(Nest.ICatRepositoriesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodeAttributes(System.Func{Nest.CatNodeAttributesDescriptor,Nest.ICatNodeAttributesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodeAttributes(Nest.ICatNodeAttributesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodeAttributesAsync(System.Func{Nest.CatNodeAttributesDescriptor,Nest.ICatNodeAttributesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodeAttributesAsync(Nest.ICatNodeAttributesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSnapshots(Nest.Names,System.Func{Nest.CatSnapshotsDescriptor,Nest.ICatSnapshotsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSnapshots(Nest.ICatSnapshotsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSnapshotsAsync(Nest.Names,System.Func{Nest.CatSnapshotsDescriptor,Nest.ICatSnapshotsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSnapshotsAsync(Nest.ICatSnapshotsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAliases(System.Func{Nest.CatAliasesDescriptor,Nest.ICatAliasesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAliases(Nest.ICatAliasesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAliasesAsync(System.Func{Nest.CatAliasesDescriptor,Nest.ICatAliasesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAliasesAsync(Nest.ICatAliasesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAllocation(System.Func{Nest.CatAllocationDescriptor,Nest.ICatAllocationRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAllocation(Nest.ICatAllocationRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAllocationAsync(System.Func{Nest.CatAllocationDescriptor,Nest.ICatAllocationRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAllocationAsync(Nest.ICatAllocationRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatCount(System.Func{Nest.CatCountDescriptor,Nest.ICatCountRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatCount(Nest.ICatCountRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatCountAsync(System.Func{Nest.CatCountDescriptor,Nest.ICatCountRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatCountAsync(Nest.ICatCountRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatFielddata(System.Func{Nest.CatFielddataDescriptor,Nest.ICatFielddataRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatFielddata(Nest.ICatFielddataRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatFielddataAsync(System.Func{Nest.CatFielddataDescriptor,Nest.ICatFielddataRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatFielddataAsync(Nest.ICatFielddataRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHealth(System.Func{Nest.CatHealthDescriptor,Nest.ICatHealthRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHealth(Nest.ICatHealthRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHealthAsync(System.Func{Nest.CatHealthDescriptor,Nest.ICatHealthRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHealthAsync(Nest.ICatHealthRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatIndices(System.Func{Nest.CatIndicesDescriptor,Nest.ICatIndicesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatIndices(Nest.ICatIndicesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatIndicesAsync(System.Func{Nest.CatIndicesDescriptor,Nest.ICatIndicesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatIndicesAsync(Nest.ICatIndicesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatMaster(System.Func{Nest.CatMasterDescriptor,Nest.ICatMasterRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatMaster(Nest.ICatMasterRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatMasterAsync(System.Func{Nest.CatMasterDescriptor,Nest.ICatMasterRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatMasterAsync(Nest.ICatMasterRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodes(System.Func{Nest.CatNodesDescriptor,Nest.ICatNodesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodes(Nest.ICatNodesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodesAsync(System.Func{Nest.CatNodesDescriptor,Nest.ICatNodesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodesAsync(Nest.ICatNodesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPendingTasks(System.Func{Nest.CatPendingTasksDescriptor,Nest.ICatPendingTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPendingTasks(Nest.ICatPendingTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPendingTasksAsync(System.Func{Nest.CatPendingTasksDescriptor,Nest.ICatPendingTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPendingTasksAsync(Nest.ICatPendingTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPlugins(System.Func{Nest.CatPluginsDescriptor,Nest.ICatPluginsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPlugins(Nest.ICatPluginsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPluginsAsync(System.Func{Nest.CatPluginsDescriptor,Nest.ICatPluginsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRecovery(System.Func{Nest.CatRecoveryDescriptor,Nest.ICatRecoveryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRecovery(Nest.ICatRecoveryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRecoveryAsync(System.Func{Nest.CatRecoveryDescriptor,Nest.ICatRecoveryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRecoveryAsync(Nest.ICatRecoveryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSegments(System.Func{Nest.CatSegmentsDescriptor,Nest.ICatSegmentsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSegments(Nest.ICatSegmentsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSegmentsAsync(System.Func{Nest.CatSegmentsDescriptor,Nest.ICatSegmentsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSegmentsAsync(Nest.ICatSegmentsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatShards(System.Func{Nest.CatShardsDescriptor,Nest.ICatShardsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatShards(Nest.ICatShardsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatShardsAsync(System.Func{Nest.CatShardsDescriptor,Nest.ICatShardsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatThreadPool(System.Func{Nest.CatThreadPoolDescriptor,Nest.ICatThreadPoolRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatThreadPool(Nest.ICatThreadPoolRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatThreadPoolAsync(System.Func{Nest.CatThreadPoolDescriptor,Nest.ICatThreadPoolRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatThreadPoolAsync(Nest.ICatThreadPoolRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterHealth(System.Func{Nest.ClusterHealthDescriptor,Nest.IClusterHealthRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterHealth(Nest.IClusterHealthRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterHealthAsync(System.Func{Nest.ClusterHealthDescriptor,Nest.IClusterHealthRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterHealthAsync(Nest.IClusterHealthRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPendingTasks(System.Func{Nest.ClusterPendingTasksDescriptor,Nest.IClusterPendingTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPendingTasksAsync(System.Func{Nest.ClusterPendingTasksDescriptor,Nest.IClusterPendingTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPendingTasks(Nest.IClusterPendingTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPendingTasksAsync(Nest.IClusterPendingTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterReroute(System.Func{Nest.ClusterRerouteDescriptor,Nest.IClusterRerouteRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterRerouteAsync(System.Func{Nest.ClusterRerouteDescriptor,Nest.IClusterRerouteRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterReroute(Nest.IClusterRerouteRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterRerouteAsync(Nest.IClusterRerouteRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterGetSettings(System.Func{Nest.ClusterGetSettingsDescriptor,Nest.IClusterGetSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterGetSettingsAsync(System.Func{Nest.ClusterGetSettingsDescriptor,Nest.IClusterGetSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterGetSettings(Nest.IClusterGetSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterGetSettingsAsync(Nest.IClusterGetSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPutSettings(System.Func{Nest.ClusterPutSettingsDescriptor,Nest.IClusterPutSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPutSettingsAsync(System.Func{Nest.ClusterPutSettingsDescriptor,Nest.IClusterPutSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPutSettings(Nest.IClusterPutSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPutSettingsAsync(Nest.IClusterPutSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterState(System.Func{Nest.ClusterStateDescriptor,Nest.IClusterStateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterState(Nest.IClusterStateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterStateAsync(System.Func{Nest.ClusterStateDescriptor,Nest.IClusterStateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterStateAsync(Nest.IClusterStateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterStats(System.Func{Nest.ClusterStatsDescriptor,Nest.IClusterStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterStatsAsync(System.Func{Nest.ClusterStatsDescriptor,Nest.IClusterStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterStats(Nest.IClusterStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterStatsAsync(Nest.IClusterStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesHotThreads(System.Func{Nest.NodesHotThreadsDescriptor,Nest.INodesHotThreadsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesHotThreads(Nest.INodesHotThreadsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesHotThreadsAsync(System.Func{Nest.NodesHotThreadsDescriptor,Nest.INodesHotThreadsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesHotThreadsAsync(Nest.INodesHotThreadsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeserializeNodesHotThreadResponse(Elasticsearch.Net.IApiCallDetails,System.IO.Stream)">
            <summary>
            Because the nodes.hot_threads endpoint returns plain text instead of JSON, we have to
            manually parse the response text into a typed response object.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.NodesInfo(System.Func{Nest.NodesInfoDescriptor,Nest.INodesInfoRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesInfo(Nest.INodesInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesInfoAsync(System.Func{Nest.NodesInfoDescriptor,Nest.INodesInfoRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesInfoAsync(Nest.INodesInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesStats(System.Func{Nest.NodesStatsDescriptor,Nest.INodesStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesStats(Nest.INodesStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesStatsAsync(System.Func{Nest.NodesStatsDescriptor,Nest.INodesStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesStatsAsync(Nest.INodesStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Ping(System.Func{Nest.PingDescriptor,Nest.IPingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PingAsync(System.Func{Nest.PingDescriptor,Nest.IPingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Ping(Nest.IPingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PingAsync(Nest.IPingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RootNodeInfo(System.Func{Nest.RootNodeInfoDescriptor,Nest.IRootNodeInfoRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RootNodeInfo(Nest.IRootNodeInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RootNodeInfoAsync(System.Func{Nest.RootNodeInfoDescriptor,Nest.IRootNodeInfoRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RootNodeInfoAsync(Nest.IRootNodeInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TasksCancel(System.Func{Nest.TasksCancelDescriptor,Nest.ITasksCancelRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TasksCancel(Nest.ITasksCancelRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TasksCancelAsync(System.Func{Nest.TasksCancelDescriptor,Nest.ITasksCancelRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TasksCancelAsync(Nest.ITasksCancelRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TasksList(System.Func{Nest.TasksListDescriptor,Nest.ITasksListRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TasksList(Nest.ITasksListRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TasksListAsync(System.Func{Nest.TasksListDescriptor,Nest.ITasksListRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TasksListAsync(Nest.ITasksListRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Bulk(Nest.IBulkRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Bulk(System.Func{Nest.BulkDescriptor,Nest.IBulkRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.BulkAsync(Nest.IBulkRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.BulkAsync(System.Func{Nest.BulkDescriptor,Nest.IBulkRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateByQuery``1(Nest.Indices,Nest.Types,System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateByQuery(Nest.IUpdateByQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateByQueryAsync``1(Nest.Indices,Nest.Types,System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateByQueryAsync(Nest.IUpdateByQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByQuery``1(Nest.Indices,Nest.Types,System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByQuery(Nest.IDeleteByQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByQueryAsync``1(Nest.Indices,Nest.Types,System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByQueryAsync(Nest.IDeleteByQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiGet(System.Func{Nest.MultiGetDescriptor,Nest.IMultiGetRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiGet(Nest.IMultiGetRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiGetAsync(System.Func{Nest.MultiGetDescriptor,Nest.IMultiGetRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiGetAsync(Nest.IMultiGetRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiTermVectors(System.Func{Nest.MultiTermVectorsDescriptor,Nest.IMultiTermVectorsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiTermVectors(Nest.IMultiTermVectorsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiTermVectorsAsync(System.Func{Nest.MultiTermVectorsDescriptor,Nest.IMultiTermVectorsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiTermVectorsAsync(Nest.IMultiTermVectorsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ReindexOnServer(System.Func{Nest.ReindexOnServerDescriptor,Nest.IReindexOnServerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ReindexOnServer(Nest.IReindexOnServerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ReindexOnServerAsync(System.Func{Nest.ReindexOnServerDescriptor,Nest.IReindexOnServerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ReindexOnServerAsync(Nest.IReindexOnServerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Reindex``1(Nest.IndexName,Nest.IndexName,System.Func{Nest.ReindexDescriptor{``0},Nest.IReindexRequest})">
            <summary>
            Helper method that allows you to reindex from one index into another using SCAN and SCROLL.
            </summary>
            <param name="from">the index that documents will be reindexed from</param>
            <param name="to">the index that documents will be reindexed to</param>
            <param name="selector">the descriptor to describe the reindex operation</param>
            <returns>An IObservable&lt;IReindexResponse&lt;T&gt;$gt; you can subscribe to to listen to the progress of the reindex process</returns>
        </member>
        <member name="M:Nest.ElasticClient.Reindex``1(Nest.IReindexRequest)">
            <summary>
            Helper method that allows you to reindex from one index into another using SCAN and SCROLL.
            </summary>
            <param name="request">a request object to describe the reindex operation</param>
            <returns>An IObservable&lt;IReindexResponse&lt;T&gt;$gt; you can subscribe to to listen to the progress of the reindex process</returns>
        </member>
        <member name="M:Nest.ElasticClient.Delete``1(Nest.DocumentPath{``0},System.Func{Nest.DeleteDescriptor{``0},Nest.IDeleteRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Delete(Nest.IDeleteRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAsync``1(Nest.DocumentPath{``0},System.Func{Nest.DeleteDescriptor{``0},Nest.IDeleteRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAsync(Nest.IDeleteRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DocumentExists``1(Nest.DocumentPath{``0},System.Func{Nest.DocumentExistsDescriptor{``0},Nest.IDocumentExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DocumentExists(Nest.IDocumentExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DocumentExistsAsync``1(Nest.DocumentPath{``0},System.Func{Nest.DocumentExistsDescriptor{``0},Nest.IDocumentExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DocumentExistsAsync(Nest.IDocumentExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Get``1(Nest.DocumentPath{``0},System.Func{Nest.GetDescriptor{``0},Nest.IGetRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Get``1(Nest.IGetRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAsync``1(Nest.DocumentPath{``0},System.Func{Nest.GetDescriptor{``0},Nest.IGetRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAsync``1(Nest.IGetRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Index``1(``0,System.Func{Nest.IndexDescriptor{``0},Nest.IIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Index(Nest.IIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync``1(``0,System.Func{Nest.IndexDescriptor{``0},Nest.IIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync(Nest.IIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Source``1(Nest.DocumentPath{``0},System.Func{Nest.SourceDescriptor{``0},Nest.ISourceRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Source``1(Nest.ISourceRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SourceAsync``1(Nest.DocumentPath{``0},System.Func{Nest.SourceDescriptor{``0},Nest.ISourceRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SourceAsync``1(Nest.ISourceRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TermVectors``1(System.Func{Nest.TermVectorsDescriptor{``0},Nest.ITermVectorsRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TermVectors``1(Nest.ITermVectorsRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TermVectorsAsync``1(System.Func{Nest.TermVectorsDescriptor{``0},Nest.ITermVectorsRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TermVectorsAsync``1(Nest.ITermVectorsRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Update``1(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``0},Nest.IUpdateRequest{``0,``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Update``1(Nest.IUpdateRequest{``0,``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Update``2(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``1},Nest.IUpdateRequest{``0,``1}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Update``2(Nest.IUpdateRequest{``0,``1})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateAsync``1(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``0},Nest.IUpdateRequest{``0,``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateAsync``1(Nest.IUpdateRequest{``0,``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateAsync``2(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``1},Nest.IUpdateRequest{``0,``1}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateAsync``2(Nest.IUpdateRequest{``0,``1})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AliasExists(System.Func{Nest.AliasExistsDescriptor,Nest.IAliasExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AliasExists(Nest.IAliasExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AliasExistsAsync(System.Func{Nest.AliasExistsDescriptor,Nest.IAliasExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AliasExistsAsync(Nest.IAliasExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Alias(Nest.IBulkAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Alias(System.Func{Nest.BulkAliasDescriptor,Nest.IBulkAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AliasAsync(Nest.IBulkAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AliasAsync(System.Func{Nest.BulkAliasDescriptor,Nest.IBulkAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAlias(Nest.IDeleteAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAliasAsync(Nest.IDeleteAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAlias(Nest.Indices,Nest.Names,System.Func{Nest.DeleteAliasDescriptor,Nest.IDeleteAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAliasAsync(Nest.Indices,Nest.Names,System.Func{Nest.DeleteAliasDescriptor,Nest.IDeleteAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAliases(System.Func{Nest.GetAliasesDescriptor,Nest.IGetAliasesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAliases(Nest.IGetAliasesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAliasesAsync(System.Func{Nest.GetAliasesDescriptor,Nest.IGetAliasesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAliasesAsync(Nest.IGetAliasesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeserializeGetAliasesResponse(Elasticsearch.Net.IApiCallDetails,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAlias(System.Func{Nest.GetAliasDescriptor,Nest.IGetAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAlias(Nest.IGetAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAliasAsync(System.Func{Nest.GetAliasDescriptor,Nest.IGetAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAliasAsync(Nest.IGetAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutAlias(Nest.IPutAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutAliasAsync(Nest.IPutAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutAlias(Nest.Indices,Nest.Name,System.Func{Nest.PutAliasDescriptor,Nest.IPutAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutAliasAsync(Nest.Indices,Nest.Name,System.Func{Nest.PutAliasDescriptor,Nest.IPutAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Analyze(System.Func{Nest.AnalyzeDescriptor,Nest.IAnalyzeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Analyze(Nest.IAnalyzeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AnalyzeAsync(System.Func{Nest.AnalyzeDescriptor,Nest.IAnalyzeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AnalyzeAsync(Nest.IAnalyzeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateIndex(Nest.IndexName,System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateIndex(Nest.ICreateIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateIndexAsync(Nest.IndexName,System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateIndexAsync(Nest.ICreateIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndex(Nest.Indices,System.Func{Nest.DeleteIndexDescriptor,Nest.IDeleteIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndex(Nest.IDeleteIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndexAsync(Nest.Indices,System.Func{Nest.DeleteIndexDescriptor,Nest.IDeleteIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndexAsync(Nest.IDeleteIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndex(Nest.Indices,System.Func{Nest.GetIndexDescriptor,Nest.IGetIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndex(Nest.IGetIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexAsync(Nest.Indices,System.Func{Nest.GetIndexDescriptor,Nest.IGetIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexAsync(Nest.IGetIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexExists(Nest.Indices,System.Func{Nest.IndexExistsDescriptor,Nest.IIndexExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexExists(Nest.IIndexExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexExistsAsync(Nest.Indices,System.Func{Nest.IndexExistsDescriptor,Nest.IIndexExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexExistsAsync(Nest.IIndexExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CloseIndex(Nest.Indices,System.Func{Nest.CloseIndexDescriptor,Nest.ICloseIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CloseIndex(Nest.ICloseIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CloseIndexAsync(Nest.Indices,System.Func{Nest.CloseIndexDescriptor,Nest.ICloseIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CloseIndexAsync(Nest.ICloseIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.OpenIndex(Nest.Indices,System.Func{Nest.OpenIndexDescriptor,Nest.IOpenIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.OpenIndex(Nest.IOpenIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.OpenIndexAsync(Nest.Indices,System.Func{Nest.OpenIndexDescriptor,Nest.IOpenIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.OpenIndexAsync(Nest.IOpenIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TypeExists(Nest.Indices,Nest.Types,System.Func{Nest.TypeExistsDescriptor,Nest.ITypeExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TypeExists(Nest.ITypeExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TypeExistsAsync(Nest.Indices,Nest.Types,System.Func{Nest.TypeExistsDescriptor,Nest.ITypeExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TypeExistsAsync(Nest.ITypeExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexSettings(System.Func{Nest.GetIndexSettingsDescriptor,Nest.IGetIndexSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexSettings(Nest.IGetIndexSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexSettingsAsync(System.Func{Nest.GetIndexSettingsDescriptor,Nest.IGetIndexSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexSettingsAsync(Nest.IGetIndexSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndexTemplate(Nest.Name,System.Func{Nest.DeleteIndexTemplateDescriptor,Nest.IDeleteIndexTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndexTemplate(Nest.IDeleteIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndexTemplateAsync(Nest.Name,System.Func{Nest.DeleteIndexTemplateDescriptor,Nest.IDeleteIndexTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndexTemplateAsync(Nest.IDeleteIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexTemplate(System.Func{Nest.GetIndexTemplateDescriptor,Nest.IGetIndexTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexTemplate(Nest.IGetIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexTemplateAsync(System.Func{Nest.GetIndexTemplateDescriptor,Nest.IGetIndexTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexTemplateAsync(Nest.IGetIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexTemplateExists(Nest.Name,System.Func{Nest.IndexTemplateExistsDescriptor,Nest.IIndexTemplateExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexTemplateExists(Nest.IIndexTemplateExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexTemplateExistsAsync(Nest.Name,System.Func{Nest.IndexTemplateExistsDescriptor,Nest.IIndexTemplateExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexTemplateExistsAsync(Nest.IIndexTemplateExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutIndexTemplate(Nest.Name,System.Func{Nest.PutIndexTemplateDescriptor,Nest.IPutIndexTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutIndexTemplate(Nest.IPutIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutIndexTemplateAsync(Nest.Name,System.Func{Nest.PutIndexTemplateDescriptor,Nest.IPutIndexTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutIndexTemplateAsync(Nest.IPutIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateIndexSettings(Nest.Indices,System.Func{Nest.UpdateIndexSettingsDescriptor,Nest.IUpdateIndexSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateIndexSettings(Nest.IUpdateIndexSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateIndexSettingsAsync(Nest.Indices,System.Func{Nest.UpdateIndexSettingsDescriptor,Nest.IUpdateIndexSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateIndexSettingsAsync(Nest.IUpdateIndexSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetFieldMapping``1(Nest.Fields,System.Func{Nest.GetFieldMappingDescriptor{``0},Nest.IGetFieldMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetFieldMapping(Nest.IGetFieldMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetFieldMappingAsync``1(Nest.Fields,System.Func{Nest.GetFieldMappingDescriptor{``0},Nest.IGetFieldMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetFieldMappingAsync(Nest.IGetFieldMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetMapping``1(System.Func{Nest.GetMappingDescriptor{``0},Nest.IGetMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetMapping(Nest.IGetMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetMappingAsync``1(System.Func{Nest.GetMappingDescriptor{``0},Nest.IGetMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetMappingAsync(Nest.IGetMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Map``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Map(Nest.IPutMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MapAsync``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MapAsync(Nest.IPutMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RecoveryStatus(Nest.Indices,System.Func{Nest.RecoveryStatusDescriptor,Nest.IRecoveryStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RecoveryStatus(Nest.IRecoveryStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RecoveryStatusAsync(Nest.Indices,System.Func{Nest.RecoveryStatusDescriptor,Nest.IRecoveryStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RecoveryStatusAsync(Nest.IRecoveryStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Segments(Nest.Indices,System.Func{Nest.SegmentsDescriptor,Nest.ISegmentsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Segments(Nest.ISegmentsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SegmentsAsync(Nest.Indices,System.Func{Nest.SegmentsDescriptor,Nest.ISegmentsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SegmentsAsync(Nest.ISegmentsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesShardStores(System.Func{Nest.IndicesShardStoresDescriptor,Nest.IIndicesShardStoresRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesShardStores(Nest.IIndicesShardStoresRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesShardStoresAsync(System.Func{Nest.IndicesShardStoresDescriptor,Nest.IIndicesShardStoresRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesShardStoresAsync(Nest.IIndicesShardStoresRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesStats(Nest.Indices,System.Func{Nest.IndicesStatsDescriptor,Nest.IIndicesStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesStats(Nest.IIndicesStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesStatsAsync(Nest.Indices,System.Func{Nest.IndicesStatsDescriptor,Nest.IIndicesStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesStatsAsync(Nest.IIndicesStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCache(Nest.Indices,System.Func{Nest.ClearCacheDescriptor,Nest.IClearCacheRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCache(Nest.IClearCacheRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCacheAsync(Nest.Indices,System.Func{Nest.ClearCacheDescriptor,Nest.IClearCacheRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCacheAsync(Nest.IClearCacheRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Flush(Nest.Indices,System.Func{Nest.FlushDescriptor,Nest.IFlushRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Flush(Nest.IFlushRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FlushAsync(Nest.Indices,System.Func{Nest.FlushDescriptor,Nest.IFlushRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FlushAsync(Nest.IFlushRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ForceMerge(Nest.Indices,System.Func{Nest.ForceMergeDescriptor,Nest.IForceMergeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ForceMerge(Nest.IForceMergeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ForceMergeAsync(Nest.Indices,System.Func{Nest.ForceMergeDescriptor,Nest.IForceMergeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ForceMergeAsync(Nest.IForceMergeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Optimize(Nest.Indices,System.Func{Nest.OptimizeDescriptor,Nest.IOptimizeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Optimize(Nest.IOptimizeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.OptimizeAsync(Nest.Indices,System.Func{Nest.OptimizeDescriptor,Nest.IOptimizeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.OptimizeAsync(Nest.IOptimizeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Refresh(Nest.Indices,System.Func{Nest.RefreshDescriptor,Nest.IRefreshRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Refresh(Nest.IRefreshRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RefreshAsync(Nest.Indices,System.Func{Nest.RefreshDescriptor,Nest.IRefreshRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RefreshAsync(Nest.IRefreshRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SyncedFlush(Nest.Indices,System.Func{Nest.SyncedFlushDescriptor,Nest.ISyncedFlushRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SyncedFlush(Nest.ISyncedFlushRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SyncedFlushAsync(Nest.Indices,System.Func{Nest.SyncedFlushDescriptor,Nest.ISyncedFlushRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SyncedFlushAsync(Nest.ISyncedFlushRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpgradeStatus(Nest.IUpgradeStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpgradeStatus(System.Func{Nest.UpgradeStatusDescriptor,Nest.IUpgradeStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpgradeStatusAsync(Nest.IUpgradeStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpgradeStatusAsync(System.Func{Nest.UpgradeStatusDescriptor,Nest.IUpgradeStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteWarmer(Nest.Indices,Nest.Names,System.Func{Nest.DeleteWarmerDescriptor,Nest.IDeleteWarmerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteWarmer(Nest.IDeleteWarmerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteWarmerAsync(Nest.Indices,Nest.Names,System.Func{Nest.DeleteWarmerDescriptor,Nest.IDeleteWarmerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteWarmerAsync(Nest.IDeleteWarmerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetWarmer(System.Func{Nest.GetWarmerDescriptor,Nest.IGetWarmerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetWarmer(Nest.IGetWarmerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetWarmerAsync(System.Func{Nest.GetWarmerDescriptor,Nest.IGetWarmerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetWarmerAsync(Nest.IGetWarmerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutWarmer(Nest.Name,System.Func{Nest.PutWarmerDescriptor,Nest.IPutWarmerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutWarmer(Nest.IPutWarmerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutWarmerAsync(Nest.Name,System.Func{Nest.PutWarmerDescriptor,Nest.IPutWarmerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutWarmerAsync(Nest.IPutWarmerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteScript(Nest.IDeleteScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteScript(Nest.Name,Nest.Id,System.Func{Nest.DeleteScriptDescriptor,Nest.IDeleteScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteScriptAsync(Nest.Name,Nest.Id,System.Func{Nest.DeleteScriptDescriptor,Nest.IDeleteScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteScriptAsync(Nest.IDeleteScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetScript(Nest.Name,Nest.Id,System.Func{Nest.GetScriptDescriptor,Nest.IGetScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetScript(Nest.IGetScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetScriptAsync(Nest.Name,Nest.Id,System.Func{Nest.GetScriptDescriptor,Nest.IGetScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetScriptAsync(Nest.IGetScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateRepository(Nest.Name,System.Func{Nest.CreateRepositoryDescriptor,Nest.ICreateRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateRepository(Nest.ICreateRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateRepositoryAsync(Nest.Name,System.Func{Nest.CreateRepositoryDescriptor,Nest.ICreateRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateRepositoryAsync(Nest.ICreateRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRepository(Nest.Names,System.Func{Nest.DeleteRepositoryDescriptor,Nest.IDeleteRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRepository(Nest.IDeleteRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRepositoryAsync(Nest.Names,System.Func{Nest.DeleteRepositoryDescriptor,Nest.IDeleteRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRepositoryAsync(Nest.IDeleteRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRepository(System.Func{Nest.GetRepositoryDescriptor,Nest.IGetRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRepository(Nest.IGetRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRepositoryAsync(System.Func{Nest.GetRepositoryDescriptor,Nest.IGetRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRepositoryAsync(Nest.IGetRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.VerifyRepository(Nest.Name,System.Func{Nest.VerifyRepositoryDescriptor,Nest.IVerifyRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.VerifyRepository(Nest.IVerifyRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.VerifyRepositoryAsync(Nest.Name,System.Func{Nest.VerifyRepositoryDescriptor,Nest.IVerifyRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.VerifyRepositoryAsync(Nest.IVerifyRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Restore(Nest.IRestoreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Restore(Nest.Name,Nest.Name,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RestoreAsync(Nest.IRestoreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RestoreAsync(Nest.Name,Nest.Name,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RestoreObservable(Nest.Name,Nest.Name,System.TimeSpan,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RestoreObservable(System.TimeSpan,Nest.IRestoreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteSnapshot(Nest.Name,Nest.Name,System.Func{Nest.DeleteSnapshotDescriptor,Nest.IDeleteSnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteSnapshot(Nest.IDeleteSnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteSnapshotAsync(Nest.Name,Nest.Name,System.Func{Nest.DeleteSnapshotDescriptor,Nest.IDeleteSnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteSnapshotAsync(Nest.IDeleteSnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetSnapshot(Nest.Name,Nest.Names,System.Func{Nest.GetSnapshotDescriptor,Nest.IGetSnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetSnapshot(Nest.IGetSnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetSnapshotAsync(Nest.Name,Nest.Names,System.Func{Nest.GetSnapshotDescriptor,Nest.IGetSnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetSnapshotAsync(Nest.IGetSnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotObservable(Nest.Name,Nest.Name,System.TimeSpan,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotObservable(System.TimeSpan,Nest.ISnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotStatus(System.Func{Nest.SnapshotStatusDescriptor,Nest.ISnapshotStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotStatus(Nest.ISnapshotStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotStatusAsync(System.Func{Nest.SnapshotStatusDescriptor,Nest.ISnapshotStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotStatusAsync(Nest.ISnapshotStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Snapshot(Nest.Name,Nest.Name,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Snapshot(Nest.ISnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotAsync(Nest.Name,Nest.Name,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotAsync(Nest.ISnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Count``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Count``1(Nest.ICountRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CountAsync``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CountAsync``1(Nest.ICountRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Explain``1(Nest.DocumentPath{``0},System.Func{Nest.ExplainDescriptor{``0},Nest.IExplainRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Explain``1(Nest.IExplainRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ExplainAsync``1(Nest.DocumentPath{``0},System.Func{Nest.ExplainDescriptor{``0},Nest.IExplainRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ExplainAsync``1(Nest.IExplainRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FieldStats(Nest.Indices,System.Func{Nest.FieldStatsDescriptor,Nest.IFieldStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FieldStats(Nest.IFieldStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FieldStatsAsync(Nest.Indices,System.Func{Nest.FieldStatsDescriptor,Nest.IFieldStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FieldStatsAsync(Nest.IFieldStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiSearch(System.Func{Nest.MultiSearchDescriptor,Nest.IMultiSearchRequest})">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.MultiSearch(Nest.IMultiSearchRequest)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.MultiSearchAsync(System.Func{Nest.MultiSearchDescriptor,Nest.IMultiSearchRequest})">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.MultiSearchAsync(Nest.IMultiSearchRequest)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.MultiPercolate(System.Func{Nest.MultiPercolateDescriptor,Nest.IMultiPercolateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiPercolate(Nest.IMultiPercolateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiPercolateAsync(System.Func{Nest.MultiPercolateDescriptor,Nest.IMultiPercolateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiPercolateAsync(Nest.IMultiPercolateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PercolateCount``1(System.Func{Nest.PercolateCountDescriptor{``0},Nest.IPercolateCountRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PercolateCount``1(Nest.IPercolateCountRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PercolateCountAsync``1(System.Func{Nest.PercolateCountDescriptor{``0},Nest.IPercolateCountRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PercolateCountAsync``1(Nest.IPercolateCountRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Percolate``1(System.Func{Nest.PercolateDescriptor{``0},Nest.IPercolateRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Percolate``1(Nest.IPercolateRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PercolateAsync``1(System.Func{Nest.PercolateDescriptor{``0},Nest.IPercolateRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PercolateAsync``1(Nest.IPercolateRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RegisterPercolator``1(Nest.Name,System.Func{Nest.RegisterPercolatorDescriptor{``0},Nest.IRegisterPercolatorRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RegisterPercolator(Nest.IRegisterPercolatorRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RegisterPercolatorAsync``1(Nest.Name,System.Func{Nest.RegisterPercolatorDescriptor{``0},Nest.IRegisterPercolatorRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RegisterPercolatorAsync(Nest.IRegisterPercolatorRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UnregisterPercolator``1(Nest.Name,System.Func{Nest.UnregisterPercolatorDescriptor{``0},Nest.IUnregisterPercolatorRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UnregisterPercolator(Nest.IUnregisterPercolatorRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UnregisterPercolatorAsync``1(Nest.Name,System.Func{Nest.UnregisterPercolatorDescriptor{``0},Nest.IUnregisterPercolatorRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UnregisterPercolatorAsync(Nest.IUnregisterPercolatorRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearScroll(System.Func{Nest.ClearScrollDescriptor,Nest.IClearScrollRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearScroll(Nest.IClearScrollRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearScrollAsync(System.Func{Nest.ClearScrollDescriptor,Nest.IClearScrollRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearScrollAsync(Nest.IClearScrollRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Scroll``1(Nest.IScrollRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Scroll``1(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ScrollAsync``1(Nest.IScrollRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ScrollAsync``1(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchExists``1(System.Func{Nest.SearchExistsDescriptor{``0},Nest.ISearchExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchExists(Nest.ISearchExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchExistsAsync``1(System.Func{Nest.SearchExistsDescriptor{``0},Nest.ISearchExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchExistsAsync(Nest.ISearchExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchShards``1(System.Func{Nest.SearchShardsDescriptor{``0},Nest.ISearchShardsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchShards(Nest.ISearchShardsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchShardsAsync``1(System.Func{Nest.SearchShardsDescriptor{``0},Nest.ISearchShardsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchShardsAsync(Nest.ISearchShardsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutSearchTemplate(Nest.Id,System.Func{Nest.PutSearchTemplateDescriptor,Nest.IPutSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutSearchTemplate(Nest.IPutSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutSearchTemplateAsync(Nest.Id,System.Func{Nest.PutSearchTemplateDescriptor,Nest.IPutSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutSearchTemplateAsync(Nest.IPutSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Search``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Search``2(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Search``1(Nest.ISearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Search``2(Nest.ISearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync``2(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync``1(Nest.ISearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync``2(Nest.ISearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Suggest``1(System.Func{Nest.SuggestDescriptor{``0},Nest.ISuggestRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Suggest(Nest.ISuggestRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SuggestAsync``1(System.Func{Nest.SuggestDescriptor{``0},Nest.ISuggestRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SuggestAsync(Nest.ISuggestRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ValidateQuery``1(System.Func{Nest.ValidateQueryDescriptor{``0},Nest.IValidateQueryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ValidateQuery(Nest.IValidateQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ValidateQueryAsync``1(System.Func{Nest.ValidateQueryDescriptor{``0},Nest.IValidateQueryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ValidateQueryAsync(Nest.IValidateQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GraphExplore``1(System.Func{Nest.GraphExploreDescriptor{``0},Nest.IGraphExploreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GraphExplore(Nest.IGraphExploreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GraphExploreAsync``1(System.Func{Nest.GraphExploreDescriptor{``0},Nest.IGraphExploreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GraphExploreAsync(Nest.IGraphExploreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteLicense(System.Func{Nest.DeleteLicenseDescriptor,Nest.IDeleteLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteLicense(Nest.IDeleteLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteLicenseAsync(System.Func{Nest.DeleteLicenseDescriptor,Nest.IDeleteLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteLicenseAsync(Nest.IDeleteLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetLicense(System.Func{Nest.GetLicenseDescriptor,Nest.IGetLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetLicense(Nest.IGetLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetLicenseAsync(System.Func{Nest.GetLicenseDescriptor,Nest.IGetLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetLicenseAsync(Nest.IGetLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PostLicense(System.Func{Nest.PostLicenseDescriptor,Nest.IPostLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PostLicense(Nest.IPostLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PostLicenseAsync(System.Func{Nest.PostLicenseDescriptor,Nest.IPostLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PostLicenseAsync(Nest.IPostLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Authenticate(System.Func{Nest.AuthenticateDescriptor,Nest.IAuthenticateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Authenticate(Nest.IAuthenticateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AuthenticateAsync(System.Func{Nest.AuthenticateDescriptor,Nest.IAuthenticateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AuthenticateAsync(Nest.IAuthenticateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRealms(Nest.Names,System.Func{Nest.ClearCachedRealmsDescriptor,Nest.IClearCachedRealmsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRealms(Nest.IClearCachedRealmsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRealmsAsync(Nest.Names,System.Func{Nest.ClearCachedRealmsDescriptor,Nest.IClearCachedRealmsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRealmsAsync(Nest.IClearCachedRealmsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRoles(Nest.Names,System.Func{Nest.ClearCachedRolesDescriptor,Nest.IClearCachedRolesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRoles(Nest.IClearCachedRolesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRolesAsync(Nest.Names,System.Func{Nest.ClearCachedRolesDescriptor,Nest.IClearCachedRolesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRolesAsync(Nest.IClearCachedRolesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRole(Nest.Name,System.Func{Nest.DeleteRoleDescriptor,Nest.IDeleteRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRole(Nest.IDeleteRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRoleAsync(Nest.Name,System.Func{Nest.DeleteRoleDescriptor,Nest.IDeleteRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRoleAsync(Nest.IDeleteRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRole(System.Func{Nest.GetRoleDescriptor,Nest.IGetRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRole(Nest.IGetRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRoleAsync(System.Func{Nest.GetRoleDescriptor,Nest.IGetRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRoleAsync(Nest.IGetRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutRole(Nest.Name,System.Func{Nest.PutRoleDescriptor,Nest.IPutRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutRole(Nest.IPutRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutRoleAsync(Nest.Name,System.Func{Nest.PutRoleDescriptor,Nest.IPutRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutRoleAsync(Nest.IPutRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteUser(Nest.Name,System.Func{Nest.DeleteUserDescriptor,Nest.IDeleteUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteUser(Nest.IDeleteUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteUserAsync(Nest.Name,System.Func{Nest.DeleteUserDescriptor,Nest.IDeleteUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteUserAsync(Nest.IDeleteUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetUser(System.Func{Nest.GetUserDescriptor,Nest.IGetUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetUser(Nest.IGetUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetUserAsync(System.Func{Nest.GetUserDescriptor,Nest.IGetUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetUserAsync(Nest.IGetUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutUser(Nest.Name,System.Func{Nest.PutUserDescriptor,Nest.IPutUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutUser(Nest.IPutUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutUserAsync(Nest.Name,System.Func{Nest.PutUserDescriptor,Nest.IPutUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutUserAsync(Nest.IPutUserRequest)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.CatRepositoriesRequest">
            <summary>Request parameters for CatRepositories <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html</pre></summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.Local">
            <summary>Return local information, do not retrieve the state from master node</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatRepositoriesDescriptor">
            <summary>descriptor for CatRepositories <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html</pre></summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatNodeattrsRequest">
            <summary>Request parameters for CatNodeattrs <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html</pre></summary>
        </member>
        <member name="P:Nest.CatNodeattrsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatNodeattrsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatNodeattrsRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatNodeattrsRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatNodeattrsRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatNodeattrsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatNodeattrsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatNodeattrsDescriptor">
            <summary>descriptor for CatNodeattrs <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html</pre></summary>
        </member>
        <member name="M:Nest.CatNodeattrsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatNodeattrsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatNodeattrsDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatNodeattrsDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatNodeattrsDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatNodeattrsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatNodeattrsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatSnapshotsRequest">
            <summary>Request parameters for CatSnapshots <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.CatSnapshotsRequest.#ctor(Nest.Names)">
             <summary>/_cat/snapshots/{repository}</summary>
            <param name="repository">this parameter is required</param>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.IgnoreUnavailable">
            <summary>Set to true to ignore unavailable snapshots</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatSnapshotsDescriptor">
            <summary>descriptor for CatSnapshots <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.#ctor(Nest.Names)">
             <summary>/_cat/snapshots/{repository}</summary>
            <param name="repository"> this parameter is required</param>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Set to true to ignore unavailable snapshots</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatAliasesRequest">
            <summary>Request parameters for CatAliases <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html</pre></summary>
        </member>
        <member name="M:Nest.CatAliasesRequest.#ctor">
            <summary>/_cat/aliases</summary>
        </member>
        <member name="M:Nest.CatAliasesRequest.#ctor(Nest.Names)">
             <summary>/_cat/aliases/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatAliasesRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatAliasesDescriptor">
            <summary>descriptor for CatAliases <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html</pre></summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.#ctor">
            <summary>/_cat/aliases</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.Name(Nest.Names)">
            <summary>A comma-separated list of alias names to return</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatAllocationRequest">
            <summary>Request parameters for CatAllocation <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html</pre></summary>
        </member>
        <member name="M:Nest.CatAllocationRequest.#ctor">
            <summary>/_cat/allocation</summary>
        </member>
        <member name="M:Nest.CatAllocationRequest.#ctor(Nest.NodeIds)">
             <summary>/_cat/allocation/{node_id}</summary>
            <param name="node_id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatAllocationRequest.Bytes">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatAllocationDescriptor">
            <summary>descriptor for CatAllocation <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html</pre></summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.#ctor">
            <summary>/_cat/allocation</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.NodeId(Nest.NodeIds)">
            <summary>A comma-separated list of node IDs or names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.Bytes(Elasticsearch.Net.Bytes)">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatCountRequest">
            <summary>Request parameters for CatCount <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html</pre></summary>
        </member>
        <member name="M:Nest.CatCountRequest.#ctor">
            <summary>/_cat/count</summary>
        </member>
        <member name="M:Nest.CatCountRequest.#ctor(Nest.Indices)">
             <summary>/_cat/count/{index}</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatCountRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatCountRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatCountRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatCountRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatCountRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatCountRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatCountRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatCountDescriptor">
            <summary>descriptor for CatCount <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html</pre></summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.#ctor">
            <summary>/_cat/count</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Index``1">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.AllIndices">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatFielddataRequest">
            <summary>Request parameters for CatFielddata <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html</pre></summary>
        </member>
        <member name="M:Nest.CatFielddataRequest.#ctor">
            <summary>/_cat/fielddata</summary>
        </member>
        <member name="M:Nest.CatFielddataRequest.#ctor(Nest.Fields)">
             <summary>/_cat/fielddata/{fields}</summary>
            <param name="fields">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatFielddataRequest.Bytes">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatFielddataDescriptor">
            <summary>descriptor for CatFielddata <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html</pre></summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.#ctor">
            <summary>/_cat/fielddata</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Fields(Nest.Fields)">
            <summary>A comma-separated list of fields to return the fielddata size</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields to return the fielddata size</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Bytes(Elasticsearch.Net.Bytes)">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatHealthRequest">
            <summary>Request parameters for CatHealth <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html</pre></summary>
        </member>
        <member name="P:Nest.CatHealthRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.Ts">
            <summary>Set to false to disable timestamping</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatHealthDescriptor">
            <summary>descriptor for CatHealth <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html</pre></summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.Ts(System.Boolean)">
            <summary>Set to false to disable timestamping</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatIndicesRequest">
            <summary>Request parameters for CatIndices <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html</pre></summary>
        </member>
        <member name="M:Nest.CatIndicesRequest.#ctor">
            <summary>/_cat/indices</summary>
        </member>
        <member name="M:Nest.CatIndicesRequest.#ctor(Nest.Indices)">
             <summary>/_cat/indices/{index}</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatIndicesRequest.Bytes">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.Pri">
            <summary>Set to true to return stats only for primary shards</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatIndicesDescriptor">
            <summary>descriptor for CatIndices <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html</pre></summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.#ctor">
            <summary>/_cat/indices</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Index``1">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.AllIndices">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Bytes(Elasticsearch.Net.Bytes)">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Pri(System.Boolean)">
            <summary>Set to true to return stats only for primary shards</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatMasterRequest">
            <summary>Request parameters for CatMaster <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html</pre></summary>
        </member>
        <member name="P:Nest.CatMasterRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatMasterDescriptor">
            <summary>descriptor for CatMaster <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html</pre></summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatNodesRequest">
            <summary>Request parameters for CatNodes <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html</pre></summary>
        </member>
        <member name="P:Nest.CatNodesRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatNodesDescriptor">
            <summary>descriptor for CatNodes <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html</pre></summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatPendingTasksRequest">
            <summary>Request parameters for CatPendingTasks <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html</pre></summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatPendingTasksDescriptor">
            <summary>descriptor for CatPendingTasks <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html</pre></summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatPluginsRequest">
            <summary>Request parameters for CatPlugins <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html</pre></summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatPluginsDescriptor">
            <summary>descriptor for CatPlugins <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html</pre></summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatRecoveryRequest">
            <summary>Request parameters for CatRecovery <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html</pre></summary>
        </member>
        <member name="M:Nest.CatRecoveryRequest.#ctor">
            <summary>/_cat/recovery</summary>
        </member>
        <member name="M:Nest.CatRecoveryRequest.#ctor(Nest.Indices)">
             <summary>/_cat/recovery/{index}</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatRecoveryRequest.Bytes">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatRecoveryDescriptor">
            <summary>descriptor for CatRecovery <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html</pre></summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.#ctor">
            <summary>/_cat/recovery</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Index``1">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.AllIndices">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Bytes(Elasticsearch.Net.Bytes)">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatSegmentsRequest">
            <summary>Request parameters for CatSegments <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html</pre></summary>
        </member>
        <member name="M:Nest.CatSegmentsRequest.#ctor">
            <summary>/_cat/segments</summary>
        </member>
        <member name="M:Nest.CatSegmentsRequest.#ctor(Nest.Indices)">
             <summary>/_cat/segments/{index}</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatSegmentsRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatSegmentsDescriptor">
            <summary>descriptor for CatSegments <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html</pre></summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.#ctor">
            <summary>/_cat/segments</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.Index``1">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.AllIndices">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatShardsRequest">
            <summary>Request parameters for CatShards <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html</pre></summary>
        </member>
        <member name="M:Nest.CatShardsRequest.#ctor">
            <summary>/_cat/shards</summary>
        </member>
        <member name="M:Nest.CatShardsRequest.#ctor(Nest.Indices)">
             <summary>/_cat/shards/{index}</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatShardsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatShardsDescriptor">
            <summary>descriptor for CatShards <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html</pre></summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.#ctor">
            <summary>/_cat/shards</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Index``1">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.AllIndices">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatThreadPoolRequest">
            <summary>Request parameters for CatThreadPool <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html</pre></summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.FullId">
            <summary>Enables displaying the complete node ids</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CatThreadPoolDescriptor">
            <summary>descriptor for CatThreadPool <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html</pre></summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.FullId(System.Boolean)">
            <summary>Enables displaying the complete node ids</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterHealthRequest">
            <summary>Request parameters for ClusterHealth <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterHealthRequest.#ctor">
            <summary>/_cluster/health</summary>
        </member>
        <member name="M:Nest.ClusterHealthRequest.#ctor(Nest.Indices)">
             <summary>/_cluster/health/{index}</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ClusterHealthRequest.Level">
            <summary>Specify the level of detail for returned information</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.WaitForActiveShards">
            <summary>Wait until the specified number of shards is active</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.WaitForNodes">
            <summary>Wait until the specified number of nodes is available</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.WaitForRelocatingShards">
            <summary>Wait until the specified number of relocating shards is finished</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.WaitForStatus">
            <summary>Wait until cluster is in a specific state</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterHealthDescriptor">
            <summary>descriptor for ClusterHealth <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.#ctor">
            <summary>/_cluster/health</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Index(Nest.Indices)">
            <summary>Limit the information returned to a specific index</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Index``1">
            <summary>Limit the information returned to a specific index</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.AllIndices">
            <summary>Limit the information returned to a specific index</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Level(Elasticsearch.Net.Level)">
            <summary>Specify the level of detail for returned information</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.WaitForActiveShards(System.Int64)">
            <summary>Wait until the specified number of shards is active</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.WaitForNodes(System.String)">
            <summary>Wait until the specified number of nodes is available</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.WaitForRelocatingShards(System.Int64)">
            <summary>Wait until the specified number of relocating shards is finished</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.WaitForStatus(Elasticsearch.Net.WaitForStatus)">
            <summary>Wait until cluster is in a specific state</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterPendingTasksRequest">
            <summary>Request parameters for ClusterPendingTasks <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html</pre></summary>
        </member>
        <member name="P:Nest.ClusterPendingTasksRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterPendingTasksRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.ClusterPendingTasksRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ClusterPendingTasksRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterPendingTasksDescriptor">
            <summary>descriptor for ClusterPendingTasks <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterPendingTasksDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterPendingTasksDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.ClusterPendingTasksDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ClusterPendingTasksDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterRerouteRequest">
            <summary>Request parameters for ClusterReroute <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html</pre></summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.DryRun">
            <summary>Simulate the operation only and return the resulting state</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.Explain">
            <summary>Return an explanation of why the commands can or cannot be executed</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.Metric">
            <summary>Limit the information returned to the specified metrics. Defaults to all but metadata</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterRerouteDescriptor">
            <summary>descriptor for ClusterReroute <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.DryRun(System.Boolean)">
            <summary>Simulate the operation only and return the resulting state</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.Explain(System.Boolean)">
            <summary>Return an explanation of why the commands can or cannot be executed</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.Metric(System.String[])">
            <summary>Limit the information returned to the specified metrics. Defaults to all but metadata</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterGetSettingsRequest">
            <summary>Request parameters for ClusterGetSettings <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</pre></summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterGetSettingsDescriptor">
            <summary>descriptor for ClusterGetSettings <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterPutSettingsRequest">
            <summary>Request parameters for ClusterPutSettings <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</pre></summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterPutSettingsDescriptor">
            <summary>descriptor for ClusterPutSettings <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterStateRequest">
            <summary>Request parameters for ClusterState <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterStateRequest.#ctor">
            <summary>/_cluster/state</summary>
        </member>
        <member name="M:Nest.ClusterStateRequest.#ctor(Elasticsearch.Net.ClusterStateMetric)">
             <summary>/_cluster/state/{metric}</summary>
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="M:Nest.ClusterStateRequest.#ctor(Elasticsearch.Net.ClusterStateMetric,Nest.Indices)">
             <summary>/_cluster/state/{metric}/{index}</summary>
            <param name="metric">Optional, accepts null</param>		
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ClusterStateRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterStateDescriptor">
            <summary>descriptor for ClusterState <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.#ctor">
            <summary>/_cluster/state</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.Metric(Elasticsearch.Net.ClusterStateMetric)">
            <summary>Limit the information returned to the specified metrics</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterStatsRequest">
            <summary>Request parameters for ClusterStats <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterStatsRequest.#ctor">
            <summary>/_cluster/stats</summary>
        </member>
        <member name="M:Nest.ClusterStatsRequest.#ctor(Nest.NodeIds)">
             <summary>/_cluster/stats/nodes/{node_id}</summary>
            <param name="node_id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ClusterStatsRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterStatsRequest.Human">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="P:Nest.ClusterStatsRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.ClusterStatsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ClusterStatsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClusterStatsDescriptor">
            <summary>descriptor for ClusterStats <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.#ctor">
            <summary>/_cluster/stats</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.NodeId(Nest.NodeIds)">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.Human(System.Boolean)">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.NodesHotThreadsRequest">
            <summary>Request parameters for NodesHotThreadsForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html</pre></summary>
        </member>
        <member name="M:Nest.NodesHotThreadsRequest.#ctor">
            <summary>/_cluster/nodes/hotthreads</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsRequest.#ctor(Nest.NodeIds)">
             <summary>/_cluster/nodes/{node_id}/hotthreads</summary>
            <param name="node_id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.Interval">
            <summary>The interval for the second sampling of threads</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.Snapshots">
            <summary>Number of samples of thread stacktrace (default: 10)</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.Threads">
            <summary>Specify the number of threads to provide information for (default: 3)</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.IgnoreIdleThreads">
            <summary>Don&#39;t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.ThreadType">
            <summary>The type to sample (default: cpu)</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.NodesHotThreadsDescriptor">
            <summary>descriptor for NodesHotThreadsForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html</pre></summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.#ctor">
            <summary>/_cluster/nodes/hotthreads</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.NodeId(Nest.NodeIds)">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.Interval(Nest.Time)">
            <summary>The interval for the second sampling of threads</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.Snapshots(System.Int64)">
            <summary>Number of samples of thread stacktrace (default: 10)</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.Threads(System.Int64)">
            <summary>Specify the number of threads to provide information for (default: 3)</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.IgnoreIdleThreads(System.Boolean)">
            <summary>Don&#39;t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.ThreadType(Elasticsearch.Net.ThreadType)">
            <summary>The type to sample (default: cpu)</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.NodesInfoRequest">
            <summary>Request parameters for NodesInfoForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html</pre></summary>
        </member>
        <member name="M:Nest.NodesInfoRequest.#ctor">
            <summary>/_nodes</summary>
        </member>
        <member name="M:Nest.NodesInfoRequest.#ctor(Nest.NodeIds)">
             <summary>/_nodes/{node_id}</summary>
            <param name="node_id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.NodesInfoRequest.#ctor(Elasticsearch.Net.NodesInfoMetric)">
             <summary>/_nodes/{metric}</summary>
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="M:Nest.NodesInfoRequest.#ctor(Nest.NodeIds,Elasticsearch.Net.NodesInfoMetric)">
             <summary>/_nodes/{node_id}/{metric}</summary>
            <param name="node_id">Optional, accepts null</param>		
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="P:Nest.NodesInfoRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.NodesInfoRequest.Human">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="P:Nest.NodesInfoRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.NodesInfoRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.NodesInfoRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.NodesInfoDescriptor">
            <summary>descriptor for NodesInfoForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html</pre></summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.#ctor">
            <summary>/_nodes</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.NodeId(Nest.NodeIds)">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.Metric(Elasticsearch.Net.NodesInfoMetric)">
            <summary>A comma-separated list of metrics you wish returned. Leave empty to return all.</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.Human(System.Boolean)">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.NodesStatsRequest">
            <summary>Request parameters for NodesStatsForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html</pre></summary>
        </member>
        <member name="M:Nest.NodesStatsRequest.#ctor">
            <summary>/_nodes/stats</summary>
        </member>
        <member name="M:Nest.NodesStatsRequest.#ctor(Nest.NodeIds)">
             <summary>/_nodes/{node_id}/stats</summary>
            <param name="node_id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.NodesStatsRequest.#ctor(Elasticsearch.Net.NodesStatsMetric)">
             <summary>/_nodes/stats/{metric}</summary>
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="M:Nest.NodesStatsRequest.#ctor(Nest.NodeIds,Elasticsearch.Net.NodesStatsMetric)">
             <summary>/_nodes/{node_id}/stats/{metric}</summary>
            <param name="node_id">Optional, accepts null</param>		
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="M:Nest.NodesStatsRequest.#ctor(Elasticsearch.Net.NodesStatsMetric,Elasticsearch.Net.NodesStatsIndexMetric)">
             <summary>/_nodes/stats/{metric}/{index_metric}</summary>
            <param name="metric">Optional, accepts null</param>		
            <param name="index_metric">Optional, accepts null</param>
        </member>
        <member name="M:Nest.NodesStatsRequest.#ctor(Nest.NodeIds,Elasticsearch.Net.NodesStatsMetric,Elasticsearch.Net.NodesStatsIndexMetric)">
             <summary>/_nodes/{node_id}/stats/{metric}/{index_metric}</summary>
            <param name="node_id">Optional, accepts null</param>		
            <param name="metric">Optional, accepts null</param>		
            <param name="index_metric">Optional, accepts null</param>
        </member>
        <member name="P:Nest.NodesStatsRequest.CompletionFields">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.FielddataFields">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Fields">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Groups">
            <summary>A comma-separated list of search groups for `search` index metric</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Human">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Level">
            <summary>Return indices stats aggregated at node, index or shard level</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Types">
            <summary>A comma-separated list of document types for the `indexing` index metric</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.NodesStatsDescriptor">
            <summary>descriptor for NodesStatsForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html</pre></summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.#ctor">
            <summary>/_nodes/stats</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Metric(Elasticsearch.Net.NodesStatsMetric)">
            <summary>Limit the information returned to the specified metrics</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.IndexMetric(Elasticsearch.Net.NodesStatsIndexMetric)">
            <summary>Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.NodeId(Nest.NodeIds)">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.CompletionFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.CompletionFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.FielddataFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.FielddataFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Fields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Groups(System.Boolean)">
            <summary>A comma-separated list of search groups for `search` index metric</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Human(System.Boolean)">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Level(Elasticsearch.Net.Level)">
            <summary>Return indices stats aggregated at node, index or shard level</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Types(System.String[])">
            <summary>A comma-separated list of document types for the `indexing` index metric</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PingRequest">
            <summary>Request parameters for Ping <pre>http://www.elastic.co/guide/</pre></summary>
        </member>
        <member name="P:Nest.PingRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PingRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PingDescriptor">
            <summary>descriptor for Ping <pre>http://www.elastic.co/guide/</pre></summary>
        </member>
        <member name="M:Nest.PingDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.PingDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.RootNodeInfoRequest">
            <summary>Request parameters for Info <pre>http://www.elastic.co/guide/</pre></summary>
        </member>
        <member name="P:Nest.RootNodeInfoRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.RootNodeInfoRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.RootNodeInfoDescriptor">
            <summary>descriptor for Info <pre>http://www.elastic.co/guide/</pre></summary>
        </member>
        <member name="M:Nest.RootNodeInfoDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.RootNodeInfoDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.TasksCancelRequest">
            <summary>Request parameters for TasksCancel <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks-cancel.html</pre></summary>
        </member>
        <member name="M:Nest.TasksCancelRequest.#ctor">
            <summary>/_tasks/_cancel</summary>
        </member>
        <member name="M:Nest.TasksCancelRequest.#ctor(Nest.TaskId)">
             <summary>/_tasks/{task_id}/_cancel</summary>
            <param name="task_id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.TasksCancelRequest.NodeId">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="P:Nest.TasksCancelRequest.Actions">
            <summary>A comma-separated list of actions that should be cancelled. Leave empty to cancel all.</summary>
        </member>
        <member name="P:Nest.TasksCancelRequest.ParentNode">
            <summary>Cancel tasks with specified parent node.</summary>
        </member>
        <member name="P:Nest.TasksCancelRequest.ParentTask">
            <summary>Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.</summary>
        </member>
        <member name="P:Nest.TasksCancelRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.TasksCancelRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.TasksCancelDescriptor">
            <summary>descriptor for TasksCancel <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks-cancel.html</pre></summary>
        </member>
        <member name="M:Nest.TasksCancelDescriptor.#ctor">
            <summary>/_tasks/_cancel</summary>
        </member>
        <member name="M:Nest.TasksCancelDescriptor.TaskId(Nest.TaskId)">
            <summary>Cancel the task with specified task id (node_id:task_number)</summary>
        </member>
        <member name="M:Nest.TasksCancelDescriptor.NodeId(System.String[])">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.TasksCancelDescriptor.Actions(System.String[])">
            <summary>A comma-separated list of actions that should be cancelled. Leave empty to cancel all.</summary>
        </member>
        <member name="M:Nest.TasksCancelDescriptor.ParentNode(System.String)">
            <summary>Cancel tasks with specified parent node.</summary>
        </member>
        <member name="M:Nest.TasksCancelDescriptor.ParentTask(System.String)">
            <summary>Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.</summary>
        </member>
        <member name="M:Nest.TasksCancelDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.TasksCancelDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.TasksListRequest">
            <summary>Request parameters for TasksList <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks-list.html</pre></summary>
        </member>
        <member name="M:Nest.TasksListRequest.#ctor">
            <summary>/_tasks</summary>
        </member>
        <member name="M:Nest.TasksListRequest.#ctor(Nest.TaskId)">
             <summary>/_tasks/{task_id}</summary>
            <param name="task_id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.TasksListRequest.NodeId">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="P:Nest.TasksListRequest.Actions">
            <summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
        </member>
        <member name="P:Nest.TasksListRequest.Detailed">
            <summary>Return detailed task information (default: false)</summary>
        </member>
        <member name="P:Nest.TasksListRequest.ParentNode">
            <summary>Return tasks with specified parent node.</summary>
        </member>
        <member name="P:Nest.TasksListRequest.ParentTask">
            <summary>Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.</summary>
        </member>
        <member name="P:Nest.TasksListRequest.WaitForCompletion">
            <summary>Wait for the matching tasks to complete (default: false)</summary>
        </member>
        <member name="P:Nest.TasksListRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.TasksListRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.TasksListDescriptor">
            <summary>descriptor for TasksList <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks-list.html</pre></summary>
        </member>
        <member name="M:Nest.TasksListDescriptor.#ctor">
            <summary>/_tasks</summary>
        </member>
        <member name="M:Nest.TasksListDescriptor.TaskId(Nest.TaskId)">
            <summary>Return the task with specified id (node_id:task_number)</summary>
        </member>
        <member name="M:Nest.TasksListDescriptor.NodeId(System.String[])">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.TasksListDescriptor.Actions(System.String[])">
            <summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
        </member>
        <member name="M:Nest.TasksListDescriptor.Detailed(System.Boolean)">
            <summary>Return detailed task information (default: false)</summary>
        </member>
        <member name="M:Nest.TasksListDescriptor.ParentNode(System.String)">
            <summary>Return tasks with specified parent node.</summary>
        </member>
        <member name="M:Nest.TasksListDescriptor.ParentTask(System.String)">
            <summary>Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.</summary>
        </member>
        <member name="M:Nest.TasksListDescriptor.WaitForCompletion(System.Boolean)">
            <summary>Wait for the matching tasks to complete (default: false)</summary>
        </member>
        <member name="M:Nest.TasksListDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.TasksListDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.IClrTypeMapping`1.IndexName">
            <summary>
            When specified dictates the default Elasticsearch index name for <typeparamref name="T"/> 
            </summary>
        </member>
        <member name="P:Nest.IClrTypeMapping`1.TypeName">
            <summary>
            When specified dictates the default Elasticsearch type name for <typeparamref name="T" />
            </summary>
        </member>
        <member name="P:Nest.IClrTypeMapping`1.IdProperty">
            <summary>
            Allows you to set a default Id property on <typeparamref name="T" /> that NEST will evaluate 
            </summary>
        </member>
        <member name="P:Nest.IClrTypeMapping`1.Properties">
            <summary>
            When specified allows you to ignore or rename certain properties of clr type <typeparamref name="T" />
            </summary>
        </member>
        <member name="P:Nest.ClrTypeMapping`1.IndexName">
            <summary>
            When specified dictates the default Elasticsearch index name for <typeparamref name="T"/> 
            </summary>
        </member>
        <member name="P:Nest.ClrTypeMapping`1.TypeName">
            <summary>
            When specified dictates the default Elasticsearch type name for <typeparamref name="T" />
            </summary>
        </member>
        <member name="P:Nest.ClrTypeMapping`1.IdProperty">
            <summary>
            Allows you to set a default Id property on <typeparamref name="T" /> that NEST will evaluate 
            </summary>
        </member>
        <member name="M:Nest.ClrTypeMappingDescriptor`1.IndexName(System.String)">
            <summary>
            When specified dictates the default Elasticsearch index name for <typeparamref name="T"/> 
            </summary>
        </member>
        <member name="M:Nest.ClrTypeMappingDescriptor`1.TypeName(System.String)">
            <summary>
            When specified dictates the default Elasticsearch type name for <typeparamref name="T" />
            </summary>
        </member>
        <member name="M:Nest.ClrTypeMappingDescriptor`1.IdProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Allows you to set a default Id property on <typeparamref name="T" /> that NEST will evaluate 
            </summary>
        </member>
        <member name="M:Nest.ClrTypeMappingDescriptor`1.Ignore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            When specified allows you to ignore <param name="property"></param> on clr type <typeparamref name="T" />
            </summary>
        </member>
        <member name="M:Nest.ClrTypeMappingDescriptor`1.Rename(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            When specified allows you to rename <param name="property"></param> on clr type <typeparamref name="T" />
            </summary>
        </member>
        <member name="T:Nest.ConnectionSettings">
            <summary>
            Provides the connection settings for NEST's <see cref="T:Nest.ElasticClient"/>
            </summary>
        </member>
        <member name="T:Nest.ConnectionSettingsBase`1">
            <summary>
            Provides the connection settings for NEST's <see cref="T:Nest.ElasticClient"/>
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.DefaultSerializer(`0)">
            <summary>
            The default serializer for requests and responses
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.PluralizeTypeNames">
            <summary>
            This calls SetDefaultTypenameInferrer with an implementation that will pluralize type names. This used to be the default prior to Nest 0.90
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.DefaultIndex(System.String)">
            <summary>
            The default index to use when no index is specified.
            </summary>
            <param name="defaultIndex">When null/empty/not set might throw 
            <see cref="T:System.NullReferenceException"/> later on when not specifying index explicitly while indexing.
            </param>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.DefaultFieldNameInferrer(System.Func{System.String,System.String})">
            <summary>
            By default NEST camelCases property name (EmailAddress => emailAddress) expressions
            either via an ElasticProperty attribute or because they are part of Dictionary where the keys should be treated verbatim.
            <pre>
            Here you can register a function that transforms these expressions (default casing, pre- or suffixing)
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.DefaultTypeNameInferrer(System.Func{System.Type,System.String})">
            <summary>
            Allows you to override how type names should be represented, the default will call .ToLowerInvariant() on the type's name.
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.MapDefaultTypeIndices(System.Action{Nest.FluentDictionary{System.Type,System.String}})">
            <summary>
            Map types to a index names. Takes precedence over DefaultIndex().
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.MapDefaultTypeNames(System.Action{Nest.FluentDictionary{System.Type,System.String}})">
            <summary>
            Allows you to override typenames, takes priority over the global DefaultTypeNameInferrer()
            </summary>
        </member>
        <member name="T:Nest.Inflector">
            <summary>
            Pluralizes or singularizes words.
            </summary>
        </member>
        <member name="M:Nest.Inflector.#cctor">
            <summary>
            Initializes the <see cref="T:Nest.Inflector"/> class.
            </summary>
        </member>
        <member name="M:Nest.Inflector.AddIrregularRule(System.String,System.String)">
            <summary>
            Adds the irregular rule.
            </summary>
            <param name="singular">The singular.</param>
            <param name="plural">The plural.</param>
        </member>
        <member name="M:Nest.Inflector.AddUnknownCountRule(System.String)">
            <summary>
            Adds the unknown count rule.
            </summary>
            <param name="word">The word.</param>
        </member>
        <member name="M:Nest.Inflector.AddPluralRule(System.String,System.String)">
            <summary>
            Adds the plural rule.
            </summary>
            <param name="rule">The rule.</param>
            <param name="replacement">The replacement.</param>
        </member>
        <member name="M:Nest.Inflector.AddSingularRule(System.String,System.String)">
            <summary>
            Adds the singular rule.
            </summary>
            <param name="rule">The rule.</param>
            <param name="replacement">The replacement.</param>
        </member>
        <member name="M:Nest.Inflector.MakePlural(System.String)">
            <summary>
            Makes the plural.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:Nest.Inflector.MakeSingular(System.String)">
            <summary>
            Makes the singular.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:Nest.Inflector.ApplyRules(System.Collections.Generic.IList{Nest.Inflector.InflectorRule},System.String)">
            <summary>
            Applies the rules.
            </summary>
            <param name="rules">The rules.</param>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="T:Nest.Inflector.InflectorRule">
            <summary>
            Summary for the InflectorRule class
            </summary>
        </member>
        <member name="M:Nest.Inflector.InflectorRule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nest.Inflector.InflectorRule"/> class.
            </summary>
            <param name="regexPattern">The regex pattern.</param>
            <param name="replacementText">The replacement text.</param>
        </member>
        <member name="M:Nest.Inflector.InflectorRule.Apply(System.String)">
            <summary>
            Applies the tule to the specified word.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="T:Nest.MemberInfoResolver">
            <summary>
            Resolves member infos in an expression, instance may NOT be shared.
            </summary>
        </member>
        <member name="M:Nest.ExpressionExtensions.AppendSuffix``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
            <summary>
            Appends <paramref name="suffix"/> to the path separating it with a dot.
            This is especially useful with multi fields.
            </summary>
            <param name="expression">the expression to which the suffix should be applied</param>
            <param name="suffix">the suffix</param>
        </member>
        <member name="T:Nest.ExpressionExtensions.SuffixExpressionVisitor">
            <summary>
            Calls <see cref="M:Nest.SuffixExtensions.Suffix(System.Object,System.String)"/> on a member expression.
            </summary>
        </member>
        <member name="M:Nest.SuffixExtensions.Suffix(System.Object,System.String)">
            <summary>
            This extension method should only be used in expressions which are analysed by Nest.
            When analysed it will append <paramref name="suffix"/> to the path separating it with a dot.
            This is especially useful with multi fields.
            </summary>
        </member>
        <member name="M:Nest.DescriptorBase`2.Equals(System.Object)">
            <summary>
            Hides the <see cref="M:Nest.DescriptorBase`2.Equals(System.Object)"/> method.
            </summary>
        </member>
        <member name="M:Nest.DescriptorBase`2.GetHashCode">
            <summary>
            Hides the <see cref="M:Nest.DescriptorBase`2.GetHashCode"/> method.
            </summary>
        </member>
        <member name="M:Nest.DescriptorBase`2.ToString">
            <summary>
            Hides the <see cref="M:Nest.DescriptorBase`2.ToString"/> method.
            </summary>
        </member>
        <member name="M:Nest.DescriptorPromiseBase`2.Equals(System.Object)">
            <summary>
            Hides the <see cref="M:Nest.DescriptorPromiseBase`2.Equals(System.Object)"/> method.
            </summary>
        </member>
        <member name="M:Nest.DescriptorPromiseBase`2.GetHashCode">
            <summary>
            Hides the <see cref="M:Nest.DescriptorPromiseBase`2.GetHashCode"/> method.
            </summary>
        </member>
        <member name="M:Nest.DescriptorPromiseBase`2.ToString">
            <summary>
            Hides the <see cref="M:Nest.DescriptorPromiseBase`2.ToString"/> method.
            </summary>
        </member>
        <member name="T:Nest.DescriptorForAttribute">
            <summary>
            DescriptorFor is a marker to rename unintuitive generated elasticsearch operation names
            This is used by the code generator and is only meant for internal use to map our more aptly named requests to 
            the original elasticsearch rest spec
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.TaskId.#ctor(System.String)" -->
        <member name="M:Nest.ILazyDocument.As``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Nest.LowLevelDispatch">
            <summary>This dispatches highlevel requests into the proper lowlevel client overload method</summary>
        </member>
        <member name="T:Nest.RawJson">
            <summary>
            Marker class that signals to the CustomJsonConverter to write the string verbatim
            </summary>
        </member>
        <member name="P:Nest.IRequest`1.RequestParameters">
            <summary>
            Used to describe request parameters not part of the body. e.q query string or
            connection configuration overrides
            </summary>
        </member>
        <member name="P:Nest.PlainRequestBase`1.RequestConfiguration">
            <summary>
            Specify settings for this request alone, handy if you need a custom timeout or want to bypass sniffing, retries
            </summary>
        </member>
        <member name="M:Nest.RequestDescriptorBase`3.RequestConfiguration(System.Func{Elasticsearch.Net.RequestConfigurationDescriptor,Elasticsearch.Net.IRequestConfiguration})">
            <summary>
            Specify settings for this request alone, handy if you need a custom timeout or want to bypass sniffing, retries
            </summary>
        </member>
        <member name="M:Nest.RequestDescriptorBase`3.Equals(System.Object)">
            <summary>
            Hides the <see cref="M:Nest.RequestDescriptorBase`3.Equals(System.Object)"/> method.
            </summary>
        </member>
        <member name="M:Nest.RequestDescriptorBase`3.GetHashCode">
            <summary>
            Hides the <see cref="M:Nest.RequestDescriptorBase`3.GetHashCode"/> method.
            </summary>
        </member>
        <member name="M:Nest.RequestDescriptorBase`3.ToString">
            <summary>
            Hides the <see cref="M:Nest.RequestDescriptorBase`3.ToString"/> method.
            </summary>
        </member>
        <member name="P:Nest.ElasticContractResolver.ConnectionSettings">
            <summary>
            ConnectionSettings can be requested by JsonConverter's.
            </summary>
        </member>
        <member name="P:Nest.ElasticContractResolver.PiggyBackState">
            <summary>
            Signals to custom converter that it can get serialization state from one of the converters. Ugly but massive performance gain
            </summary>
        </member>
        <member name="M:Nest.FromJson.ReadAs``1(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the json to T and returns an instance of it
            </summary>
        </member>
        <member name="M:Nest.FromJson.Read(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read the json as an instance of <para name="objectType"></para>
            </summary>
        </member>
        <member name="T:Nest.VerbatimDictionaryKeysJsonConverter">
            <summary>
            JSON converter for IDictionary that ignores the contract resolver (e.g. CamelCaseFieldNamesContractResolver)
            when converting dictionary keys to property names.
            </summary>
        </member>
        <member name="M:Nest.JsonNetSerializer.#ctor(Nest.IConnectionSettingsValues,Newtonsoft.Json.JsonConverter)">
            <summary>
            this constructor is only here for stateful (de)serialization 
            </summary>
        </member>
        <member name="T:Nest.JsonConverterPiggyBackState">
            <summary>
            Registerering global jsonconverters is very costly,
            The best thing is to specify them as a contract (see ElasticContractResolver)
            This however prevents a way to give a jsonconverter state which for some calls is needed i.e:
            A multiget and multisearch need access to the descriptor that describes what types are used.
            When NEST knows it has to piggyback this it has to pass serialization state it will create a new 
            serializersettings object with a new contract resolver which holds this state. Its ugly but it does boost
            massive performance gains.
            </summary>
        </member>
        <member name="M:Nest.Infer.Field``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Nullable{System.Double})">
            <summary>
            Create a strongly typed string field name representation of the path to a property
            <para>i.e p => p.Array.First().SubProperty.Field will return 'array.subProperty.field'</para>
            </summary>
            <typeparam name="T">The type of the object</typeparam>
            <param name="path">The path we want to specify</param>
            <param name="boost">An optional ^boost postfix, only make sense with certain queries</param>
        </member>
        <member name="M:Nest.BulkCreateDescriptor`1.Document(`0)">
            <summary>
            The object to update, if id is not manually set it will be inferred from the object
            </summary>
        </member>
        <member name="M:Nest.BulkDeleteDescriptor`1.Document(`0)">
            <summary>
            The object to infer the id off, (if id is not passed using Id())
            </summary>
        </member>
        <member name="M:Nest.BulkIndexDescriptor`1.Document(`0)">
            <summary>
            The object to index, if id is not manually set it will be inferred from the object
            </summary>
        </member>
        <member name="M:Nest.BulkOperationDescriptorBase`2.Nest#IBulkOperation#GetBody">
            <summary>
            Only used for bulk update operations but in the future might come in handy for other complex bulk ops.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.BulkOperationDescriptorBase`2.Index(Nest.IndexName)">
            <summary>
            Manually set the index, default to the default index or the fixed index set on the bulk operation
            </summary>
        </member>
        <member name="M:Nest.BulkOperationDescriptorBase`2.Type(Nest.TypeName)">
            <summary>
            Manualy set the type to get the object from, default to whatever
            T will be inferred to if not passed or the fixed type set on the parent bulk operation
            </summary>
        </member>
        <member name="M:Nest.BulkOperationDescriptorBase`2.Id(Nest.Id)">
            <summary>
            Manually set the id for the newly created object
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateOperation`2.#ctor(`0,System.Boolean)">
            <summary>
            Create a new bulk operation
            </summary>
            <param name="idFrom">Use this document to infer the id from</param>
            <param name="useIdFromAsUpsert">Use the document to infer on as the upsert document in this update operation</param>
        </member>
        <member name="M:Nest.BulkUpdateOperation`2.#ctor(`0,`1,System.Boolean)">
            <summary>
            Create a new Bulk Operation
            </summary>
            <param name="idFrom">Use this document to infer the id from</param>
            <param name="update">The partial update document (doc) to send as update</param>
            <param name="useIdFromAsUpsert">Use the document to infer on as the upsert document in this update operation</param>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.IdFrom(`0,System.Boolean)">
            <summary>
            The object to update, if id is not manually set it will be inferred from the object.
            Used ONLY to infer the ID see Document() to apply a partial object merge.
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.Upsert(`0)">
            <summary>
            A document to upsert when the specified document to be updated is not found
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.Doc(`1)">
            <summary>
            The partial update document to be merged on to the existing object.
            </summary>
        </member>
        <member name="T:Nest.BulkRequest">
            <summary>Request parameters for Bulk <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html</pre></summary>
        </member>
        <member name="M:Nest.BulkRequest.#ctor">
            <summary>/_bulk</summary>
        </member>
        <member name="M:Nest.BulkRequest.#ctor(Nest.IndexName)">
             <summary>/{index}/_bulk</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.BulkRequest.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_bulk</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.BulkRequest.Consistency">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="P:Nest.BulkRequest.Refresh">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="P:Nest.BulkRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.BulkRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.BulkRequest.Fields">
            <summary>Default comma-separated list of fields to return in the response for updates</summary>
        </member>
        <member name="P:Nest.BulkRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.BulkRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.BulkDescriptor">
            <summary>descriptor for Bulk <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html</pre></summary>
        </member>
        <member name="M:Nest.BulkDescriptor.CreateMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkCreateDescriptor{``0},``0,Nest.IBulkCreateOperation{``0}})">
            <summary>
            CreateMany, convenience method to create many documents at once.
            </summary>
            <param name="objects">the objects to create</param>
            <param name="bulkCreateSelector">A func called on each object to describe the individual create operation</param>
        </member>
        <member name="M:Nest.BulkDescriptor.IndexMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkIndexDescriptor{``0},``0,Nest.IIndexOperation{``0}})">
            <summary>
            IndexMany, convenience method to pass many objects at once.
            </summary>
            <param name="objects">the objects to index</param>
            <param name="bulkIndexSelector">A func called on each object to describe the individual index operation</param>
        </member>
        <member name="M:Nest.BulkDescriptor.DeleteMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkDeleteDescriptor{``0},``0,Nest.IBulkDeleteOperation{``0}})">
            <summary>
            DeleteMany, convenience method to delete many objects at once.
            </summary>
            <param name="objects">the objects to delete</param>
            <param name="bulkDeleteSelector">A func called on each object to describe the individual delete operation</param>
        </member>
        <member name="M:Nest.BulkDescriptor.DeleteMany``1(System.Collections.Generic.IEnumerable{System.String},System.Func{Nest.BulkDeleteDescriptor{``0},System.String,Nest.IBulkDeleteOperation{``0}})">
            <summary>
            DeleteMany, convenience method to delete many objects at once.
            </summary>
            <param name="ids">Enumerable of string ids to delete</param>
            <param name="bulkDeleteSelector">A func called on each ids to describe the individual delete operation</param>
        </member>
        <member name="M:Nest.BulkDescriptor.DeleteMany``1(System.Collections.Generic.IEnumerable{System.Int64},System.Func{Nest.BulkDeleteDescriptor{``0},System.Int64,Nest.IBulkDeleteOperation{``0}})">
            <summary>
            DeleteMany, convenience method to delete many objects at once.
            </summary>
            <param name="ids">Enumerable of int ids to delete</param>
            <param name="bulkDeleteSelector">A func called on each ids to describe the individual delete operation</param>
        </member>
        <member name="M:Nest.BulkDescriptor.#ctor">
            <summary>/_bulk</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Index(Nest.IndexName)">
            <summary>Default index for items which don't provide one</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Index``1">
            <summary>Default index for items which don't provide one</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Type(Nest.TypeName)">
            <summary>Default document type for items which don't provide one</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Type``1">
            <summary>Default document type for items which don't provide one</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Consistency(Elasticsearch.Net.Consistency)">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Fields(System.String[])">
            <summary>Default comma-separated list of fields to return in the response for updates</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>Default comma-separated list of fields to return in the response for updates</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.BulkIndexResponseItem.Matches">
            <summary>
            Null if Percolation was not requested while indexing this doc, otherwise returns the percolator _ids that matched (if any)
            </summary>
        </member>
        <member name="P:Nest.BulkResponseItemBase.IsValid">
            <summary>
            Specifies wheter this particular bulk operation succeeded or not
            </summary>
        </member>
        <member name="T:Nest.DeleteManyExtensions">
            <summary>
            Provides GetMany extensions that make it easier to get many documents given a list of ids
            </summary>
        </member>
        <member name="M:Nest.DeleteManyExtensions.DeleteMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Shortcut into the Bulk call that deletes the specified objects
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
            <param name="client"></param>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="objects">List of objects to delete</param>
            <param name="index">Override the inferred indexname for T</param>
            <param name="type">Override the inferred typename for T</param>
        </member>
        <member name="M:Nest.DeleteManyExtensions.DeleteManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Shortcut into the Bulk call that deletes the specified objects
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
            <param name="client"></param>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="objects">List of objects to delete</param>
            <param name="index">Override the inferred indexname for T</param>
            <param name="type">Override the inferred typename for T</param>
        </member>
        <member name="T:Nest.IndexManyExtensions">
            <summary>
            Provides GetMany extensions that make it easier to get many documents given a list of ids
            </summary>
        </member>
        <member name="M:Nest.IndexManyExtensions.IndexMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Shortcut into the Bulk call that indexes the specified objects
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
            <param name="client"></param>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="objects">List of objects to index, Id will be inferred (Id property or IdProperty attribute on type)</param>
            <param name="index">Override the inferred indexname for T</param>
            <param name="type">Override the inferred typename for T</param>
        </member>
        <member name="M:Nest.IndexManyExtensions.IndexManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Shortcut into the Bulk call that indexes the specified objects
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
            <param name="client"></param>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="objects">List of objects to index, Id will be inferred (Id property or IdProperty attribute on type)</param>
            <param name="index">Override the inferred indexname for T</param>
            <param name="type">Override the inferred typename for T</param>
        </member>
        <member name="M:Nest.ReindexRouting.#ctor(System.String)">
            <summary>
            Use ReindexRouting.Keep or ReindexRouting.Discard if you want to sent "keep" or "discard", this
            constructor always sends <param name="newRoutingValue" /> prefixed with '='
            </summary>
            <param name="newRoutingValue"></param>
        </member>
        <member name="T:Nest.UpdateByQueryRequest">
            <summary>Request parameters for UpdateByQuery <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-reindex.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateByQueryRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_update_by_query</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.UpdateByQueryRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_update_by_query</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Explain">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Fields">
            <summary>A comma-separated list of fields to return as part of a hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.FielddataFields">
            <summary>A comma-separated list of fields to return as the field data representation of a field for each hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.From">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Conflicts">
            <summary>What to do when the reindex hits version conflicts?</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Scroll">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SearchTimeout">
            <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Size">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Sort">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.TerminateAfter">
            <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Stats">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SuggestField">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SuggestMode">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SuggestSize">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SuggestText">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Timeout">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.TrackScores">
            <summary>Whether to calculate and return scores even if they are not used for sorting</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Version">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.VersionType">
            <summary>Should the document increment the version number (internal) on hit or not (reindex)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.RequestCache">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Refresh">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Consistency">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.ScrollSize">
            <summary>Size on the scroll request powering the update_by_query</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.WaitForCompletion">
            <summary>Should the request should block until the reindex is complete.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.UpdateByQueryRequest`1">
            <summary>Request parameters for UpdateByQuery <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-reindex.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateByQueryRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_update_by_query</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.UpdateByQueryRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_update_by_query</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Explain">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Fields">
            <summary>A comma-separated list of fields to return as part of a hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.FielddataFields">
            <summary>A comma-separated list of fields to return as the field data representation of a field for each hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.From">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Conflicts">
            <summary>What to do when the reindex hits version conflicts?</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Scroll">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SearchTimeout">
            <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Size">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Sort">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.TerminateAfter">
            <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Stats">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SuggestField">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SuggestMode">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SuggestSize">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SuggestText">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Timeout">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.TrackScores">
            <summary>Whether to calculate and return scores even if they are not used for sorting</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Version">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.VersionType">
            <summary>Should the document increment the version number (internal) on hit or not (reindex)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.RequestCache">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Refresh">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Consistency">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.ScrollSize">
            <summary>Size on the scroll request powering the update_by_query</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.WaitForCompletion">
            <summary>Should the request should block until the reindex is complete.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.UpdateByQueryDescriptor`1">
            <summary>descriptor for UpdateByQuery <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-reindex.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.#ctor(Nest.Indices)">
             <summary>/{index}/_update_by_query</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Index``1">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.AllIndices">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Type``1">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.AllTypes">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Explain(System.Boolean)">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Fields(System.String[])">
            <summary>A comma-separated list of fields to return as part of a hit</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Fields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of fields to return as part of a hit</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.FielddataFields(System.String[])">
            <summary>A comma-separated list of fields to return as the field data representation of a field for each hit</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.FielddataFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of fields to return as the field data representation of a field for each hit</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.From(System.Int64)">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Conflicts(Elasticsearch.Net.Conflicts)">
            <summary>What to do when the reindex hits version conflicts?</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Scroll(Nest.Time)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SearchTimeout(Nest.Time)">
            <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Size(System.Int64)">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Sort(System.String[])">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SourceExclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SourceInclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.TerminateAfter(System.Int64)">
            <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Stats(System.String[])">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SuggestField(System.String)">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SuggestField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SuggestMode(Elasticsearch.Net.SuggestMode)">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SuggestSize(System.Int64)">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SuggestText(System.String)">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Timeout(Nest.Time)">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.TrackScores(System.Boolean)">
            <summary>Whether to calculate and return scores even if they are not used for sorting</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Version(System.Boolean)">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.VersionType(System.Boolean)">
            <summary>Should the document increment the version number (internal) on hit or not (reindex)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.RequestCache(System.Boolean)">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Refresh(System.Boolean)">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Consistency(Elasticsearch.Net.Consistency)">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.ScrollSize(System.Int64)">
            <summary>Size on the scroll request powering the update_by_query</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.WaitForCompletion(System.Boolean)">
            <summary>Should the request should block until the reindex is complete.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.IUpdateByQueryResponse.Task">
            <summary>
            Only has a value if WaitForCompletion is set to false on the request
            </summary>
        </member>
        <member name="P:Nest.UpdateByQueryResponse.Task">
            <summary>
            Only has a value if WaitForCompletion is set to false on the request
            </summary>
        </member>
        <member name="T:Nest.DeleteByQueryRequest">
            <summary>Request parameters for DeleteByQuery <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-delete-by-query.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteByQueryRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_query</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteByQueryRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_query</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteByQueryRequest`1">
            <summary>Request parameters for DeleteByQuery <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-delete-by-query.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteByQueryRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_query</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteByQueryRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_query</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteByQueryDescriptor`1">
            <summary>descriptor for DeleteByQuery <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-delete-by-query.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.#ctor(Nest.Indices)">
             <summary>/{index}/_query</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Index``1">
            <summary>A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.AllIndices">
            <summary>A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of types to restrict the operation</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Type``1">
            <summary>A comma-separated list of types to restrict the operation</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.AllTypes">
            <summary>A comma-separated list of types to restrict the operation</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.IDeleteByQueryResponse.Indices">
            <summary>
            The delete by query details for each affected index.
            </summary>
        </member>
        <member name="T:Nest.SourceManyExtensions">
            <summary>
            Provides convenience extension methods to get many _source's given a list of ids.
            </summary>
        </member>
        <member name="M:Nest.SourceManyExtensions.SourceMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            SourceMany allows you to get a list of T documents out of elasticsearch, internally it calls into MultiGet()
            <para>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing). 
            The response includes a docs array with all the fetched documents, each element similar in structure to a document 
            provided by the get API.
            </para>
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">A list of ids as string</param>
            <param name="index">Optionally override the default inferred indexname for T</param>
            <param name="type">Optionally override the default inferred indexname for T</param>
        </member>
        <member name="M:Nest.SourceManyExtensions.SourceMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>
            SourceMany allows you to get a list of T documents out of elasticsearch, internally it calls into MultiGet()
            <para>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing). 
            The response includes a docs array with all the fetched documents, each element similar in structure to a document 
            provided by the get API.
            </para>
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">A list of ids as int</param>
            <param name="index">Optionally override the default inferred indexname for T</param>
            <param name="type">Optionally override the default inferred indexname for T</param>
        </member>
        <member name="M:Nest.SourceManyExtensions.SourceManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            SourceMany allows you to get a list of T documents out of elasticsearch, internally it calls into MultiGet()
            <para>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing). 
            The response includes a docs array with all the fetched documents, each element similar in structure to a document 
            provided by the get API.
            </para>
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">A list of ids as string</param>
            <param name="index">Optionally override the default inferred indexname for T</param>
            <param name="type">Optionally override the default inferred indexname for T</param>
        </member>
        <member name="M:Nest.SourceManyExtensions.SourceManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>
            SourceMany allows you to get a list of T documents out of elasticsearch, internally it calls into MultiGet()
            <para>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing). 
            The response includes a docs array with all the fetched documents, each element similar in structure to a document 
            provided by the get API.
            </para>
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">A list of ids as int</param>
            <param name="index">Optionally override the default inferred indexname for T</param>
            <param name="type">Optionally override the default inferred indexname for T</param>
        </member>
        <member name="T:Nest.GetManyExtensions">
            <summary>
            Provides GetMany extensions that make it easier to get many documents given a list of ids
            </summary>
        </member>
        <member name="M:Nest.GetManyExtensions.GetMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">IEnumerable of ids as string for the documents to fetch</param>
            <param name="index">Optionally override the default inferred index name for T</param>
            <param name="type">Optionally overiide the default inferred typename for T</param>
        </member>
        <member name="M:Nest.GetManyExtensions.GetMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">IEnumerable of ids as ints for the documents to fetch</param>
            <param name="index">Optionally override the default inferred index name for T</param>
            <param name="type">Optionally overiide the default inferred typename for T</param>
        </member>
        <member name="M:Nest.GetManyExtensions.GetManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">IEnumerable of ids as string for the documents to fetch</param>
            <param name="index">Optionally override the default inferred index name for T</param>
            <param name="type">Optionally overiide the default inferred typename for T</param>
        </member>
        <member name="M:Nest.GetManyExtensions.GetManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">IEnumerable of ids as ints for the documents to fetch</param>
            <param name="index">Optionally override the default inferred index name for T</param>
            <param name="type">Optionally overiide the default inferred typename for T</param>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.#ctor(System.Boolean)">
            <summary>
            when rest.action.multi.allow_explicit_index is set to false you can use this constructor to generate a multiget operation
            with no index and type set
            <pre>
            See also: https://github.com/elasticsearch/elasticsearch/issues/3636
            </pre>
            </summary>
            <param name="initializeEmpty"></param>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.Index(Nest.IndexName)">
            <summary>
            Manually set the index, default to the default index or the index set for the type on the connectionsettings.
            </summary>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.Type(Nest.TypeName)">
            <summary>
            Manualy set the type to get the object from, default to whatever
            T will be inferred to if not passed.
            </summary>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.Source(System.Nullable{System.Boolean})">
            <summary>
            Control how the document's source is loaded
            </summary>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.Source(System.Func{Nest.SourceFilterDescriptor{`0},Nest.ISourceFilter})">
            <summary>
            Control how the document's source is loaded
            </summary>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.Routing(System.String)">
            <summary>
            Set the routing for the get operation
            </summary>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.Fields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
            <summary>
            Allows to selectively load specific fields for each document
            represented by a search hit. Defaults to load the internal _source field.
            </summary>
        </member>
        <member name="T:Nest.MultiGetRequest">
            <summary>Request parameters for Mget <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html</pre></summary>
        </member>
        <member name="M:Nest.MultiGetRequest.#ctor">
            <summary>/_mget</summary>
        </member>
        <member name="M:Nest.MultiGetRequest.#ctor(Nest.IndexName)">
             <summary>/{index}/_mget</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.MultiGetRequest.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_mget</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.MultiGetRequest.Fields">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.MultiGetDescriptor">
            <summary>descriptor for Mget <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html</pre></summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.#ctor">
            <summary>/_mget</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Index``1">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Type(Nest.TypeName)">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Type``1">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Fields(System.String[])">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.SourceExclude``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.SourceInclude``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.MultiTermVectorsRequest">
            <summary>Request parameters for Mtermvectors <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html</pre></summary>
        </member>
        <member name="M:Nest.MultiTermVectorsRequest.#ctor">
            <summary>/_mtermvectors</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsRequest.#ctor(Nest.IndexName)">
             <summary>/{index}/_mtermvectors</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.MultiTermVectorsRequest.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_mtermvectors</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.TermStatistics">
            <summary>Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.FieldStatistics">
            <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Fields">
            <summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Offsets">
            <summary>Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Positions">
            <summary>Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Payloads">
            <summary>Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Routing">
            <summary>Specific routing value. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Parent">
            <summary>Parent id of documents. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Realtime">
            <summary>Specifies if requests are real-time as opposed to near-real-time (default: true).</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.MultiTermVectorsDescriptor">
            <summary>descriptor for Mtermvectors <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html</pre></summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.#ctor">
            <summary>/_mtermvectors</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Index(Nest.IndexName)">
            <summary>The index in which the document resides.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Index``1">
            <summary>The index in which the document resides.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Type(Nest.TypeName)">
            <summary>The type of the document.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Type``1">
            <summary>The type of the document.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.TermStatistics(System.Boolean)">
            <summary>Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.FieldStatistics(System.Boolean)">
            <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Fields(System.String[])">
            <summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Offsets(System.Boolean)">
            <summary>Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Positions(System.Boolean)">
            <summary>Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Payloads(System.Boolean)">
            <summary>Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Routing(System.String)">
            <summary>Specific routing value. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Parent(System.String)">
            <summary>Parent id of documents. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Realtime(System.Boolean)">
            <summary>Specifies if requests are real-time as opposed to near-real-time (default: true).</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.IReindexOnServerResponse.Task">
            <summary>
            Only has a value if WaitForCompletion is set to false on the request
            </summary>
        </member>
        <member name="P:Nest.ReindexOnServerResponse.Task">
            <summary>
            Only has a value if WaitForCompletion is set to false on the request
            </summary>
        </member>
        <member name="T:Nest.ReindexOnServerRequest">
            <summary>Request parameters for Reindex <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-reindex.html</pre></summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.Refresh">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.Timeout">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.Consistency">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.WaitForCompletion">
            <summary>Should the request should block until the reindex is complete.</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ReindexOnServerDescriptor">
            <summary>descriptor for Reindex <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-reindex.html</pre></summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.Refresh(System.Boolean)">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.Timeout(Nest.Time)">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.Consistency(Elasticsearch.Net.Consistency)">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.WaitForCompletion(System.Boolean)">
            <summary>Should the request should block until the reindex is complete.</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.Scroll(Nest.Time)">
            <summary>
            A search request can be scrolled by specifying the scroll parameter. The scroll parameter is a time value parameter (for example: scroll=5m), indicating for how long the nodes that participate in the search will maintain relevant resources in order to continue and support it. This is very similar in its idea to opening a cursor against a database.
            </summary>
            <param name="scrollTime">The scroll parameter is a time value parameter (for example: scroll=5m)</param>
            <returns></returns>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.Size(System.Nullable{System.Int32})">
            <summary>
            The number of hits to return. Defaults to 100. When using scroll search type,
            size is actually multiplied by the number of shards!
            </summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.Take(System.Nullable{System.Int32})">
            <summary>
            The number of hits to return. Defaults to 100.
            </summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            A query to optionally limit the documents to use for the reindex operation.  
            </summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.Query(Nest.QueryContainer)">
            <summary>
            A query to optionally limit the documents to use for the reindex operation.  
            </summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.Type(Nest.Types)">
            <summary>
            Specify the document types to reindex. By default, will be <typeparamref name="T"/>  
            </summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.AllTypes">
            <summary>
            Reindex all document types.
            </summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.CreateIndex(System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest})">
            <summary>
            CreateIndex selector, will be passed the a descriptor initialized with the settings from
            the index we're reindexing from
            </summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.CreateIndex(Nest.ICreateIndexRequest)">
            <summary>
            CreateIndex selector, will be passed the a descriptor initialized with the settings from
            the index we're reindexing from
            </summary>
        </member>
        <member name="T:Nest.IReindexResponse`1">
            <summary>
            The reindex response for a reindexing step
            </summary>
        </member>
        <member name="P:Nest.IReindexResponse`1.BulkResponse">
            <summary>
            The bulk result indexing the search results into the new index.
            </summary>
        </member>
        <member name="P:Nest.IReindexResponse`1.SearchResponse">
            <summary>
            The scroll result
            </summary>
        </member>
        <member name="P:Nest.IReindexResponse`1.Scroll">
            <summary>
            The no of scroll this result represents
            </summary>
        </member>
        <member name="P:Nest.IReindexResponse`1.IsValid">
            <summary>
            Whether both the scroll and reindex result are valid
            </summary>
        </member>
        <member name="T:Nest.ReindexResponse`1">
            <summary>
            POCO representing the reindex response for a each step
            </summary>
        </member>
        <member name="T:Nest.DeleteRequest">
            <summary>Request parameters for Delete <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteRequest.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteRequest.Consistency">
            <summary>Specific write consistency setting for the operation</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Parent">
            <summary>ID of parent document</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Refresh">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.DeleteRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteRequest`1">
            <summary>Request parameters for Delete <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="P:Nest.DeleteRequest`1.Consistency">
            <summary>Specific write consistency setting for the operation</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Parent">
            <summary>ID of parent document</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Refresh">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteDescriptor`1">
            <summary>descriptor for Delete <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Index``1">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Type``1">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Consistency(Elasticsearch.Net.Consistency)">
            <summary>Specific write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Parent(System.String)">
            <summary>ID of parent document</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.IDeleteResponse.Id">
            <summary>
            The ID of the deleted document.
            </summary>
        </member>
        <member name="P:Nest.IDeleteResponse.Index">
            <summary>
            The index of the deleted document.
            </summary>
        </member>
        <member name="P:Nest.IDeleteResponse.Type">
            <summary>
            The type of the deleted document.
            </summary>
        </member>
        <member name="P:Nest.IDeleteResponse.Version">
            <summary>
            The version of the deleted document.
            </summary>
        </member>
        <member name="P:Nest.IDeleteResponse.Found">
            <summary>
            Whether or not the document was found and deleted from the index.
            </summary>
        </member>
        <member name="T:Nest.DocumentExistsRequest">
            <summary>Request parameters for Exists <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.DocumentExistsRequest.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DocumentExistsRequest`1">
            <summary>Request parameters for Exists <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.DocumentExistsRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.DocumentExistsRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DocumentExistsDescriptor`1">
            <summary>descriptor for Exists <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Index``1">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document (use `_all` to fetch the first document matching the ID across all types)</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Type``1">
            <summary>The type of the document (use `_all` to fetch the first document matching the ID across all types)</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetRequest">
            <summary>Request parameters for Get <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.GetRequest.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.GetRequest.Fields">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="P:Nest.GetRequest.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.GetRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.GetRequest.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.GetRequest.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.GetRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.GetRequest.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.GetRequest.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.GetRequest.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.GetRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.GetRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.GetRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetRequest`1">
            <summary>Request parameters for Get <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.GetRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.GetRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="P:Nest.GetRequest`1.Fields">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.GetRequest`1.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.GetRequest`1.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.GetRequest`1.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.GetRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetDescriptor`1">
            <summary>descriptor for Get <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.GetDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Index``1">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document (use `_all` to fetch the first document matching the ID across all types)</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Type``1">
            <summary>The type of the document (use `_all` to fetch the first document matching the ID across all types)</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Fields(System.String[])">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Fields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.SourceExclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.SourceInclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.IndexRequest`1">
            <summary>Request parameters for Index <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</pre></summary>
        </member>
        <member name="M:Nest.IndexRequest`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="M:Nest.IndexRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.IndexRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="P:Nest.IndexRequest`1.Consistency">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.OpType">
            <summary>Explicit operation type</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Parent">
            <summary>ID of the parent document</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Refresh">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Timestamp">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Ttl">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.IndexDescriptor`1">
            <summary>descriptor for Index <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</pre></summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>
        </member>
        <member name="M:Nest.IndexDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Id(Nest.Id)">
            <summary>Document ID</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Index``1">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Type``1">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Consistency(Elasticsearch.Net.Consistency)">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.OpType(Elasticsearch.Net.OpType)">
            <summary>Explicit operation type</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Parent(System.String)">
            <summary>ID of the parent document</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Timestamp(Nest.Time)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Ttl(Nest.Time)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SourceRequest">
            <summary>Request parameters for GetSource <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.SourceRequest.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_source</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.SourceRequest.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.SourceRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SourceRequest.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.SourceRequest.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.SourceRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SourceRequest.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.SourceRequest.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.SourceRequest.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.SourceRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.SourceRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.SourceRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.SourceRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SourceRequest`1">
            <summary>Request parameters for GetSource <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.SourceRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_source</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.SourceRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}/_source</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="P:Nest.SourceRequest`1.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SourceDescriptor`1">
            <summary>descriptor for GetSource <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_source</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.SourceDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}/_source</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Index``1">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document; use `_all` to fetch the first document matching the ID across all types</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Type``1">
            <summary>The type of the document; use `_all` to fetch the first document matching the ID across all types</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.SourceExclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.SourceInclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.ITermVectorsRequest`1.Document">
            <summary>
            An optional document to get termvectors for instead of using an already indexed document
            </summary>
        </member>
        <member name="T:Nest.TermVectorsRequest`1">
            <summary>Request parameters for Termvectors <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html</pre></summary>
        </member>
        <member name="M:Nest.TermVectorsRequest`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_termvectors</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="M:Nest.TermVectorsRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_termvectors</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.TermVectorsRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/_termvectors</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.TermStatistics">
            <summary>Specifies if total term frequency and document frequency should be returned.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.FieldStatistics">
            <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Dfs">
            <summary>Specifies if distributed frequencies should be returned instead shard frequencies.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Fields">
            <summary>A comma-separated list of fields to return.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Offsets">
            <summary>Specifies if term offsets should be returned.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Positions">
            <summary>Specifies if term positions should be returned.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Payloads">
            <summary>Specifies if term payloads should be returned.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random).</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Routing">
            <summary>Specific routing value.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Parent">
            <summary>Parent id of documents.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Realtime">
            <summary>Specifies if request is real-time as opposed to near-real-time (default: true).</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.TermVectorsDescriptor`1">
            <summary>descriptor for Termvectors <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html</pre></summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_termvectors</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/_termvectors</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Index(Nest.IndexName)">
            <summary>The index in which the document resides.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Index``1">
            <summary>The index in which the document resides.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Type``1">
            <summary>The type of the document.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Id(Nest.Id)">
            <summary>The id of the document, when not specified a doc param should be supplied.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.TermStatistics(System.Boolean)">
            <summary>Specifies if total term frequency and document frequency should be returned.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.FieldStatistics(System.Boolean)">
            <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Dfs(System.Boolean)">
            <summary>Specifies if distributed frequencies should be returned instead shard frequencies.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Fields(System.String[])">
            <summary>A comma-separated list of fields to return.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Fields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of fields to return.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Offsets(System.Boolean)">
            <summary>Specifies if term offsets should be returned.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Positions(System.Boolean)">
            <summary>Specifies if term positions should be returned.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Payloads(System.Boolean)">
            <summary>Specifies if term payloads should be returned.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random).</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Routing(System.String)">
            <summary>Specific routing value.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Parent(System.String)">
            <summary>Parent id of documents.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Realtime(System.Boolean)">
            <summary>Specifies if request is real-time as opposed to near-real-time (default: true).</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.UpdateRequest`2">
            <summary>Request parameters for Update <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateRequest`2.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_update</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.UpdateRequest`2.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}/_update</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="P:Nest.UpdateRequest`2.Consistency">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Lang">
            <summary>The script language (default: groovy)</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Parent">
            <summary>ID of the parent document. Is is only used for routing and when for the upsert request</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Refresh">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.RetryOnConflict">
            <summary>Specify how many times should the operation be retried when a conflict occurs (default: 0)</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.ScriptQueryString">
            <summary>The URL-encoded script definition (instead of using request body)</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.ScriptId">
            <summary>The id of a stored script</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.ScriptedUpsert">
            <summary>True if the script referenced in script or script_id should be called to perform inserts - defaults to false</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Timestamp">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Ttl">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.UpdateDescriptor`2">
            <summary>descriptor for Update <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Upsert(`0)">
            <summary>
            The full document to be created if an existing document does not exist for a partial merge.
            </summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Doc(`1)">
            <summary>
            The partial update document to be merged on to the existing object.
            </summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_update</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}/_update</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Index``1">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Type(Nest.TypeName)">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Type``1">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Consistency(Elasticsearch.Net.Consistency)">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Lang(System.String)">
            <summary>The script language (default: groovy)</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Parent(System.String)">
            <summary>ID of the parent document. Is is only used for routing and when for the upsert request</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.RetryOnConflict(System.Int64)">
            <summary>Specify how many times should the operation be retried when a conflict occurs (default: 0)</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.ScriptQueryString(System.String)">
            <summary>The URL-encoded script definition (instead of using request body)</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.ScriptId(System.String)">
            <summary>The id of a stored script</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.ScriptedUpsert(System.Boolean)">
            <summary>True if the script referenced in script or script_id should be called to perform inserts - defaults to false</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Timestamp(Nest.Time)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Ttl(Nest.Time)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.ExpungeDeletesAllowed">
            <summary>
            When expungeDeletes is called, we only merge away a segment if its delete percentage 
            is over this threshold. Default is 10. 
            </summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.FloorSegment">
            <summary>
            Segments smaller than this are "rounded up" to this size, i.e. treated as equal (floor) size for merge selection. 
            This is to prevent frequent flushing of tiny segments, thus preventing a long tail in the index. Default is 2mb.
            </summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.MaxMergeAtOnce">
            <summary>
            Maximum number of segments to be merged at a time during "normal" merging. Default is 10.
            </summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.MaxMergeAtOnceExplicit">
            <summary>
            Maximum number of segments to be merged at a time, during optimize or expungeDeletes. Default is 30.
            </summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.MaxMergedSegment">
            <summary>
            Maximum sized segment to produce during normal merging (not explicit optimize).
            This setting is approximate: the estimate of the merged segment size is made by summing 
            sizes of to-be-merged segments (compensating for percent deleted docs). Default is 5gb.
            </summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.SegmentsPerTier">
            <summary>
            Sets the allowed number of segments per tier. Smaller values mean more merging but fewer segments. 
            Default is 10. Note, this value needs to be >= than the max_merge_at_once otherwise you’ll force too 
            many merges to occur.
            </summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.ReclaimDeletesWeight">
            <summary>
            Controls how aggressively merges that reclaim more deletions are favored. Higher values 
            favor selecting merges that reclaim deletions. A value of 0.0 means deletions don’t 
            impact merge selection. Defaults to 2.0
            </summary>
        </member>
        <member name="P:Nest.MergePolicySettings.ExpungeDeletesAllowed">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergePolicySettings.FloorSegment">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergePolicySettings.MaxMergeAtOnce">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergePolicySettings.MaxMergeAtOnceExplicit">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergePolicySettings.MaxMergedSegment">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergePolicySettings.ReclaimDeletesWeight">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergePolicySettings.SegmentsPerTier">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.ExpungeDeletesAllowed(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.FloorSegment(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.MaxMergeAtOnce(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.MaxMergeAtOnceExplicit(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.MaxMergedSegement(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.ReclaimDeletesWeight(System.Nullable{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.SegmentsPerTier(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IMergeSchedulerSettings.MaxThreadCount">
            <summary>
            The maximum number of threads that may be merging at once. Defaults to 
            <pre>Math.max(1, Math.min(4, Runtime.getRuntime().availableProcessors() / 2))</pre>
            which works well for a good solid-state-disk (SSD). If your index is on spinning platter drives instead,
            decrease this to 1. 
            </summary>
        </member>
        <member name="P:Nest.IMergeSchedulerSettings.AutoThrottle">
            <summary>
            If this is true (the default), then the merge scheduler will rate-limit IO (writes) for merges to an 
            adaptive value depending on how many merges are requested over time. An application with a low indexing rate 
            that unluckily suddenly requires a large merge will see that merge aggressively throttled, 
            while an application doing heavy indexing will see the throttle move higher to allow merges to keep 
            up with ongoing indexing.
            </summary>
        </member>
        <member name="P:Nest.MergeSchedulerSettings.AutoThrottle">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergeSchedulerSettings.MaxThreadCount">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergeSchedulerSettingsDescriptor.AutoThrottle(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergeSchedulerSettingsDescriptor.MaxThreadCount(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergeSettings.Policy">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergeSettings.Scheduler">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergeSettingsDescriptor.Policy(System.Func{Nest.MergePolicySettingsDescriptor,Nest.IMergePolicySettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergeSettingsDescriptor.Scheduler(System.Func{Nest.MergeSchedulerSettingsDescriptor,Nest.IMergeSchedulerSettings})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.NumberOfReplicas">
             <summary>
            The number of replicas each primary shard has. Defaults to 1. 
             </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.AutoExpandReplicas">
             <summary>
            Auto-expand the number of replicas based on the number of available nodes. 
             Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all). Defaults to false (i.e. disabled). 
             </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.RefreshInterval">
            <summary>
            How often to perform a refresh operation, which makes recent changes to the index visible to search.
            Defaults to 1s. Can be set to -1 to disable refresh.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.BlocksReadOnly">
            <summary>
            Set to true to make the index and index metadata read only, false to allow writes and metadata changes.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.BlocksRead">
            <summary>
            Set to true to disable read operations against the index.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.BlocksWrite">
            <summary>
            Set to true to disable write operations against the index.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.BlocksMetadata">
            <summary>
            Set to true to disable index metadata reads and writes.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.Priority">
            <summary>
            Unallocated shards are recovered in order of priority when set
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.WarmersEnabled">
            <summary>
            Index warmup can be disabled by setting index.warmer.enabled to false. This can be handy when 
            doing initial bulk indexing: disable pre registered warmers to make indexing faster 
            and less expensive and then enable it.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.RequestCacheEnabled">
             <summary>
             When a search request is run against an index or against many indices, each involved shard executes the search locally and
              returns its local results to the coordinating node, which combines these shard-level results into a “global” result set.
            <para>
             The shard-level request cache module caches the local results on each shard.This allows frequently used 
             (and potentially heavy) search requests to return results almost instantly.</para>
             </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.RecoveryInitialShards">
            <summary>
            A primary shard is only recovered only if there are
            enough nodes available to allocate sufficient replicas to form a quorum.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.UnassignedNodeLeftDelayedTimeout">
            <summary>
            The allocation of replica shards which become unassigned because a node has left can be 
            delayed with this dynamic setting, which defaults to 1m.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.RoutingAllocationTotalShardsPerNode">
            <summary>
            The maximum number of shards (replicas and primaries) that will be allocated to a single node. Defaults to unbounded.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.Merge">
            <summary>
            All of the settings exposed in the merge module are expert only and may be obsoleted in the future at any time!
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.SlowLog">
            <summary>
            Configure logging thresholds and levels in elasticsearch for search/fetch and indexing
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.Translog">
            <summary>
            Configure translog settings, EXPERT MODE ONLY!
            </summary>
        </member>
        <member name="P:Nest.DynamicIndexSettings.AutoExpandReplicas">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.BlocksMetadata">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.BlocksRead">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.BlocksReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.BlocksWrite">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.Priority">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.WarmersEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.RequestCacheEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.Merge">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.NumberOfReplicas">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.RecoveryInitialShards">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.RefreshInterval">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.RoutingAllocationTotalShardsPerNode">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.SlowLog">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.Translog">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.UnassignedNodeLeftDelayedTimeout">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.Analysis">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettings.Add(System.String,System.Object)">
            <summary>
            Add any setting to the index
            </summary>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Setting(System.String,System.Object)">
            <summary>
            Add any setting to the index
            </summary>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.NumberOfReplicas(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.AutoExpandReplicas(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.BlocksMetadata(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.BlocksRead(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.BlocksReadOnly(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.BlocksWrite(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Priority(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.WarmersEnabled(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.RequestCacheEnabled(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Merge(System.Func{Nest.MergeSettingsDescriptor,Nest.IMergeSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.RecoveryInitialShards(Nest.Union{System.Int32,Nest.RecoveryInitialShards})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.RefreshInterval(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.TotalShardsPerNode(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.SlowLog(System.Func{Nest.SlowLogDescriptor,Nest.ISlowLog})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Translog(System.Func{Nest.TranslogSettingsDescriptor,Nest.ITranslogSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.UnassignedNodeLeftDelayedTimeout(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IIndexSettings.NumberOfShards">
            <summary>
            The number of primary shards that an index should have. Defaults to 5. 
            This setting can only be set at index creation time. It cannot be changed on a closed index. 
            </summary>
        </member>
        <member name="P:Nest.IIndexSettings.FileSystemStorageImplementation">
            <summary>
            The store module allows you to control how index data is stored and accessed on disk.
            <para>EXPERT MODE toggle</para>
            </summary>
        </member>
        <member name="T:Nest.IndexSettings">
            <inheritdoc />
        </member>
        <member name="P:Nest.IndexSettings.NumberOfShards">
            <inheritdoc />
        </member>
        <member name="P:Nest.IndexSettings.FileSystemStorageImplementation">
            <inheritdoc />
        </member>
        <member name="T:Nest.IndexSettingsDescriptor">
            <inheritdoc />
        </member>
        <member name="M:Nest.IndexSettingsDescriptor.NumberOfShards(System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Nest.IndexSettingsDescriptor.FileSystemStorageImplementation(System.Nullable{Nest.FileSystemStorageImplementation})">
            <inheritdoc />
        </member>
        <member name="P:Nest.SlowLog.Indexing">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SlowLog.Search">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogDescriptor.Search(System.Func{Nest.SlowLogSearchDescriptor,Nest.ISlowLogSearch})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogDescriptor.Indexing(System.Func{Nest.SlowLogIndexingDescriptor,Nest.ISlowLogIndexing})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogIndexingDescriptor.LogLevel(System.Nullable{Nest.LogLevel})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogIndexingDescriptor.Source(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogIndexingDescriptor.ThresholdDebug(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogIndexingDescriptor.ThresholdInfo(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogIndexingDescriptor.ThresholdTrace(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogIndexingDescriptor.ThresholdWarn(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchDescriptor.LogLevel(System.Nullable{Nest.LogLevel})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchDescriptor.Query(System.Func{Nest.SlowLogSearchQueryDescriptor,Nest.ISlowLogSearchQuery})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchDescriptor.Fetch(System.Func{Nest.SlowLogSearchFetchDescriptor,Nest.ISlowLogSearchFetch})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchFetchDescriptor.ThresholdDebug(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchFetchDescriptor.ThresholdInfo(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchFetchDescriptor.ThresholdTrace(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchFetchDescriptor.ThresholdWarn(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchQueryDescriptor.ThresholdDebug(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchQueryDescriptor.ThresholdInfo(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchQueryDescriptor.ThresholdTrace(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchQueryDescriptor.ThresholdWarn(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.FileSystemStorageImplementation">
            <summary>
            The store module allows you to control how index data is stored and accessed on disk.
            </summary>
        </member>
        <member name="F:Nest.FileSystemStorageImplementation.Simple">
             <summary>
            The Simple FS type is a straightforward implementation of file system storage (maps to 
             Lucene SimpleFsDirectory) using a random access file. This implementation has poor 
             concurrent performance (multiple threads will bottleneck). It is usually better to use
              the niofs when you need index persistence. 
             </summary>
        </member>
        <member name="F:Nest.FileSystemStorageImplementation.NIO">
            <summary>
            The NIO FS type stores the shard index on the file system (maps to Lucene NIOFSDirectory)
            using NIO. It allows multiple threads to read from the same file concurrently. It is not 
            recommended on Windows because of a bug in the SUN Java implementation./
            </summary>
        </member>
        <member name="F:Nest.FileSystemStorageImplementation.MMap">
             <summary>
            The MMap FS type stores the shard index on the file system (maps to Lucene MMapDirectory) 
             by mapping a file into memory (mmap). Memory mapping uses up a portion of the virtual memory
              address space in your process equal to the size of the file being mapped. Before using this class,
              be sure you have allowed plenty of virtual address space.
             </summary>
        </member>
        <member name="F:Nest.FileSystemStorageImplementation.Default">
            <summary>
            The default type is a hybrid of NIO FS and MMapFS, which chooses the best file system for each
            type of file. Currently only the Lucene term dictionary and doc values files are memory mapped to 
            reduce the impact on the operating system. All other files are opened using Lucene NIOFSDirectory.
            </summary>
        </member>
        <member name="P:Nest.ITranslogFlushSettings.ThresholdSize">
            <summary>
            Once the translog hits this size, a flush will happen. Defaults to 512mb.
            </summary>
        </member>
        <member name="P:Nest.ITranslogFlushSettings.ThresholdOps">
            <summary>
            After how many operations to flush. Defaults to unlimited.
            </summary>
        </member>
        <member name="P:Nest.ITranslogFlushSettings.ThresholdPeriod">
            <summary>
            How long to wait before triggering a flush regardless of translog size. Defaults to 30m.
            </summary>
        </member>
        <member name="P:Nest.ITranslogFlushSettings.Interval">
            <summary>
            How often to check if a flush is needed, randomized between 
            the interval value and 2x the interval value. Defaults to 5s.
            </summary>
        </member>
        <member name="P:Nest.TranslogFlushSettings.Interval">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TranslogFlushSettings.ThresholdOps">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TranslogFlushSettings.ThresholdPeriod">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TranslogFlushSettings.ThresholdSize">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogFlushSettingsDescriptor.ThresholdSize(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogFlushSettingsDescriptor.ThresholdOps(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogFlushSettingsDescriptor.ThresholdPeriod(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogFlushSettingsDescriptor.Interval(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ITranslogSettings.Flush">
            <summary>
            Dynamically updatable flush settings
            </summary>
        </member>
        <member name="P:Nest.ITranslogSettings.SyncInterval">
            <summary>
            How often the translog is fsynced to disk and committed, regardless of write operations. Defaults to 5s.
            </summary>
        </member>
        <member name="P:Nest.ITranslogSettings.Durability">
            <summary>
            Whether or not to fsync and commit the translog after every index, delete, update, or bulk request
            </summary>
        </member>
        <member name="P:Nest.ITranslogSettings.FileSystemType">
             <summary>
            Whether to buffer writes to the transaction log in memory or not. 
             </summary>
        </member>
        <member name="P:Nest.TranslogSettings.Flush">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TranslogSettings.SyncInterval">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TranslogSettings.Durability">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TranslogSettings.FileSystemType">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogSettingsDescriptor.Flush(System.Func{Nest.TranslogFlushSettingsDescriptor,Nest.ITranslogFlushSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogSettingsDescriptor.Durability(System.Nullable{Nest.TranslogDurability})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogSettingsDescriptor.SyncInterval(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogSettingsDescriptor.FileSystemType(System.Nullable{Nest.TranslogWriteMode})">
            <inheritdoc/>
        </member>
        <member name="F:Nest.TranslogWriteMode.Buffered">
            <summary>
            (default) Translog writes first go to a 64kB buffer in memory, and are only written 
            to the disk when the buffer is full, or when an fsync is triggered by a 
            write request or the sync_interval.
            </summary>
        </member>
        <member name="F:Nest.TranslogWriteMode.Simple">
            <summary>
            Translog writes are written to the file system immediately, without buffering. However, 
            these writes will only be persisted to disk when an fsync and commit is triggered by a write request
            or the sync_interval.
            </summary>
        </member>
        <member name="T:Nest.IBM25Similarity">
            <summary>
            BM25 Similarity. Introduced in Stephen E. Robertson, Steve Walker, Susan Jones, Micheline Hancock-Beaulieu, 
            and Mike Gatford. Okapi at TREC-3. In Proceedings of the Third Text REtrieval Conference (TREC 1994). Gaithersburg, USA, November 1994.
            </summary>
        </member>
        <member name="P:Nest.IBM25Similarity.B">
            <summary>
            Controls to what degree document length normalizes tf values.
            </summary>
        </member>
        <member name="P:Nest.IBM25Similarity.DiscountOverlaps">
            <summary>
            Sets whether overlap tokens (Tokens with 0 position increment) are ignored when computing norm.
            </summary>
        </member>
        <member name="P:Nest.IBM25Similarity.K1">
             <summary>
            Controls non-linear term frequency normalization (saturation).
             </summary>
        </member>
        <member name="T:Nest.BM25Similarity">
            <inheritdoc/>
        </member>
        <member name="P:Nest.BM25Similarity.K1">
            <inheritdoc/>
        </member>
        <member name="P:Nest.BM25Similarity.B">
            <inheritdoc/>
        </member>
        <member name="P:Nest.BM25Similarity.DiscountOverlaps">
            <inheritdoc/>
        </member>
        <member name="T:Nest.BM25SimilarityDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.BM25SimilarityDescriptor.DiscountOverlaps(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.BM25SimilarityDescriptor.K1(System.Nullable{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.BM25SimilarityDescriptor.B(System.Nullable{System.Double})">
            <inheritdoc/>
        </member>
        <member name="F:Nest.DFRAfterEffect.No">
            <summary>
            Implementation used when there is no aftereffect.
            </summary>
        </member>
        <member name="F:Nest.DFRAfterEffect.B">
            <summary>
            Model of the information gain based on the ratio of two Bernoulli processes.
            </summary>
        </member>
        <member name="F:Nest.DFRAfterEffect.L">
            <summary>
            Model of the information gain based on Laplace's law of succession.
            </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.BE">
            <summary>
            Limiting form of the Bose-Einstein model. The formula used in Lucene differs slightly from the one in the original paper: F is increased by tfn+1 and N is increased by F
            </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.D">
            <summary>
            Implements the approximation of the binomial model with the divergence for DFR. 
            The formula used in Lucene differs slightly from the one in the original paper: to avoid underflow for small values of N and F, N is increased by 1 and F is always increased by tfn+1.
            </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.G">
             <summary>
            Geometric as limiting form of the Bose-Einstein model. The formula used in Lucene differs slightly from the one in the original paper: F is increased by 1 and N is increased by F.
             </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.IF">
            <summary>
            An approximation of the I(ne) model.
            </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.IN">
            <summary>
            The basic tf-idf model of randomness.
            </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.INE">
            <summary>
            Tf-idf model of randomness, based on a mixture of Poisson and inverse document frequency.
            </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.P">
            <summary>
            Implements the Poisson approximation for the binomial model for DFR.
            </summary>
        </member>
        <member name="T:Nest.IDFRSimilarity">
            <summary>
            Implements the divergence from randomness (DFR) framework introduced in Gianni Amati and Cornelis Joost Van Rijsbergen. 2002. 
            Probabilistic models of information retrieval based on measuring the divergence from randomness. ACM Trans. Inf. Syst. 20, 4 (October 2002), 357-389.
            The DFR scoring formula is composed of three separate components: the basic model, the aftereffect and an additional normalization component, 
            represented by the classes BasicModel, AfterEffect and Normalization, respectively.The names of these classes were chosen to match the names of their counterparts in the Terrier IR engine.
            </summary>
        </member>
        <member name="P:Nest.IDFRSimilarity.NormalizationH1C">
            <summary>
            Normalization model that assumes a uniform distribution of the term frequency. 
            </summary>
        </member>
        <member name="P:Nest.IDFRSimilarity.NormalizationH2C">
            <summary>
             Normalization model in which the term frequency is inversely related to the length.
            </summary>
        </member>
        <member name="P:Nest.IDFRSimilarity.NormalizationH3C">
            <summary>
             Dirichlet Priors normalization
            </summary>
        </member>
        <member name="P:Nest.IDFRSimilarity.NormalizationZZ">
            <summary>
            Pareto-Zipf Normalization
            </summary>
        </member>
        <member name="M:Nest.DFRSimilarityDescriptor.NormalizationH1(System.Nullable{System.Double})">
            <summary>
            Normalization model that assumes a uniform distribution of the term frequency. 
            </summary>
            <param name="c">hyper-parameter that controls the term frequency normalization with respect to the document length.</param>
        </member>
        <member name="M:Nest.DFRSimilarityDescriptor.NormalizationH2(System.Nullable{System.Double})">
            <summary>
            Normalization model in which the term frequency is inversely related to the length.
            </summary>
            <param name="c">hyper-parameter that controls the term frequency normalization with respect to the document length.</param>
        </member>
        <member name="M:Nest.DFRSimilarityDescriptor.NormalizationH3(System.Nullable{System.Double})">
            <summary>
            Dirichlet Priors normalization
            </summary>
            <param name="mu">smoothing parameter μ.</param>
        </member>
        <member name="M:Nest.DFRSimilarityDescriptor.NormalizationZ(System.Nullable{System.Double})">
            <summary>
            Pareto-Zipf Normalization
            </summary>
            <param name="mu">represents A/(A+1) where A measures the specificity of the language..</param>
        </member>
        <member name="F:Nest.IBLambda.DocumentFrequency">
            <summary>
            Nw/N or average number of documents where w occurs
            </summary>
        </member>
        <member name="F:Nest.IBLambda.TermFrequency">
            <summary>
            Fw/N or average number of occurrences of w in the collection
            </summary>
        </member>
        <member name="P:Nest.IIBSimilarity.NormalizationH1C">
            <summary>
            Normalization model that assumes a uniform distribution of the term frequency. 
            </summary>
        </member>
        <member name="P:Nest.IIBSimilarity.NormalizationH2C">
            <summary>
             Normalization model in which the term frequency is inversely related to the length.
            </summary>
        </member>
        <member name="P:Nest.IIBSimilarity.NormalizationH3C">
            <summary>
             Dirichlet Priors normalization
            </summary>
        </member>
        <member name="P:Nest.IIBSimilarity.NormalizationZZ">
            <summary>
            Pareto-Zipf Normalization
            </summary>
        </member>
        <member name="M:Nest.IBSimilarityDescriptor.NormalizationH1(System.Nullable{System.Double})">
            <summary>
            Normalization model that assumes a uniform distribution of the term frequency. 
            </summary>
            <param name="c">hyper-parameter that controls the term frequency normalization with respect to the document length.</param>
        </member>
        <member name="M:Nest.IBSimilarityDescriptor.NormalizationH2(System.Nullable{System.Double})">
            <summary>
            Normalization model in which the term frequency is inversely related to the length.
            </summary>
            <param name="c">hyper-parameter that controls the term frequency normalization with respect to the document length.</param>
        </member>
        <member name="M:Nest.IBSimilarityDescriptor.NormalizationH3(System.Nullable{System.Double})">
            <summary>
            Dirichlet Priors normalization
            </summary>
            <param name="mu">smoothing parameter μ.</param>
        </member>
        <member name="M:Nest.IBSimilarityDescriptor.NormalizationZ(System.Nullable{System.Double})">
            <summary>
            Pareto-Zipf Normalization
            </summary>
            <param name="mu">represents A/(A+1) where A measures the specificity of the language..</param>
        </member>
        <member name="F:Nest.Normalization.No">
            <summary>
            Implementation used when there is no normalization. 
            </summary>
        </member>
        <member name="F:Nest.Normalization.H1">
            <summary>
            Normalization model that assumes a uniform distribution of the term frequency. 
            </summary>
        </member>
        <member name="F:Nest.Normalization.H2">
            <summary>
             Normalization model in which the term frequency is inversely related to the length.
            </summary>
        </member>
        <member name="F:Nest.Normalization.H3">
            <summary>
            Dirichlet Priors normalization
            </summary>
        </member>
        <member name="F:Nest.Normalization.Z">
            <summary>
            Pareto-Zipf Normalization
            </summary>
        </member>
        <member name="M:Nest.Similarities.Add(System.String,Nest.ISimilarity)">
            <summary>
            Add any setting to the index
            </summary>
        </member>
        <member name="M:Nest.Aliases.Add(Nest.IndexName,Nest.IAlias)">
            <summary>
            Add any setting to the index
            </summary>
        </member>
        <member name="T:Nest.AliasExistsRequest">
            <summary>Request parameters for IndicesExistsAliasForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.AliasExistsRequest.#ctor(Nest.Names)">
             <summary>/_alias/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.AliasExistsRequest.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_alias/{name}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.AliasExistsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_alias</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.AliasExistsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.AliasExistsDescriptor">
            <summary>descriptor for IndicesExistsAliasForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.#ctor">
            <summary>/_alias/{name}</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to filter aliases</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.Index``1">
            <summary>A comma-separated list of index names to filter aliases</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.AllIndices">
            <summary>A comma-separated list of index names to filter aliases</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.Name(Nest.Names)">
            <summary>A comma-separated list of alias names to return</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.IAliasAction">
            <summary>
            Marker interface for alias operation
            </summary>
        </member>
        <member name="T:Nest.BulkAliasRequest">
            <summary>Request parameters for IndicesUpdateAliasesForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</pre></summary>
        </member>
        <member name="P:Nest.BulkAliasRequest.Timeout">
            <summary>Request timeout</summary>
        </member>
        <member name="P:Nest.BulkAliasRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.BulkAliasRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.BulkAliasRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.BulkAliasDescriptor">
            <summary>descriptor for IndicesUpdateAliasesForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.BulkAliasDescriptor.Timeout(Nest.Time)">
            <summary>Request timeout</summary>
        </member>
        <member name="M:Nest.BulkAliasDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.BulkAliasDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.BulkAliasDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteAliasRequest">
            <summary>Request parameters for IndicesDeleteAlias <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteAliasRequest.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_alias/{name}</summary>
            <param name="index">this parameter is required</param>		
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteAliasRequest.Timeout">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="P:Nest.DeleteAliasRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.DeleteAliasRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteAliasRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteAliasDescriptor">
            <summary>descriptor for IndicesDeleteAlias <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_alias/{name}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names (supports wildcards); use `_all` for all indices</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.Index``1">
            <summary>A comma-separated list of index names (supports wildcards); use `_all` for all indices</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.AllIndices">
            <summary>A comma-separated list of index names (supports wildcards); use `_all` for all indices</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.Timeout(Nest.Time)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="M:Nest.AliasPointingToIndexExtensions.GetAliasesPointingToIndex(Nest.IElasticClient,System.String)">
            <summary>
            Returns a list of aliases that point to the specified index, simplified version of GetAliases.
            </summary>
            <param name="client"></param>
            <param name="indexName">The exact indexname we want to know aliases of</param>
        </member>
        <member name="M:Nest.AliasPointingToIndexExtensions.GetAliasesPointingToIndexAsync(Nest.IElasticClient,System.String)">
            <summary>
            Returns a list of aliases that point to the specified index, simplified version of GetAliases.
            </summary>
            <param name="client"></param>
            <param name="indexName">The exact indexname we want to know aliases of</param>
        </member>
        <member name="T:Nest.IndicesPointingToAliasExtensions">
            <summary>Implements several handy alias extensions.
            </summary>
        </member>
        <member name="M:Nest.IndicesPointingToAliasExtensions.GetIndicesPointingToAlias(Nest.IElasticClient,System.String)">
            <summary>
            Returns a list of indices that have the specified aliasName applied to them. Simplified version of GetAliases.
            </summary>
            <param name="client"></param>
            <param name="aliasName">The exact alias name</param>
        </member>
        <member name="M:Nest.IndicesPointingToAliasExtensions.GetIndicesPointingToAliasAsync(Nest.IElasticClient,System.String)">
            <summary>
            Returns a list of indices that have the specified aliasName applied to them. Simplified version of GetAliases.
            </summary>
            <param name="client"></param>
            <param name="aliasName">The exact alias name</param>
        </member>
        <member name="T:Nest.GetAliasesRequest">
            <summary>Request parameters for IndicesGetAliasesForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.GetAliasesRequest.#ctor">
            <summary>/_aliases</summary>
        </member>
        <member name="M:Nest.GetAliasesRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_aliases</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetAliasesRequest.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_aliases/{name}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetAliasesRequest.#ctor(Nest.Names)">
             <summary>/_aliases/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetAliasesRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.GetAliasesRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetAliasesRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetAliasesRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetAliasesDescriptor">
            <summary>descriptor for IndicesGetAliasesForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.GetAliasesDescriptor.#ctor">
            <summary>/_aliases</summary>
        </member>
        <member name="M:Nest.GetAliasesDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to filter aliases</summary>
        </member>
        <member name="M:Nest.GetAliasesDescriptor.Index``1">
            <summary>A comma-separated list of index names to filter aliases</summary>
        </member>
        <member name="M:Nest.GetAliasesDescriptor.AllIndices">
            <summary>A comma-separated list of index names to filter aliases</summary>
        </member>
        <member name="M:Nest.GetAliasesDescriptor.Name(Nest.Names)">
            <summary>A comma-separated list of alias names to filter</summary>
        </member>
        <member name="M:Nest.GetAliasesDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.GetAliasesDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetAliasesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetAliasesDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetAliasRequest">
            <summary>Request parameters for IndicesGetAliasForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.GetAliasRequest.#ctor">
            <summary>/_alias</summary>
        </member>
        <member name="M:Nest.GetAliasRequest.#ctor(Nest.Names)">
             <summary>/_alias/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetAliasRequest.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_alias/{name}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetAliasRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_alias</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetAliasRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetAliasDescriptor">
            <summary>descriptor for IndicesGetAliasForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.#ctor">
            <summary>/_alias</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to filter aliases</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.Index``1">
            <summary>A comma-separated list of index names to filter aliases</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.AllIndices">
            <summary>A comma-separated list of index names to filter aliases</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.Name(Nest.Names)">
            <summary>A comma-separated list of alias names to return</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutAliasRequest">
            <summary>Request parameters for IndicesPutAlias <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.PutAliasRequest.#ctor(Nest.Indices,Nest.Name)">
             <summary>/{index}/_alias/{name}</summary>
            <param name="index">this parameter is required</param>		
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.PutAliasRequest.Timeout">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="P:Nest.PutAliasRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.PutAliasRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PutAliasRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutAliasDescriptor">
            <summary>descriptor for IndicesPutAlias <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.#ctor(Nest.Indices,Nest.Name)">
             <summary>/{index}/_alias/{name}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutAliasDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.Index``1">
            <summary>A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.AllIndices">
            <summary>A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.Timeout(Nest.Time)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.AnalyzeRequest">
            <summary>Request parameters for IndicesAnalyzeForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html</pre></summary>
        </member>
        <member name="M:Nest.AnalyzeRequest.#ctor">
            <summary>/_analyze</summary>
        </member>
        <member name="M:Nest.AnalyzeRequest.#ctor(Nest.IndexName)">
             <summary>/{index}/_analyze</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.AnalyzeRequest.Analyzer">
            <summary>The name of the analyzer to use</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.CharFilters">
            <summary>A comma-separated list of character filters to use for the analysis</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Field">
            <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Filters">
            <summary>A comma-separated list of filters to use for the analysis</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.PreferLocal">
            <summary>With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Text">
            <summary>The text on which the analysis should be performed (when request body is not used)</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Tokenizer">
            <summary>The name of the tokenizer to use for the analysis</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Explain">
            <summary>With `true`, outputs more advanced details. (default: false)</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Attributes">
            <summary>A comma-separated list of token attributes to output, this parameter works only with `explain=true`</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Format">
            <summary>Format of the output</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.AnalyzeDescriptor">
            <summary>descriptor for IndicesAnalyzeForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html</pre></summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.#ctor">
            <summary>/_analyze</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Index(Nest.IndexName)">
            <summary>The name of the index to scope the operation</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Index``1">
            <summary>The name of the index to scope the operation</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Analyzer(System.String)">
            <summary>The name of the analyzer to use</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.CharFilters(System.String[])">
            <summary>A comma-separated list of character filters to use for the analysis</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Field(System.String)">
            <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Field``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Filters(System.String[])">
            <summary>A comma-separated list of filters to use for the analysis</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.PreferLocal(System.Boolean)">
            <summary>With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Text(System.String[])">
            <summary>The text on which the analysis should be performed (when request body is not used)</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Tokenizer(System.String)">
            <summary>The name of the tokenizer to use for the analysis</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Explain(System.Boolean)">
            <summary>With `true`, outputs more advanced details. (default: false)</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Attributes(System.String[])">
            <summary>A comma-separated list of token attributes to output, this parameter works only with `explain=true`</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Format(Elasticsearch.Net.Format)">
            <summary>Format of the output</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CreateIndexRequest">
            <summary>Request parameters for IndicesCreate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html</pre></summary>
        </member>
        <member name="M:Nest.CreateIndexRequest.#ctor(Nest.IndexName)">
             <summary>/{index}</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="P:Nest.CreateIndexRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.CreateIndexRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.CreateIndexRequest.UpdateAllTypes">
            <summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
        </member>
        <member name="P:Nest.CreateIndexRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CreateIndexRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CreateIndexDescriptor">
            <summary>descriptor for IndicesCreate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html</pre></summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.#ctor(Nest.IndexName)">
             <summary>/{index}</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.Index``1">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.UpdateAllTypes(System.Boolean)">
            <summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteIndexRequest">
            <summary>Request parameters for IndicesDelete <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteIndexRequest.#ctor(Nest.Indices)">
             <summary>/{index}</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteIndexRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeleteIndexRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.DeleteIndexRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteIndexRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteIndexDescriptor">
            <summary>descriptor for IndicesDelete <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.#ctor(Nest.Indices)">
             <summary>/{index}</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.Index``1">
            <summary>A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.AllIndices">
            <summary>A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetIndexRequest">
            <summary>Request parameters for IndicesGet <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html</pre></summary>
        </member>
        <member name="M:Nest.GetIndexRequest.#ctor(Nest.Indices)">
             <summary>/{index}</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.GetIndexRequest.#ctor(Nest.Indices,Nest.Features)">
             <summary>/{index}/{feature}</summary>
            <param name="index">this parameter is required</param>		
            <param name="feature">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetIndexRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.IgnoreUnavailable">
            <summary>Ignore unavailable indexes (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.AllowNoIndices">
            <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.ExpandWildcards">
            <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.Human">
            <summary>Whether to return version and creation date values in human-readable format.</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetIndexDescriptor">
            <summary>descriptor for IndicesGet <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html</pre></summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.#ctor(Nest.Indices)">
             <summary>/{index}</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Index``1">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.AllIndices">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Feature(Nest.Features)">
            <summary>A comma-separated list of features</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Ignore unavailable indexes (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Human(System.Boolean)">
            <summary>Whether to return version and creation date values in human-readable format.</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.IndexExistsRequest">
            <summary>Request parameters for IndicesExists <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html</pre></summary>
        </member>
        <member name="M:Nest.IndexExistsRequest.#ctor(Nest.Indices)">
             <summary>/{index}</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="P:Nest.IndexExistsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.IndexExistsDescriptor">
            <summary>descriptor for IndicesExists <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html</pre></summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.#ctor(Nest.Indices)">
             <summary>/{index}</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of indices to check</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.Index``1">
            <summary>A comma-separated list of indices to check</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.AllIndices">
            <summary>A comma-separated list of indices to check</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CloseIndexRequest">
            <summary>Request parameters for IndicesClose <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</pre></summary>
        </member>
        <member name="M:Nest.CloseIndexRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_close</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="P:Nest.CloseIndexRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CloseIndexDescriptor">
            <summary>descriptor for IndicesClose <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</pre></summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.#ctor(Nest.Indices)">
             <summary>/{index}/_close</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.Index(Nest.Indices)">
            <summary>A comma separated list of indices to close</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.Index``1">
            <summary>A comma separated list of indices to close</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.AllIndices">
            <summary>A comma separated list of indices to close</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.OpenIndexRequest">
            <summary>Request parameters for IndicesOpen <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</pre></summary>
        </member>
        <member name="M:Nest.OpenIndexRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_open</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="P:Nest.OpenIndexRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.OpenIndexDescriptor">
            <summary>descriptor for IndicesOpen <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</pre></summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.#ctor(Nest.Indices)">
             <summary>/{index}/_open</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.Index(Nest.Indices)">
            <summary>A comma separated list of indices to open</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.Index``1">
            <summary>A comma separated list of indices to open</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.AllIndices">
            <summary>A comma separated list of indices to open</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.TypeExistsRequest">
            <summary>Request parameters for IndicesExistsType <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html</pre></summary>
        </member>
        <member name="M:Nest.TypeExistsRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="P:Nest.TypeExistsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.TypeExistsDescriptor">
            <summary>descriptor for IndicesExistsType <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html</pre></summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` to check the types across all indices</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` to check the types across all indices</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` to check the types across all indices</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Type(Nest.Types)">
            <summary>A comma-separated list of document types to check</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Type``1">
            <summary>A comma-separated list of document types to check</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.AllTypes">
            <summary>A comma-separated list of document types to check</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetIndexSettingsRequest">
            <summary>Request parameters for IndicesGetSettingsForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html</pre></summary>
        </member>
        <member name="M:Nest.GetIndexSettingsRequest.#ctor">
            <summary>/_settings</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_settings</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetIndexSettingsRequest.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_settings/{name}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetIndexSettingsRequest.#ctor(Nest.Names)">
             <summary>/_settings/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.Human">
            <summary>Whether to return version and creation date values in human-readable format.</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetIndexSettingsDescriptor">
            <summary>descriptor for IndicesGetSettingsForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html</pre></summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.#ctor">
            <summary>/_settings</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Name(Nest.Names)">
            <summary>The name of the settings that should be included</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Human(System.Boolean)">
            <summary>Whether to return version and creation date values in human-readable format.</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteIndexTemplateRequest">
            <summary>Request parameters for IndicesDeleteTemplateForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateRequest.#ctor(Nest.Name)">
             <summary>/_template/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteIndexTemplateRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeleteIndexTemplateRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.DeleteIndexTemplateRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteIndexTemplateRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteIndexTemplateDescriptor">
            <summary>descriptor for IndicesDeleteTemplateForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.#ctor(Nest.Name)">
             <summary>/_template/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetIndexTemplateRequest">
            <summary>Request parameters for IndicesGetTemplateForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.GetIndexTemplateRequest.#ctor">
            <summary>/_template</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateRequest.#ctor(Nest.Names)">
             <summary>/_template/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetIndexTemplateDescriptor">
            <summary>descriptor for IndicesGetTemplateForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.#ctor">
            <summary>/_template</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.Name(Nest.Names)">
            <summary>The comma separated names of the index templates</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.IndexTemplateExistsRequest">
            <summary>Request parameters for IndicesExistsTemplateForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsRequest.#ctor(Nest.Name)">
             <summary>/_template/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.IndexTemplateExistsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.IndexTemplateExistsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.IndexTemplateExistsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.IndexTemplateExistsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.IndexTemplateExistsDescriptor">
            <summary>descriptor for IndicesExistsTemplateForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.#ctor(Nest.Name)">
             <summary>/_template/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutIndexTemplateRequest">
            <summary>Request parameters for IndicesPutTemplateForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.PutIndexTemplateRequest.#ctor(Nest.Name)">
             <summary>/_template/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.Create">
            <summary>Whether the index template should only be added if new or can also replace an existing one</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutIndexTemplateDescriptor">
            <summary>descriptor for IndicesPutTemplateForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.#ctor(Nest.Name)">
             <summary>/_template/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.Create(System.Boolean)">
            <summary>Whether the index template should only be added if new or can also replace an existing one</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.UpdateIndexSettingsRequest">
            <summary>Request parameters for IndicesPutSettingsForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsRequest.#ctor">
            <summary>/_settings</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_settings</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.UpdateIndexSettingsDescriptor">
            <summary>descriptor for IndicesPutSettingsForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.IndexSettings(System.Func{Nest.DynamicIndexSettingsDescriptor,Nest.IPromise{Nest.IDynamicIndexSettings}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.#ctor">
            <summary>/_settings</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetFieldMappingRequest">
            <summary>Request parameters for IndicesGetFieldMappingForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html</pre></summary>
        </member>
        <member name="M:Nest.GetFieldMappingRequest.#ctor(Nest.Fields)">
             <summary>/_mapping/field/{fields}</summary>
            <param name="fields">this parameter is required</param>
        </member>
        <member name="M:Nest.GetFieldMappingRequest.#ctor(Nest.Indices,Nest.Fields)">
             <summary>/{index}/_mapping/field/{fields}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="fields">this parameter is required</param>
        </member>
        <member name="M:Nest.GetFieldMappingRequest.#ctor(Nest.Types,Nest.Fields)">
             <summary>/_mapping/{type}/field/{fields}</summary>
            <param name="type">Optional, accepts null</param>		
            <param name="fields">this parameter is required</param>
        </member>
        <member name="M:Nest.GetFieldMappingRequest.#ctor(Nest.Indices,Nest.Types,Nest.Fields)">
             <summary>/{index}/_mapping/{type}/field/{fields}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>		
            <param name="fields">this parameter is required</param>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.IncludeDefaults">
            <summary>Whether the default mapping values should be returned as well</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetFieldMappingDescriptor`1">
            <summary>descriptor for IndicesGetFieldMappingForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html</pre></summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.#ctor(Nest.Fields)">
             <summary>/_mapping/field/{fields}</summary>
            <param name="fields"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Index``1">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.AllIndices">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Type``1">
            <summary>A comma-separated list of document types</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.AllTypes">
            <summary>A comma-separated list of document types</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.IncludeDefaults(System.Boolean)">
            <summary>Whether the default mapping values should be returned as well</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetMappingRequest">
            <summary>Request parameters for IndicesGetMappingForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html</pre></summary>
        </member>
        <member name="M:Nest.GetMappingRequest.#ctor">
            <summary>/_mapping</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.GetMappingRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_mapping</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetMappingRequest.#ctor(Nest.Types)">
             <summary>/_mapping/{type}</summary>
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetMappingRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/_mapping/{type}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetMappingRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetMappingDescriptor`1">
            <summary>descriptor for IndicesGetMappingForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html</pre></summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.#ctor">
            <summary>/_mapping</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Index``1">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.AllIndices">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Type``1">
            <summary>A comma-separated list of document types</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.AllTypes">
            <summary>A comma-separated list of document types</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutMappingRequest">
            <summary>Request parameters for IndicesPutMapping <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html</pre></summary>
        </member>
        <member name="P:Nest.PutMappingRequest.AllField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.DateDetection">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.DynamicDateFormats">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.DynamicTemplates">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.Dynamic">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.Analyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.SearchAnalyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.FieldNamesField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.IndexField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.Meta">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.NumericDetection">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.ParentField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.Properties">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.RoutingField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.SizeField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.SourceField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.Transform">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.TimestampField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.TtlField">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingRequest.#ctor(Nest.Indices,Nest.TypeName)">
             <summary>/{index}/{type}/_mapping</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="M:Nest.PutMappingRequest.#ctor(Nest.TypeName)">
             <summary>/_mapping/{type}</summary>
            <param name="type">this parameter is required</param>
        </member>
        <member name="P:Nest.PutMappingRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.UpdateAllTypes">
            <summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutMappingRequest`1">
            <summary>Request parameters for IndicesPutMapping <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html</pre></summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.AllField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.DateDetection">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.DynamicDateFormats">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.DynamicTemplates">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Dynamic">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Analyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.SearchAnalyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.FieldNamesField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.IndexField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Meta">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.NumericDetection">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.ParentField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Properties">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.RoutingField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.SizeField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.SourceField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Transform">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.TimestampField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.TtlField">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingRequest`1.#ctor(Nest.Indices,Nest.TypeName)">
             <summary>/{index}/{type}/_mapping</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="M:Nest.PutMappingRequest`1.#ctor(Nest.TypeName)">
             <summary>/_mapping/{type}</summary>
            <param name="type">this parameter is required</param>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.UpdateAllTypes">
            <summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutMappingDescriptor`1">
            <summary>descriptor for IndicesPutMapping <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html</pre></summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.AutoMap(Nest.IPropertyVisitor,System.Int32)">
            <summary>
            Convenience method to map as much as it can based on <see cref="T:Nest.ElasticsearchTypeAttribute"/> attributes set on the type.
            <pre>This method also automatically sets up mappings for known values types (int, long, double, datetime, etcetera)</pre>
            <pre>Class types default to object and Enums to int</pre>
            <pre>Later calls can override whatever is set is by this call.</pre>
            </summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.AutoMap(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Dynamic(Nest.DynamicMapping)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Dynamic(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Parent(Nest.TypeName)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Parent``1">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Analyzer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.SearchAnalyzer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.AllField(System.Func{Nest.AllFieldDescriptor,Nest.IAllField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.IndexField(System.Func{Nest.IndexFieldDescriptor,Nest.IIndexField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.SizeField(System.Func{Nest.SizeFieldDescriptor,Nest.ISizeField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.DisableSizeField(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.DisableIndexField(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.DynamicDateFormats(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.DateDetection(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.NumericDetection(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.SourceField(System.Func{Nest.SourceFieldDescriptor,Nest.ISourceField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.RoutingField(System.Func{Nest.RoutingFieldDescriptor{`0},Nest.IRoutingField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.FieldNamesField(System.Func{Nest.FieldNamesFieldDescriptor{`0},Nest.IFieldNamesField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Transform(System.Collections.Generic.IEnumerable{Nest.IMappingTransform})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Transform(System.Func{Nest.MappingTransformsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IMappingTransform}}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.TimestampField(System.Func{Nest.TimestampFieldDescriptor{`0},Nest.ITimestampField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.TtlField(System.Func{Nest.TtlFieldDescriptor,Nest.ITtlField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Meta(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.DynamicTemplates(System.Func{Nest.DynamicTemplateContainerDescriptor{`0},Nest.IPromise{Nest.IDynamicTemplateContainer}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.#ctor(Nest.TypeName)">
             <summary>/{index}/{type}/_mapping</summary>
            <param name="type"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Index``1">
            <summary>A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.AllIndices">
            <summary>A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Type(Nest.TypeName)">
            <summary>The name of the document type</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Type``1">
            <summary>The name of the document type</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.UpdateAllTypes(System.Boolean)">
            <summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.RecoveryStatusRequest">
            <summary>Request parameters for IndicesRecoveryForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html</pre></summary>
        </member>
        <member name="M:Nest.RecoveryStatusRequest.#ctor">
            <summary>/_recovery</summary>
        </member>
        <member name="M:Nest.RecoveryStatusRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_recovery</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.RecoveryStatusRequest.Detailed">
            <summary>Whether to display detailed information about shard recovery</summary>
        </member>
        <member name="P:Nest.RecoveryStatusRequest.ActiveOnly">
            <summary>Display only those recoveries that are currently on-going</summary>
        </member>
        <member name="P:Nest.RecoveryStatusRequest.Human">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="P:Nest.RecoveryStatusRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.RecoveryStatusRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.RecoveryStatusDescriptor">
            <summary>descriptor for IndicesRecoveryForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html</pre></summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.#ctor">
            <summary>/_recovery</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.Detailed(System.Boolean)">
            <summary>Whether to display detailed information about shard recovery</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.ActiveOnly(System.Boolean)">
            <summary>Display only those recoveries that are currently on-going</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.Human(System.Boolean)">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SegmentsRequest">
            <summary>Request parameters for IndicesSegmentsForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html</pre></summary>
        </member>
        <member name="M:Nest.SegmentsRequest.#ctor">
            <summary>/_segments</summary>
        </member>
        <member name="M:Nest.SegmentsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_segments</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SegmentsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.Human">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.OperationThreading">
            <summary>TODO: ?</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.Verbose">
            <summary>Includes detailed memory usage by Lucene.</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SegmentsDescriptor">
            <summary>descriptor for IndicesSegmentsForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html</pre></summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.#ctor">
            <summary>/_segments</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.Human(System.Boolean)">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.Verbose(System.Boolean)">
            <summary>Includes detailed memory usage by Lucene.</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.IndicesShardStoresRequest">
            <summary>Request parameters for IndicesShardStoresForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html</pre></summary>
        </member>
        <member name="M:Nest.IndicesShardStoresRequest.#ctor">
            <summary>/_shard_stores</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_shard_stores</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.Status">
            <summary>A comma-separated list of statuses used to filter on shards to get store information for</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.OperationThreading">
            <summary>TODO: ?</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.IndicesShardStoresDescriptor">
            <summary>descriptor for IndicesShardStoresForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html</pre></summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.#ctor">
            <summary>/_shard_stores</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.Status(System.String[])">
            <summary>A comma-separated list of statuses used to filter on shards to get store information for</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.IndicesStatsRequest">
            <summary>Request parameters for IndicesStatsForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html</pre></summary>
        </member>
        <member name="M:Nest.IndicesStatsRequest.#ctor">
            <summary>/_stats</summary>
        </member>
        <member name="M:Nest.IndicesStatsRequest.#ctor(Elasticsearch.Net.IndicesStatsMetric)">
             <summary>/_stats/{metric}</summary>
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="M:Nest.IndicesStatsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_stats</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.IndicesStatsRequest.#ctor(Nest.Indices,Elasticsearch.Net.IndicesStatsMetric)">
             <summary>/{index}/_stats/{metric}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="P:Nest.IndicesStatsRequest.CompletionFields">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.FielddataFields">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.Fields">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.Groups">
            <summary>A comma-separated list of search groups for `search` index metric</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.Human">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.Level">
            <summary>Return stats aggregated at cluster, index or shard level</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.IndicesStatsDescriptor">
            <summary>descriptor for IndicesStatsForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html</pre></summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.#ctor">
            <summary>/_stats</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Metric(Elasticsearch.Net.IndicesStatsMetric)">
            <summary>Limit the information returned the specific metrics.</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.CompletionFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.CompletionFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.FielddataFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.FielddataFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Fields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Groups(System.String[])">
            <summary>A comma-separated list of search groups for `search` index metric</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Human(System.Boolean)">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Level(Elasticsearch.Net.Level)">
            <summary>Return stats aggregated at cluster, index or shard level</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClearCacheRequest">
            <summary>Request parameters for IndicesClearCacheForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html</pre></summary>
        </member>
        <member name="M:Nest.ClearCacheRequest.#ctor">
            <summary>/_cache/clear</summary>
        </member>
        <member name="M:Nest.ClearCacheRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_cache/clear</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ClearCacheRequest.FieldData">
            <summary>Clear field data</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.Fields">
            <summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.Query">
            <summary>Clear query caches</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.Recycler">
            <summary>Clear the recycler cache</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.Request">
            <summary>Clear request cache</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClearCacheDescriptor">
            <summary>descriptor for IndicesClearCacheForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html</pre></summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.#ctor">
            <summary>/_cache/clear</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index name to limit the operation</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Index``1">
            <summary>A comma-separated list of index name to limit the operation</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.AllIndices">
            <summary>A comma-separated list of index name to limit the operation</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.FieldData(System.Boolean)">
            <summary>Clear field data</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Fields(System.String[])">
            <summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Query(System.Boolean)">
            <summary>Clear query caches</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Recycler(System.Boolean)">
            <summary>Clear the recycler cache</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Request(System.Boolean)">
            <summary>Clear request cache</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.FlushRequest">
            <summary>Request parameters for IndicesFlushForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html</pre></summary>
        </member>
        <member name="M:Nest.FlushRequest.#ctor">
            <summary>/_flush</summary>
        </member>
        <member name="M:Nest.FlushRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_flush</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.FlushRequest.Force">
            <summary>Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)</summary>
        </member>
        <member name="P:Nest.FlushRequest.WaitIfOngoing">
            <summary>If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is false and will cause an exception to be thrown on the shard level if another flush operation is already running.</summary>
        </member>
        <member name="P:Nest.FlushRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.FlushRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.FlushRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.FlushRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.FlushRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.FlushDescriptor">
            <summary>descriptor for IndicesFlushForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html</pre></summary>
        </member>
        <member name="M:Nest.FlushDescriptor.#ctor">
            <summary>/_flush</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string for all indices</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string for all indices</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string for all indices</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.Force(System.Boolean)">
            <summary>Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.WaitIfOngoing(System.Boolean)">
            <summary>If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is false and will cause an exception to be thrown on the shard level if another flush operation is already running.</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ForceMergeRequest">
            <summary>Request parameters for IndicesForcemergeForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html</pre></summary>
        </member>
        <member name="M:Nest.ForceMergeRequest.#ctor">
            <summary>/_forcemerge</summary>
        </member>
        <member name="M:Nest.ForceMergeRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_forcemerge</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ForceMergeRequest.Flush">
            <summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.MaxNumSegments">
            <summary>The number of segments the index should be merged into (default: dynamic)</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.OnlyExpungeDeletes">
            <summary>Specify whether the operation should only expunge deleted documents</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.OperationThreading">
            <summary>TODO: ?</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.WaitForMerge">
            <summary>Specify whether the request should block until the merge process is finished (default: true)</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ForceMergeDescriptor">
            <summary>descriptor for IndicesForcemergeForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html</pre></summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.#ctor">
            <summary>/_forcemerge</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.Flush(System.Boolean)">
            <summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.MaxNumSegments(System.Int64)">
            <summary>The number of segments the index should be merged into (default: dynamic)</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.OnlyExpungeDeletes(System.Boolean)">
            <summary>Specify whether the operation should only expunge deleted documents</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.WaitForMerge(System.Boolean)">
            <summary>Specify whether the request should block until the merge process is finished (default: true)</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.OptimizeRequest">
            <summary>Request parameters for IndicesOptimizeForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-optimize.html</pre></summary>
        </member>
        <member name="M:Nest.OptimizeRequest.#ctor">
            <summary>/_optimize</summary>
        </member>
        <member name="M:Nest.OptimizeRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_optimize</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.OptimizeRequest.Flush">
            <summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
        </member>
        <member name="P:Nest.OptimizeRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.OptimizeRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.OptimizeRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.OptimizeRequest.MaxNumSegments">
            <summary>The number of segments the index should be merged into (default: dynamic)</summary>
        </member>
        <member name="P:Nest.OptimizeRequest.OnlyExpungeDeletes">
            <summary>Specify whether the operation should only expunge deleted documents</summary>
        </member>
        <member name="P:Nest.OptimizeRequest.OperationThreading">
            <summary>TODO: ?</summary>
        </member>
        <member name="P:Nest.OptimizeRequest.WaitForMerge">
            <summary>Specify whether the request should block until the merge process is finished (default: true)</summary>
        </member>
        <member name="P:Nest.OptimizeRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.OptimizeRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.OptimizeDescriptor">
            <summary>descriptor for IndicesOptimizeForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-optimize.html</pre></summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.#ctor">
            <summary>/_optimize</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.Flush(System.Boolean)">
            <summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.MaxNumSegments(System.Int64)">
            <summary>The number of segments the index should be merged into (default: dynamic)</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.OnlyExpungeDeletes(System.Boolean)">
            <summary>Specify whether the operation should only expunge deleted documents</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.WaitForMerge(System.Boolean)">
            <summary>Specify whether the request should block until the merge process is finished (default: true)</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.OptimizeDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.RefreshRequest">
            <summary>Request parameters for IndicesRefreshForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html</pre></summary>
        </member>
        <member name="M:Nest.RefreshRequest.#ctor">
            <summary>/_refresh</summary>
        </member>
        <member name="M:Nest.RefreshRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_refresh</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.RefreshRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.RefreshRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.RefreshRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.RefreshRequest.Force">
            <summary>Force a refresh even if not required</summary>
        </member>
        <member name="P:Nest.RefreshRequest.OperationThreading">
            <summary>TODO: ?</summary>
        </member>
        <member name="P:Nest.RefreshRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.RefreshRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.RefreshDescriptor">
            <summary>descriptor for IndicesRefreshForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html</pre></summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.#ctor">
            <summary>/_refresh</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.Force(System.Boolean)">
            <summary>Force a refresh even if not required</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SyncedFlushRequest">
            <summary>Request parameters for IndicesFlushSyncedForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush.html</pre></summary>
        </member>
        <member name="M:Nest.SyncedFlushRequest.#ctor">
            <summary>/_flush/synced</summary>
        </member>
        <member name="M:Nest.SyncedFlushRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_flush/synced</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SyncedFlushRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SyncedFlushRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SyncedFlushRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SyncedFlushRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.SyncedFlushRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SyncedFlushDescriptor">
            <summary>descriptor for IndicesFlushSyncedForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush.html</pre></summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.#ctor">
            <summary>/_flush/synced</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string for all indices</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string for all indices</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string for all indices</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.UpgradeRequest">
            <summary>Request parameters for IndicesUpgradeForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html</pre></summary>
        </member>
        <member name="M:Nest.UpgradeRequest.#ctor">
            <summary>/_upgrade</summary>
        </member>
        <member name="M:Nest.UpgradeRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_upgrade</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.UpgradeRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.WaitForCompletion">
            <summary>Specify whether the request should block until the all segments are upgraded (default: false)</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.OnlyAncientSegments">
            <summary>If true, only ancient (an older Lucene major release) segments will be upgraded</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.UpgradeDescriptor">
            <summary>descriptor for IndicesUpgradeForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html</pre></summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.#ctor">
            <summary>/_upgrade</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.WaitForCompletion(System.Boolean)">
            <summary>Specify whether the request should block until the all segments are upgraded (default: false)</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.OnlyAncientSegments(System.Boolean)">
            <summary>If true, only ancient (an older Lucene major release) segments will be upgraded</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.UpgradeStatusRequest">
            <summary>Request parameters for IndicesGetUpgradeForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html</pre></summary>
        </member>
        <member name="M:Nest.UpgradeStatusRequest.#ctor">
            <summary>/_upgrade</summary>
        </member>
        <member name="M:Nest.UpgradeStatusRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_upgrade</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.Human">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.UpgradeStatusDescriptor">
            <summary>descriptor for IndicesGetUpgradeForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html</pre></summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.#ctor">
            <summary>/_upgrade</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.Human(System.Boolean)">
            <summary>Whether to return time and byte values in human-readable format.</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteWarmerRequest">
            <summary>Request parameters for IndicesDeleteWarmer <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteWarmerRequest.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_warmer/{name}</summary>
            <param name="index">this parameter is required</param>		
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteWarmerRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.DeleteWarmerRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteWarmerRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteWarmerDescriptor">
            <summary>descriptor for IndicesDeleteWarmer <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteWarmerDescriptor.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_warmer/{name}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteWarmerDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to delete warmers from (supports wildcards); use `_all` to perform the operation on all indices.</summary>
        </member>
        <member name="M:Nest.DeleteWarmerDescriptor.Index``1">
            <summary>A comma-separated list of index names to delete warmers from (supports wildcards); use `_all` to perform the operation on all indices.</summary>
        </member>
        <member name="M:Nest.DeleteWarmerDescriptor.AllIndices">
            <summary>A comma-separated list of index names to delete warmers from (supports wildcards); use `_all` to perform the operation on all indices.</summary>
        </member>
        <member name="M:Nest.DeleteWarmerDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.DeleteWarmerDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteWarmerDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetWarmerRequest">
            <summary>Request parameters for IndicesGetWarmerForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html</pre></summary>
        </member>
        <member name="M:Nest.GetWarmerRequest.#ctor">
            <summary>/_warmer</summary>
        </member>
        <member name="M:Nest.GetWarmerRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_warmer</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetWarmerRequest.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_warmer/{name}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetWarmerRequest.#ctor(Nest.Names)">
             <summary>/_warmer/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetWarmerRequest.#ctor(Nest.Indices,Nest.Types,Nest.Names)">
             <summary>/{index}/{type}/_warmer/{name}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>		
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetWarmerRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.GetWarmerRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.GetWarmerRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.GetWarmerRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetWarmerRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetWarmerRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetWarmerDescriptor">
            <summary>descriptor for IndicesGetWarmerForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html</pre></summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.#ctor">
            <summary>/_warmer</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.Index``1">
            <summary>A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.AllIndices">
            <summary>A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.Name(Nest.Names)">
            <summary>The name of the warmer (supports wildcards); leave empty to get all warmers</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.Type(Nest.Types)">
            <summary>A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.Type``1">
            <summary>A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.AllTypes">
            <summary>A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutWarmerRequest">
            <summary>Request parameters for IndicesPutWarmerForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html</pre></summary>
        </member>
        <member name="M:Nest.PutWarmerRequest.#ctor(Nest.Name)">
             <summary>/_warmer/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="M:Nest.PutWarmerRequest.#ctor(Nest.Indices,Nest.Name)">
             <summary>/{index}/_warmer/{name}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="name">this parameter is required</param>
        </member>
        <member name="M:Nest.PutWarmerRequest.#ctor(Nest.Indices,Nest.Types,Nest.Name)">
             <summary>/{index}/{type}/_warmer/{name}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>		
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.PutWarmerRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.PutWarmerRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm</summary>
        </member>
        <member name="P:Nest.PutWarmerRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.PutWarmerRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm.</summary>
        </member>
        <member name="P:Nest.PutWarmerRequest.RequestCache">
            <summary>Specify whether the request to be warmed should use the request cache, defaults to index level setting</summary>
        </member>
        <member name="P:Nest.PutWarmerRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PutWarmerRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutWarmerDescriptor">
            <summary>descriptor for IndicesPutWarmerForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html</pre></summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.#ctor(Nest.Name)">
             <summary>/_warmer/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to register the warmer for; use `_all` or omit to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.Index``1">
            <summary>A comma-separated list of index names to register the warmer for; use `_all` or omit to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.AllIndices">
            <summary>A comma-separated list of index names to register the warmer for; use `_all` or omit to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.Type(Nest.Types)">
            <summary>A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.Type``1">
            <summary>A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.AllTypes">
            <summary>A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm</summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm.</summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.RequestCache(System.Boolean)">
            <summary>Specify whether the request to be warmed should use the request cache, defaults to index level setting</summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DynamicMapping">
            <summary>
            Controls how elasticsearch handles dynamic mapping changes when a new document present new fields
            </summary>
        </member>
        <member name="F:Nest.DynamicMapping.Allow">
            <summary>
            Default value, allows unmapped fields to be cause a mapping update 
            </summary>
        </member>
        <member name="F:Nest.DynamicMapping.Ignore">
            <summary>
            New unmapped fields will be silently ignored
            </summary>
        </member>
        <member name="F:Nest.DynamicMapping.Strict">
            <summary>
            If new unmapped fields are passed, the whole document WON'T be added/updated
            </summary>
        </member>
        <member name="M:Nest.DynamicTemplateContainer.Add(System.String,Nest.IDynamicTemplate)">
            <summary>
            Add any setting to the index
            </summary>
        </member>
        <member name="P:Nest.TypeMapping.AllField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.Analyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.DateDetection">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.Dynamic">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.DynamicDateFormats">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.DynamicTemplates">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.FieldNamesField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.IndexField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.Meta">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.NumericDetection">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.ParentField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.Properties">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.RoutingField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.SearchAnalyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.SizeField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.SourceField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.TimestampField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.Transform">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.TtlField">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.AutoMap(Nest.IPropertyVisitor,System.Int32)">
            <summary>
            Convenience method to map as much as it can based on ElasticType attributes set on the type.
            <pre>This method also automatically sets up mappings for known values types (int, long, double, datetime, etcetera)</pre>
            <pre>Class types default to object and Enums to int</pre>
            <pre>Later calls can override whatever is set is by this call.</pre>
            </summary>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.AutoMap(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Dynamic(Nest.DynamicMapping)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Dynamic(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Parent(Nest.TypeName)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Parent``1">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Analyzer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.SearchAnalyzer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.AllField(System.Func{Nest.AllFieldDescriptor,Nest.IAllField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.IndexField(System.Func{Nest.IndexFieldDescriptor,Nest.IIndexField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.SizeField(System.Func{Nest.SizeFieldDescriptor,Nest.ISizeField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.SourceField(System.Func{Nest.SourceFieldDescriptor,Nest.ISourceField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.DisableSizeField(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.DisableIndexField(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.DynamicDateFormats(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.DateDetection(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.NumericDetection(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.RoutingField(System.Func{Nest.RoutingFieldDescriptor{`0},Nest.IRoutingField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.FieldNamesField(System.Func{Nest.FieldNamesFieldDescriptor{`0},Nest.IFieldNamesField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.TimestampField(System.Func{Nest.TimestampFieldDescriptor{`0},Nest.ITimestampField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Transform(System.Collections.Generic.IEnumerable{Nest.IMappingTransform})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Transform(System.Func{Nest.MappingTransformsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IMappingTransform}}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.TtlField(System.Func{Nest.TtlFieldDescriptor,Nest.ITtlField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Meta(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.DynamicTemplates(System.Func{Nest.DynamicTemplateContainerDescriptor{`0},Nest.IPromise{Nest.IDynamicTemplateContainer}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StringPropertyDescriptor`1.NotAnalyzed">
            <summary>
            Shortcut into .Index(FieldIndexOption.NotAnalyzed)
            </summary>
        </member>
        <member name="T:Nest.FieldType">
            <summary>
            Define the type of field content.
            </summary>
        </member>
        <member name="F:Nest.FieldType.None">
            <summary>
            Default. Will be defined by the type of property return.
            </summary>
        </member>
        <member name="F:Nest.FieldType.Attachment">
            <summary>
            The attachment type allows to index different “attachment” type field (encoded as base64), for example, microsoft office formats, open document formats, ePub, HTML...
            </summary>
        </member>
        <member name="F:Nest.FieldType.Ip">
            <summary>
            An ip mapping type allows to store ipv4 addresses in a numeric form allowing to easily sort, and range query it (using ip values).
            </summary>
        </member>
        <member name="F:Nest.FieldType.Binary">
            <summary>
            The binary type is a base64 representation of binary data that can be stored in the index.
            </summary>
        </member>
        <member name="F:Nest.FieldType.Object">
            <summary>
            object type, no need to set this manually if its not a value type this will be set.
            Only set this if you need to force a value type to be mapped to an elasticsearch object type.
            </summary>
        </member>
        <member name="F:Nest.FieldType.Murmur3Hash">
            <summary>
            Murmur hash type, for use with the cardinality aggregation.
            </summary>
        </member>
        <member name="P:Nest.Attachment.Author">
            <summary>
            The author.
            </summary>
        </member>
        <member name="P:Nest.Attachment.Content">
            <summary>
            The base64 encoded content. Can be explicitly set
            </summary>
        </member>
        <member name="P:Nest.Attachment.ContentLength">
            <summary>
            The length of the content before text extraction.
            </summary>
        </member>
        <member name="P:Nest.Attachment.ContentType">
            <summary>
            The content type of the attachment. Can be explicitly set
            </summary>
        </member>
        <member name="P:Nest.Attachment.Date">
            <summary>
            The date of the attachment.
            </summary>
        </member>
        <member name="P:Nest.Attachment.Keywords">
            <summary>
            The keywords in the attachment.
            </summary>
        </member>
        <member name="P:Nest.Attachment.Language">
            <summary>
            The language of the attachment. Can be explicitly set.
            </summary>
        </member>
        <member name="P:Nest.Attachment.DetectLanguage">
            <summary>
            Detect the language of the attachment. Language detection is
            disabled by default.
            </summary>
        </member>
        <member name="P:Nest.Attachment.Name">
            <summary>
            The name of the attachment. Can be explicitly set
            </summary>
        </member>
        <member name="P:Nest.Attachment.Title">
            <summary>
            The title of the attachment.
            </summary>
        </member>
        <member name="P:Nest.Attachment.IndexedCharacters">
            <summary>
            Determines how many characters are extracted when indexing the content.
            By default, 100000 characters are extracted when indexing the content.
            -1 can be set to extract all text, but note that all the text needs to be
            allowed to be represented in memory
            </summary>
        </member>
        <member name="P:Nest.Attachment.ContainsMetadata">
            <summary>
            Whether the attachment contains explicit metadata in addition to the
            content. Used at indexing time to determine the serialized form of the
            attachment.
            </summary>
        </member>
        <member name="T:Nest.IGenericProperty">
            <summary>
            A generic property to map properties that may be of different types.
            Not all methods are valid for all types.
            </summary>
        </member>
        <member name="T:Nest.GenericProperty">
            <summary>
            A generic property to map properties that may be of different types.
            Not all methods are valid for all types.
            </summary>
        </member>
        <member name="T:Nest.GenericPropertyDescriptor`1">
            <summary>
            A generic property to map properties that may be of different types.
            Not all methods are valid for all types.
            </summary>
            <typeparam name="T">the type on which the property is declared</typeparam>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Nest.IAllocationAwarenessSettings.Attributes" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IAllocationAwarenessSettings.Forced" -->
        <member name="P:Nest.AllocationAwarenessSettings.Attributes">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationAwarenessSettings.Forced">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationAwarenessSettingsDescriptor.Nest#IAllocationAwarenessSettings#Attributes">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationAwarenessSettingsDescriptor.Nest#IAllocationAwarenessSettings#Forced">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationAwarenessSettingsDescriptor.Attributes(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationAwarenessSettingsDescriptor.Attributes(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationAwarenessSettingsDescriptor.Force(Nest.IAllocationAttributes)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationAwarenessSettingsDescriptor.Force(System.Func{Nest.AllocationAttributesDescriptor,Nest.IAllocationAttributes})">
            <inheritdoc/>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Nest.IAllocationFilteringSettings.Include" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IAllocationFilteringSettings.Exclude" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IAllocationFilteringSettings.Require" -->
        <member name="P:Nest.AllocationFilteringSettings.Include">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationFilteringSettings.Exclude">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationFilteringSettings.Require">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationFilteringSettingsDescriptor.Nest#IAllocationFilteringSettings#Include">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationFilteringSettingsDescriptor.Nest#IAllocationFilteringSettings#Exclude">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationFilteringSettingsDescriptor.Nest#IAllocationFilteringSettings#Require">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationFilteringSettingsDescriptor.Include(Nest.IAllocationAttributes)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationFilteringSettingsDescriptor.Include(System.Func{Nest.AllocationAttributesDescriptor,Nest.IAllocationAttributes})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationFilteringSettingsDescriptor.Exlude(Nest.IAllocationAttributes)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationFilteringSettingsDescriptor.Exclude(System.Func{Nest.AllocationAttributesDescriptor,Nest.IAllocationAttributes})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationFilteringSettingsDescriptor.Require(Nest.IAllocationAttributes)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationFilteringSettingsDescriptor.Require(System.Func{Nest.AllocationAttributesDescriptor,Nest.IAllocationAttributes})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IClusterModuleSettings">
            <summary> Settings to control where, when, and how shards are allocated to nodes. </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Nest.IClusterModuleSettings.ReadOnly" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IClusterModuleSettings.Logger" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IClusterModuleSettings.AllocationAwareness" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IClusterModuleSettings.AllocationFiltering" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IClusterModuleSettings.DiskBasedShardAllocation" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IClusterModuleSettings.ShardAllocation" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IClusterModuleSettings.ShardBalancingHeuristics" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IClusterModuleSettings.ShardRebalancing" -->
        <member name="T:Nest.ClusterModuleSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.ReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.Logger">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.AllocationAwareness">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.AllocationFiltering">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.DiskBasedShardAllocation">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.ShardAllocation">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.ShardBalancingHeuristics">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.ShardRebalancing">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ClusterModuleSettingsDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.ShardRebalancing(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.Logger(System.Collections.Generic.IDictionary{System.String,Nest.LogLevel})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.Logger(System.Func{Nest.FluentDictionary{System.String,Nest.LogLevel},Nest.FluentDictionary{System.String,Nest.LogLevel}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.AllocationAwareness(System.Func{Nest.AllocationAwarenessSettings,Nest.IAllocationAwarenessSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.AllocationFiltering(System.Func{Nest.AllocationFilteringSettingsDescriptor,Nest.IAllocationFilteringSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.DiskBasedShardAllocation(System.Func{Nest.DiskBasedShardAllocationSettingsDescriptor,Nest.IDiskBasedShardAllocationSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.ShardAllocation(System.Func{Nest.ShardAllocationSettingsDescriptor,Nest.IShardAllocationSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.ShardBalancingHeuristics(System.Func{Nest.ShardBalancingHeuristicsSettingsDescriptor,Nest.IShardBalancingHeuristicsSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.ShardRebalancing(System.Func{Nest.ShardRebalancingSettingsDescriptor,Nest.IShardRebalancingSettings})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IDiskBasedShardAllocationSettings.ThresholdEnabled">
            <summary>Defaults to true. Set to false to disable the disk allocation decider.</summary>
        </member>
        <member name="P:Nest.IDiskBasedShardAllocationSettings.LowWatermark">
            <summary>Controls the low watermark for disk usage. It defaults to 85%, meaning ES will not allocate new shards to nodes once they have more than 85% disk used. It can also be set 
            to an absolute byte value (like 500mb) to prevent ES from allocating shards if less than the configured amount of space is available.</summary>
        </member>
        <member name="P:Nest.IDiskBasedShardAllocationSettings.HighWatermark">
            <summary> 
            Controls the high watermark. It defaults to 90%, meaning ES will attempt to relocate shards to another node if the node disk usage rises above 90%. 
            It can also be set to an absolute byte value (similar to the low watermark) to relocate shards once less than the
             configured amount of space is available on the node.</summary>
        </member>
        <member name="P:Nest.IDiskBasedShardAllocationSettings.UpdateInterval">
            <summary>How often Elasticsearch should check on disk usage for each node in the cluster. Defaults to 30s.</summary>
        </member>
        <member name="P:Nest.IDiskBasedShardAllocationSettings.IncludeRelocations">
            <summary>
            Defaults to true, which means that Elasticsearch will take into account shards that are currently being relocated to the target node when computing 
            a node’s disk usage. Taking relocating shards' sizes into account may, however, mean that the disk usage for a node is incorrectly estimated on the high side,
            since the relocation could be 90% complete and a recently retrieved disk usage would include the total size of the 
            relocating shard as well as the space already used by the running relocation.
            </summary>
        </member>
        <member name="P:Nest.DiskBasedShardAllocationSettings.ThresholdEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DiskBasedShardAllocationSettings.LowWatermark">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DiskBasedShardAllocationSettings.HighWatermark">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DiskBasedShardAllocationSettings.UpdateInterval">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DiskBasedShardAllocationSettings.IncludeRelocations">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.ThresholdEnabled(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.LowWatermark(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.HighWatermark(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.UpdateInterval(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.IncludeRelocations(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="F:Nest.AllocationEnable.All">
            <summary>
             (default) Allows shard allocation for all kinds of shards.
            </summary>
        </member>
        <member name="F:Nest.AllocationEnable.Primaries">
            <summary>
            Allows shard allocation only for primary shards.
            </summary>
        </member>
        <member name="F:Nest.AllocationEnable.NewPrimaries">
            <summary>
            Allows shard allocation only for primary shards for new indices.
            </summary>
        </member>
        <member name="F:Nest.AllocationEnable.None">
            <summary>
            No shard allocations of any kind are allowed for any indices.
            </summary>
        </member>
        <member name="F:Nest.AllowRebalance.All">
            <summary>
            (default) Always allow rebalancing.
            </summary>
        </member>
        <member name="F:Nest.AllowRebalance.Primaries">
            <summary>
            Only when all primaries in the cluster are allocated.
            </summary>
        </member>
        <member name="F:Nest.AllowRebalance.Replicas">
            <summary>
            Only when all shards (primaries and replicas) in the cluster are allocated.
            </summary>
        </member>
        <member name="F:Nest.RebalanceEnable.All">
            <summary>
            (default) Allows shard balancing for all kinds of shards.
            </summary>
        </member>
        <member name="F:Nest.RebalanceEnable.Primaries">
            <summary>
            Allows shard balancing only for primary shards.
            </summary>
        </member>
        <member name="F:Nest.RebalanceEnable.Replicas">
            <summary>
            Allows shard balancing only for replica shards.
            </summary>
        </member>
        <member name="F:Nest.RebalanceEnable.None">
            <summary>
            No shard balancing of any kind are allowed for any indices.
            </summary>
        </member>
        <member name="P:Nest.IShardAllocationSettings.AllocationEnable">
            <summary> Enable or disable allocation for specific kinds of shards, defaults to all</summary>
        </member>
        <member name="P:Nest.IShardAllocationSettings.NodeConcurrentRecoveries">
            <summary>How many concurrent shard recoveries are allowed to happen on a node. Defaults to 2.</summary>
        </member>
        <member name="P:Nest.IShardAllocationSettings.NodeInitialPrimariesRecoveries">
            <summary> 
            While the recovery of replicas happens over the network, the recovery of an unassigned primary after node restart uses 
            data from the local disk. These should be fast so more initial primary recoveries can happen in 
            parallel on the same node. Defaults to 4.</summary>
        </member>
        <member name="P:Nest.IShardAllocationSettings.SameShardHost">
            <summary>Allows to perform a check to prevent allocation of multiple instances of 
            the same shard on a single host, based on host name and host address. 
            Defaults to false, meaning that no check is performed by default. This setting only 
            applies if multiple nodes are started on the same machine.</summary>
        </member>
        <member name="P:Nest.ShardAllocationSettings.AllocationEnable">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardAllocationSettings.NodeConcurrentRecoveries">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardAllocationSettings.NodeInitialPrimariesRecoveries">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardAllocationSettings.SameShardHost">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardAllocationSettingsDescriptor.AllocationEnable(System.Nullable{Nest.AllocationEnable})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardAllocationSettingsDescriptor.NodeConcurrentRecoveries(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardAllocationSettingsDescriptor.NodeInitialPrimariesRecoveries(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardAllocationSettingsDescriptor.SameShardHost(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IShardBalancingHeuristicsSettings.BalanceShard">
            <summary>Defines the weight factor for shards allocated on a node (float). Defaults to 0.45f.
             Raising this raises the tendency to equalize the number of shards across all nodes in the cluster.</summary>
        </member>
        <member name="P:Nest.IShardBalancingHeuristicsSettings.BalanceIndex">
            <summary>Defines a factor to the number of shards per index allocated on a specific node (float). Defaults to 0.55f. 
            Raising this raises the tendency to equalize the number of shards per index across all nodes in the cluster.</summary>
        </member>
        <member name="P:Nest.IShardBalancingHeuristicsSettings.BalanceThreshold">
            <summary>Minimal optimization value of operations that should be performed (non negative float). Defaults to 1.0f.
             Raising this will cause the cluster to be less aggressive about optimizing the shard balance</summary>
        </member>
        <member name="P:Nest.ShardBalancingHeuristicsSettings.BalanceShard">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardBalancingHeuristicsSettings.BalanceIndex">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardBalancingHeuristicsSettings.BalanceThreshold">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardBalancingHeuristicsSettingsDescriptor.BalanceShard(System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardBalancingHeuristicsSettingsDescriptor.BalanceIndex(System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardBalancingHeuristicsSettingsDescriptor.BalanceThreshold(System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IShardRebalancingSettings.RebalanceEnable">
            <summary>Enable or disable rebalancing for specific kinds of shards</summary>
        </member>
        <member name="P:Nest.IShardRebalancingSettings.AllowRebalance">
            <summary>Specify when shard rebalancing is allowed</summary>
        </member>
        <member name="P:Nest.IShardRebalancingSettings.ConcurrentRebalance">
            <summary>Allow to control how many concurrent shard rebalances are allowed cluster wide. Defaults to 2.</summary>
        </member>
        <member name="P:Nest.ShardRebalancingSettings.RebalanceEnable">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardRebalancingSettings.AllowRebalance">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardRebalancingSettings.ConcurrentRebalance">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardRebalancingSettingsDescriptor.RebalanceEnable(System.Nullable{Nest.RebalanceEnable})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardRebalancingSettingsDescriptor.AllowRebalance(System.Nullable{Nest.AllowRebalance})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardRebalancingSettingsDescriptor.ConcurrentRebalance(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.GatewaySettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.GatewaySettings.ExpectedNodes">
            <inheritdoc/>
        </member>
        <member name="P:Nest.GatewaySettings.ExpectedMasterNodes">
            <inheritdoc/>
        </member>
        <member name="P:Nest.GatewaySettings.ExpectedDataNodes">
            <inheritdoc/>
        </member>
        <member name="P:Nest.GatewaySettings.RecoveryAfterTime">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ICircuitBreakerSettings.TotalLimit">
            <summary></summary>
        </member>
        <member name="P:Nest.ICircuitBreakerSettings.FielddataLimit">
            <summary></summary>
        </member>
        <member name="P:Nest.ICircuitBreakerSettings.FielddataOverhead">
            <summary></summary>
        </member>
        <member name="P:Nest.ICircuitBreakerSettings.RequestLimit">
            <summary></summary>
        </member>
        <member name="P:Nest.ICircuitBreakerSettings.RequestOverhead">
            <summary></summary>
        </member>
        <member name="P:Nest.CircuitBreakerSettings.TotalLimit">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CircuitBreakerSettings.FielddataLimit">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CircuitBreakerSettings.FielddataOverhead">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CircuitBreakerSettings.RequestLimit">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CircuitBreakerSettings.RequestOverhead">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CircuitBreakerSettingsDescriptor.TotalLimit(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CircuitBreakerSettingsDescriptor.FielddataLimit(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CircuitBreakerSettingsDescriptor.RequestLimit(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CircuitBreakerSettingsDescriptor.FielddataOverhead(System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CircuitBreakerSettingsDescriptor.RequestOverhead(System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.FielddataSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.FielddataSettings.CacheSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.FielddataSettings.CacheExpire">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IndexingBufferSettings">
            <summary>
            The indexing buffer is used to store newly indexed documents. When it fills up, the documents in the buffer are written to a segment on disk. It is divided between all shards on the node.
            <para>The following settings are static and must be configured on every data node in the cluster</para>
            </summary>
        </member>
        <member name="P:Nest.IndexingBufferSettings.IndexBufferSize">
            <summary>Accepts either a percentage or a byte size value. It defaults to 10%, meaning that 10% of the total heap allocated to a node will be used as the indexing buffer size.</summary>
        </member>
        <member name="P:Nest.IndexingBufferSettings.IndexBufferSizeMinimum">
            <summary>If the index_buffer_size is specified as a percentage, then this setting can be used to specify an absolute minimum. Defaults to 48mb.</summary>
        </member>
        <member name="P:Nest.IndexingBufferSettings.IndexBufferSizeMaximum">
            <summary>If the index_buffer_size is specified as a percentage, then this setting can be used to specify an absolute maximum. Defaults to unbounded.</summary>
        </member>
        <member name="P:Nest.IndexingBufferSettings.ShardBufferSizeMinimum">
            <summary>Sets a hard lower limit for the memory allocated per shard for its own indexing buffer. Defaults to 4mb.</summary>
        </member>
        <member name="T:Nest.IIndicesModuleSettings">
            <summary> Settings to control where, when, and how shards are allocated to nodes. </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Nest.IIndicesModuleSettings.QeueriesCacheSize" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IIndicesModuleSettings.CircuitBreakerSettings" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IIndicesModuleSettings.FielddataSettings" -->
        <!-- Badly formed XML comment ignored for member "P:Nest.IIndicesModuleSettings.RecoverySettings" -->
        <member name="T:Nest.IndicesModuleSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettings.QeueriesCacheSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettings.CircuitBreakerSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettings.FielddataSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettings.RecoverySettings">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IndicesModuleSettingsDescriptor">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettingsDescriptor.Nest#IIndicesModuleSettings#QeueriesCacheSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettingsDescriptor.Nest#IIndicesModuleSettings#CircuitBreakerSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettingsDescriptor.Nest#IIndicesModuleSettings#FielddataSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettingsDescriptor.Nest#IIndicesModuleSettings#RecoverySettings">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesModuleSettingsDescriptor.CircuitBreaker(System.Func{Nest.CircuitBreakerSettingsDescriptor,Nest.ICircuitBreakerSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesModuleSettingsDescriptor.IndicesRecovery(System.Func{Nest.IndicesRecoverySettingsDescriptor,Nest.IIndicesRecoverySettings})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.ConcurrentStreams">
            <summary> defaults to 3</summary>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.ConcurrentSmallFileStreams">
            <summary> defaults to 2</summary>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.FileChunkSize">
            <summary> defaults to 512kb</summary>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.TranslogOperations">
            <summary> defaults to 1000</summary>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.TranslogSize">
            <summary> defaults to 512kb</summary>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.Compress">
            <summary> defaults to true</summary>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.MaxBytesPerSecond">
            <summary> defaults to 40mb</summary>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.ConcurrentStreams">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.ConcurrentSmallFileStreams">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.FileChunkSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.TranslogOperations">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.TranslogSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.Compress">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.MaxBytesPerSecond">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.ConcurrentStreams(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.ConcurrentSmallFileStreams(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.FileChunkSize(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.TranslogOperations(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.TranslogSize(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.Compress(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.MaxBytesPerSecond(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ITtlIntervalSettings.Interval">
            <summary>How often the deletion process runs. Defaults to 60s.</summary>
        </member>
        <member name="P:Nest.ITtlIntervalSettings.BulkSize">
            <summary>The deletions are processed with a bulk request. The number of deletions processed can be configured with this settings. Defaults to 10000.</summary>
        </member>
        <member name="P:Nest.TtlIntervalSettings.Interval">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TtlIntervalSettings.BulkSize">
            <summary> defaults to 2</summary>
        </member>
        <member name="M:Nest.TtlIntervalSettingsDescriptor.Interval(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TtlIntervalSettingsDescriptor.BulkSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.DeleteScriptRequest">
            <summary>Request parameters for DeleteScript <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteScriptRequest.#ctor(Nest.Name,Nest.Id)">
             <summary>/_scripts/{lang}/{id}</summary>
            <param name="lang">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteScriptRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.DeleteScriptRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.DeleteScriptRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteScriptRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteScriptDescriptor">
            <summary>descriptor for DeleteScript <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteScriptDescriptor.#ctor(Nest.Name,Nest.Id)">
             <summary>/_scripts/{lang}/{id}</summary>
            <param name="lang"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteScriptDescriptor.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.DeleteScriptDescriptor.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.DeleteScriptDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteScriptDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetScriptRequest">
            <summary>Request parameters for GetScript <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</pre></summary>
        </member>
        <member name="M:Nest.GetScriptRequest.#ctor(Nest.Name,Nest.Id)">
             <summary>/_scripts/{lang}/{id}</summary>
            <param name="lang">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.GetScriptRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.GetScriptRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.GetScriptRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetScriptRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetScriptDescriptor">
            <summary>descriptor for GetScript <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</pre></summary>
        </member>
        <member name="M:Nest.GetScriptDescriptor.#ctor(Nest.Name,Nest.Id)">
             <summary>/_scripts/{lang}/{id}</summary>
            <param name="lang"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetScriptDescriptor.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.GetScriptDescriptor.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.GetScriptDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetScriptDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutScriptRequest">
            <summary>Request parameters for PutScript <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</pre></summary>
        </member>
        <member name="M:Nest.PutScriptRequest.#ctor(Nest.Name,Nest.Id)">
             <summary>/_scripts/{lang}/{id}</summary>
            <param name="lang">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.PutScriptRequest.OpType">
            <summary>Explicit operation type</summary>
        </member>
        <member name="P:Nest.PutScriptRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.PutScriptRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.PutScriptRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PutScriptRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutScriptDescriptor">
            <summary>descriptor for PutScript <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</pre></summary>
        </member>
        <member name="M:Nest.PutScriptDescriptor.#ctor(Nest.Name,Nest.Id)">
             <summary>/_scripts/{lang}/{id}</summary>
            <param name="lang"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutScriptDescriptor.OpType(Elasticsearch.Net.OpType)">
            <summary>Explicit operation type</summary>
        </member>
        <member name="M:Nest.PutScriptDescriptor.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.PutScriptDescriptor.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.PutScriptDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.PutScriptDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="M:Nest.AzureRepositorySettingsDescriptor.Container(System.String)">
            <summary>
            Container name. Defaults to elasticsearch-snapshots
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Nest.AzureRepositorySettingsDescriptor.BasePath(System.String)">
             <summary>
            Specifies the path within container to repository data. Defaults to empty (root directory).
             </summary>
             <param name="basePath"></param>
             <returns></returns>
        </member>
        <member name="M:Nest.AzureRepositorySettingsDescriptor.Compress(System.Boolean)">
            <summary>
            When set to true metadata files are stored in compressed format. This setting doesn't 
            affect index files that are already compressed by default. Defaults to false.
            </summary>
            <param name="compress"></param>
        </member>
        <member name="M:Nest.AzureRepositorySettingsDescriptor.ChunkSize(System.String)">
            <summary>
             Big files can be broken down into chunks during snapshotting if needed.
             The chunk size can be specified in bytes or by using size value notation,
             i.e. 1g, 10m, 5k. Defaults to 64m (64m max)
            </summary>
            <param name="chunkSize"></param>
        </member>
        <member name="T:Nest.CreateRepositoryRequest">
            <summary>Request parameters for SnapshotCreateRepository <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.CreateRepositoryRequest.#ctor(Nest.Name)">
             <summary>/_snapshot/{repository}</summary>
            <param name="repository">this parameter is required</param>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.Verify">
            <summary>Whether to verify the repository after creation</summary>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CreateRepositoryDescriptor">
            <summary>descriptor for SnapshotCreateRepository <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.FileSystem(System.Func{Nest.FileSystemRepositoryDescriptor,Nest.IFileSystemRepository})">
            <summary>
            The shared file system repository ("type": "fs") is using shared file system to store snapshot. 
            The path specified in the location parameter should point to the same location in the shared 
            filesystem and be accessible on all data and master nodes. 
            </summary>
            <param name="location"></param>
            <param name="selector"></param>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.ReadOnlyUrl(System.Func{Nest.ReadOnlyUrlRepositoryDescriptor,Nest.IReadOnlyUrlRepository})">
            <summary>
            The URL repository ("type": "url") can be used as an alternative read-only way to access data 
            created by shared file system repository is using shared file system to store snapshot. 
            </summary>
            <param name="location"></param>
            <param name="selector"></param>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Azure(System.Func{Nest.AzureRepositoryDescriptor,Nest.IAzureRepository})">
            <summary>
            Specify an azure storage container to snapshot and restore to. (defaults to a container named elasticsearch-snapshots)
            </summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Hdfs(System.Func{Nest.HdfsRepositoryDescriptor,Nest.IHdfsRepository})">
            <summary>
            Create an snapshot/restore repository that points to an HDFS filesystem
            </summary>
            <param name="path"></param>
            <param name="selector"></param>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.S3(System.Func{Nest.S3RepositoryDescriptor,Nest.IS3Repository})">
            <summary>
            Snapshot and restore to an Amazon S3 bucket
            </summary>
            <param name="bucket"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Custom(Nest.ISnapshotRepository)">
            <summary>
            Register a custom repository
            </summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.#ctor(Nest.Name)">
             <summary>/_snapshot/{repository}</summary>
            <param name="repository"> this parameter is required</param>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Verify(System.Boolean)">
            <summary>Whether to verify the repository after creation</summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteRepositoryRequest">
            <summary>Request parameters for SnapshotDeleteRepository <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteRepositoryRequest.#ctor(Nest.Names)">
             <summary>/_snapshot/{repository}</summary>
            <param name="repository">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteRepositoryRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.DeleteRepositoryRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeleteRepositoryRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteRepositoryRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteRepositoryDescriptor">
            <summary>descriptor for SnapshotDeleteRepository <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.#ctor(Nest.Names)">
             <summary>/_snapshot/{repository}</summary>
            <param name="repository"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="M:Nest.FileSystemRepositorySettingsDescriptor.Location(System.String)">
            <summary>
            Location of the snapshots. Mandatory.
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:Nest.FileSystemRepositorySettingsDescriptor.Compress(System.Boolean)">
            <summary>
            Turns on compression of the snapshot files. Defaults to true.
            </summary>
            <param name="compress"></param>
        </member>
        <member name="M:Nest.FileSystemRepositorySettingsDescriptor.ConcurrentStreams(System.Int32)">
            <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
            <param name="concurrentStreams"></param>
        </member>
        <member name="M:Nest.FileSystemRepositorySettingsDescriptor.ChunkSize(System.String)">
            <summary>
            Big files can be broken down into chunks during snapshotting if needed. 
            The chunk size can be specified in bytes or by using size value notation, i.e. 1g, 10m, 5k. 
            Defaults to null (unlimited chunk size).
            </summary>
            <param name="chunkSize"></param>
        </member>
        <member name="M:Nest.FileSystemRepositorySettingsDescriptor.RestoreBytesPerSecondMaximum(System.String)">
            <summary>
            Throttles per node restore rate. Defaults to 20mb per second.
            </summary>
            <param name="maximumBytesPerSecond"></param>
        </member>
        <member name="M:Nest.FileSystemRepositorySettingsDescriptor.SnapshotBytesPerSecondMaximum(System.String)">
            <summary>
            Throttles per node snapshot rate. Defaults to 20mb per second. 
            </summary>
            <param name="maximumBytesPerSecond"></param>
        </member>
        <member name="T:Nest.GetRepositoryRequest">
            <summary>Request parameters for SnapshotGetRepository <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.GetRepositoryRequest.#ctor">
            <summary>/_snapshot</summary>
        </member>
        <member name="M:Nest.GetRepositoryRequest.#ctor(Nest.Names)">
             <summary>/_snapshot/{repository}</summary>
            <param name="repository">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetRepositoryRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.GetRepositoryRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetRepositoryRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetRepositoryRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetRepositoryDescriptor">
            <summary>descriptor for SnapshotGetRepository <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.#ctor">
            <summary>/_snapshot</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.RepositoryName(Nest.Names)">
            <summary>A comma-separated list of repository names</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.Uri(System.String)">
            <summary>
            optional - Hadoop file-system URI
            </summary>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.Path(System.String)">
             <summary>
            required - path with the file-system where data is stored/loaded
             </summary>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.LoadDefaults(System.Boolean)">
            <summary>
            whether to load the default Hadoop configuration (default) or not
            </summary>
            <param name="loadDefaults"></param>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.ConfigurationLocation(System.String)">
            <summary>
            Hadoop configuration XML to be loaded (use commas for multi values)
            </summary>
            <param name="configurationLocation"></param>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.InlinedHadoopConfiguration(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <summary>
            'inlined' key=value added to the Hadoop configuration
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.Compress(System.Boolean)">
            <summary>
            When set to true metadata files are stored in compressed format. This setting doesn't 
            affect index files that are already compressed by default. Defaults to false.
            </summary>
            <param name="compress"></param>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.ConcurrentStreams(System.Int32)">
            <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
            <param name="concurrentStreams"></param>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.ChunkSize(System.String)">
            <summary>
             Big files can be broken down into chunks during snapshotting if needed.
             The chunk size can be specified in bytes or by using size value notation,
             i.e. 1g, 10m, 5k. Disabled by default
            </summary>
            <param name="chunkSize"></param>
        </member>
        <member name="M:Nest.ReadOnlyUrlRepositorySettingsDescriptor.Location(System.String)">
            <summary>
            Location of the snapshots. Mandatory.
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:Nest.ReadOnlyUrlRepositorySettingsDescriptor.ConcurrentStreams(System.Int32)">
            <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
            <param name="concurrentStreams"></param>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.Bucket(System.String)">
            <summary>
            The name of the bucket to be used for snapshots. (Mandatory)
            </summary>
            <param name="bucket"></param>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.Region(System.String)">
            <summary>
            The region where bucket is located. Defaults to US Standard
            </summary>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.BasePath(System.String)">
            <summary>
            Specifies the path within bucket to repository data. Defaults to root directory.
            </summary>
            <param name="basePath"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.AccessKey(System.String)">
            <summary>
            The access key to use for authentication. Defaults to value of cloud.aws.access_key.
            </summary>
            <param name="accessKey"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.SecretKey(System.String)">
            <summary>
            The secret key to use for authentication. Defaults to value of cloud.aws.secret_key.
            </summary>
            <param name="secretKey"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.Compress(System.Boolean)">
            <summary>
            When set to true metadata files are stored in compressed format. This setting doesn't 
            affect index files that are already compressed by default. Defaults to false.
            </summary>
            <param name="compress"></param>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.ConcurrentStreams(System.Int32)">
            <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
            <param name="concurrentStreams"></param>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.ChunkSize(System.String)">
            <summary>
             Big files can be broken down into chunks during snapshotting if needed. 
            The chunk size can be specified in bytes or by using size value notation, 
            i.e. 1g, 10m, 5k. Defaults to 100m.
            </summary>
            <param name="chunkSize"></param>
        </member>
        <member name="T:Nest.VerifyRepositoryRequest">
            <summary>Request parameters for SnapshotVerifyRepository <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.VerifyRepositoryRequest.#ctor(Nest.Name)">
             <summary>/_snapshot/{repository}/_verify</summary>
            <param name="repository">this parameter is required</param>
        </member>
        <member name="P:Nest.VerifyRepositoryRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.VerifyRepositoryRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.VerifyRepositoryRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.VerifyRepositoryRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.VerifyRepositoryDescriptor">
            <summary>descriptor for SnapshotVerifyRepository <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.#ctor(Nest.Name)">
             <summary>/_snapshot/{repository}/_verify</summary>
            <param name="repository"> this parameter is required</param>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.IVerifyRepositoryResponse.Nodes">
            <summary>
             A dictionary of nodeId => nodeinfo of nodes that verified the repository
            </summary>
        </member>
        <member name="P:Nest.VerifyRepositoryResponse.Nodes">
            <summary>
             A dictionary of nodeId => nodeinfo of nodes that verified the repository
            </summary>
        </member>
        <member name="T:Nest.RestoreRequest">
            <summary>Request parameters for SnapshotRestore <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.RestoreRequest.#ctor(Nest.Name,Nest.Name)">
             <summary>/_snapshot/{repository}/{snapshot}/_restore</summary>
            <param name="repository">this parameter is required</param>		
            <param name="snapshot">this parameter is required</param>
        </member>
        <member name="P:Nest.RestoreRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.RestoreRequest.WaitForCompletion">
            <summary>Should this request wait until the operation has completed before returning</summary>
        </member>
        <member name="P:Nest.RestoreRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.RestoreRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.RestoreDescriptor">
            <summary>descriptor for SnapshotRestore <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.RestoreDescriptor.#ctor(Nest.Name,Nest.Name)">
             <summary>/_snapshot/{repository}/{snapshot}/_restore</summary>
            <param name="repository"> this parameter is required</param>		
            <param name="snapshot"> this parameter is required</param>
        </member>
        <member name="M:Nest.RestoreDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.RestoreDescriptor.WaitForCompletion(System.Boolean)">
            <summary>Should this request wait until the operation has completed before returning</summary>
        </member>
        <member name="M:Nest.RestoreDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.RestoreDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteSnapshotRequest">
            <summary>Request parameters for SnapshotDelete <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteSnapshotRequest.#ctor(Nest.Name,Nest.Name)">
             <summary>/_snapshot/{repository}/{snapshot}</summary>
            <param name="repository">this parameter is required</param>		
            <param name="snapshot">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteSnapshotRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.DeleteSnapshotRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteSnapshotRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteSnapshotDescriptor">
            <summary>descriptor for SnapshotDelete <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteSnapshotDescriptor.#ctor(Nest.Name,Nest.Name)">
             <summary>/_snapshot/{repository}/{snapshot}</summary>
            <param name="repository"> this parameter is required</param>		
            <param name="snapshot"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteSnapshotDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.DeleteSnapshotDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteSnapshotDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetSnapshotRequest">
            <summary>Request parameters for SnapshotGet <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.GetSnapshotRequest.#ctor(Nest.Name,Nest.Names)">
             <summary>/_snapshot/{repository}/{snapshot}</summary>
            <param name="repository">this parameter is required</param>		
            <param name="snapshot">this parameter is required</param>
        </member>
        <member name="P:Nest.GetSnapshotRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.GetSnapshotRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetSnapshotRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetSnapshotDescriptor">
            <summary>descriptor for SnapshotGet <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.#ctor(Nest.Name,Nest.Names)">
             <summary>/_snapshot/{repository}/{snapshot}</summary>
            <param name="repository"> this parameter is required</param>		
            <param name="snapshot"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.Snapshot.Failures">
            <summary>
            Contains the reason for each shard failure.
            </summary>
            For 2.0, remove this and rename ShardFailures => Failures
        </member>
        <member name="T:Nest.SnapshotStatusRequest">
            <summary>Request parameters for SnapshotStatus <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.SnapshotStatusRequest.#ctor">
            <summary>/_snapshot/_status</summary>
        </member>
        <member name="M:Nest.SnapshotStatusRequest.#ctor(Nest.Name)">
             <summary>/_snapshot/{repository}/_status</summary>
            <param name="repository">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SnapshotStatusRequest.#ctor(Nest.Name,Nest.Names)">
             <summary>/_snapshot/{repository}/{snapshot}/_status</summary>
            <param name="repository">Optional, accepts null</param>		
            <param name="snapshot">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SnapshotStatusRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.SnapshotStatusRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.SnapshotStatusRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SnapshotStatusDescriptor">
            <summary>descriptor for SnapshotStatus <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.#ctor">
            <summary>/_snapshot/_status</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.RepositoryName(Nest.Name)">
            <summary>A repository name</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.Snapshot(Nest.Names)">
            <summary>A comma-separated list of snapshot names</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SnapshotRequest">
            <summary>Request parameters for SnapshotCreate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.SnapshotRequest.#ctor(Nest.Name,Nest.Name)">
             <summary>/_snapshot/{repository}/{snapshot}</summary>
            <param name="repository">this parameter is required</param>		
            <param name="snapshot">this parameter is required</param>
        </member>
        <member name="P:Nest.SnapshotRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.SnapshotRequest.WaitForCompletion">
            <summary>Should this request wait until the operation has completed before returning</summary>
        </member>
        <member name="P:Nest.SnapshotRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.SnapshotRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SnapshotDescriptor">
            <summary>descriptor for SnapshotCreate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.SnapshotDescriptor.#ctor(Nest.Name,Nest.Name)">
             <summary>/_snapshot/{repository}/{snapshot}</summary>
            <param name="repository"> this parameter is required</param>		
            <param name="snapshot"> this parameter is required</param>
        </member>
        <member name="M:Nest.SnapshotDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.SnapshotDescriptor.WaitForCompletion(System.Boolean)">
            <summary>Should this request wait until the operation has completed before returning</summary>
        </member>
        <member name="M:Nest.SnapshotDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.SnapshotDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Raw(System.String)">
            <summary>
            Insert raw query json at this position of the query
            <para>Be sure to start your json with '{'</para>
            </summary>
            <param name="rawJson"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.QueryString(System.Func{Nest.QueryStringQueryDescriptor{`0},Nest.IQueryStringQuery})">
            <summary>
            A query that uses a query parser in order to parse its content.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SimpleQueryString(System.Func{Nest.SimpleQueryStringQueryDescriptor{`0},Nest.ISimpleQueryStringQuery})">
            <summary>
            A query that uses the SimpleQueryParser to parse its context.
            Unlike the regular query_string query, the simple_query_string query will
            never throw an exception, and discards invalid parts of the query.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Terms(System.Func{Nest.TermsQueryDescriptor{`0},Nest.ITermsQuery})">
            <summary>
            A query that match on any (configurable) of the provided terms. This is a simpler syntax query for using a bool query with several term queries in the should clauses.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Fuzzy(System.Func{Nest.FuzzyQueryDescriptor{`0},Nest.IFuzzyQuery})">
            <summary>
            A fuzzy based query that uses similarity based on Levenshtein (edit distance) algorithm.
            Warning: this query is not very scalable with its default prefix length of 0 – in this case,
            every term will be enumerated and cause an edit score calculation or max_expansions is not set.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Match(System.Func{Nest.MatchQueryDescriptor{`0},Nest.IMatchQuery})">
            <summary>
            The default text query is of type boolean. It means that the text provided is analyzed and the analysis
            process constructs a boolean query from the provided text.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.MatchPhrase(System.Func{Nest.MatchPhraseQueryDescriptor{`0},Nest.IMatchQuery})">
            <summary>
            The text_phrase query analyzes the text and creates a phrase query out of the analyzed text.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.MatchPhrasePrefix(System.Func{Nest.MatchPhrasePrefixQueryDescriptor{`0},Nest.IMatchQuery})">
            <summary>
            The text_phrase_prefix is the same as text_phrase, expect it allows for prefix matches on the last term
            in the text
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.MultiMatch(System.Func{Nest.MultiMatchQueryDescriptor{`0},Nest.IMultiMatchQuery})">
            <summary>
            The multi_match query builds further on top of the match query by allowing multiple fields to be specified.
            The idea here is to allow to more easily build a concise match type query over multiple fields instead of using a
            relatively more expressive query by using multiple match queries within a bool query.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Nested(System.Func{Nest.NestedQueryDescriptor{`0},Nest.INestedQuery})">
            <summary>
            Nested query allows to query nested objects / docs (see nested mapping). The query is executed against the
            nested objects / docs as if they were indexed as separate docs (they are, internally) and resulting in the
            root parent doc (or parent nested mapping).
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Conditionless(System.Func{Nest.ConditionlessQueryDescriptor{`0},Nest.IConditionlessQuery})">
            <summary>
            A thin wrapper allowing fined grained control what should happen if a query is conditionless
            if you need to fallback to something other than a match_all query
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Indices(System.Func{Nest.IndicesQueryDescriptor{`0},Nest.IIndicesQuery})">
            <summary>
            The indices query can be used when executed across multiple indices, allowing to have a query that executes
            only when executed on an index that matches a specific list of indices, and another query that executes
            when it is executed on an index that does not match the listed indices.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Range(System.Func{Nest.NumericRangeQueryDescriptor{`0},Nest.INumericRangeQuery})">
            <summary>
            Matches documents with fields that have terms within a certain numeric range.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.DateRange(System.Func{Nest.DateRangeQueryDescriptor{`0},Nest.IDateRangeQuery})">
            <summary>
            Matches documents with fields that have terms within a certain date range.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.TermRange(System.Func{Nest.TermRangeQueryDescriptor{`0},Nest.ITermRangeQuery})">
            <summary>
            Matches documents with fields that have terms within a certain term range.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.MoreLikeThis(System.Func{Nest.MoreLikeThisQueryDescriptor{`0},Nest.IMoreLikeThisQuery})">
            <summary>
            More like this query find documents that are “like” provided text by running it against one or more fields.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeEnvelope(System.Func{Nest.GeoShapeEnvelopeQueryDescriptor{`0},Nest.IGeoShapeEnvelopeQuery})">
            <summary>
            The geo_shape Filter uses the same grid square representation as the geo_shape mapping to find documents
            that have a shape that intersects with the envelope shape.
            It will also use the same PrefixTree configuration as defined for the field mapping.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeCircle(System.Func{Nest.GeoShapeCircleQueryDescriptor{`0},Nest.IGeoShapeCircleQuery})">
            <summary>
            The geo_shape Filter uses the same grid square representation as the geo_shape mapping to find documents
            that have a shape that intersects with the circle shape.
            It will also use the same PrefixTree configuration as defined for the field mapping.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoIndexedShape(System.Func{Nest.GeoIndexedShapeQueryDescriptor{`0},Nest.IGeoIndexedShapeQuery})">
            <summary>
            Use an indexed shape for the geo shape query
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeLineString(System.Func{Nest.GeoShapeLineStringQueryDescriptor{`0},Nest.IGeoShapeLineStringQuery})">
            <summary>
            The geo_shape Filter uses the same grid square representation as the geo_shape mapping to find documents
            that have a shape that intersects with the line string shape.
            It will also use the same PrefixTree configuration as defined for the field mapping.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeMultiLineString(System.Func{Nest.GeoShapeMultiLineStringQueryDescriptor{`0},Nest.IGeoShapeMultiLineStringQuery})">
            <summary>
            The geo_shape circle Filter uses the same grid square representation as the geo_shape mapping to find documents
            that have a shape that intersects with the multi line string shape.
            It will also use the same PrefixTree configuration as defined for the field mapping.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapePoint(System.Func{Nest.GeoShapePointQueryDescriptor{`0},Nest.IGeoShapePointQuery})">
            <summary>
            The geo_shape circle Filter uses the same grid square representation as the geo_shape mapping to find documents
            that have a shape that intersects with the point shape.
            It will also use the same PrefixTree configuration as defined for the field mapping.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeMultiPoint(System.Func{Nest.GeoShapeMultiPointQueryDescriptor{`0},Nest.IGeoShapeMultiPointQuery})">
            <summary>
            The geo_shape circle Filter uses the same grid square representation as the geo_shape mapping to find documents
            that have a shape that intersects with the multi point shape.
            It will also use the same PrefixTree configuration as defined for the field mapping.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapePolygon(System.Func{Nest.GeoShapePolygonQueryDescriptor{`0},Nest.IGeoShapePolygonQuery})">
            <summary>
            The geo_shape circle Filter uses the same grid square representation as the geo_shape mapping to find documents
            that have a shape that intersects with the polygon shape.
            It will also use the same PrefixTree configuration as defined for the field mapping.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeMultiPolygon(System.Func{Nest.GeoShapeMultiPolygonQueryDescriptor{`0},Nest.IGeoShapeMultiPolygonQuery})">
            <summary>
            The geo_shape circle Filter uses the same grid square representation as the geo_shape mapping to find documents
            that have a shape that intersects with the multi polygon shape.
            It will also use the same PrefixTree configuration as defined for the field mapping.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.CommonTerms(System.Func{Nest.CommonTermsQueryDescriptor{`0},Nest.ICommonTermsQuery})">
            <summary>
            The common terms query is a modern alternative to stopwords which improves the precision and recall
            of search results (by taking stopwords into account), without sacrificing performance.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.HasChild``1(System.Func{Nest.HasChildQueryDescriptor{``0},Nest.IHasChildQuery})">
            <summary>
            The has_child query works the same as the has_child filter, by automatically wrapping the filter with a
            constant_score.
            </summary>
            <typeparam name="TChild">Type of the child</typeparam>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.HasParent``1(System.Func{Nest.HasParentQueryDescriptor{``0},Nest.IHasParentQuery})">
            <summary>
            The has_parent query works the same as the has_parent filter, by automatically wrapping the filter with a
            constant_score.
            </summary>
            <typeparam name="TParent">Type of the parent</typeparam>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Filtered(System.Func{Nest.FilteredQueryDescriptor{`0},Nest.IFilteredQuery})">
            <summary>
            A query that applies a filter to the results of another query. This query maps to Lucene FilteredQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.And(System.Func{Nest.AndQueryDescriptor{`0},Nest.IAndQuery})">
             <summary>
            A query that matches documents using the AND boolean operator on other queries.
             </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Or(System.Func{Nest.OrQueryDescriptor{`0},Nest.IOrQuery})">
            <summary>
            A query that matches documents using the OR boolean operator on other queries
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Not(System.Func{Nest.NotQueryDescriptor{`0},Nest.INotQuery})">
            <summary>
            A query that filters out matched documents using a query.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Limit(System.Func{Nest.LimitQueryDescriptor{`0},Nest.ILimitQuery})">
            <summary>
            A limit query limits the number of documents (per shard) to execute on. For example:
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.DisMax(System.Func{Nest.DisMaxQueryDescriptor{`0},Nest.IDisMaxQuery})">
            <summary>
            A query that generates the union of documents produced by its subqueries, and that scores each document
            with the maximum score for that document as produced by any subquery, plus a tie breaking increment for
            any additional matching subqueries.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.ConstantScore(System.Func{Nest.ConstantScoreQueryDescriptor{`0},Nest.IConstantScoreQuery})">
            <summary>
            A query that wraps a filter or another query and simply returns a constant score equal to the query boost
            for every document in the filter. Maps to Lucene ConstantScoreQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Bool(System.Func{Nest.BoolQueryDescriptor{`0},Nest.IBoolQuery})">
            <summary>
            A query that matches documents matching boolean combinations of other queries. The bool query maps to
            Lucene BooleanQuery.
            It is built using one or more boolean clauses, each clause with a typed occurrence
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Boosting(System.Func{Nest.BoostingQueryDescriptor{`0},Nest.IBoostingQuery})">
            <summary>
            the boosting query can be used to effectively demote results that match a given query.
            Unlike the "NOT" clause in bool query, this still selects documents that contain
            undesirable terms, but reduces their overall score.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.MatchAll(System.Func{Nest.MatchAllQueryDescriptor,Nest.IMatchAllQuery})">
            <summary>
            A query that matches all documents. Maps to Lucene MatchAllDocsQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Term(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Nullable{System.Double},System.String)">
            <summary>
            Matches documents that have fields that contain a term (not analyzed).
            The term query maps to Lucene TermQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Term(System.String,System.Object,System.Nullable{System.Double},System.String)">
            <summary>
            Matches documents that have fields that contain a term (not analyzed).
            The term query maps to Lucene TermQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Term(System.Func{Nest.TermQueryDescriptor{`0},Nest.ITermQuery})">
            <summary>
            Matches documents that have fields that contain a term (not analyzed).
            The term query maps to Lucene TermQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Wildcard(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Double},System.Nullable{Nest.RewriteMultiTerm},System.String)">
            <summary>
            Matches documents that have fields matching a wildcard expression (not analyzed).
            Supported wildcards are *, which matches any character sequence (including the empty one), and ?,
            which matches any single character. Note this query can be slow, as it needs to iterate
            over many terms. In order to prevent extremely slow wildcard queries, a wildcard term should
            not start with one of the wildcards * or ?. The wildcard query maps to Lucene WildcardQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Wildcard(System.String,System.String,System.Nullable{System.Double},System.Nullable{Nest.RewriteMultiTerm},System.String)">
            <summary>
            Matches documents that have fields matching a wildcard expression (not analyzed).
            Supported wildcards are *, which matches any character sequence (including the empty one), and ?,
            which matches any single character. Note this query can be slow, as it needs to iterate over many terms.
            In order to prevent extremely slow wildcard queries, a wildcard term should not start with
            one of the wildcards * or ?. The wildcard query maps to Lucene WildcardQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Wildcard(System.Func{Nest.WildcardQueryDescriptor{`0},Nest.IWildcardQuery})">
            <summary>
            Matches documents that have fields matching a wildcard expression (not analyzed).
            Supported wildcards are *, which matches any character sequence (including the empty one), and ?,
            which matches any single character. Note this query can be slow, as it needs to iterate over many terms.
            In order to prevent extremely slow wildcard queries, a wildcard term should not start with
            one of the wildcards * or ?. The wildcard query maps to Lucene WildcardQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Prefix(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Double},System.Nullable{Nest.RewriteMultiTerm},System.String)">
            <summary>
            Matches documents that have fields containing terms with a specified prefix (not analyzed).
            The prefix query maps to Lucene PrefixQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Prefix(System.String,System.String,System.Nullable{System.Double},System.Nullable{Nest.RewriteMultiTerm},System.String)">
            <summary>
            Matches documents that have fields containing terms with a specified prefix (not analyzed).
            The prefix query maps to Lucene PrefixQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Prefix(System.Func{Nest.PrefixQueryDescriptor{`0},Nest.IPrefixQuery})">
            <summary>
            Matches documents that have fields containing terms with a specified prefix (not analyzed).
            The prefix query maps to Lucene PrefixQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Ids(System.Func{Nest.IdsQueryDescriptor,Nest.IIdsQuery})">
            <summary>
            Filters documents that only have the provided ids.
            Note, this filter does not require the _id field to be indexed since
            it works using the _uid field.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanTerm(System.Func{Nest.SpanTermQueryDescriptor{`0},Nest.ISpanTermQuery})">
            <summary>
            Matches spans containing a term. The span term query maps to Lucene SpanTermQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanFirst(System.Func{Nest.SpanFirstQueryDescriptor{`0},Nest.ISpanFirstQuery})">
            <summary>
            Matches spans near the beginning of a field. The span first query maps to Lucene SpanFirstQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanNear(System.Func{Nest.SpanNearQueryDescriptor{`0},Nest.ISpanNearQuery})">
            <summary>
            Matches spans which are near one another. One can specify slop, the maximum number of
            intervening unmatched positions, as well as whether matches are required to be in-order.
            The span near query maps to Lucene SpanNearQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanOr(System.Func{Nest.SpanOrQueryDescriptor{`0},Nest.ISpanOrQuery})">
            <summary>
            Matches the union of its span clauses.
            The span or query maps to Lucene SpanOrQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanNot(System.Func{Nest.SpanNotQueryDescriptor{`0},Nest.ISpanNotQuery})">
            <summary>
            Removes matches which overlap with another span query.
            The span not query maps to Lucene SpanNotQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanMultiTerm(System.Func{Nest.SpanMultiTermQueryDescriptor{`0},Nest.ISpanMultiTermQuery})">
            <summary>
            Wrap a multi term query (one of fuzzy, prefix, term range or regexp query)
            as a span query so it can be nested.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanContaining(System.Func{Nest.SpanContainingQueryDescriptor{`0},Nest.ISpanContainingQuery})">
            <summary>
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanWithin(System.Func{Nest.SpanWithinQueryDescriptor{`0},Nest.ISpanWithinQuery})">
            <summary>
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Regexp(System.Func{Nest.RegexpQueryDescriptor{`0},Nest.IRegexpQuery})">
            <summary>
            custom_score query allows to wrap another query and customize the scoring of it optionally with a
            computation derived from other field values in the doc (numeric ones) using script or boost expression
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.FunctionScore(System.Func{Nest.FunctionScoreQueryDescriptor{`0},Nest.IFunctionScoreQuery})">
            <summary>
            Function score query
            </summary>
            <returns></returns>
        </member>
        <member name="P:Nest.IQuery.Name">
            <summary>
            The _name of the query. this allows you to retrieve for each document what part of the query it matched on
            </summary>
        </member>
        <member name="P:Nest.IBoolQuery.Must">
            <summary>
            The clause(s) that must appear in matching documents
            </summary>
        </member>
        <member name="P:Nest.IBoolQuery.MustNot">
            <summary>
            The clause (query) must not appear in the matching documents.
            Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
        </member>
        <member name="P:Nest.IBoolQuery.Should">
            <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a document.
            The minimum number of should clauses to match can be set using <see cref="P:Nest.IBoolQuery.MinimumShouldMatch"/>.
            </summary>
        </member>
        <member name="P:Nest.IBoolQuery.Filter">
            <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
        </member>
        <member name="P:Nest.IBoolQuery.MinimumShouldMatch">
            <summary>
            Specifies a minimum number of the optional BooleanClauses which must be satisfied.
            </summary>
        </member>
        <member name="P:Nest.IBoolQuery.DisableCoord">
            <summary>
            Specifies if the coordination factor for the query should be disabled.
            The coordination factor is used to reward documents that contain a higher
            percentage of the query terms. The more query terms that appear in the document,
            the greater the chances that the document is a good match for the query.
            </summary>
        </member>
        <member name="P:Nest.BoolQuery.Must">
            <summary>
            The clause(s) that must appear in matching documents
            </summary>
        </member>
        <member name="P:Nest.BoolQuery.MustNot">
            <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
        </member>
        <member name="P:Nest.BoolQuery.Should">
            <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a document.
            The minimum number of should clauses to match can be set using <see cref="P:Nest.BoolQuery.MinimumShouldMatch"/>.
            </summary>
        </member>
        <member name="P:Nest.BoolQuery.Filter">
            <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
        </member>
        <member name="P:Nest.BoolQuery.MinimumShouldMatch">
            <summary>
            Specifies a minimum number of the optional BooleanClauses which must be satisfied.
            </summary>
        </member>
        <member name="P:Nest.BoolQuery.DisableCoord">
            <summary>
            Specifies if the coordination factor for the query should be disabled.
            The coordination factor is used to reward documents that contain a higher
            percentage of the query terms. The more query terms that appear in the document,
            the greater the chances that the document is a good match for the query.
            </summary>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.DisableCoord">
            <summary>
            Specifies if the coordination factor for the query should be disabled.
            The coordination factor is used to reward documents that contain a higher
            percentage of the query terms. The more query terms that appear in the document,
            the greater the chances that the document is a good match for the query.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)">
            <summary>
            Specifies a minimum number of the optional BooleanClauses which must be satisfied.
            </summary>
            <param name="minimumShouldMatches"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Must(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}[])">
            <summary>
            The clause(s) that must appear in matching documents
            </summary>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Must(System.Collections.Generic.IEnumerable{System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}})">
            <summary>
            The clause(s) that must appear in matching documents
            </summary>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Must(Nest.QueryContainer[])">
            <summary>
            The clause(s) that must appear in matching documents
            </summary>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.MustNot(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}[])">
            <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.MustNot(System.Collections.Generic.IEnumerable{System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}})">
            <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.MustNot(Nest.QueryContainer[])">
            <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Should(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}[])">
            <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a document.
            The minimum number of should clauses to match can be set using <see cref="M:Nest.BoolQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)"/>.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Should(System.Collections.Generic.IEnumerable{System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}})">
            <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a document.
            The minimum number of should clauses to match can be set using <see cref="M:Nest.BoolQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)"/>.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Should(Nest.QueryContainer[])">
            <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a document.
            The minimum number of should clauses to match can be set using <see cref="M:Nest.BoolQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)"/>.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Filter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}[])">
            <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Filter(System.Collections.Generic.IEnumerable{System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}})">
            <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Filter(Nest.QueryContainer[])">
            <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.CommonTermsQueryDescriptor`1.Query(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonTermsQueryDescriptor`1.HighFrequencyOperator(System.Nullable{Nest.Operator})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonTermsQueryDescriptor`1.Analyzer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonTermsQueryDescriptor`1.CutoffFrequency(System.Nullable{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonTermsQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonTermsQueryDescriptor`1.DisableCoord(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.MatchPhrasePrefixQueryDescriptor`1">
            <summary>
            A Query that matches documents containing a particular sequence of terms.
            It allows for prefix matches on the last term in the text.
            </summary>
            <typeparam name="T">Type of document</typeparam>
        </member>
        <member name="T:Nest.MatchPhraseQueryDescriptor`1">
            <summary>
            A Query that matches documents containing a particular sequence of terms. A PhraseQuery is built by QueryParser for input like "new york".
            </summary>
            <typeparam name="T">Type of document</typeparam>
        </member>
        <member name="T:Nest.GeoLocation">
            <summary>
            Represents a Latitude/Longitude as a 2 dimensional point that gets serialized as { lat, lon }
            </summary>
        </member>
        <member name="P:Nest.GeoLocation.Latitude">
            <summary>
            Latitude
            </summary>
        </member>
        <member name="P:Nest.GeoLocation.Longitude">
            <summary>
            Longitude
            </summary>
        </member>
        <member name="M:Nest.GeoLocation.#ctor(System.Double,System.Double)">
            <summary>
            Represents a Latitude/Longitude as a 2 dimensional point. 
            </summary>
            <param name="latitude">Value between -90 and 90</param>
            <param name="longitude">Value between -180 and 180</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="latitude"/> or <paramref name="longitude"/> are invalid</exception>
        </member>
        <member name="M:Nest.GeoLocation.IsValidLatitude(System.Double)">
            <summary>
            True if <paramref name="latitude"/> is a valid latitude. Otherwise false.
            </summary>
            <param name="latitude"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.GeoLocation.IsValidLongitude(System.Double)">
            <summary>
            True if <paramref name="longitude"/> is a valid longitude. Otherwise false.
            </summary>
            <param name="longitude"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.GeoLocation.TryCreate(System.Double,System.Double)">
            <summary>
            Try to create a <see cref="T:Nest.GeoLocation"/>. 
            Return <value>null</value> if either <paramref name="latitude"/> or <paramref name="longitude"/> are invalid.
            </summary>
            <param name="latitude">Value between -90 and 90</param>
            <param name="longitude">Value between -180 and 180</param>
            <returns></returns>
        </member>
        <member name="T:Nest.GeoCoordinate">
            <summary>
            Represents a Latitude/Longitude as a 2 dimensional point that gets serialized as new [] { lon, lat }
            </summary>
        </member>
        <member name="F:Nest.RewriteMultiTerm.ConstantScore">
            <summary>
             A rewrite method that performs like constant_score_boolean when there are few matching terms and otherwise
             visits all matching terms in sequence and marks documents for that term. Matching documents are assigned a
             constant score equal to the query’s boost.
            </summary>
        </member>
        <member name="F:Nest.RewriteMultiTerm.ScoringBoolean">
            <summary>
            A rewrite method that first translates each term into a should clause in a boolean query, and keeps the scores
             as computed by the query. Note that typically such scores are meaningless to the user, and require non-trivial
             CPU to compute, so it’s almost always better to use constant_score_auto. This rewrite method will hit too many
             clauses failure if it exceeds the boolean query limit (defaults to 1024).
            </summary>
        </member>
        <member name="F:Nest.RewriteMultiTerm.ConstantScoreBoolean">
            <summary>
            Similar to scoring_boolean except scores are not computed. Instead, each matching document receives a constant
             score equal to the query’s boost. This rewrite method will hit too many clauses failure if it exceeds the 
            boolean query limit (defaults to 1024).
            </summary>
        </member>
        <member name="F:Nest.RewriteMultiTerm.TopTermsN">
            <summary>
            A rewrite method that first translates each term into should clause in boolean query, and keeps the scores 
            as computed by the query. This rewrite method only uses the top scoring terms so it will not overflow boolean
             max clause count. The N controls the size of the top scoring terms to use.
            </summary>
        </member>
        <member name="F:Nest.RewriteMultiTerm.TopTermsBoostN">
            <summary>
            A rewrite method that first translates each term into should clause in boolean query, but the scores are only 
            computed as the boost. This rewrite method only uses the top scoring terms so it will not overflow the boolean
             max clause count. The N controls the size of the top scoring terms to use.
            </summary>
        </member>
        <member name="F:Nest.RewriteMultiTerm.TopTermsBlendedFreqsN">
            <summary>
            A rewrite method that first translates each term into should clause in boolean query, but all term queries compute
             scores as if they had the same frequency. In practice the frequency which is used is the maximum frequency of all
             matching terms. This rewrite method only uses the top scoring terms so it will not overflow boolean max clause count. 
            The N controls the size of the top scoring terms to use.
            </summary>
        </member>
        <member name="M:Nest.ScriptQueryDescriptor`1.Inline(System.String)">
            <summary>
            Inline script to execute
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ScriptQueryDescriptor`1.Id(System.String)" -->
        <member name="M:Nest.ScriptQueryDescriptor`1.File(System.String)">
            <summary>
            File name of a script to execute
            </summary>
        </member>
        <member name="M:Nest.ScriptQueryDescriptor`1.Params(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <summary>
            Scripts are compiled and cached for faster execution.
            If the same script can be used, just with different parameters provider,
            it is preferable to use the ability to pass parameters to the script itself.
            Ex:
            	Script: "doc['num1'].value > param1"
            	param: "param1" = 5
            </summary>
            <param name="paramDictionary">param</param>
            <returns>this</returns>
        </member>
        <member name="M:Nest.ScriptQueryDescriptor`1.Lang(System.String)">
            <summary>
            Language of script.
            </summary>
            <param name="lang">language</param>
            <returns>this</returns>
        </member>
        <member name="M:Nest.ScriptQueryDescriptor`1.Lang(Nest.ScriptLang)">
            <summary>
            Language of script.
            </summary>
            <param name="lang">language</param>
            <returns>this</returns>
        </member>
        <member name="T:Nest.TermsQueryDescriptor`1">
            <summary>
            A query that match on any (configurable) of the provided terms.
            This is a simpler syntax query for using a bool query with several term queries in the should clauses.
            </summary>
            <typeparam name="T">The type that represents the expected hit type</typeparam>
        </member>
        <member name="P:Nest.IQueryVisitor.Depth">
            <summary>
            The current depth of the node being visited
            </summary>
        </member>
        <member name="P:Nest.IQueryVisitor.Scope">
            <summary>
            Hints the relation with the parent, i,e queries inside a Must clause will have VisitorScope.Must set.
            </summary>
        </member>
        <member name="M:Nest.IQueryVisitor.Visit(Nest.IQueryContainer)">
            <summary>
            Visit the query container just before we dispatch into the query it holds
            </summary>
            <param name="queryDescriptor"></param>
        </member>
        <member name="M:Nest.IQueryVisitor.Visit(Nest.IQuery)">
            <summary>
            Visit every query item just before they are visited by their specialized Visit() implementation
            </summary>
            <param name="query">The IQuery object that will be visited</param>
        </member>
        <member name="T:Nest.CountRequest">
            <summary>Request parameters for Count <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</pre></summary>
        </member>
        <member name="M:Nest.CountRequest.#ctor">
            <summary>/_count</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.CountRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_count</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.CountRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_count</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CountRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.CountRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.CountRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.CountRequest.MinScore">
            <summary>Include only documents with a specific `_score` value in the result</summary>
        </member>
        <member name="P:Nest.CountRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.CountRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.CountRequest.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.CountRequest.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.CountRequest.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.CountRequest.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.CountRequest.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.CountRequest.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.CountRequest.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.CountRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CountRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CountRequest`1">
            <summary>Request parameters for Count <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</pre></summary>
        </member>
        <member name="M:Nest.CountRequest`1.#ctor">
            <summary>/_count</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.CountRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_count</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.CountRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_count</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CountRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.CountRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.CountRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.CountRequest`1.MinScore">
            <summary>Include only documents with a specific `_score` value in the result</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.CountRequest`1.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.CountRequest`1.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.CountRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.CountRequest`1.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.CountRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.CountDescriptor`1">
            <summary>descriptor for Count <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</pre></summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.#ctor">
            <summary>/_count</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of indices to restrict the results</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Index``1">
            <summary>A comma-separated list of indices to restrict the results</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.AllIndices">
            <summary>A comma-separated list of indices to restrict the results</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of types to restrict the results</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Type``1">
            <summary>A comma-separated list of types to restrict the results</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.AllTypes">
            <summary>A comma-separated list of types to restrict the results</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.MinScore(System.Double)">
            <summary>Include only documents with a specific `_score` value in the result</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="M:Nest.CovariantSearch.CloseOverAutomagicCovariantResultSelector(Nest.Inferrer,Nest.ICovariantSearchRequest)">
            <summary>
            Based on the type information present in this descriptor create method that takes
            the returned _source and hit and returns the ClrType it should deserialize too.
            This is so that Documents[A] can contain actual instances of subclasses B, C as well.
            If you specify types using .Type(typeof(B), typeof(C)) then NEST can automagically
            create a TypeSelector based on the hits _type property.
            </summary>
        </member>
        <member name="T:Nest.ExplainRequest`1">
            <summary>Request parameters for Explain <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html</pre></summary>
        </member>
        <member name="M:Nest.ExplainRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_explain</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.ExplainRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}/_explain</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="P:Nest.ExplainRequest`1.AnalyzeWildcard">
            <summary>Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Analyzer">
            <summary>The analyzer for the query string query</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Df">
            <summary>The default field for query string query (default: _all)</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Fields">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ExplainDescriptor`1">
            <summary>descriptor for Explain <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html</pre></summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_explain</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}/_explain</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Index``1">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Type``1">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer for the query string query</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Df(System.String)">
            <summary>The default field for query string query (default: _all)</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Fields(System.String[])">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Fields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.SourceExclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.SourceInclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.FieldStatsRequest">
            <summary>Request parameters for FieldStats <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html</pre></summary>
        </member>
        <member name="M:Nest.FieldStatsRequest.#ctor">
            <summary>/_field_stats</summary>
        </member>
        <member name="M:Nest.FieldStatsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_field_stats</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.FieldStatsRequest.Level">
            <summary>Defines if field stats should be returned on a per index level or on a cluster wide level</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.FieldStatsDescriptor">
            <summary>descriptor for FieldStats <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html</pre></summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.#ctor">
            <summary>/_field_stats</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.Index``1">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.AllIndices">
            <summary>A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.Level(Elasticsearch.Net.Level)">
            <summary>Defines if field stats should be returned on a per index level or on a cluster wide level</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.MultiSearchRequest">
            <summary>Request parameters for Msearch <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html</pre></summary>
        </member>
        <member name="M:Nest.MultiSearchRequest.#ctor">
            <summary>/_msearch</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.MultiSearchRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_msearch</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.MultiSearchRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_msearch</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.MultiSearchRequest.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.MultiSearchRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.MultiSearchRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.MultiSearchDescriptor">
            <summary>descriptor for Msearch <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html</pre></summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.#ctor">
            <summary>/_msearch</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to use as default</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.Index``1">
            <summary>A comma-separated list of index names to use as default</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.AllIndices">
            <summary>A comma-separated list of index names to use as default</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.Type(Nest.Types)">
            <summary>A comma-separated list of document types to use as default</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.Type``1">
            <summary>A comma-separated list of document types to use as default</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.AllTypes">
            <summary>A comma-separated list of document types to use as default</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.MultiPercolateRequest">
            <summary>Request parameters for Mpercolate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html</pre></summary>
        </member>
        <member name="M:Nest.MultiPercolateRequest.#ctor">
            <summary>/_mpercolate</summary>
        </member>
        <member name="M:Nest.MultiPercolateRequest.#ctor(Nest.IndexName)">
             <summary>/{index}/_mpercolate</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.MultiPercolateRequest.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_mpercolate</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.MultiPercolateRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.MultiPercolateRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.MultiPercolateRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.MultiPercolateRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.MultiPercolateRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.MultiPercolateDescriptor">
            <summary>descriptor for Mpercolate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html</pre></summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.#ctor">
            <summary>/_mpercolate</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.Index(Nest.IndexName)">
            <summary>The index of the document being count percolated to use as default</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.Index``1">
            <summary>The index of the document being count percolated to use as default</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.Type(Nest.TypeName)">
            <summary>The type of the document being percolated to use as default.</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.Type``1">
            <summary>The type of the document being percolated to use as default.</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PercolateCountRequest`1">
            <summary>Request parameters for CountPercolate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html</pre></summary>
        </member>
        <member name="M:Nest.PercolateCountRequest`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_percolate/count</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="M:Nest.PercolateCountRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_percolate/count</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.PercolateCountRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/_percolate/count</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.PercolateIndex">
            <summary>The index to count percolate the document into. Defaults to index.</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.PercolateType">
            <summary>The type to count percolate document into. Defaults to type.</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PercolateCountDescriptor`1">
            <summary>descriptor for CountPercolate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html</pre></summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Document(`0)">
            <summary>
            The object to perculate
            </summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.TrackScores(System.Boolean)">
            <summary>
            Make sure we keep calculating score even if we are sorting on a field.
            </summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Describe the query to perform using a query descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Filter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Filter search using a filter descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_percolate/count</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/_percolate/count</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Index(Nest.IndexName)">
            <summary>The index of the document being count percolated.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Index``1">
            <summary>The index of the document being count percolated.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document being count percolated.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Type``1">
            <summary>The type of the document being count percolated.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Id(Nest.Id)">
            <summary>Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.PercolateIndex(System.String)">
            <summary>The index to count percolate the document into. Defaults to index.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.PercolateType(System.String)">
            <summary>The type to count percolate document into. Defaults to type.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PercolateRequest`1">
            <summary>Request parameters for Percolate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html</pre></summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.TrackScores">
            <summary>
            Whether the _score is included for each match. The _score is based on the query and represents 
            how the query matched the percolate query’s metadata, not how the document (that is being percolated) 
            matched the query. The <see cref="P:Nest.PercolateRequest`1.Query"/> option is required for this option.
            </summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.Document">
            <summary>
            The object to percolate
            </summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.Sort">
            <summary>
            Define a sort specification like in the search API. Currently only sorting _score reverse 
            (default relevancy) is supported. Other sort fields will throw an exception. 
            The <see cref="P:Nest.PercolateRequest`1.Size"/> and <see cref="P:Nest.PercolateRequest`1.Query"/> option are required for this setting. Like <see cref="P:Nest.PercolateRequest`1.TrackScores"/> 
            the score is based on the query and represents how the query matched to the percolate query’s metadata 
            and not how the document being percolated matched to the query.
            </summary>
        </member>
        <member name="M:Nest.PercolateRequest`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_percolate</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="M:Nest.PercolateRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_percolate</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.PercolateRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/_percolate</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="P:Nest.PercolateRequest`1.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.PercolateIndex">
            <summary>The index to percolate the document into. Defaults to index.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.PercolateType">
            <summary>The type to percolate document into. Defaults to type.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.PercolateRouting">
            <summary>The routing value to use when percolating the existing document.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.PercolatePreference">
            <summary>Which shard to prefer when executing the percolate request.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.PercolateFormat">
            <summary>Return an array of matching query IDs instead of objects</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PercolateDescriptor`1">
            <summary>descriptor for Percolate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html</pre></summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Document(`0)">
            <summary>
            The object to perculate
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.TrackScores(System.Nullable{System.Boolean})">
            <summary>
            Whether the _score is included for each match. The _score is based on the query and represents 
            how the query matched the percolate query’s metadata, not how the document (that is being percolated) 
            matched the query. The <see cref="M:Nest.PercolateDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})"/> option is required for this option.
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Highlight(System.Func{Nest.HighlightDescriptor{`0},Nest.IHighlight})">
            <summary>
            Allow to highlight search results on one or more fields. 
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Sort(System.Func{Nest.SortDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.ISort}}})">
            <summary>
            Define a sort specification like in the search API. Currently only sorting _score reverse 
            (default relevancy) is supported. Other sort fields will throw an exception. 
            The <see cref="M:Nest.PercolateDescriptor`1.Size(System.Nullable{System.Int32})"/> and <see cref="M:Nest.PercolateDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})"/> option are required for this setting. Like <see cref="M:Nest.PercolateDescriptor`1.TrackScores(System.Nullable{System.Boolean})"/> 
            the score is based on the query and represents how the query matched to the percolate query’s metadata 
            and not how the document being percolated matched to the query.
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Describe the query to perform using a query descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Filter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Filter search using a filter descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_percolate</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/_percolate</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Index(Nest.IndexName)">
            <summary>The index of the document being percolated.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Index``1">
            <summary>The index of the document being percolated.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document being percolated.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Type``1">
            <summary>The type of the document being percolated.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Id(Nest.Id)">
            <summary>Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.PercolateIndex(System.String)">
            <summary>The index to percolate the document into. Defaults to index.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.PercolateType(System.String)">
            <summary>The type to percolate document into. Defaults to type.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.PercolateRouting(System.String)">
            <summary>The routing value to use when percolating the existing document.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.PercolatePreference(System.String)">
            <summary>Which shard to prefer when executing the percolate request.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.PercolateFormat(Elasticsearch.Net.PercolateFormat)">
            <summary>Return an array of matching query IDs instead of objects</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.PercolateCountResponse.Error">
            <summary>
            The individual error for separate requests on the _mpercolate API
            </summary>
        </member>
        <member name="M:Nest.RegisterPercolatorDescriptor`1.Metadata(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <summary>
            Add metadata associated with this percolator query document that can later be used to query or filter specific percolated queries
            </summary>
        </member>
        <member name="M:Nest.RegisterPercolatorDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            The query to perform the percolation
            </summary>
        </member>
        <member name="T:Nest.ClearScrollRequest">
            <summary>Request parameters for ClearScroll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html</pre></summary>
        </member>
        <member name="P:Nest.ClearScrollRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ClearScrollRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClearScrollDescriptor">
            <summary>descriptor for ClearScroll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html</pre></summary>
        </member>
        <member name="M:Nest.ClearScrollDescriptor.#ctor">
            <summary>/_search/scroll</summary>
        </member>
        <member name="M:Nest.ClearScrollDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ClearScrollDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ScrollRequest">
            <summary>Request parameters for Scroll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html</pre></summary>
        </member>
        <member name="P:Nest.ScrollRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ScrollRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ScrollDescriptor`1">
            <summary>descriptor for Scroll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html</pre></summary>
        </member>
        <member name="M:Nest.ScrollDescriptor`1.Scroll(Nest.Time)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.ScrollDescriptor`1.#ctor">
            <summary>/_search/scroll</summary>
        </member>
        <member name="M:Nest.ScrollDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ScrollDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SearchExistsRequest">
            <summary>Request parameters for SearchExists <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-exists.html</pre></summary>
        </member>
        <member name="M:Nest.SearchExistsRequest.#ctor">
            <summary>/_search/exists</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.SearchExistsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_search/exists</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SearchExistsRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_search/exists</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SearchExistsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.MinScore">
            <summary>Include only documents with a specific `_score` value in the result</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SearchExistsRequest`1">
            <summary>Request parameters for SearchExists <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-exists.html</pre></summary>
        </member>
        <member name="M:Nest.SearchExistsRequest`1.#ctor">
            <summary>/_search/exists</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.SearchExistsRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_search/exists</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SearchExistsRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_search/exists</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.MinScore">
            <summary>Include only documents with a specific `_score` value in the result</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.SearchExistsRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SearchExistsDescriptor`1">
            <summary>descriptor for SearchExists <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-exists.html</pre></summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Strict(System.Boolean)">
            <summary>
            When strict is set, conditionless queries are treated as an exception. 
            </summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Describe the query to perform using a query descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Query(Nest.QueryContainer)">
            <summary>
            Describe the query to perform using the static Query class
            </summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.QueryString(System.String)">
            <summary>
            Provide a query over the query string under key q. this force the request to be a GET
            </summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.QueryRaw(System.String)">
            <summary>
            Describe the query to perform as a raw json string
            </summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.#ctor">
            <summary>/_search/exists</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of indices to restrict the results</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Index``1">
            <summary>A comma-separated list of indices to restrict the results</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.AllIndices">
            <summary>A comma-separated list of indices to restrict the results</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of types to restrict the results</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Type``1">
            <summary>A comma-separated list of types to restrict the results</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.AllTypes">
            <summary>A comma-separated list of types to restrict the results</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.MinScore(System.Double)">
            <summary>Include only documents with a specific `_score` value in the result</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.SearchExistsDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SearchShardsRequest">
            <summary>Request parameters for SearchShards <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</pre></summary>
        </member>
        <member name="M:Nest.SearchShardsRequest.#ctor">
            <summary>/{index}/{type}/_search_shards</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.SearchShardsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_search_shards</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SearchShardsRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_search_shards</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SearchShardsRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SearchShardsRequest`1">
            <summary>Request parameters for SearchShards <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</pre></summary>
        </member>
        <member name="M:Nest.SearchShardsRequest`1.#ctor">
            <summary>/{index}/{type}/_search_shards</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.SearchShardsRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_search_shards</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SearchShardsRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_search_shards</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SearchShardsDescriptor`1">
            <summary>
            A descriptor wich describes a search operation for _search_shards
            </summary>
            <summary>descriptor for SearchShards <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</pre></summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.#ctor">
            <summary>/{index}/{type}/_search_shards</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Index``1">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.AllIndices">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Type``1">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.AllTypes">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteSearchTemplateRequest">
            <summary>Request parameters for DeleteTemplate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteSearchTemplateRequest.#ctor(Nest.Id)">
             <summary>/_search/template/{id}</summary>
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteSearchTemplateRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.DeleteSearchTemplateRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.DeleteSearchTemplateRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteSearchTemplateRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteSearchTemplateDescriptor">
            <summary>descriptor for DeleteTemplate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteSearchTemplateDescriptor.#ctor(Nest.Id)">
             <summary>/_search/template/{id}</summary>
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteSearchTemplateDescriptor.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.DeleteSearchTemplateDescriptor.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.DeleteSearchTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteSearchTemplateDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.RenderSearchTemplateRequest">
            <summary>Request parameters for RenderSearchTemplate <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateRequest.#ctor">
            <summary>/_render/template</summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateRequest.#ctor(Nest.Id)">
             <summary>/_render/template/{id}</summary>
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.RenderSearchTemplateRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.RenderSearchTemplateRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.RenderSearchTemplateDescriptor">
            <summary>descriptor for RenderSearchTemplate <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateDescriptor.#ctor">
            <summary>/_render/template</summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateDescriptor.Id(Nest.Id)">
            <summary>The id of the stored search template</summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetSearchTemplateRequest">
            <summary>Request parameters for GetTemplate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.GetSearchTemplateRequest.#ctor(Nest.Id)">
             <summary>/_search/template/{id}</summary>
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.GetSearchTemplateRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.GetSearchTemplateRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.GetSearchTemplateRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetSearchTemplateRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetSearchTemplateDescriptor">
            <summary>descriptor for GetTemplate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.GetSearchTemplateDescriptor.#ctor(Nest.Id)">
             <summary>/_search/template/{id}</summary>
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetSearchTemplateDescriptor.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.GetSearchTemplateDescriptor.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.GetSearchTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetSearchTemplateDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutSearchTemplateRequest">
            <summary>Request parameters for PutTemplate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.PutSearchTemplateRequest.#ctor(Nest.Id)">
             <summary>/_search/template/{id}</summary>
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.PutSearchTemplateRequest.OpType">
            <summary>Explicit operation type</summary>
        </member>
        <member name="P:Nest.PutSearchTemplateRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.PutSearchTemplateRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.PutSearchTemplateRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PutSearchTemplateRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutSearchTemplateDescriptor">
            <summary>descriptor for PutTemplate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.PutSearchTemplateDescriptor.#ctor(Nest.Id)">
             <summary>/_search/template/{id}</summary>
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutSearchTemplateDescriptor.OpType(Elasticsearch.Net.OpType)">
            <summary>Explicit operation type</summary>
        </member>
        <member name="M:Nest.PutSearchTemplateDescriptor.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.PutSearchTemplateDescriptor.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.PutSearchTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.PutSearchTemplateDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SearchTemplateRequest">
            <summary>Request parameters for SearchTemplate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.SearchTemplateRequest.#ctor">
            <summary>/_search/template</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.SearchTemplateRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_search/template</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SearchTemplateRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_search/template</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SearchTemplateRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.Scroll">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SearchTemplateDescriptor`1">
            <summary>descriptor for SearchTemplate <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</pre></summary>
        </member>
        <member name="P:Nest.SearchTemplateDescriptor`1._Strict">
            <summary>
            Whether conditionless queries are allowed or not
            </summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.#ctor">
            <summary>/_search/template</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Index``1">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.AllIndices">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Type``1">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.AllTypes">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Scroll(Nest.Time)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.HighlighterType">
            <summary>
            Type of highlighter
            </summary>
        </member>
        <member name="F:Nest.HighlighterType.Plain">
            <summary>
            Plain Highlighter.
            The default choice of highlighter is of type plain and uses the Lucene highlighter. 
            It tries hard to reflect the query matching logic in terms of understanding word 
            importance and any word positioning criteria in phrase queries.
            </summary>
        </member>
        <member name="F:Nest.HighlighterType.Postings">
            <summary>
            Postings Highlighter.
            If index_options is set to offsets in the mapping the postings highlighter 
            will be used instead of the plain highlighter
            </summary>
        </member>
        <member name="F:Nest.HighlighterType.Fvh">
            <summary>
            Fast Vector Highlighter.
            If term_vector information is provided by setting term_vector to with_positions_offsets 
            in the mapping then the fast vector highlighter will be used instead of the plain highlighter
            </summary>
        </member>
        <member name="M:Nest.GlobalInnerHitDescriptor`1.Highlight(System.Func{Nest.HighlightDescriptor{`0},Nest.IHighlight})">
            <summary>
            Allow to highlight search results on one or more fields. The implementation uses the either lucene fast-vector-highlighter or highlighter. 
            </summary>
        </member>
        <member name="M:Nest.InnerHitsDescriptor`1.Highlight(System.Func{Nest.HighlightDescriptor{`0},Nest.IHighlight})">
            <summary>
            Allow to highlight search results on one or more fields. The implementation uses the either lucene fast-vector-highlighter or highlighter. 
            </summary>
        </member>
        <member name="T:Nest.SearchRequest">
            <summary>Request parameters for Search <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</pre></summary>
        </member>
        <member name="M:Nest.SearchRequest.#ctor">
            <summary>/_search</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.SearchRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_search</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SearchRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_search</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SearchRequest.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.SearchRequest.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.SearchRequest.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.SearchRequest.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.SearchRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SearchRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SearchRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SearchRequest.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.SearchRequest.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.SearchRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SearchRequest.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.SearchRequest.Scroll">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="P:Nest.SearchRequest.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.SearchRequest.Stats">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="P:Nest.SearchRequest.SuggestField">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="P:Nest.SearchRequest.SuggestMode">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="P:Nest.SearchRequest.SuggestSize">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="P:Nest.SearchRequest.SuggestText">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="P:Nest.SearchRequest.RequestCache">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="P:Nest.SearchRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SearchRequest`1">
            <summary>Request parameters for Search <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</pre></summary>
        </member>
        <member name="M:Nest.SearchRequest`1.#ctor">
            <summary>/_search</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.SearchRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_search</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SearchRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_search</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SearchRequest`1.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Scroll">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Stats">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.SuggestField">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.SuggestMode">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.SuggestSize">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.SuggestText">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.RequestCache">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SearchDescriptor`1">
            <summary>
            A descriptor wich describes a search operation for _search and _msearch
            </summary>
            <summary>descriptor for Search <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</pre></summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Size(System.Int32)">
            <summary>
            The number of hits to return. Defaults to 10. When using scroll search type
            size is actually multiplied by the number of shards!
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Take(System.Int32)">
            <summary>
            The number of hits to return. Defaults to 10.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.From(System.Int32)">
            <summary>
            The starting from index of the hits to return. Defaults to 0.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Skip(System.Int32)">
            <summary>
            The starting from index of the hits to return. Defaults to 0.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Timeout(System.String)">
            <summary>
            A search timeout, bounding the search request to be executed within the
            specified time value and bail with the hits accumulated up
            to that point when expired. Defaults to no timeout.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Explain(System.Boolean)">
            <summary>
            Enables explanation for each hit on how its score was computed.
            (Use .DocumentsWithMetaData on the return results)
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Version(System.Boolean)">
            <summary>
            Returns a version for each search hit. (Use .DocumentsWithMetaData on the return results)
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.TrackScores(System.Boolean)">
            <summary>
            Make sure we keep calculating score even if we are sorting on a field.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Profile(System.Boolean)">
            <summary>
            The Profile API provides detailed timing information about the execution of individual components in a query.
            It gives the user insight into how queries are executed at a low level so that the user can understand
            why certain queries are slow, and take steps to improve their slow queries.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.MinScore(System.Double)">
            <summary>
            Allows to filter out documents based on a minimum score:
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.TerminateAfter(System.Int64)">
            <summary>
            The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.
            If set, the response will have a boolean field terminated_early to indicate whether the query execution has actually terminated_early.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnPrimary">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            The operation will go and be executed only on the primary shards.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnPrimaryFirst">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            The operation will go and be executed on the primary shard, and if not available (failover),
            will execute on other shards.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnLocalShard">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            The operation will prefer to be executed on a local allocated shard is possible.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnNode(System.String)">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            Restricts the search to execute only on a node with the provided node id
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnPreferredNode(System.String)">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            Prefers execution on the node with the provided node id if applicable.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.IndicesBoost(System.Func{Nest.FluentDictionary{Nest.IndexName,System.Double},Nest.FluentDictionary{Nest.IndexName,System.Double}})">
            <summary>
            Allows to configure different boost level per index when searching across
            more than one indices. This is very handy when hits coming from one index
            matter more than hits coming from another index (think social graph where each user has an index).
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Fields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
            <summary>
            Allows to selectively load specific fields for each document
            represented by a search hit. Defaults to load the internal _source field.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FielddataFields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
            <summary>
            A comma-separated list of fields to return as the field data representation of a field for each hit
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Sort(System.Func{Nest.SortDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.ISort}}})">
            <summary>
            A comma-separated list of fields to return as the field data representation of a field for each hit
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Suggest(System.Func{Nest.SuggestContainerDescriptor{`0},Nest.IPromise{Nest.ISuggestContainer}})">
            <summary>
             The suggest feature suggests similar looking terms based on a provided text by using a suggester
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Describe the query to perform using a query descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.MatchAll(System.Func{Nest.MatchAllQueryDescriptor,Nest.IMatchAllQuery})">
            <summary>
            Shortcut to default to a match all query
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.PostFilter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Filter search using a filter descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Highlight(System.Func{Nest.HighlightDescriptor{`0},Nest.IHighlight})">
            <summary>
            Allow to highlight search results on one or more fields. The implementation uses the either lucene fast-vector-highlighter or highlighter.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Rescore(System.Func{Nest.RescoreDescriptor{`0},Nest.IRescore})">
            <summary>
            Allows you to specify a rescore query
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.#ctor">
            <summary>/_search</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Index``1">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.AllIndices">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Type``1">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.AllTypes">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Scroll(Nest.Time)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Stats(System.String[])">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestField(System.String)">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestMode(Elasticsearch.Net.SuggestMode)">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestSize(System.Int64)">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestText(System.String)">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.RequestCache(System.Boolean)">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.Documents">
            <summary>
            Returns a view on the documents inside the hits that are returned.
            <para>NOTE: if you use Fields() on the search descriptor .Documents will be empty use
            .Fields instead or try the 'source filtering' feature introduced in Elasticsearch 1.0
            using .Source() on the search descriptor to get Documents of type T with only certain parts selected
            </para>
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.Fields">
            <summary>
            Will return the field values inside the hits when the search descriptor specified .Fields.
            Otherwise this will always be an empty collection.
            </summary>
        </member>
        <member name="P:Nest.SearchResponse`1.ScrollId">
            <summary>
            Only set when search type = scan and scroll specified
            </summary>
        </member>
        <member name="P:Nest.SearchResponse`1.Documents">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SearchResponse`1.Fields">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SearchResponse`1.Highlights">
            <summary>
            IDictionary of id -Highlight Collection for the document
            </summary>
        </member>
        <member name="T:Nest.CompletionField`1">
            <summary>
            Convenience class for use when indexing completion fields.
            </summary>
        </member>
        <member name="M:Nest.SuggestContainerDescriptor`1.Term(System.String,System.Func{Nest.TermSuggesterDescriptor{`0},Nest.ITermSuggester})">
            <summary>
            The term suggester suggests terms based on edit distance. The provided suggest text is analyzed before terms are suggested. 
            The suggested terms are provided per analyzed suggest text token. The term suggester doesn’t take the query into account that is part of request.
            </summary>
        </member>
        <member name="M:Nest.SuggestContainerDescriptor`1.Phrase(System.String,System.Func{Nest.PhraseSuggesterDescriptor{`0},Nest.IPhraseSuggester})">
            <summary>
            The phrase suggester adds additional logic on top of the term suggester to select entire corrected phrases 
            instead of individual tokens weighted based on ngram-langugage models. 
            </summary>
        </member>
        <member name="M:Nest.SuggestContainerDescriptor`1.Completion(System.String,System.Func{Nest.CompletionSuggesterDescriptor{`0},Nest.ICompletionSuggester})">
            <summary>
            The completion suggester is a so-called prefix suggester. 
            It does not do spell correction like the term or phrase suggesters but allows basic auto-complete functionality.
            </summary>
        </member>
        <member name="T:Nest.SuggestRequest">
            <summary>Request parameters for Suggest <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-suggesters.html</pre></summary>
        </member>
        <member name="M:Nest.SuggestRequest.#ctor">
            <summary>/_suggest</summary>
        </member>
        <member name="M:Nest.SuggestRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_suggest</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SuggestRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SuggestRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SuggestRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SuggestRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SuggestRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SuggestRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.SuggestRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.SuggestDescriptor`1">
            <summary>descriptor for Suggest <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-suggesters.html</pre></summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.GlobalText(System.String)">
            <summary>
            To avoid repetition of the suggest text, it is possible to define a global text.
            </summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Term(System.String,System.Func{Nest.TermSuggesterDescriptor{`0},Nest.ITermSuggester})">
            <summary>
            The term suggester suggests terms based on edit distance. The provided suggest text is analyzed before terms are suggested. 
            The suggested terms are provided per analyzed suggest text token. The term suggester doesn’t take the query into account that is part of request.
            </summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Phrase(System.String,System.Func{Nest.PhraseSuggesterDescriptor{`0},Nest.IPhraseSuggester})">
            <summary>
            The phrase suggester adds additional logic on top of the term suggester to select entire corrected phrases 
            instead of individual tokens weighted based on ngram-langugage models. 
            </summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Completion(System.String,System.Func{Nest.CompletionSuggesterDescriptor{`0},Nest.ICompletionSuggester})">
            <summary>
            The completion suggester is a so-called prefix suggester. 
            It does not do spell correction like the term or phrase suggesters but allows basic auto-complete functionality.
            </summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.#ctor">
            <summary>/_suggest</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Index``1">
            <summary>A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.AllIndices">
            <summary>A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ValidateQueryRequest">
            <summary>Request parameters for IndicesValidateQueryForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html</pre></summary>
        </member>
        <member name="M:Nest.ValidateQueryRequest.#ctor">
            <summary>/_validate/query</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.ValidateQueryRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_validate/query</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.ValidateQueryRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_validate/query</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Explain">
            <summary>Return detailed information about the error</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.OperationThreading">
            <summary>TODO: ?</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Rewrite">
            <summary>Provide a more detailed explanation showing the actual Lucene query that will be executed.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ValidateQueryRequest`1">
            <summary>Request parameters for IndicesValidateQueryForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html</pre></summary>
        </member>
        <member name="M:Nest.ValidateQueryRequest`1.#ctor">
            <summary>/_validate/query</summary>
            <param name="document"> describes an elasticsearch document of type T, allows implicit conversion from numeric and string ids </param>
        </member>
        <member name="M:Nest.ValidateQueryRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_validate/query</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.ValidateQueryRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_validate/query</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Explain">
            <summary>Return detailed information about the error</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.OperationThreading">
            <summary>TODO: ?</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Rewrite">
            <summary>Provide a more detailed explanation showing the actual Lucene query that will be executed.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ValidateQueryDescriptor`1">
            <summary>descriptor for IndicesValidateQueryForAll <pre>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html</pre></summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.#ctor">
            <summary>/_validate/query</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Index``1">
            <summary>A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.AllIndices">
            <summary>A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Type``1">
            <summary>A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.AllTypes">
            <summary>A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Explain(System.Boolean)">
            <summary>Return detailed information about the error</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Rewrite(System.Boolean)">
            <summary>Provide a more detailed explanation showing the actual Lucene query that will be executed.</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.ValidateQueryResponse.Explanations">
            <summary>
            Gets the explanations if Explain() was set.
            </summary>
        </member>
        <member name="T:Nest.GraphExploreRequest">
            <summary>Request parameters for GraphExplore <pre>https://www.elastic.co/guide/en/graph/current/explore.html</pre></summary>
        </member>
        <member name="M:Nest.GraphExploreRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_graph/explore</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.GraphExploreRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_graph/explore</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GraphExploreRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GraphExploreRequest`1">
            <summary>Request parameters for GraphExplore <pre>https://www.elastic.co/guide/en/graph/current/explore.html</pre></summary>
        </member>
        <member name="M:Nest.GraphExploreRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_graph/explore</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.GraphExploreRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_graph/explore</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GraphExploreRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest`1.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest`1.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest`1.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GraphExploreDescriptor`1">
            <summary>descriptor for GraphExplore <pre>https://www.elastic.co/guide/en/graph/current/explore.html</pre></summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.#ctor(Nest.Indices)">
             <summary>/{index}/_graph/explore</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Index``1">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.AllIndices">
            <summary>A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Type``1">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.AllTypes">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetLicenseRequest">
            <summary>Request parameters for LicenseGet <pre>https://www.elastic.co/guide/en/shield/current/license-management.html</pre></summary>
        </member>
        <member name="P:Nest.GetLicenseRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetLicenseRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetLicenseRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetLicenseDescriptor">
            <summary>descriptor for LicenseGet <pre>https://www.elastic.co/guide/en/shield/current/license-management.html</pre></summary>
        </member>
        <member name="M:Nest.GetLicenseDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetLicenseDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetLicenseDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteLicenseRequest">
            <summary>Request parameters for LicenseDelete <pre>https://www.elastic.co/guide/en/shield/current/license-management.html</pre></summary>
        </member>
        <member name="P:Nest.DeleteLicenseRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteLicenseRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteLicenseDescriptor">
            <summary>descriptor for LicenseDelete <pre>https://www.elastic.co/guide/en/shield/current/license-management.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteLicenseDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteLicenseDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.LicenseAcknowledgement">
            <summary>
            If the license is valid but is older or has less capabilities this will list out the reasons why a resubmission with acknowledge=true is required
            </summary>
        </member>
        <member name="T:Nest.PostLicenseRequest">
            <summary>Request parameters for LicensePost <pre>https://www.elastic.co/guide/en/shield/current/license-management.html</pre></summary>
        </member>
        <member name="P:Nest.PostLicenseRequest.Acknowledge">
            <summary>whether the user has acknowledged acknowledge messages (default: false)</summary>
        </member>
        <member name="P:Nest.PostLicenseRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PostLicenseRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PostLicenseDescriptor">
            <summary>descriptor for LicensePost <pre>https://www.elastic.co/guide/en/shield/current/license-management.html</pre></summary>
        </member>
        <member name="M:Nest.PostLicenseDescriptor.Acknowledge(System.Boolean)">
            <summary>whether the user has acknowledged acknowledge messages (default: false)</summary>
        </member>
        <member name="M:Nest.PostLicenseDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.PostLicenseDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="P:Nest.IPostLicenseResponse.Acknowledge">
            <summary>
            If the license is valid but is older or has less capabilities this will list out the reasons why a resubmission with acknowledge=true is required.
            null if no acknowledge resubmission is needed
            </summary>
        </member>
        <member name="T:Nest.AuthenticateRequest">
            <summary>Request parameters for ShieldAuthenticate <pre>Retrieve details about the currently authenticated user</pre></summary>
        </member>
        <member name="P:Nest.AuthenticateRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.AuthenticateRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.AuthenticateDescriptor">
            <summary>descriptor for ShieldAuthenticate <pre>Retrieve details about the currently authenticated user</pre></summary>
        </member>
        <member name="M:Nest.AuthenticateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.AuthenticateDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClearCachedRealmsRequest">
            <summary>Request parameters for ShieldClearCachedRealms <pre>Clears the internal user caches for specified realms</pre></summary>
        </member>
        <member name="M:Nest.ClearCachedRealmsRequest.#ctor(Nest.Names)">
             <summary>/_shield/realm/{realms}/_clear_cache</summary>
            <param name="realms">this parameter is required</param>
        </member>
        <member name="P:Nest.ClearCachedRealmsRequest.Usernames">
            <summary>Comma-separated list of usernames to clear from the cache</summary>
        </member>
        <member name="P:Nest.ClearCachedRealmsRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ClearCachedRealmsRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClearCachedRealmsDescriptor">
            <summary>descriptor for ShieldClearCachedRealms <pre>Clears the internal user caches for specified realms</pre></summary>
        </member>
        <member name="M:Nest.ClearCachedRealmsDescriptor.#ctor(Nest.Names)">
             <summary>/_shield/realm/{realms}/_clear_cache</summary>
            <param name="realms"> this parameter is required</param>
        </member>
        <member name="M:Nest.ClearCachedRealmsDescriptor.Usernames(System.String[])">
            <summary>Comma-separated list of usernames to clear from the cache</summary>
        </member>
        <member name="M:Nest.ClearCachedRealmsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ClearCachedRealmsDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClearCachedRolesRequest">
            <summary>Request parameters for ShieldClearCachedRoles <pre>Clears the internal caches for specified roles</pre></summary>
        </member>
        <member name="M:Nest.ClearCachedRolesRequest.#ctor(Nest.Names)">
             <summary>/_shield/role/{name}/_clear_cache</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.ClearCachedRolesRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.ClearCachedRolesRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.ClearCachedRolesDescriptor">
            <summary>descriptor for ShieldClearCachedRoles <pre>Clears the internal caches for specified roles</pre></summary>
        </member>
        <member name="M:Nest.ClearCachedRolesDescriptor.#ctor(Nest.Names)">
             <summary>/_shield/role/{name}/_clear_cache</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.ClearCachedRolesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.ClearCachedRolesDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteRoleRequest">
            <summary>Request parameters for ShieldDeleteRole <pre>Remove a role from the native shield realm</pre></summary>
        </member>
        <member name="M:Nest.DeleteRoleRequest.#ctor(Nest.Name)">
             <summary>/_shield/role/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteRoleRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteRoleRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteRoleDescriptor">
            <summary>descriptor for ShieldDeleteRole <pre>Remove a role from the native shield realm</pre></summary>
        </member>
        <member name="M:Nest.DeleteRoleDescriptor.#ctor(Nest.Name)">
             <summary>/_shield/role/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteRoleDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteRoleDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetRoleRequest">
            <summary>Request parameters for ShieldGetRole <pre>Retrieve one or more roles from the native shield realm</pre></summary>
        </member>
        <member name="M:Nest.GetRoleRequest.#ctor(Nest.Name)">
             <summary>/_shield/role/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetRoleRequest.#ctor">
            <summary>/_shield/role</summary>
        </member>
        <member name="P:Nest.GetRoleRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetRoleRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetRoleDescriptor">
            <summary>descriptor for ShieldGetRole <pre>Retrieve one or more roles from the native shield realm</pre></summary>
        </member>
        <member name="M:Nest.GetRoleDescriptor.#ctor">
            <summary>/_shield/role/{name}</summary>
        </member>
        <member name="M:Nest.GetRoleDescriptor.Name(Nest.Name)">
            <summary>Role name</summary>
        </member>
        <member name="M:Nest.GetRoleDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetRoleDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutRoleRequest">
            <summary>Request parameters for ShieldPutRole <pre>Update or create a role for the native shield realm</pre></summary>
        </member>
        <member name="M:Nest.PutRoleRequest.#ctor(Nest.Name)">
             <summary>/_shield/role/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.PutRoleRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PutRoleRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutRoleDescriptor">
            <summary>descriptor for ShieldPutRole <pre>Update or create a role for the native shield realm</pre></summary>
        </member>
        <member name="M:Nest.PutRoleDescriptor.Indices(System.Collections.Generic.IEnumerable{Nest.IIndicesPrivileges})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleDescriptor.Indices(System.Func{Nest.IndicesPrivilegesDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IIndicesPrivileges}}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleDescriptor.#ctor(Nest.Name)">
             <summary>/_shield/role/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutRoleDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.PutRoleDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteUserRequest">
            <summary>Request parameters for ShieldDeleteUser <pre>Remove a user from the native shield realm</pre></summary>
        </member>
        <member name="M:Nest.DeleteUserRequest.#ctor(Nest.Name)">
             <summary>/_shield/user/{username}</summary>
            <param name="username">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteUserRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.DeleteUserRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.DeleteUserDescriptor">
            <summary>descriptor for ShieldDeleteUser <pre>Remove a user from the native shield realm</pre></summary>
        </member>
        <member name="M:Nest.DeleteUserDescriptor.#ctor(Nest.Name)">
             <summary>/_shield/user/{username}</summary>
            <param name="username"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteUserDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.DeleteUserDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetUserRequest">
            <summary>Request parameters for ShieldGetUser <pre>Retrieve one or more users from the native shield realm</pre></summary>
        </member>
        <member name="M:Nest.GetUserRequest.#ctor(Nest.Names)">
             <summary>/_shield/user/{username}</summary>
            <param name="username">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetUserRequest.#ctor">
            <summary>/_shield/user</summary>
        </member>
        <member name="P:Nest.GetUserRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.GetUserRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.GetUserDescriptor">
            <summary>descriptor for ShieldGetUser <pre>Retrieve one or more users from the native shield realm</pre></summary>
        </member>
        <member name="M:Nest.GetUserDescriptor.#ctor">
            <summary>/_shield/user/{username}</summary>
        </member>
        <member name="M:Nest.GetUserDescriptor.Username(Nest.Names)">
            <summary>A comma-separated list of usernames</summary>
        </member>
        <member name="M:Nest.GetUserDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.GetUserDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutUserRequest">
            <summary>Request parameters for ShieldPutUser <pre>Update or create a user for the native shield realm</pre></summary>
        </member>
        <member name="M:Nest.PutUserRequest.#ctor(Nest.Name)">
             <summary>/_shield/user/{username}</summary>
            <param name="username">this parameter is required</param>
        </member>
        <member name="P:Nest.PutUserRequest.Source">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="P:Nest.PutUserRequest.FilterPath">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="T:Nest.PutUserDescriptor">
            <summary>descriptor for ShieldPutUser <pre>Update or create a user for the native shield realm</pre></summary>
        </member>
        <member name="M:Nest.PutUserDescriptor.#ctor(Nest.Name)">
             <summary>/_shield/user/{username}</summary>
            <param name="username"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutUserDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition</summary>
        </member>
        <member name="M:Nest.PutUserDescriptor.FilterPath(System.String)">
            <summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.BulkRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Default comma-separated list of fields to return in the response for updates</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.ExplainRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.ExplainRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.ExplainRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.GetRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.GetRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.GetRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.SourceRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.SourceRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Field``1(Elasticsearch.Net.AnalyzeRequestParameters,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.ClearCacheRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._CompletionFields``1(Elasticsearch.Net.IndicesStatsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._FielddataFields``1(Elasticsearch.Net.IndicesStatsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.IndicesStatsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.MultiGetRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.MultiGetRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.MultiGetRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.MultiTermVectorsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._CompletionFields``1(Elasticsearch.Net.NodesStatsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._FielddataFields``1(Elasticsearch.Net.NodesStatsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.NodesStatsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SuggestField``1(Elasticsearch.Net.SearchRequestParameters,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.TermVectorsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to return.</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.UpdateByQueryRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to return as part of a hit</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._FielddataFields``1(Elasticsearch.Net.UpdateByQueryRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to return as the field data representation of a field for each hit</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.UpdateByQueryRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.UpdateByQueryRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SuggestField``1(Elasticsearch.Net.UpdateByQueryRequestParameters,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>Specify which field to use for suggestions</summary>
        </member>
    </members>
</doc>
