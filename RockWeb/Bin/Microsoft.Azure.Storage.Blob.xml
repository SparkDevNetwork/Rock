<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Storage.Blob</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.#ctor(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Security.Cryptography.ICryptoTransform)">
            <summary>
            Initializes a new instance of the BlobWriteStream class for a block blob.
            </summary>
            <param name="blockBlob">Blob reference to write to.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="transform">The ICryptoTransform function for the request.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.#ctor(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Int64,System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Security.Cryptography.ICryptoTransform)">
            <summary>
            Initializes a new instance of the BlobWriteStream class for a page blob.
            </summary>
            <param name="pageBlob">Blob reference to write to.</param>
            <param name="pageBlobSize">Size of the page blob.</param>
            <param name="createNew">Use <c>true</c> if the page blob is newly created, <c>false</c> otherwise.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="transform">The ICryptoTransform function for the request.</param>        
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.#ctor(Microsoft.Azure.Storage.Blob.CloudAppendBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Security.Cryptography.ICryptoTransform)">
            <summary>
            Initializes a new instance of the BlobWriteStream class for an append blob.
            </summary>
            <param name="appendBlob">Blob reference to write to.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="transform">The ICryptoTransform function for the request.</param>        
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This operation is not supported in BlobWriteStreamBase.
            </summary>
            <param name="buffer">Not used.</param>
            <param name="offset">Not used.</param>
            <param name="count">Not used.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.SetLength(System.Int64)">
            <summary>
            This operation is not supported in BlobWriteStreamBase.
            </summary>
            <param name="value">Not used.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type <c>SeekOrigin</c> indicating the reference
            point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current
            position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from
            buffer to the current stream. </param>
            <param name="offset">The zero-based byte offset in buffer at which to begin
            copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from
            buffer to the current stream. </param>
            <param name="offset">The zero-based byte offset in buffer at which to begin
            copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <param name="callback">An optional asynchronous callback, to be called when the write is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>An <c>IAsyncResult</c> that represents the asynchronous write, which could still be pending.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.EndWrite(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous write to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.FlushAsync(System.Threading.CancellationToken)">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying blob.
            </summary>
            <param name="token">Cancellation token</param>
            <returns>Task</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.Commit">
            <summary>
            Clears all buffers for this stream, causes any buffered data to be written to the underlying blob, and commits the blob. This should be the last operation
            on the stream.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.BeginCommit(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous commit operation.
            </summary>
            <param name="callback">An optional asynchronous callback, to be called when the commit is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous commit request from other requests.</param>
            <returns>An <c>ICancellableAsyncResult</c> that represents the asynchronous commit, which could still be pending.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.EndCommit(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous commit to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.CommitAsync">
            <summary>
            Asynchronously commit the stream. Clears all buffers for this stream, causes any buffered 
            data to be written to the underlying blob, and commits the blob. This should be the 
            last operation on the stream.
            </summary>
            <param name="token">Cancellation token</param>
            <returns>Task</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptedWriteStream.Dispose(System.Boolean)">
            <summary>
            Releases the blob resources used by the Stream.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy">
            <summary>
            Represents an encryption policy for performing envelope encryption/decryption of Azure blobs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy.EncryptionMode">
            <summary>
            Gets and sets the blob encryption mode.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobEncryptionMode"/> enum value. </value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy.Key">
            <summary>
            An object of type <see cref="T:Microsoft.Azure.KeyVault.Core.IKey"/> that is used to wrap/unwrap the content key during encryption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy.KeyResolver">
            <summary>
            Gets or sets the key resolver used to select the correct key for decrypting existing blobs.
            </summary>
            <value>A resolver that returns an <see cref="T:Microsoft.Azure.KeyVault.Core.IKey"/>, given a key ID.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy.#ctor(Microsoft.Azure.KeyVault.Core.IKey,Microsoft.Azure.KeyVault.Core.IKeyResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy"/> class with the specified key and resolver.
            </summary>
            <param name="key">An object of type <see cref="T:Microsoft.Azure.KeyVault.Core.IKey"/> that is used to wrap/unwrap the content key during encryption.</param>
            <param name="keyResolver">The key resolver used to select the correct key for decrypting existing blobs.</param>
            <remarks>If the generated policy is to be used for encryption, users are expected to provide a key at the minimum.
            The absence of key will cause an exception to be thrown during encryption.<br/>
            If the generated policy is intended to be used for decryption, users can provide a key resolver. The client library will:<br/>
            1. Invoke the key resolver, if specified, to get the key.<br/>
            2. If resolver is not specified but a key is specified, the client library will match the key ID against the key and use the key.</remarks> 
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy.DecryptBlob(System.IO.Stream,System.Collections.Generic.IDictionary{System.String,System.String},System.Security.Cryptography.ICryptoTransform@,System.Nullable{System.Boolean},System.Byte[],System.Boolean)">
            <summary>
            Return a reference to a <see cref="T:System.Security.Cryptography.CryptoStream"/> object, given a user stream. This method is used for decrypting blobs.
            </summary>
            <param name="userProvidedStream">The output stream provided by the user.</param>
            <param name="metadata">A reference to a dictionary containing blob metadata that includes the encryption data.</param>
            <param name="transform">The <see cref="T:System.Security.Cryptography.ICryptoTransform"/> function for the request.</param>
            <param name="requireEncryption">A boolean value to indicate whether the data read from the server should be encrypted.</param>
            <param name="iv">The iv to use if pre-buffered. Used only for range reads.</param>
            <param name="noPadding">Value indicating if the padding mode should be set or not.</param>
            <returns>A reference to a <see cref="T:System.Security.Cryptography.CryptoStream"/> that will be written to.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy.WrapUserStreamWithDecryptStream(Microsoft.Azure.Storage.Blob.CloudBlob,System.IO.Stream,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.Blob.BlobAttributes,System.Boolean,System.Security.Cryptography.ICryptoTransform@,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Int32,System.Boolean)">
            <summary>
            Internal helper method to wrap a user provided stream with the appropriate crypto stream.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobEncryptionPolicy.CreateAndSetEncryptionContext(System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Set up the encryption context required for encrypting blobs.
            </summary>
            <param name="metadata">Reference to blob metadata object that is used to set the encryption materials.</param>
            <param name="noPadding">Value indicating if the padding mode should be set or not.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStream.#ctor(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initializes a new instance of the BlobReadStream class.
            </summary>
            <param name="blob">Blob reference to read from</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the
            position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing
            data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>The total number of bytes read into the buffer. This can be
            less than the number of bytes requested if that many bytes are not
            currently available, or zero (0) if the end of the stream has been reached.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing
            data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="callback">An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An <c>IAsyncResult</c> that represents the asynchronous read, which could still be pending.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStream.EndRead(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous read to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>The total number of bytes read into the buffer. This can be
            less than the number of bytes requested if that many bytes are not
            currently available, or zero (0) if the end of the stream has been reached.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads a sequence of bytes from the current stream, advances the
            position within the stream by the number of bytes read, and monitors cancellation requests.
            </summary>
            <remarks>In the returned <see cref="T:System.Threading.Tasks.Task`1"/> object, the value of the integer
            parameter contains the total number of bytes read into the buffer. The result value can be
            less than the number of bytes requested if the number of bytes currently available is less
            than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</remarks>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing
            data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that represents the asynchronous read operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStream.DispatchReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Dispatches a sync read operation that either reads from the cache or makes a call to
            the server.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing
            data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>Number of bytes read from the stream.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobWriteStream">
            <summary>
            This class uses an algorithm designed to aid users in writing simple code that is also performant.
            The idea is that the caller can write the following pseudocode:
            
            using (BlobWriteStream bws = Cloud*Blob.OpenWrite())
            {
                while (moreData)
                {
                    byte[] bytes = await GetDataAsync();
                    await bws.WriteAsync(bytes);
                }
            }
            
            The goal here is to have this code exhibit a sort of double-buffering functionality, where "GetDataAsync()"
            (whatever that is) is able to run in parallel with the data upload to Azure Storage.  This is accomplished
            via buffering data during the write, and then later uploading it to Storage.
            However, we also need to limit how much data is buffered, to avoid using too much memory. To do this,
            continuation after "await bws.WriteAsync(bytes)" will only continue if the stream hasn't buffered too much.
            
            The limit on what is "too much" depends on the size of the input bytes[] data, the block size, 
            and the max parallelism factor. Roughly, it's the maximum of 1-2x the input byte array size, 
            and block size * parallelism factor. It's also fuzzy depending on whether or not you include any data that's currently
            being processed in WriteAsync(), any data that's currently being uploaded, or just data that's stored in the
            stream's buffer, waiting to be uploaded.
            
            The biggest complication and/or likely location for bugs is around error handling, because errors might occur
            after "await WriteAsync()" has already continued.
            
            If some day we consider a library re-design / re-architect, this code would likely be opt-in.
            
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobWriteStream.IgnoreFlush">
            <summary>
            This value is used mainly to provide async commit functionality(BeginCommit) to BlobEncryptedWriteStream. CryptoStream does not provide begin/end 
            flush. It only provides a blocking sync FlushFinalBlock call which calls the underlying stream's flush method (BlobWriteStream in this case). 
            By setting this to true while initiliazing the write stream, it is ensured that BlobWriteStream's Flush does not do anything and
            just returns. Therefore BeginCommit first just flushes all the data from the crypto stream's buffer to the blob write stream's buffer. The client 
            library then sets this property to false and calls BeginCommit on the write stream and returns the async result back to the user. This time flush actually
            does its work and sends the buffered data over to the service. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.#ctor(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initializes a new instance of the BlobWriteStream class for a block blob.
            </summary>
            <param name="blockBlob">Blob reference to write to.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.#ctor(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Int64,System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initializes a new instance of the BlobWriteStream class for a page blob.
            </summary>
            <param name="pageBlob">Blob reference to write to.</param>
            <param name="pageBlobSize">Size of the page blob.</param>
            <param name="createNew">Use <c>true</c> if the page blob is newly created, <c>false</c> otherwise.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.#ctor(Microsoft.Azure.Storage.Blob.CloudAppendBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initializes a new instance of the BlobWriteStream class for an append blob.
            </summary>
            <param name="appendBlob">Blob reference to write to.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type <c>SeekOrigin</c> indicating the reference
            point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current
            position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from
            buffer to the current stream. </param>
            <param name="offset">The zero-based byte offset in buffer at which to begin
            copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously Writes a sequence of bytes to the current stream and advances the current
            position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from
            buffer to the current stream. </param>
            <param name="offset">The zero-based byte offset in buffer at which to begin
            copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <param name="token">Cancellation token</param>
            <returns>Task</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from
            buffer to the current stream. </param>
            <param name="offset">The zero-based byte offset in buffer at which to begin
            copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <param name="callback">An optional asynchronous callback, to be called when the write is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>An <c>IAsyncResult</c> that represents the asynchronous write, which could still be pending.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.EndWrite(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous write to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.BeginFlush(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous flush operation.
            </summary>
            <param name="callback">An optional asynchronous callback, to be called when the flush is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</param>
            <returns>An <c>ICancellableAsyncResult</c> that represents the asynchronous flush, which could still be pending.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.EndFlush(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous flush to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.Dispose(System.Boolean)">
            <summary>
            Releases the blob resources used by the Stream.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.Commit">
            <summary>
            Clears all buffers for this stream, causes any buffered data to be written to the underlying blob, and commits the blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.BeginCommit(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous commit operation.
            </summary>
            <param name="callback">An optional asynchronous callback, to be called when the commit is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous commit request from other requests.</param>
            <returns>An <c>ICancellableAsyncResult</c> that represents the asynchronous commit, which could still be pending.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.EndCommit(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous commit to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStream.CommitAsync">
            <summary>
            Asynchronously clears all buffers for this stream, causes any buffered 
            data to be written to the underlying blob, and commits the blob.
            </summary>
            <param name="token">Cancellation token</param>
            <returns>Task</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob">
            <summary>
            Represents an append blob, a type of blob where blocks of data are always committed to the end of the blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.OpenWrite(System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Opens a stream for writing to the blob.
            </summary>
            <param name="createNew">Use <c>true</c> to create a new append blob or overwrite an existing one, <c>false</c> to append to an existing blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> object.</returns>
            <remarks>
            Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/> method under the covers.
            Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 4 MB inclusive.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginOpenWrite(System.Boolean,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a stream for writing to the blob.
            </summary>
            <param name="createNew">Use <c>true</c> to create a new append blob or overwrite an existing one, <c>false</c> to append to an existing blob.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/> method under the covers.
            Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 4 MB inclusive.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginOpenWrite(System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a stream for writing to the blob.
            </summary>
            <param name="createNew">Use <c>true</c> to create a new append blob or overwrite an existing one, <c>false</c> to append to an existing blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/> method under the covers.
            Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 4 MB inclusive.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndOpenWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to open a stream for writing to the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean)">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob.
            </summary>
            <param name="createNew">Use <c>true</c> to create a new append blob or overwrite an existing one, <c>false</c> to append to an existing blob.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/> method under the covers.
            Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 4 MB inclusive.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob.
            </summary>
            <param name="createNew">Use <c>true</c> to create a new append blob or overwrite an existing one, <c>false</c> to append to an existing blob.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.
            Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 4 MB inclusive.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob.
            </summary>
            <param name="createNew">Use <c>true</c> to create a new append blob or overwrite an existing one, <c>false</c> to append to an existing blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.
            Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 4 MB inclusive.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob.
            </summary>
            <param name="createNew">Use <c>true</c> to create a new append blob or overwrite an existing one, <c>false</c> to append to an existing blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.
            Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 4 MB inclusive.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Appends a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Appends a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamHelper(System.IO.Stream,System.Nullable{System.Int64},System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to an append blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="createNew"><c>true</c> if the append blob is newly created, <c>false</c> otherwise.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndUploadFromStream(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a stream to an append blob. 
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndAppendFromStream(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to append a stream to an append blob. 
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsyncHelper(System.IO.Stream,System.Nullable{System.Int64},System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Uploads a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">The stream providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="createNew"><c>true</c> if the append blob is newly created, <c>false</c> otherwise.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents an asynchronous action.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsyncHelper(System.IO.Stream,System.Nullable{System.Int64},System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer,System.Threading.CancellationToken)">
            <summary>
            Uploads a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">The stream providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="createNew"><c>true</c> if the append blob is newly created, <c>false</c> otherwise.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressIncrementer"> An <see cref="T:Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer"/> object to gather progress deltas.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents an asynchronous action.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream)">
            <summary>
            Initiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)">
            <summary>
            Initiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream)">
            <summary>
            Initiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>        
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.        
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64)">
            <summary>
            Initiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Appends a file to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>   
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>   
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndUploadFromFile(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a file to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndAppendFromFile(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a file to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String)">
            <summary>
            Initiates an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String)">
            <summary>
            Initiates an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Appends the contents of a byte array to an append blob.Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndUploadFromByteArray(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload the contents of a byte array to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append the contents of a byte array to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append the contents of a byte array to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append the contents of a byte array to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndAppendFromByteArray(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to append the contents of a byte array to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initiates an asynchronous operation to append the contents of a byte array to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append the contents of a byte array to an append blob. Recommended only for single-writer scenarios.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to append the contents of a byte array to an append blob.This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to an append blob.This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to an append blob.This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Appends a string of text to an append blob. This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndUploadText(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a string of text to an append blob. This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndAppendText(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String)">
            <summary>
            Initiates an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Use this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            To append data to an append blob that already exists, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String)">
            <summary>
            Initiates an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario 
            because the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            If you have a single-writer scenario, see <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry"/> to determine whether setting this flag to <c>true</c> is acceptable for your scenario.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateOrReplace(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Creates an empty append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create an empty append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting,
            use <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create an empty append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndCreateOrReplace(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to create an append blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync">
            <summary>
            Initiates an asynchronous operation to create an empty append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting,
            use <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create an append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting,
            use <see cref="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to create an empty append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create an empty append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlock(System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Commits a new block of data to the end of the blob.
            </summary>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The offset at which the block was appended.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlock(System.Uri,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Commits a new block of data to the end of the blob.
            </summary>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset in the source at which to begin retrieving content.</param>
            <param name="count">The number of bytes from the source to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="sourceContentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The offset at which the block was appended.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to commit a new block of data to the end of the blob.
            </summary>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to commit a new block of data to the end of the blob.
            </summary>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to commit a new block of data to the end of the blob.
            </summary>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to commit a new block of data to the end of the blob.
            </summary>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.Uri,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Commits a new block of data to the end of the blob.
            </summary>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset in the source at which to begin retrieving content.</param>
            <param name="count">The number of bytes from the source to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="sourceContentMd5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndAppendBlock(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to commit a new block of data to the end of the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String)">
            <summary>
            Initiates an asynchronous operation to commit a new block of data to the end of the blob.
            </summary>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Append Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> property is set to <c>true</c> and the <paramref name="contentMD5"/> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to commit a new block of data to the end of the blob.
            </summary>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> property is set to <c>true</c> and the <paramref name="contentMD5"/> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to commit a new block of data to the end of the blob.
            </summary>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Append Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> property is set to <c>true</c> and the <paramref name="contentMD5"/> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to commit a new block of data to the end of the blob.
            </summary>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Append Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> property is set to <c>true</c> and the <paramref name="contentMD5"/> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to commit a new block of data to the end of the blob.
            </summary>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Append Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> property is set to <c>true</c> and the <paramref name="contentMD5"/> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to commit a new block of data to the end of the blob.
            </summary>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.Uri,System.Int64,System.Int64,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Commits a new block of data to the end of the blob.
            </summary>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset in the source at which to begin retrieving content.</param>
            <param name="count">The number of bytes from the source to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="sourceContentMd5">An optional hash value that will be used to set the <see cref="P:Microsoft.Azure.Storage.Blob.BlobProperties.ContentMD5"/> property
            on the blob. May be <c>null</c> or an empty string.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents an asynchronous action.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.Uri,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Commits a new block of data to the end of the blob.
            </summary>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset in the source at which to begin retrieving content.</param>
            <param name="count">The number of bytes from the source to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="sourceContentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents an asynchronous action.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.DownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Downloads the blob's contents as a string.
            </summary>
            <param name="encoding">An object that indicates the text encoding to use.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The contents of the blob, as a string.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="encoding">An object that indicates the text encoding to use.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="encoding">An object that indicates the text encoding to use.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndDownloadText(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>The contents of the blob, as a string.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.DownloadTextAsync">
            <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="encoding">An object that indicates the text encoding to use.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="encoding">An object that indicates the text encoding to use.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="encoding">An object that indicates the text encoding to use.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudAppendBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Begins an operation to start copying another append blob's contents, properties, and metadata to this append blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The copy ID associated with the copy operation.</returns>
            <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudAppendBlob,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another append blob's contents, properties, and metadata to this append blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudAppendBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another append blob's contents, properties, and metadata to this append blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudAppendBlob)">
            <summary>
            Initiates an asynchronous operation to start copying another append blob's contents, properties, and metadata to this append blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudAppendBlob,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another append blob's contents, properties, and metadata to this append blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudAppendBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to start copying another append blob's contents, properties, and metadata to this append blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudAppendBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another append blob's contents, properties, and metadata to this append blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Creates a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object that is a blob snapshot.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.EndCreateSnapshot(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object that is a blob snapshot.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateImpl(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implements the Create method.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that creates the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockImpl(System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Commits the block to the end of the blob.
            </summary>
            <param name="source">The source stream.</param>
            <param name="contentChecksum">The content checksum.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that commits the block to the end of the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.AppendBlockImpl(System.Uri,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Commits the block to the end of the blob.
            </summary>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset in the source at which to begin retrieving content.</param>
            <param name="count">The number of bytes from the source to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="sourceContentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="!:RESTCommand"/> that uploads the block.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.CreateSnapshotImpl(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the Snapshot method.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot, or <c>null</c>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that creates the snapshot.</returns>
            <remarks>If the <c>metadata</c> parameter is <c>null</c> then no metadata is associated with the request.</remarks>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CloudAppendBlob.streamWriteSizeInBytes">
            <summary>
            Default is 4 MB.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:Microsoft.Azure.Storage.StorageUri"/> containing the absolute URI to the blob at both the primary and secondary locations.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:Microsoft.Azure.Storage.StorageUri"/> containing the absolute URI to the blob at both the primary and secondary locations.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(System.String,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> class using the specified blob name and
            the parent container reference.
            If snapshotTime is not null, the blob instance represents a Snapshot.
            </summary>
            <param name="blobName">Name of the blob.</param>
            <param name="snapshotTime">Snapshot time in case the blob is a snapshot.</param>
            <param name="container">The reference to the parent container.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudAppendBlob.#ctor(Microsoft.Azure.Storage.Blob.BlobAttributes,Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> class.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="serviceClient">The service client.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes">
            <summary>
            Gets or sets the number of bytes to buffer when writing to an append blob stream.
            </summary>
            <value>The size of a block, in bytes, ranging from between 16 KB and 4 MB inclusive.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.CloudBlob">
            <summary>
            Represents an Azure blob. A blob stores text or binary data, such as documents or media files.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.OpenRead(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Opens a stream for reading from the blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object to be used for reading from the blob.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginOpenRead(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndOpenRead(System.IAsyncResult)"/> method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginOpenRead(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndOpenRead(System.IAsyncResult)"/> method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndOpenRead(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object to be used for reading from the blob.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by this method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.OpenReadAsync">
            <summary>
            Initiates an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:System.IO.Stream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by this method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.OpenReadAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:System.IO.Stream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by this method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:System.IO.Stream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by this method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:System.IO.Stream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by this method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Downloads the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDownloadToStream(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.RotateEncryptionKey(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Rotates the encryption key on this blob.
            This method rotates only the KEK, not the CEK.  For more information, visit https://azure.microsoft.com/en-us/documentation/articles/storage-client-side-encryption/
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. 
            For this operation, there must not be an <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag"/>, <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfNoneMatchETag"/>, 
            <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfModifiedSinceTime"/>, or <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfNotModifiedSinceTime"/> condition.  
            An <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag"/> condition will be added internally.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            This method has a number of prerequisites:
            1. The blob must be encrypted on the service using client-side encryption (not service-side encryption.)
            2. The local object must have the latest attributes from the blob on the service.  This can be done by calling FetchAttributes() on the blob, or by listing blobs in the container with metadata.
            3. The Encryption Policy on the default BlobRequestOptions must contain an IKeyResolver capable of resolving the old encryption key.
            4. The Encryption Policy on the default BlobRequestOptions must contain an IKey with the new encryption key.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginRotateEncryptionKey(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to rotate the encryption key on this blob.
            This method rotates only the KEK, not the CEK.  For more information, visit https://azure.microsoft.com/en-us/documentation/articles/storage-client-side-encryption/
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            This method has a number of prerequisites:
            1. The blob must be encrypted on the service using client-side encryption (not service-side encryption.)
            2. The local object must have the latest attributes from the blob on the service.  This can be done by calling FetchAttributes() on the blob, or by listing blobs in the container with metadata.
            3. The Encryption Policy on the default BlobRequestOptions must contain an IKeyResolver capable of resolving the old encryption key.
            4. The Encryption Policy on the default BlobRequestOptions must contain an IKey with the new encryption key.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginRotateEncryptionKey(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to rotate the encryption key on this blob.
            This method rotates only the KEK, not the CEK.  For more information, visit https://azure.microsoft.com/en-us/documentation/articles/storage-client-side-encryption/
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. 
            For this operation, there must not be an <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag"/>, <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfNoneMatchETag"/>, 
            <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfModifiedSinceTime"/>, or <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfNotModifiedSinceTime"/> condition.  
            An <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag"/> condition will be added internally.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            This method has a number of prerequisites:
            1. The blob must be encrypted on the service using client-side encryption (not service-side encryption.)
            2. The local object must have the latest attributes from the blob on the service.  This can be done by calling FetchAttributes() on the blob, or by listing blobs in the container with metadata.
            3. The Encryption Policy on the default BlobRequestOptions must contain an IKeyResolver capable of resolving the old encryption key.
            4. The Encryption Policy on the default BlobRequestOptions must contain an IKey with the new encryption key.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndRotateEncryptionKey(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to rotate the encryption key on this blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.RotateEncryptionKeyAsync">
            <summary>
            Initiates an asynchronous operation to rotate the encryption key on this blob.
            This method rotates only the KEK, not the CEK.  For more information, visit https://azure.microsoft.com/en-us/documentation/articles/storage-client-side-encryption/
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns> 
            <remarks>
            This method has a number of prerequisites:
            1. The blob must be encrypted on the service using client-side encryption (not service-side encryption.)
            2. The local object must have the latest attributes from the blob on the service.  This can be done by calling FetchAttributes() on the blob, or by listing blobs in the container with metadata.
            3. The Encryption Policy on the default BlobRequestOptions must contain an IKeyResolver capable of resolving the old encryption key.
            4. The Encryption Policy on the default BlobRequestOptions must contain an IKey with the new encryption key.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.RotateEncryptionKeyAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to rotate the encryption key on this blob.
            This method rotates only the KEK, not the CEK.  For more information, visit https://azure.microsoft.com/en-us/documentation/articles/storage-client-side-encryption/
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns> 
            <remarks>
            This method has a number of prerequisites:
            1. The blob must be encrypted on the service using client-side encryption (not service-side encryption.)
            2. The local object must have the latest attributes from the blob on the service.  This can be done by calling FetchAttributes() on the blob, or by listing blobs in the container with metadata.
            3. The Encryption Policy on the default BlobRequestOptions must contain an IKeyResolver capable of resolving the old encryption key.
            4. The Encryption Policy on the default BlobRequestOptions must contain an IKey with the new encryption key.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.RotateEncryptionKeyAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to rotate the encryption key on this blob.
            This method rotates only the KEK, not the CEK.  For more information, visit https://azure.microsoft.com/en-us/documentation/articles/storage-client-side-encryption/
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. 
            For this operation, there must not be an <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag"/>, <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfNoneMatchETag"/>, 
            <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfModifiedSinceTime"/>, or <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfNotModifiedSinceTime"/> condition.  
            An <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag"/> condition will be added internally.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns> 
            <remarks>
            This method has a number of prerequisites:
            1. The blob must be encrypted on the service using client-side encryption (not service-side encryption.)
            2. The local object must have the latest attributes from the blob on the service.  This can be done by calling FetchAttributes() on the blob, or by listing blobs in the container with metadata.
            3. The Encryption Policy on the default BlobRequestOptions must contain an IKeyResolver capable of resolving the old encryption key.
            4. The Encryption Policy on the default BlobRequestOptions must contain an IKey with the new encryption key.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.RotateEncryptionKeyAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to rotate the encryption key on this blob.
            This method rotates only the KEK, not the CEK.  For more information, visit https://azure.microsoft.com/en-us/documentation/articles/storage-client-side-encryption/
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. 
            For this operation, there must not be an <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag"/>, <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfNoneMatchETag"/>, 
            <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfModifiedSinceTime"/>, or <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfNotModifiedSinceTime"/> condition.  
            An <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag"/> condition will be added internally.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns> 
            <remarks>
            This method has a number of prerequisites:
            1. The blob must be encrypted on the service using client-side encryption (not service-side encryption.)
            2. The local object must have the latest attributes from the blob on the service.  This can be done by calling FetchAttributes() on the blob, or by listing blobs in the container with metadata.
            3. The Encryption Policy on the default BlobRequestOptions must contain an IKeyResolver capable of resolving the old encryption key.
            4. The Encryption Policy on the default BlobRequestOptions must contain an IKey with the new encryption key.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFile(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Downloads the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDownloadToFile(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Downloads the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that specifies how to open the file.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the blob.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>An <see cref="T:System.Threading.Tasks.Task"/> that represents an asynchronous action.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileParallelAsync(System.String,System.IO.FileMode,System.Int32,System.Nullable{System.Int64})">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a file by making parallel requests.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="parallelIOCount">The maximum number of ranges that can be downloaded concurrently</param>
            <param name="rangeSizeInBytes">The size of each individual range in bytes that is being dowloaded in parallel.
            The range size must be a multiple of 4 KB and a minimum of 4 MB. If no value is passed a default value of 16 MB is used or 4MB if transactional MD5 is enabled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            The parallelIOCount and rangeSizeInBytes should be adjusted depending on the CPU, memory, and bandwidth.
            This API should only be used for larger downloads as a HEAD request is made prior to downloading the data.
            For smaller blobs, please use DownloadToFileAsync().
            To get the best performance, it is recommended to try several values, and measure throughput.
            One place to start would be to set the parallelIOCount to the number of CPUs.
            Then adjust the rangeSizeInBytes so that parallelIOCount times rangeSizeInBytes equals the amount of memory you want the process to consume.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileParallelAsync(System.String,System.IO.FileMode,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a file by making parallel requests.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="parallelIOCount">The maximum number of ranges that can be downloaded concurrently.</param>
            <param name="rangeSizeInBytes">The size of each individual range in bytes that is being dowloaded in parallel.
            The range size must be a multiple of 4 KB and a minimum of 4 MB. If no value is passed a default value of 16 MB is used or 4MB if transactional MD5 is enabled.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            The parallelIOCount and rangeSizeInBytes should be adjusted depending on the CPU, memory, and bandwidth.
            This API should only be used for larger downloads as a HEAD request is made prior to downloading the data.
            For smaller blobs, please use DownloadToFileAsync().
            To get the best performance, it is recommended to try several values, and measure throughput.
            One place to start would be to set the parallelIOCount to the number of CPUs.
            Then adjust the rangeSizeInBytes so that parallelIOCount times rangeSizeInBytes equals the amount of memory you want the process to consume.
            
            ## Examples
            [!code-csharp[DownloadToFileParallel](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobDownloadToFileParallelTests.cs#sample_DownloadToFileParallel "DownloadToFileParallel Sample")]
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToFileParallelAsync(System.String,System.IO.FileMode,System.Int32,System.Nullable{System.Int64},System.Int64,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a file by making parallel requests.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="parallelIOCount">The maximum number of ranges that can be downloaded concurrently</param>
            <param name="rangeSizeInBytes">The size of each individual range in bytes that is being dowloaded in parallel.
            The range size must be a multiple of 4 KB and a minimum of 4 MB. If no value is passed a default value of 16 MB or 4MB if transactional MD5 is enabled.</param>
            <param name="offset">The offset of the blob.</param>
            <param name="length">The number of bytes to download.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            The parallelIOCount and rangeSizeInBytes should be adjusted depending on the CPU, memory, and bandwidth.
            This API should only be used for larger downloads as a HEAD request is made prior to downloading the data.
            For smaller blobs, please use DownloadToFileAsync().
            To get the best performance, it is recommended to try several values, and measure throughput.
            One place to start would be to set the parallelIOCount to the number of CPUs.
            Then adjust the rangeSizeInBytes so that parallelIOCount times rangeSizeInBytes equals the amount of memory you want the process to consume.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToByteArray(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Downloads the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDownloadToByteArray(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>int</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>int</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>int</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>int</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>int</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Downloads a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The offset at which to begin downloading the blob, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The offset at which to begin downloading the blob, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The offset at which to begin downloading the blob, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The offset at which to begin downloading the blob, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDownloadRangeToStream(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The offset at which to begin downloading the blob, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The offset at which to begin downloading the blob, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The offset at which to begin downloading the blob, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The offset at which to begin downloading the blob, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The offset at which to begin downloading the blob, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The offset at which to begin downloading the blob, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressIncrementer"> A <see cref="T:Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Downloads a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>int</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>int</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>int</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>int</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data to download from the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>int</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.Exists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Checks existence of the blob.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns><c>true</c> if the blob exists.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.Exists(System.Boolean,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Checks existence of the blob.
            </summary>
            <param name="primaryOnly">If <c>true</c>, the command will be executed against the primary location.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns><c>true</c> if the blob exists.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginExists(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to check existence of the blob.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginExists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to check existence of the blob.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginExists(System.Boolean,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to check existence of the blob.
            </summary>
            <param name="primaryOnly">If <c>true</c>, the command will be executed against the primary location.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndExists(System.IAsyncResult)">
            <summary>
            Returns the asynchronous result of the request to check existence of the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns><c>true</c> if the blob exists.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ExistsAsync">
            <summary>
            Initiates an asynchronous operation to check existence of the blob.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to check existence of the blob.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to check existence of the blob.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to check existence of the blob.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ExistsAsync(System.Boolean,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to check existence of the blob.
            </summary>
            <param name="primaryOnly">If <c>true</c>, the command will be executed against the primary location.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Populates a blob's properties and metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndFetchAttributes(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync">
            <summary>
            Initiates an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Updates the blob's metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginSetMetadata(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to update the blob's metadata.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginSetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to update the blob's metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndSetMetadata(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to update the blob's metadata.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetMetadataAsync">
            <summary>
            Initiates an asynchronous operation to update the blob's metadata.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetMetadataAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to update the blob's metadata.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to update the blob's metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to update the blob's metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetProperties(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Updates the blob's properties.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginSetProperties(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to update the blob's properties.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginSetProperties(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to update the blob's properties.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndSetProperties(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to update the blob's properties.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetPropertiesAsync">
            <summary>
            Initiates an asynchronous operation to update the blob's properties.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to update the blob's properties.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to update the blob's properties.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to update the blob's properties.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.Delete(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Deletes the blob.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDelete(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to delete the blob.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDelete(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to delete the blob.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDelete(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to delete the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteAsync">
            <summary>
            Initiates an asynchronous operation to delete the blob.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to delete the blob.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to delete the blob.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to delete the blob.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteIfExists(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Deletes the blob if it already exists.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns><c>true</c> if the blob did already exist and was deleted; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDeleteIfExists(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to delete the blob if it already exists.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginDeleteIfExists(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to delete the blob if it already exists.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndDeleteIfExists(System.IAsyncResult)">
            <summary>
            Returns the result of an asynchronous request to delete the blob if it already exists.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns><c>true</c> if the blob did already exist and was deleted; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteIfExistsAsync">
            <summary>
            Initiates an asynchronous operation to delete the blob if it already exists.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to delete the blob if it already exists.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to delete the blob if it already exists.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to delete the blob if it already exists.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.Undelete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            UnDeletes the blob if it is soft-deleted.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginUndelete(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to undelete the soft-deleted blob.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginUndelete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to undelete the soft-deleted blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndUndelete(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to undelete the soft-deleted blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.UndeleteAsync">
            <summary>
            Initiates an asynchronous operation to undelete the soft-deleted blob.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.UndeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to delete the blob.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.UndeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to undelete the soft-deleted blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.UndeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to undelete the soft-deleted blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Acquires a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The ID of the acquired lease.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndAcquireLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="asyncResult">An IAsyncResult that references the pending asynchronous operation.</param>
            <returns>The ID of the acquired lease.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Initiates an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.RenewLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Renews a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.  If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndRenewLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition)">
            <summary>
            Initiates an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Changes the lease ID on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The new lease ID.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndChangeLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>The new lease ID.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition)">
            <summary>
            Initiates an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ReleaseLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Releases the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndReleaseLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="asyncResult">An IAsyncResult that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition)">
            <summary>
            Initiates an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BreakLease(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Breaks the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.TimeSpan"/> representing the amount of time before the lease ends, to the second.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndBreakLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="asyncResult">An IAsyncResult that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:System.TimeSpan"/> representing the amount of time before the lease ends, to the second.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})">
            <summary>
            Initiates an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:System.TimeSpan"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:System.TimeSpan"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:System.TimeSpan"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:System.TimeSpan"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopy(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Begins an operation to start copying another blob's contents, properties, and metadata to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The copy ID associated with the copy operation.</returns>
            <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopy(System.Uri,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Begins an operation to start copying another blob's contents, properties, and metadata to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set. Only valid on page blobs.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set. Only valid on block blobs.</param>
            <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The copy ID associated with the copy operation.</returns>
            <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopy(System.Uri,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Begins an operation to start copying another blob's contents, properties, and metadata to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="syncCopy">A boolean to enable synchronous server copy of blobs.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set. Only valid on page blobs.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set. Only valid on block blobs.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The copy ID associated with the copy operation.</returns>
            <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another blob's contents, properties, and metadata to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another blob's contents, properties, and metadata to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another blob's contents, properties, and metadata to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set. Only valid on page blobs.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set. Only valid on block blobs.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,System.String,System.Boolean,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another blob's contents, properties, and metadata to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity for the operation. May be <c>null</c> or an empty string.</param>
            <param name="incrementalCopy">A boolean indicating whether or not this is an incremental copy.</param>
            <param name="syncCopy">A boolean to enable synchronous server copy of blobs.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set. Only valid on page blobs.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set. Only valid on block blobs.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndStartCopy(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to start copying another blob's contents, properties, and metadata to this blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A string containing the copy ID associated with the copy operation.</returns>
            <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri)">
            <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set. Only valid for page blobs.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set. Only valid for block blobs.</param>
            <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Boolean,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this blob.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the source blob.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="syncCopy">A boolean to enable synchronous server copy of blobs.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set. Only valid on page blobs.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set. Only valid on block blobs.</param>
            <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.AbortCopy(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Aborts an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndAbortCopy(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String)">
            <summary>
            Initiates an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.Snapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Creates a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object that is a blob snapshot.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginSnapshot(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndSnapshot(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object that is a blob snapshot.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotAsync">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetBlobImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implements getting the stream without specifying a range.
            </summary>
            <param name="blobAttributes">The attributes.</param>
            <param name="destStream">The destination stream.</param>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that gets the stream.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implements the FetchAttributes method. The attributes are updated immediately.
            </summary>
            <param name="blobAttributes">The attributes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that fetches the attributes.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ExistsImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,Microsoft.Azure.Storage.Blob.BlobRequestOptions,System.Boolean)">
            <summary>
            Implementation for the Exists method.
            </summary>
            <param name="blobAttributes">The attributes.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="primaryOnly">If <c>true</c>, the command will be executed against the primary location.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that checks existence.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetMetadataImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the SetMetadata method.
            </summary>
            <param name="blobAttributes">The attributes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that sets the metadata.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SetPropertiesImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the SetProperties method.
            </summary>
            <param name="blobAttributes">The attributes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that sets the properties.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.DeleteBlobImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implements the DeleteBlob method.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that deletes the blob.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.AcquireLeaseImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Generates a <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> for acquiring a lease.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If null, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> implementing the acquire lease operation.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.RenewLeaseImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Generates a <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> for renewing a lease.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> implementing the renew lease operation.
            </returns>
            <exception cref="T:System.ArgumentException">accessCondition</exception>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ChangeLeaseImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Generates a <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> for changing a lease ID.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="proposedLeaseId">The proposed new lease ID.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> implementing the change lease ID operation.
            </returns>
            <exception cref="T:System.ArgumentException">accessCondition</exception>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ReleaseLeaseImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Generates a <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> for releasing a lease.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> implementing the release lease operation.
            </returns>
            <exception cref="T:System.ArgumentException">accessCondition</exception>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BreakLeaseImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Generates a <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> for breaking a lease.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="breakPeriod">The amount of time to allow the lease to remain, rounded down to seconds.
            If null, the break period is the remainder of the current lease, or zero for infinite leases.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> implementing the break lease operation.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.StartCopyImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,System.Uri,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Boolean,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation of the StartCopy method. Result is a BlobAttributes object derived from the response headers.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="source">The URI of the source blob.</param>
            <param name="sourceContentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="incrementalCopy">A boolean indicating whether or not this is an incremental copy</param>
            <param name="syncCopy">A boolean to enable synchronous server copy of blobs.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source object. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that starts to copy.
            </returns>
            <exception cref="T:System.ArgumentException">sourceAccessCondition</exception>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.AbortCopyImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation of the AbortCopy method. No result is produced.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="copyId">The copy ID of the copy operation to abort.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that aborts the copy.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotImpl(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the Snapshot method.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot, or <c>null</c>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that creates the snapshot.</returns>
            <remarks>If the <c>metadata</c> parameter is <c>null</c> then no metadata is associated with the request.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.UndeleteBlobImpl(Microsoft.Azure.Storage.Blob.BlobAttributes,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implements the UndeleteBlob method.
            </summary>
            <param name="blobAttributes">The attributes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>
            A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that deletes the blob.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ValidateKeyRotationArguments(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,System.Boolean)">
            <summary>
            Validates that the AccessCondition and the RequestOptions passed into a KeyRotation operation are correct.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. 
            For this operation, there must not be an <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag"/>, <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfNoneMatchETag"/>, 
            <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfModifiedSinceTime"/>, or <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfNotModifiedSinceTime"/> condition.  
            An <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag"/> condition will be added internally.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="encryptionMetadataAvailable">If the encryption metadata is available on the local blob.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.RotateEncryptionHelper(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Run the elements of key rotation that are common to both the sync and async cases.
            Because KV only offers us async operations, our sync codepath needs to wrap the async version, and we can reuse some of the code.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. 
            For this operation, there must not be an <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag"/>, <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfNoneMatchETag"/>, 
            <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfModifiedSinceTime"/>, or <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfNotModifiedSinceTime"/> condition.  
            An <see cref="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag"/> condition will be added internally.</param>
            <param name="modifiedOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. Must have already been processed with Apply Defaults.</param>
            <param name="cancellationToken">The cancellation token to use for the async requests.</param>
            <returns>The Task that generates the wrappped key.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BlobOutputStreamCommitCallback(System.IAsyncResult)">
            <summary>
            Called when the asynchronous operation to commit the blob started by UploadFromStream finishes.
            </summary>
            <param name="result">The result of the asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.UpdateAfterFetchAttributes(Microsoft.Azure.Storage.Blob.BlobAttributes,System.Net.Http.HttpResponseMessage)">
            <summary>
            Updates this blob with the given attributes at the end of a fetch attributes operation.
            </summary>
            <param name="blobAttributes">The new attributes.</param>
            <param name="response">The response.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.UpdateETagLMTLengthAndSequenceNumber(Microsoft.Azure.Storage.Blob.BlobAttributes,System.Net.Http.HttpResponseMessage,System.Boolean)">
            <summary>
            Retrieve ETag, LMT, Length and Sequence-Number from response.
            </summary>
            <param name="blobAttributes">The attributes.</param>
            <param name="response">The response to parse.</param>
            <param name="updateLength">If set to <c>true</c>, update the blob length.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.SourceBlobToUri(Microsoft.Azure.Storage.Blob.CloudBlob)">
            <summary>
            Converts the source blob of a copy operation to an appropriate access URI, taking Shared Access Signature credentials into account.
            </summary>
            <param name="source">The source blob.</param>
            <returns>A URI addressing the source blob, using SAS if appropriate.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginGetAccountProperties(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginGetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.EndGetAccountProperties(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetAccountPropertiesAsync">
            <summary>
            Initiates an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetAccountPropertiesAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Get properties for the account this blob resides on.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> object.</returns>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CloudBlob.streamMinimumReadSizeInBytes">
            <summary>
            Default is 4 MB.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.StorageUri"/> containing the absolute URI to the blob at both the primary and secondary locations.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.StorageUri"/> containing the absolute URI to the blob at both the primary and secondary locations.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(System.String,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> class using the specified blob name and
            the parent container reference.
            If snapshotTime is not null, the blob instance represents a Snapshot.
            </summary>
            <param name="blobName">Name of the blob.</param>
            <param name="snapshotTime">Snapshot time in case the blob is a snapshot.</param>
            <param name="container">The reference to the parent container.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.#ctor(Microsoft.Azure.Storage.Blob.BlobAttributes,Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> class.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="serviceClient">The service client.</param>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CloudBlob.container">
            <summary>
            Stores the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> that contains this blob.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CloudBlob.parent">
            <summary>
            Stores the blob's parent <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CloudBlob.attributes">
            <summary>
            Stores the blob's attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.ServiceClient">
            <summary>
            Gets the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object that represents the Blob service.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes">
            <summary>
            Gets or sets the minimum number of bytes to buffer when reading from a blob stream.
            </summary>
            <value>The minimum number of bytes to buffer, being at least 16 KB.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.Properties">
            <summary>
            Gets the blob's system properties.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobProperties"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.Metadata">
            <summary>
            Gets the user-defined metadata for the blob.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.IDictionary`2"/> object containing the blob's metadata as a collection of name-value pairs.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.Uri">
            <summary>
            Gets the blob's URI for the primary location.
            </summary>
            <value>A <see cref="T:System.Uri"/> specifying the absolute URI to the blob at the primary location.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.StorageUri">
            <summary>
            Gets the blob's URIs for both the primary and secondary locations.
            </summary>
            <value>An object of type <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.StorageUri"/> containing the blob's URIs for both the primary and secondary locations.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotTime">
            <summary>
            Gets the date and time that the blob snapshot was taken, if this blob is a snapshot.
            </summary>
            <value>A <see cref="T:System.DateTimeOffset"/> containing the blob's snapshot time if the blob is a snapshot; otherwise, <c>null</c>.</value>
            <remarks>
            If the blob is not a snapshot, the value of this property is <c>null</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.IsSnapshot">
            <summary>
            Gets a value indicating whether this blob is a snapshot.
            </summary>
            <value><c>true</c> if this blob is a snapshot; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.IsDeleted">
            <summary>
            Gets a value indicating whether or not this blob has been deleted.
            </summary>
            <value>A bool representing if the blob has been deleted.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotQualifiedUri">
            <summary>
            Gets the absolute URI to the blob, including query string information if the blob is a snapshot.
            </summary>
            <value>A <see cref="T:System.Uri"/> specifying the absolute URI to the blob, including snapshot query information if the blob is a snapshot.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.SnapshotQualifiedStorageUri">
            <summary>
            Gets the blob's URI for both the primary and secondary locations, including query string information if the blob is a snapshot.
            </summary>
            <value>An object of type <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.StorageUri"/> containing the blob's URIs for both the primary and secondary locations, 
            including snapshot query information if the blob is a snapshot.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.CopyState">
            <summary>
            Gets the state of the most recent or pending copy operation.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.CopyState"/> object containing the copy state, or <c>null</c> if there is no copy state for the blob.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.Name">
            <summary>
            Gets the name of the blob.
            </summary>
            <value>A string containing the name of the blob.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.Container">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> object representing the blob's container.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.Parent">
            <summary>
            Gets the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> object representing the virtual parent directory for the blob.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlob.BlobType">
            <summary>
            Gets the type of the blob.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlob.BlobType"/> enumeration value.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy)">
            <summary>
            Returns a shared access signature for the blob.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <returns>A shared access signature, as a URI query string.</returns>
            <remarks>The query string returned includes the leading question mark.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,System.String)">
            <summary>
            Returns a shared access signature for the blob.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <param name="groupPolicyIdentifier">A string identifying a stored access policy.</param>
            <returns>A shared access signature, as a URI query string.</returns>
            <remarks>The query string returned includes the leading question mark.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders)">
            <summary>
            Returns a shared access signature for the blob.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <param name="headers">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders"/> object specifying optional header values to set for a blob accessed with this SAS.</param>
            <returns>A shared access signature, as a URI query string.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.String)">
            <summary>
            Returns a shared access signature for the blob.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <param name="headers">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders"/> object specifying optional header values to set for a blob accessed with this SAS.</param>
            <param name="groupPolicyIdentifier">A string identifying a stored access policy.</param>
            <returns>A shared access signature, as a URI query string.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)">
            <summary>
            Returns a shared access signature for the blob.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <param name="headers">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders"/> object specifying optional header values to set for a blob accessed with this SAS.</param>
            <param name="groupPolicyIdentifier">A string identifying a stored access policy.</param>
            <param name="protocols">The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.</param>
            <param name="ipAddressOrRange">The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.</param>
            <returns>A shared access signature, as a URI query string.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetUserDelegationSharedAccessSignature(Microsoft.Azure.Storage.UserDelegationKey,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)">
            <summary>
            Returns an user-delegation-based shared access signature for the blob, with credentials solely based on the <see cref="T:Microsoft.Azure.Storage.UserDelegationKey"/> provided.
            </summary>
            <param name="delegationKey"><see cref="T:Microsoft.Azure.Storage.UserDelegationKey"/> for signing this SAS token.</param>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <param name="headers">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders"/> object specifying optional header values to set for a blob accessed with this SAS.</param>
            <param name="protocols">The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.</param>
            <param name="ipAddressOrRange">The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.GetCanonicalName(System.Boolean)">
            <summary>
            Gets the canonical name of the blob, formatted as blob/&lt;account-name&gt;/&lt;container-name&gt;/&lt;blob-name&gt;.
            If <c>ignoreSnapshotTime</c> is <c>false</c> and this blob is a snapshot, the canonical name is augmented with a
            query of the form ?snapshot=&lt;snapshot-time&gt;.
            <para>This is used by both Shared Access and Copy blob operations.</para>
            </summary>
            <param name="ignoreSnapshotTime">Indicates if the snapshot time is ignored.</param>
            <returns>The canonical name of the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlob.ParseQueryAndVerify(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Parse URI for SAS (Shared Access Signature) and snapshot information.
            </summary>
            <param name="address">The complete Uri.</param>
            <param name="credentials">The credentials to use.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.CloudBlobClient">
            <summary>
            Provides a client-side logical representation of Microsoft Azure Blob storage.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.AuthenticationScheme">
            <summary>
            Gets or sets the authentication scheme to use to sign HTTP requests.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainers(System.String,Microsoft.Azure.Storage.Blob.ContainerListingDetails,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Returns an enumerable collection of containers whose names 
            begin with the specified prefix and that are retrieved lazily.
            </summary>
            <param name="prefix">A string containing the container name prefix.</param>
            <param name="detailsIncluded">A <see cref="T:Microsoft.Azure.Storage.Blob.ContainerListingDetails"/> enumeration value that indicates whether to return container metadata with the listing.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An enumerable collection of <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> objects that are retrieved lazily.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Returns a result segment containing a collection of <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> objects.
            </summary>
            <param name="currentToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.ContainerResultSegment"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmented(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Returns a result segment containing a collection of <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> objects.
            </summary>
            <param name="prefix">A string containing the container name prefix.</param>
            <param name="currentToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.ContainerResultSegment"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmented(System.String,Microsoft.Azure.Storage.Blob.ContainerListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Returns a result segment containing a collection of containers whose names begin with the specified prefix.
            </summary>
            <param name="prefix">A string containing the container name prefix.</param>
            <param name="detailsIncluded">A <see cref="T:Microsoft.Azure.Storage.Blob.ContainerListingDetails"/> enumeration value that indicates whether to return container metadata with the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned 
            in the result segment, up to the per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>
            <param name="currentToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.ContainerResultSegment"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedCore(System.String,Microsoft.Azure.Storage.Blob.ContainerListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Returns a result segment containing a collection of containers
            whose names begin with the specified prefix.
            </summary>
            <param name="prefix">A string containing the container name prefix.</param>
            <param name="detailsIncluded">A <see cref="T:Microsoft.Azure.Storage.Blob.ContainerListingDetails"/> enumeration value that indicates whether to return container metadata with the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned 
            in the result segment, up to the per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>         
            <param name="continuationToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.ResultSegment`1"/> of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginListContainersSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to return a result segment containing a collection of containers.
            </summary>
            <param name="continuationToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginListContainersSegmented(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to return a result segment containing a collection of containers.
            </summary>
            <param name="prefix">A string containing the container name prefix.</param>
            <param name="continuationToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginListContainersSegmented(System.String,Microsoft.Azure.Storage.Blob.ContainerListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to return a result segment containing a collection of containers
            whose names begin with the specified prefix.
            </summary>
            <param name="prefix">A string containing the container name prefix.</param>
            <param name="detailsIncluded">A <see cref="T:Microsoft.Azure.Storage.Blob.ContainerListingDetails"/> enumeration value that indicates whether to return container metadata with the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned 
            in the result segment, up to the per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>         
            <param name="continuationToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndListContainersSegmented(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to return a result segment containing a collection of containers.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.ContainerResultSegment"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedAsync(Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of containers.
            </summary>
            <param name="continuationToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.ContainerResultSegment"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedAsync(Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of containers.
            </summary>
            <param name="continuationToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.ContainerResultSegment"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of containers.
            </summary>
            <param name="prefix">A string containing the container name prefix.</param>
            <param name="continuationToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.ContainerResultSegment"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of containers.
            </summary>
            <param name="prefix">A string containing the container name prefix.</param>
            <param name="continuationToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.ContainerResultSegment"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.ContainerListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of containers.
            </summary>
            <param name="prefix">A string containing the container name prefix.</param>
            <param name="detailsIncluded">A <see cref="T:Microsoft.Azure.Storage.Blob.ContainerListingDetails"/> enumeration value that indicates whether to return container metadata with the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned 
            in the result segment, up to the per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>         
            <param name="continuationToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.ContainerResultSegment"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.ContainerListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of containers.
            </summary>
            <param name="prefix">A string containing the container name prefix.</param>
            <param name="detailsIncluded">A <see cref="T:Microsoft.Azure.Storage.Blob.ContainerListingDetails"/> enumeration value that indicates whether to return container metadata with the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned 
            in the result segment, up to the per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>         
            <param name="continuationToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.ContainerResultSegment"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobs(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Returns an enumerable collection of blobs in the container, retrieved lazily.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An enumerable collection of objects that implement <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/> and are retrieved lazily.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobsSegmented(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Returns a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix, including the container name.</param>
            <param name="currentToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobsSegmented(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Returns a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix, including the container name.</param>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>         
            <param name="currentToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginListBlobsSegmented(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix, including the container name.</param>
            <param name="currentToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginListBlobsSegmented(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix, including the container name.</param>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>         
            <param name="currentToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndListBlobsSegmented(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to return a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobsSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix, including the container name.</param>
            <param name="currentToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobsSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="currentToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>         
            <param name="currentToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>         
            <param name="currentToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServer(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Gets a reference to a blob.
            </summary>
            <param name="blobUri">A <see cref="T:System.Uri"/> containing the URI of the blob. The service assumes this is the URI for the blob at the primary location.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServer(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Gets a reference to a blob.
            </summary>
            <param name="blobUri">A <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.StorageUri"/> containing the URI of the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies any additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetBlobReferenceFromServer(System.Uri,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get a reference to a blob.
            </summary>
            <param name="blobUri">A <see cref="T:System.Uri"/> containing the URI of the blob. The service assumes this is the URI for the blob at the primary location.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetBlobReferenceFromServer(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get a reference to a blob.
            </summary>
            <param name="blobUri">A <see cref="T:System.Uri"/> containing the URI of the blob. The service assumes this is the URI for the blob at the primary location.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetBlobReferenceFromServer(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get a reference to a blob.
            </summary>
            <param name="blobUri">A <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.StorageUri"/> containing the URI of the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies any additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndGetBlobReferenceFromServer(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to get a reference to a blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServerAsync(System.Uri)">
            <summary>
            Initiates an asynchronous operation that gets a reference to a blob.
            </summary>
            <param name="blobUri">A <see cref="T:System.Uri"/> containing the URI of the blob. The service assumes this is the URI for the blob at the primary location.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServerAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that gets a reference to a blob.
            </summary>
            <param name="blobUri">A <see cref="T:System.Uri"/> containing the URI of the blob. The service assumes this is the URI for the blob at the primary location.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServerAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task`1"/> object that gets a reference to a blob.
            </summary>
            <param name="blobUri">A <see cref="T:System.Uri"/> containing the URI of the blob. The service assumes this is the URI for the blob at the primary location.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServerAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that gets a reference to a blob.
            </summary>
            <param name="blobUri">A <see cref="T:System.Uri"/> containing the URI of the blob. The service assumes this is the URI for the blob at the primary location.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServerAsync(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that gets a reference to a blob.
            </summary>
            <param name="blobUri">A <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.StorageUri"/> containing the URI of the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies any additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceFromServerAsync(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that gets a reference to a blob.
            </summary>
            <param name="blobUri">A <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.StorageUri"/> containing the URI of the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies any additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetUserDelegationKey(System.DateTimeOffset,System.DateTimeOffset,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Gets a user delegation key for generating user-delegation-based shared access signature tokens.
            </summary>
            <param name="keyStart">Effective start of key validity, expressed as a <see cref="T:System.DateTimeOffset"/>.</param>
            <param name="keyEnd">Effective end of key validity, expressed as a <see cref="T:System.DateTimeOffset"/>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.UserDelegationKey"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetUserDelegationKey(System.DateTimeOffset,System.DateTimeOffset,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get a user delegation key for generating user-delegation-based shared access signature tokens.
            </summary>
            <param name="keyStart">Effective start of key validity, expressed as a <see cref="T:System.DateTimeOffset"/>.</param>
            <param name="keyEnd">Effective end of key validity, expressed as a <see cref="T:System.DateTimeOffset"/>.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetUserDelegationKey(System.DateTimeOffset,System.DateTimeOffset,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get a user delegation key for generating user-delegation-based shared access signature tokens.
            </summary>
            <param name="keyStart">Effective start of key validity, expressed as a <see cref="T:System.DateTimeOffset"/>.</param>
            <param name="keyEnd">Effective end of key validity, expressed as a <see cref="T:System.DateTimeOffset"/>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies any additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndGetUserDelegationKey(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to get a user delegation key for generating user-delegation-based shared access signature tokens.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.UserDelegationKey"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetUserDelegationKeyAsync(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Gets a user delegation key for generating user-delegation-based shared access signature tokens asynchronously.
            </summary>
            <param name="keyStart">Effective start of key validity, expressed as a <see cref="T:System.DateTimeOffset"/>.</param>
            <param name="keyEnd">Effective end of key validity, expressed as a <see cref="T:System.DateTimeOffset"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.UserDelegationKey"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetUserDelegationKeyAsync(System.DateTimeOffset,System.DateTimeOffset,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Gets a user delegation key for generating user-delegation-based shared access signature tokens asynchronously.
            </summary>
            <param name="keyStart">Effective start of key validity, expressed as a <see cref="T:System.DateTimeOffset"/>.</param>
            <param name="keyEnd">Effective end of key validity, expressed as a <see cref="T:System.DateTimeOffset"/>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.UserDelegationKey"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ListContainersImpl(System.String,Microsoft.Azure.Storage.Blob.ContainerListingDetails,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Core implementation for the ListContainers method.
            </summary>
            <param name="prefix">The container prefix.</param>
            <param name="detailsIncluded">The details included.</param>
            <param name="currentToken">The continuation token.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned 
            in the result segment, up to the per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.ResultSegment`1"/> that lists the containers.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetBlobReferenceImpl(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implements the FetchAttributes method. The attributes are updated immediately.
            </summary>
            <param name="blobUri">A <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.StorageUri"/> containing the URI of the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that fetches the attributes.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetAccountProperties(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get account properties for the Blob service.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get account properties for the Blob service.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetServiceProperties(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get service properties for the Blob service.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetServiceProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get service properties for the Blob service.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndGetAccountProperties(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to get account properties for the Blob service.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndGetServiceProperties(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to get service properties for the Blob service.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetAccountPropertiesAsync">
            <summary>
            Initiates an asynchronous operation to get account properties for the Blob service.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetAccountPropertiesAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to get account properties for the Blob service.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to get account properties for the Blob service.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to get account properties for the Blob service.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Gets account properties for the Blob service.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServicePropertiesAsync">
            <summary>
            Initiates an asynchronous operation to get service properties for the Blob service.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServicePropertiesAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to get service properties for the Blob service.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServicePropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to get service properties for the Blob service.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServicePropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to get service properties for the Blob service.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServiceProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Gets service properties for the Blob service.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginSetServiceProperties(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set service properties for the Blob service.
            </summary>
            <param name="properties">A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> object.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginSetServiceProperties(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set service properties for the Blob service.
            </summary>
            <param name="properties">A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> object.</param>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndSetServiceProperties(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to set service properties for the Blob service.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties)">
            <summary>
            Initiates an asynchronous operation that sets service properties for the Blob service.
            </summary>
            <param name="properties">A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that sets service properties for the Blob service.
            </summary>
            <param name="properties">A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that sets service properties for the Blob service.
            </summary>
            <param name="properties">A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> object.</param>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.SetServicePropertiesAsync(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that sets service properties for the Blob service.
            </summary>
            <param name="properties">A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> object.</param>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.SetServiceProperties(Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Sets service properties for the Blob service.
            </summary>
            <param name="properties">A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties"/> object.</param>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetServiceStats(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get service stats for the secondary Blob service endpoint.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.BeginGetServiceStats(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get service stats for the secondary Blob service endpoint.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.EndGetServiceStats(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to get service stats for the secondary Blob service endpoint.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceStats"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServiceStatsAsync">
            <summary>
            Initiates an asynchronous operation to get service stats for the secondary Blob service endpoint.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceStats"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServiceStatsAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to get service stats for the secondary Blob service endpoint.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceStats"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServiceStatsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to get service stats for the secondary Blob service endpoint.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceStats"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServiceStatsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to get service stats for the secondary Blob service endpoint.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceStats"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetServiceStats(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Gets service stats for the secondary Blob service endpoint.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceStats"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetUserDelegationKeyImpl(System.DateTimeOffset,System.DateTimeOffset,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implements the GetUserDelegationKey method.
            </summary>
            <param name="start">Effective start of key validity, expressed as a <see cref="T:System.DateTimeOffset"/>.</param>
            <param name="expiry">Effective end of key validity, expressed as a <see cref="T:System.DateTimeOffset"/>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> of type <see cref="T:Microsoft.Azure.Storage.UserDelegationKey"/> that fetches the key.</returns>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CloudBlobClient.defaultDelimiter">
            <summary>
            Stores the default delimiter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> class using the specified Blob service endpoint
            and anonymous credentials.
            </summary>
            <param name="baseUri">A <see cref="T:System.Uri"/> object containing the Blob service endpoint to use to create the client.</param>
            <param name="delegatingHandler">A chain of 1 or more DelegatingHandler instances, the innermost of which must have a null InnerHandler.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials,System.Net.Http.DelegatingHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> class using the specified Blob service endpoint
            and account credentials.
            </summary>
            <param name="baseUri">A <see cref="T:System.Uri"/> object containing the Blob service endpoint to use to create the client.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
            <param name="delegatingHandler">A chain of 1 or more DelegatingHandler instances, the innermost of which must have a null InnerHandler.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.#ctor(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials,System.Net.Http.DelegatingHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> class using the specified Blob service endpoint
            and account credentials.
            </summary>
            <param name="storageUri">A <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.StorageUri"/> object containing the Blob service endpoint to use to create the client.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
            <param name="delegatingHandler">A chain of 1 or more DelegatingHandler instances, the innermost of which must have a null InnerHandler.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.BufferManager">
            <summary>
            Gets or sets a buffer manager that implements the <see cref="T:Microsoft.Azure.Storage.IBufferManager"/> interface,
            specifying a buffer pool for use with operations against the Blob service client.
            </summary>
            <value>An object of type <see cref="T:Microsoft.Azure.Storage.IBufferManager"/>.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.Credentials">
            <summary>
            Gets the account credentials used to create the Blob service client.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.BaseUri">
            <summary>
            Gets the base URI for the Blob service client at the primary location.
            </summary>
            <value>A <see cref="T:System.Uri"/> object containing the base URI used to construct the Blob service client at the primary location.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.StorageUri">
            <summary>
            Gets the Blob service endpoints for both the primary and secondary locations.
            </summary>
            <value>An object of type <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.StorageUri"/> containing Blob service URIs for both the primary and secondary locations.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.DefaultRequestOptions">
            <summary>
            Gets or sets the default request options for requests made via the Blob service client.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.RetryPolicy">
            <summary>
            Gets or sets the default retry policy for requests made via the Blob service client.
            </summary>
            <value>An object of type <see cref="T:Microsoft.Azure.Storage.RetryPolicies.IRetryPolicy"/>.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.DefaultDelimiter">
            <summary>
            Gets or sets the default delimiter that may be used to create a virtual directory structure of blobs.
            </summary>
            <value>A string containing the default delimiter for the Blob service.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobClient.UsePathStyleUris">
            <summary>
            Gets a value indicating whether the service client is used with Path style or Host style.
            </summary>
            <value>Is <c>true</c> if use path style URIs; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetRootContainerReference">
            <summary>
            Returns a reference to the root container.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> object.</returns>
            <remarks>Note that the root container must be explicitly created, if it does not already exist, before
            you can read from it or write to it.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.GetContainerReference(System.String)">
            <summary>
            Returns a reference to a <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> object with the specified name.
            </summary>
            <param name="containerName">A string containing the name of the container.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ParseUserPrefix(System.String,System.String@,System.String@)">
            <summary>
            Parses the user prefix.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="containerName">Name of the container.</param>
            <param name="listingPrefix">The listing prefix.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobClient.ExecuteBatchAsync(Microsoft.Azure.Storage.Blob.BatchOperation,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Performs a batched operation request, returning the responses for each suboperation.
            </summary>
            <param name="batchOperation">The <see cref="T:Microsoft.Azure.Storage.Blob.BatchOperation"/> with the set of suboperations to include in the request.</param>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer">
            <summary>
            Represents a container in the Microsoft Azure Blob service.
            </summary>
            <summary>
            Represents a container in the Microsoft Azure Blob service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Create(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Creates the container.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Create(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Creates the container and specifies the level of access to the container's data.
            </summary>
            <param name="accessType">An <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType"/> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.</param>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginCreate(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a container.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginCreate(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a container.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginCreate(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a container and specify the level of access to the container's data.
            </summary>
            <param name="accessType">An <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType"/> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.</param>                
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndCreate(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to create a container.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateAsync">
            <summary>
            Initiates an asynchronous operation that creates a container.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that creates a container.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that creates a container.
            </summary>
            <param name="accessType">An <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType"/> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that creates a container and specifies the level of access to the container's data.
            </summary>
            <param name="accessType">An <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType"/> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.</param>                                
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Creates the container if it does not already exist.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns><c>true</c> if the container did not already exist and was created; otherwise <c>false</c>.</returns>
            <remarks>This API requires Create or Write permissions.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExists(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Creates the container if it does not already exist and specifies whether the container or its blobs are publicly accessible.
            </summary>
            <param name="accessType">An <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType"/> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.</param>                                        
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns><c>true</c> if the container did not already exist and was created; otherwise <c>false</c>.</returns>
            <remarks>This API requires Create or Write permissions.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to create the container if it does not already exist.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>This API requires Create or Write permissions.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to create the container if it does not already exist.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>This API requires Create or Write permissions.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to create the container if it does not already exist.
            </summary>
            <param name="accessType">An <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType"/> object that specifies whether data in the container may be accessed publicly and the level of access.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>This API requires Create or Write permissions.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndCreateIfNotExists(System.IAsyncResult)">
            <summary>
            Returns the result of an asynchronous request to create the container if it does not already exist.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns><c>true</c> if the container did not already exist and was created; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync">
            <summary>
            Initiates an asynchronous operation that creates the container if it does not already exist.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
            <remarks>This API requires Create or Write permissions.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that creates the container if it does not already exist.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
            <remarks>This API requires Create or Write permissions.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that creates the container if it does not already exist.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
            <remarks>This API requires Create or Write permissions.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that creates the container if it does not already exist.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
            <remarks>This API requires Create or Write permissions.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that creates the container if it does not already exist.
            </summary>
            <param name="accessType">An <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType"/> object that specifies whether data in the container may be accessed publicly and the level of access.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
            <remarks>This API requires Create or Write permissions.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that creates the container if it does not already exist.
            </summary>
            <param name="accessType">An <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType"/> object that specifies whether data in the container may be accessed publicly and the level of access.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
            <remarks>This API requires Create or Write permissions.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Delete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Deletes the container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginDelete(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to delete a container.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginDelete(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to delete a container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndDelete(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to delete a container.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteAsync">
            <summary>
            Initiates an asynchronous operation that deletes the container.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that deletes the container.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that deletes the container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that deletes the container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteIfExists(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Deletes the container if it already exists.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns><c>true</c> if the container existed and was deleted successfully; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginDeleteIfExists(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to delete the container if it already exists.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginDeleteIfExists(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to delete the container if it already exists.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndDeleteIfExists(System.IAsyncResult)">
            <summary>
            Returns the result of an asynchronous request to delete the container if it already exists.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns><c>true</c> if the container did not already exist and was created; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync">
            <summary>
            Initiates an asynchronous operation that deletes the container if it already exists.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that deletes the container if it already exists.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that deletes the container if it already exists.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that deletes the container if it already exists.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServer(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Gets a reference to a blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A reference to the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginGetBlobReferenceFromServer(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get a reference to a blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginGetBlobReferenceFromServer(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get a reference to a blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndGetBlobReferenceFromServer(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to get a reference to a blob in this container.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A reference to the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String)">
            <summary>
            Initiates an asynchronous operation that gets a reference to a blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that gets a reference to a blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that gets a reference to a blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that gets a reference to a blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobs(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Returns an enumerable collection of the blobs in the container that are retrieved lazily.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An enumerable collection of objects that implement <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/> and are retrieved lazily.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Returns a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param>
            <returns>A result segment containing objects that implement <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Returns a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param>
            <returns>A result segment containing objects that implement <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Returns a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A result segment containing objects that implement <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedCore(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Returns a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>  
            <param name="currentToken">A continuation token returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A result segment containing objects that implement <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>  
            <param name="currentToken">A continuation token returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndListBlobsSegmented(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to return a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A result segment containing objects that implement <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Initiates an asynchronous operation that returns a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that returns a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Initiates an asynchronous operation that returns a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that returns a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that returns a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>  
            <param name="currentToken">A continuation token returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that returns a result segment containing a collection of blob items 
            in the container.
            </summary>
            <param name="prefix">A string containing the blob name prefix.</param>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>  
            <param name="currentToken">A continuation token returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetPermissions(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Sets permissions for the container.
            </summary>
            <param name="permissions">The permissions to apply to the container.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginSetPermissions(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to set permissions for the container.
            </summary>
            <param name="permissions">The permissions to apply to the container.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginSetPermissions(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to set permissions for the container.
            </summary>
            <param name="permissions">The permissions to apply to the container.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndSetPermissions(System.IAsyncResult)">
            <summary>
            Returns the result of an asynchronous request to set permissions for the container.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.Azure.Storage.Blob.BlobContainerPermissions)">
            <summary>
            Initiates an asynchronous operation that sets permissions for the container.
            </summary>
            <param name="permissions">The permissions to apply to the container.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that sets permissions for the container.
            </summary>
            <param name="permissions">The permissions to apply to the container.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that sets permissions for the container.
            </summary>
            <param name="permissions">The permissions to apply to the container.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that sets permissions for the container.
            </summary>
            <param name="permissions">The permissions to apply to the container.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPermissions(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Gets the permissions settings for the container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The container's permissions.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginGetPermissions(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get the permissions settings for the container.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginGetPermissions(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get the permissions settings for the container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndGetPermissions(System.IAsyncResult)">
            <summary>
            Returns the asynchronous result of the request to get the permissions settings for the container.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>The container's permissions.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync">
            <summary>
            Initiates an asynchronous operation that gets the permissions settings for the container.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that gets the permissions settings for the container.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that gets the permissions settings for the container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that gets the permissions settings for the container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Exists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Checks whether the container exists.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns><c>true</c> if the container exists.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Exists(System.Boolean,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Checks whether the container exists.
            </summary>
            <param name="primaryOnly">If <c>true</c>, the command will be executed against the primary location.</param>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns><c>true</c> if the container exists.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginExists(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to check whether the container exists.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginExists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to check whether the container exists.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginExists(System.Boolean,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to check whether the container exists.
            </summary>
            <param name="primaryOnly">If <c>true</c>, the command will be executed against the primary location.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndExists(System.IAsyncResult)">
            <summary>
            Returns the asynchronous result of the request to check whether the container exists.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns><c>true</c> if the container exists.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ExistsAsync">
            <summary>
            Initiates an asynchronous operation that checks whether the container exists.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that checks whether the container exists.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that checks whether the container exists.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that checks whether the container exists.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ExistsAsync(System.Boolean,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that checks whether the container exists.
            </summary>
            <param name="primaryOnly">If <c>true</c>, the command will be executed against the primary location.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Retrieves the container's attributes.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginFetchAttributes(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to retrieve the container's attributes.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to retrieve the container's attributes.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndFetchAttributes(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to retrieve the container's attributes.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync">
            <summary>
            Initiates an asynchronous operation that retrieves the container's attributes.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that retrieves the container's attributes.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that retrieves the container's attributes.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that retrieves the container's attributes.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Sets the container's user-defined metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginSetMetadata(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set user-defined metadata on the container.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginSetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set user-defined metadata on the container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndSetMetadata(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request operation to set user-defined metadata on the container.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetMetadataAsync">
            <summary>
            Initiates an asynchronous operation that sets container's user-defined metadata.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that sets container's user-defined metadata.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that sets container's user-defined metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that sets container's user-defined metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Acquires a lease on this container.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The ID of the acquired lease.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to acquire a lease on this container.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to acquire a lease on this container.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndAcquireLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to acquire a lease on this container.
            </summary>
            <param name="asyncResult">An IAsyncResult that references the pending asynchronous operation.</param>
            <returns>The ID of the acquired lease.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Initiates an asynchronous operation that acquires a lease on this container.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that acquires a lease on this container.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that acquires a lease on this container.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that acquires a lease on this container.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.RenewLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Renews a lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginRenewLease(Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to renew a lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginRenewLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to renew a lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndRenewLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to renew a lease on this container.
            </summary>
            <param name="asyncResult">An IAsyncResult that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition)">
            <summary>
            Initiates an asynchronous operation that renews a lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that renews a lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that renews a lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that renews a lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Changes the lease ID on this container.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The new lease ID.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to change the lease on this container.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to change the lease on this container.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndChangeLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to change the lease on this container.
            </summary>
            <param name="asyncResult">An IAsyncResult that references the pending asynchronous operation.</param>
            <returns>The new lease ID.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition)">
            <summary>
            Initiates an asynchronous operation that changes the lease ID on this container.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that changes the lease ID on this container.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that changes the lease ID on this container.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that changes the lease ID on this container.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease. This cannot be null.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ReleaseLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Releases the lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginReleaseLease(Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to release the lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginReleaseLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to release the lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndReleaseLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to release the lease on this container.
            </summary>
            <param name="asyncResult">An IAsyncResult that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition)">
            <summary>
            Initiates an asynchronous operation that releases the lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that releases the lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that releases the lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that releases the lease on this container.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BreakLease(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Breaks the current lease on this container.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.TimeSpan"/> representing the amount of time before the lease ends, to the second.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to break the current lease on this container.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to break the current lease on this container.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndBreakLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to break the current lease on this container.
            </summary>
            <param name="asyncResult">An IAsyncResult that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:System.TimeSpan"/> representing the amount of time before the lease ends, to the second.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan})">
            <summary>
            Initiates an asynchronous operation that breaks the current lease on this container.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that breaks the current lease on this container.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation that breaks the current lease on this container.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation that breaks the current lease on this container.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds. If <c>null</c>, the break period is the remainder of the current lease,
            or zero for infinite leases.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.AcquireLeaseImpl(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Generates a RESTCommand for acquiring a lease.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds. If <c>null</c>, an infinite lease will be acquired. If not null, this must be
            15 to 60 seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease, or <c>null</c> if no lease ID is proposed.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. May not be null.</param>
            <returns>A RESTCommand implementing the acquire lease operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.RenewLeaseImpl(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Generates a RESTCommand for renewing a lease.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">The options for this operation, including the current lease ID.
            This cannot be null.</param>
            <returns>A RESTCommand implementing the renew lease operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ChangeLeaseImpl(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Generates a RESTCommand for changing a lease ID.
            </summary>
            <param name="proposedLeaseId">The proposed new lease ID.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">The options for this operation, including the current lease ID. This cannot be null.</param>
            <returns>A RESTCommand implementing the change lease ID operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ReleaseLeaseImpl(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Generates a RESTCommand for releasing a lease.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">The options for this operation, including the current lease ID.
            This cannot be null.</param>
            <returns>A RESTCommand implementing the release lease operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BreakLeaseImpl(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Generates a RESTCommand for breaking a lease.
            </summary>
            <param name="breakPeriod">The amount of time to allow the lease to remain, rounded down to seconds.
            If <c>null</c>, the break period is the remainder of the current lease, or zero for infinite leases.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. May not be null.</param>
            <returns>A RESTCommand implementing the break lease operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.CreateContainerImpl(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType)">
            <summary>
            Implementation for the Create method.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="accessType">An <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType"/> object that specifies whether data in the container may be accessed publicly and the level of access.</param>        
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that creates the container.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.DeleteContainerImpl(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the Delete method.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that deletes the container.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.FetchAttributesImpl(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the FetchAttributes method.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that fetches the attributes.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ExistsImpl(Microsoft.Azure.Storage.Blob.BlobRequestOptions,System.Boolean)">
            <summary>
            Implementation for the Exists method.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="primaryOnly">If <c>true</c>, the command will be executed against the primary location.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that checks existence.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetMetadataImpl(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the SetMetadata method.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that sets the metadata.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SetPermissionsImpl(Microsoft.Azure.Storage.Blob.BlobContainerPermissions,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the SetPermissions method.
            </summary>
            <param name="acl">The permissions to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that sets the permissions.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPermissionsImpl(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the GetPermissions method.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that gets the permissions.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.SelectListBlobItem(Microsoft.Azure.Storage.Blob.Protocol.IListBlobEntry)">
            <summary>
            Selects the protocol response.
            </summary>
            <param name="protocolItem">The protocol item.</param>
            <returns>The parsed <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ListBlobsImpl(System.String,System.Nullable{System.Int32},System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Core implementation of the ListBlobs method.
            </summary>
            <param name="prefix">The blob prefix.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that lists the blobs.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.UpdateETagAndLastModified(System.Net.Http.HttpResponseMessage)">
            <summary>
            Retrieve ETag and LastModified date time from response.
            </summary>
            <param name="response">The response to parse.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginGetAccountProperties(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get properties for the account this container resides on.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.BeginGetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get properties for the account this container resides on.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.EndGetAccountProperties(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to get properties for the account this container resides on.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAccountPropertiesAsync">
            <summary>
            Initiates an asynchronous operation to get properties for the account this container resides on.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAccountPropertiesAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to get properties for the account this container resides on.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to get properties for the account this container resides on.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to get properties for the account this container resides on.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Gets properties for the account this container resides on.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> class.
            </summary>
            <param name="containerAddress">A <see cref="T:System.Uri"/> object specifying the absolute URI to the container.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> class.
            </summary>
            <param name="containerAddress">A <see cref="T:System.Uri"/> object specifying the absolute URI to the container.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.#ctor(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> class.
            </summary>
            <param name="containerAddress">A <see cref="T:System.Uri"/> object specifying the absolute URI to the container.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.#ctor(System.String,Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> class.
            </summary>
            <param name="containerName">A string specifying the container name.</param>
            <param name="serviceClient">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.#ctor(Microsoft.Azure.Storage.Blob.BlobContainerProperties,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> class.
            </summary>
            <param name="properties">The properties.</param>
            <param name="metadata">The metadata.</param>
            <param name="containerName">The container name.</param>
            <param name="serviceClient">The client to be used.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ServiceClient">
            <summary>
            Gets the Blob service client for the container.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Uri">
            <summary>
            Gets the container's URI for the primary location.
            </summary>
            <value>A <see cref="T:System.Uri"/> specifying the absolute URI to the container at the primary location.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.StorageUri">
            <summary>
            Gets the container's URIs for both the primary and secondary locations.
            </summary>
            <value>An object of type <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.StorageUri"/> containing the container's URIs for both the primary and secondary locations.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Name">
            <summary>
            Gets the name of the container.
            </summary>
            <value>A string containing the container name.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Metadata">
            <summary>
            Gets the container's metadata.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.IDictionary`2"/> object containing the container's metadata.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobContainer.Properties">
            <summary>
            Gets the container's system properties.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerProperties"/> object.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.ParseQueryAndVerify(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Parse URI for SAS (Shared Access Signature) information.
            </summary>
            <param name="address">The complete Uri.</param>
            <param name="credentials">The credentials to use.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetSharedAccessCanonicalName">
            <summary>
            Returns the canonical name for shared access.
            </summary>
            <returns>The canonical name.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy)">
            <summary>
            Returns a shared access signature for the container.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <returns>A shared access signature, as a URI query string.</returns>
            <remarks>The query string returned includes the leading question mark.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,System.String)">
            <summary>
            Returns a shared access signature for the container.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <param name="groupPolicyIdentifier">A container-level access policy.</param>
            <returns>A shared access signature, as a URI query string.</returns>
            <remarks>The query string returned includes the leading question mark.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,System.String,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)">
            <summary>
            Returns a shared access signature for the container.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <param name="groupPolicyIdentifier">A container-level access policy.</param>
            <param name="protocols">The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.</param>
            <param name="ipAddressOrRange">The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.</param>
            <returns>A shared access signature, as a URI query string.</returns>
            <remarks>The query string returned includes the leading question mark.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetUserDelegationSharedAccessSignature(Microsoft.Azure.Storage.UserDelegationKey,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)">
            <summary>
            Returns an user-delegation-based shared access signature for the container, with credentials solely based on the <see cref="T:Microsoft.Azure.Storage.UserDelegationKey"/> provided.
            </summary>
            <param name="delegationKey"><see cref="T:Microsoft.Azure.Storage.UserDelegationKey"/> for signing this SAS token.</param>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <param name="headers">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders"/> object specifying optional header values to set for a blob container accessed with this SAS.</param>
            <param name="protocols">The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.</param>
            <param name="ipAddressOrRange">The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String)">
            <summary>
            Gets a reference to a page blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the page blob.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Returns a reference to a page blob in this virtual directory.
            </summary>
            <param name="blobName">A string containing the name of the page blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String)">
            <summary>
            Gets a reference to a block blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the block blob.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</returns>
            <remarks>
            ## Examples
            [!code-csharp[Get_Block_Blob_Reference_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_UploadBlob_EndToEnd "Get Block Blob Reference Sample")] 
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Gets a reference to a block blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the block blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String)">
            <summary>
            Gets a reference to an append blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the append blob.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Gets a reference to an append blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the append blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String)">
            <summary>
            Gets a reference to a blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Gets a reference to a blob in this container.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobContainer.GetDirectoryReference(System.String)">
            <summary>
            Gets a reference to a virtual blob directory beneath this container.
            </summary>
            <param name="relativeAddress">A string containing the name of the virtual blob directory.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> object.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory">
            <summary>
            Represents a virtual directory of blobs, designated by a delimiter character.
            </summary>
            <remarks>Containers, which are encapsulated as <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> objects, hold directories, and directories hold block blobs and page blobs. Directories can also contain sub-directories.</remarks>
            <summary>
            Represents a virtual directory of blobs on the client which emulates a hierarchical data store by using delimiter characters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobs(System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Returns an enumerable collection of the blobs in the virtual directory that are retrieved lazily.
            </summary>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An enumerable collection of objects that implement <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/> and are retrieved lazily.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Returns a result segment containing a collection of blob items 
            in the virtual directory.
            </summary>
            <param name="currentToken">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object returned by a previous listing operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmented(System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Returns a result segment containing a collection of blob items 
            in the virtual directory.
            </summary>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>    
            <param name="currentToken">A continuation token returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.BeginListBlobsSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return a result segment containing a collection of blob items 
            in the virtual directory.
            </summary>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.BeginListBlobsSegmented(System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return a result segment containing a collection of blob items 
            in the virtual directory.
            </summary>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>  
            <param name="currentToken">A continuation token returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.EndListBlobsSegmented(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to return a result segment containing a collection of blob items 
            in the virtual directory.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of blob items 
            in the virtual directory.
            </summary>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param> 
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(Microsoft.Azure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of blob items 
            in the virtual directory.
            </summary>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param> 
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of blob items 
            in the virtual directory.
            </summary>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>  
            <param name="currentToken">A continuation token returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean,Microsoft.Azure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContinuationToken,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return a result segment containing a collection of blob items 
            in the virtual directory.
            </summary>
            <param name="useFlatBlobListing">A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.</param>
            <param name="blobListingDetails">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobListingDetails"/> enumeration describing which items to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the 
            per-operation limit of 5000. If this value is <c>null</c>, the maximum possible number of results will be returned, up to 5000.</param>  
            <param name="currentToken">A continuation token returned by a previous listing operation.</param> 
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.#ctor">
            <summary>
            Public constructor for mock unit testing.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.parent">
            <summary>
            Stores the parent directory.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.#ctor(Microsoft.Azure.Storage.StorageUri,System.String,Microsoft.Azure.Storage.Blob.CloudBlobContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> class given an address and a client.
            </summary>
            <param name="uri">The blob directory's Uri.</param>
            <param name="prefix">The blob directory's prefix.</param> 
            <param name="container">The container for the virtual directory.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ServiceClient">
            <summary>
            Gets the Blob service client for the virtual directory.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.Uri">
            <summary>
            Gets the URI that identifies the virtual directory for the primary location.
            </summary>
            <value>A <see cref="T:System.Uri"/> containing the URI to the virtual directory, at the primary location.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.StorageUri">
            <summary>
            Gets the blob directory's URIs for both the primary and secondary locations.
            </summary>
            <value>An object of type <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.StorageUri"/> containing the blob directory's URIs for both the primary and secondary locations.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.Container">
            <summary>
            Gets the container for the virtual directory.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.Parent">
            <summary>
            Gets the parent directory for the virtual directory.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.Prefix">
            <summary>
            Gets the prefix.
            </summary>
            <value>A string containing the prefix.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String)">
            <summary>
            Gets a reference to a page blob in this virtual directory.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Returns a reference to a page blob in this virtual directory.
            </summary>
            <param name="blobName">The name of the page blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String)">
            <summary>
            Gets a reference to a block blob in this virtual directory.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Gets a reference to a block blob in this virtual directory.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String)">
            <summary>
            Gets a reference to an append blob in this virtual directory.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Gets a reference to an append blob in this virtual directory.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String)">
            <summary>
            Gets a reference to a blob in this virtual directory.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Gets a reference to a blob in this virtual directory.
            </summary>
            <param name="blobName">A string containing the name of the blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.GetDirectoryReference(System.String)">
            <summary>
            Returns a virtual subdirectory within this virtual directory.
            </summary>
            <param name="itemName">The name of the virtual subdirectory.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> object representing the virtual subdirectory.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.CloudBlobStream">
            <summary>
            Represents a stream for writing to a blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.Commit">
            <summary>
            Clears all buffers for this stream, causes any buffered data to be written to the underlying blob, and commits the blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.BeginCommit(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous commit operation.
            </summary>
            <param name="callback">An optional asynchronous callback, to be called when the commit is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous commit request from other requests.</param>
            <returns>An <c>ICancellableAsyncResult</c> that represents the asynchronous commit, which could still be pending.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.EndCommit(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous commit to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.BeginFlush(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous flush operation.
            </summary>
            <param name="callback">An optional asynchronous callback, to be called when the flush is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</param>
            <returns>An <c>ICancellableAsyncResult</c> that represents the asynchronous flush, which could still be pending.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.EndFlush(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous flush to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlobStream.CommitAsync">
            <summary>
            Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying file, and commits the file.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents an asynchronous action.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob">
            <summary>
            Represents a blob that is uploaded as a set of blocks.
            </summary>
            <summary>
            Represents a blob that is uploaded as a set of blocks.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWrite(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Opens a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> to be used for writing to the blob.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginOpenWrite(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginOpenWrite(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginOpenWrite(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndOpenWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to open a stream for writing to the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> to be used for writing to the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.</para>        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.</para>                
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenWriteAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 100 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamHelper(System.IO.Stream,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStreamHelper(System.IO.Stream,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromStreamHelper(System.IO.Stream,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndUploadFromStream(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a stream to a block blob. 
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressIncrementer"> An <see cref="T:Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer"/> object to gather progress deltas.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromStreamAsyncHelper(System.IO.Stream,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer,System.Threading.CancellationToken)">
            <summary>
            Uploads a stream to a block blob. 
            </summary>
            <param name="source">The stream providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressIncrementer"> An <see cref="T:Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer"/> object to gather progress deltas.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents an asynchronous action.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a file to the Blob service. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            ## Examples
            [!code-csharp[Upload_From_File_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_UploadBlob_EndToEnd "Upload From File Sample")] 
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>        
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndUploadFromFile(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a file to a blob. 
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String)">
            <summary>
            Initiates an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressIncrementer"> An <see cref="T:Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer"/> object to gather progress deltas.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndUploadFromByteArray(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload the contents of a byte array to a blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadText(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginUploadText(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndUploadText(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a string of text to a blob. 
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String)">
            <summary>
            Initiates an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a string of text to a blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="content">A string containing the text to upload.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the text encoding to use. If <c>null</c>, UTF-8 will be used.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Downloads the blob's contents as a string.
            </summary>
            <param name="encoding">An object that indicates the text encoding to use.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The contents of the blob, as a string.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadText(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="encoding">An object that indicates the text encoding to use.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadText(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="encoding">An object that indicates the text encoding to use.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndDownloadText(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>The contents of the blob, as a string.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync">
            <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="encoding">An object that indicates the text encoding to use.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="encoding">An object that indicates the text encoding to use.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the blob's contents as a string.
            </summary>
            <param name="encoding">An object that indicates the text encoding to use.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlock(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlock(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a single block, copying from a source URI.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlock(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a single block, copying from a source URI.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlock(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlock(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlock(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlock(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlock(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndPutBlock(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a single block.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> property is set to <c>true</c> and the <paramref name="contentMD5"/> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> property is set to <c>true</c> and the <paramref name="contentMD5"/> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> property is set to <c>true</c> and the <paramref name="contentMD5"/> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> property is set to <c>true</c> and the <paramref name="contentMD5"/> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentMD5"/> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> property is set to <c>true</c> and the <paramref name="contentMD5"/> parameter is set 
            to <c>null</c>, then the client library will calculate the MD5 value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockAsync(System.String,System.IO.Stream,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a single block.
            </summary>
            <param name="blockId">A Base64-encoded string that identifies the block.</param>
            <param name="blockData">A <see cref="T:System.IO.Stream"/> object that provides the data for the block.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressIncrementer"> An <see cref="T:Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer"/> object to gather progress deltas.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTier(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Sets the tier of the blob on a standard storage account.
            </summary>
            <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginSetStandardBlobTier(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
            <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginSetStandardBlobTier(Microsoft.Azure.Storage.Blob.StandardBlobTier,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
            <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndSetStandardBlobTier(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierAsync(Microsoft.Azure.Storage.Blob.StandardBlobTier)">
            <summary>
            Initiates an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
            <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierAsync(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
            <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierAsync(Microsoft.Azure.Storage.Blob.StandardBlobTier,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
            <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierAsync(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to set the tier of the blob on a standard storage account.
            </summary>
            <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Begins an operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</param> 
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The copy ID associated with the copy operation.</returns>
            <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Begins an operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</param>
            <param name="contentChecksum">An hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="syncCopy">A boolean to enable synchronous server copy of blobs.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The copy ID associated with the copy operation.</returns>
            <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>        
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>        
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.String,System.Boolean,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</param>
            <param name="contentMD5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="syncCopy">A boolean to enable synchronous server copy of blobs.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>        
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob)">
            <summary>
            Initiates an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Boolean,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another block blob's contents, properties, and metadata to this block blob.
            </summary>
            <param name="source">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>        /// <param name="syncCopy">A boolean to enable synchronous server copy of blobs.</param>
            <param name="incrementalCopy">A boolean indicating whether or not this is an incremental copy.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set. Only valid on block blobs.</param>
            <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockList(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Returns an enumerable collection of the blob's blocks, using the specified block list filter.
            </summary>
            <param name="blockListingFilter">A <see cref="T:Microsoft.Azure.Storage.Blob.BlockListingFilter"/> enumeration value that indicates whether to return 
            committed blocks, uncommitted blocks, or both.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An enumerable collection of objects implementing <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadBlockList(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginDownloadBlockList(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
            <param name="blockListingFilter">A <see cref="T:Microsoft.Azure.Storage.Blob.BlockListingFilter"/> enumeration value that indicates whether to return 
            committed blocks, uncommitted blocks, or both.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndDownloadBlockList(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>An enumerable collection of objects implementing <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockListAsync">
            <summary>
            Initiates an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockListAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockListAsync(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
            <param name="blockListingFilter">A <see cref="T:Microsoft.Azure.Storage.Blob.BlockListingFilter"/> enumeration value that indicates whether to return
            committed blocks, uncommitted blocks, or both.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.DownloadBlockListAsync(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return an enumerable collection of the blob's blocks, 
            using the specified block list filter.
            </summary>
            <param name="blockListingFilter">A <see cref="T:Microsoft.Azure.Storage.Blob.BlockListingFilter"/> enumeration value that indicates whether to return 
            committed blocks, uncommitted blocks, or both.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Creates a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object that is a blob snapshot.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginCreateSnapshot(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndCreateSnapshot(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> object that is a blob snapshot.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotAsync">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockList(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a list of blocks to a new or existing blob. 
            </summary>
            <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlockList(System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a list of blocks to a new or existing blob. 
            </summary>
            <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.BeginPutBlockList(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a list of blocks to a new or existing blob. 
            </summary>
            <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.EndPutBlockList(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a list of blocks to a new or existing blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initiates an asynchronous operation to upload a list of blocks to a new or existing blob. 
            </summary>
            <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a list of blocks to a new or existing blob. 
            </summary>
            <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a list of blocks to a new or existing blob. 
            </summary>
            <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a list of blocks to a new or existing blob. 
            </summary>
            <param name="blockList">An enumerable collection of block IDs, as Base64-encoded strings.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlobImpl(System.IO.Stream,System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Uploads the full blob from a seekable stream.
            </summary>
            <param name="stream">The content stream. Must be seekable.</param>
            <param name="length">Number of bytes to upload from the content stream starting at its current position.</param>
            <param name="contentChecksum">The content checksum.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that gets the stream.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockImpl(System.IO.Stream,System.String,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Uploads the block.
            </summary>
            <param name="source">The source stream.</param>
            <param name="blockId">The block ID.</param>
            <param name="contentChecksum">The content checksum.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that uploads the block.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockImpl(System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Uploads the block from a source Uri.
            </summary>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="blockId">The block ID.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that uploads the block.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.PutBlockListImpl(System.Collections.Generic.IEnumerable{Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Uploads the block list.
            </summary>
            <param name="blocks">The blocks to upload.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that uploads the block list.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.GetBlockListImpl(Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Gets the download block list.
            </summary>
            <param name="typesOfBlocks">The types of blocks.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that gets the download block list.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CreateSnapshotImpl(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the Snapshot method.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot, or <c>null</c>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that creates the snapshot.</returns>
            <remarks>If the <c>metadata</c> parameter is <c>null</c> then no metadata is associated with the request.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.SetStandardBlobTierImpl(Microsoft.Azure.Storage.Blob.StandardBlobTier,System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation method for the SetBlobTier methods.
            </summary>
            <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that sets the blob tier.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.ContinueOpenWriteOnFailure(Microsoft.Azure.Storage.StorageException,Microsoft.Azure.Storage.AccessCondition)">
            <summary>
            Helper method to determine whether we should continue with an OpenWrite operation.
            
            When we are opening a stream for writing, if there is an access condition, we first try a FetchAttributes on the blob.
            The purpose of this is to fail fast in the case where the access condition would fail the request at the very end.  (Access
            conditions aren't checked for PutBlock, only PutBlockList.)
            
            If the FetchAttributes call succeeded, we should continue with the OpenWrite operation.  If the FetchAttributes call failed,
            we need to check if the failure is one of the allowed failure modes.  This method does that check.
            </summary>
            <param name="exception">The exception received from the FetchAttributes call.</param>
            <param name="accessCondition">The access condition used on the FetchAttributes call.</param>
            <returns>True if the operation should continue, false if the exception should be re-thrown.</returns>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CloudBlockBlob.streamWriteSizeInBytes">
            <summary>
            Default is 4 MB.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CloudBlockBlob.isStreamWriteSizeModified">
            <summary>
            Flag to determine if the block size was modified.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:Microsoft.Azure.Storage.StorageUri"/> containing the absolute URI to the blob at both the primary and secondary locations.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">A <see cref="T:Microsoft.Azure.Storage.StorageUri"/> containing the absolute URI to the blob at both the primary and secondary locations.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(System.String,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> class using the specified blob name and
            the parent container reference.
            If snapshotTime is not null, the blob instance represents a Snapshot.
            </summary>
            <param name="blobName">Name of the blob.</param>
            <param name="snapshotTime">Snapshot time in case the blob is a snapshot.</param>
            <param name="container">The reference to the parent container.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.#ctor(Microsoft.Azure.Storage.Blob.BlobAttributes,Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> class.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="serviceClient">The service client.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.StreamWriteSizeInBytes">
            <summary>
            Gets or sets the block size for writing to a block blob.
            </summary>
            <value>The size of a block, in bytes, ranging from between 16 KB and 100 MB inclusive.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudBlockBlob.IsStreamWriteSizeModified">
            <summary>
            Gets the modified block size flag.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromMultiStreamAsync(System.Collections.Generic.IEnumerable{System.IO.Stream},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Uploads an enumerable collection of seekable streams.
            </summary>
            <param name="streamList">An enumerable collection of seekable streams to be uploaded.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.UploadFromMultiStreamAsync(System.Collections.Generic.IEnumerable{System.IO.Stream},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer,System.Threading.CancellationToken)">
            <summary>
            Uploads an enumerable collection of seekable streams.
            </summary>
            <param name="streamList">An enumerable collection of seekable streams to be uploaded.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressIncrementer"> An <see cref="T:Microsoft.Azure.Storage.Core.Util.AggregatingProgressIncrementer"/> object to gather progress deltas.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenMultiFileStream(System.String)">
            <summary>
            Returns an enumerable collection of unique FileStream handles that represent the specified file in logical blocks.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <returns>An enumerable collection of <see cref="T:System.IO.FileStream"/> objects each positioned at multiples of the StreamWriteSizeInBytes.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.OpenMultiSubStream(System.IO.Stream,System.Nullable{System.Int64},System.Threading.SemaphoreSlim)">
            <summary>
            Returns an enumerable collection of SubStream handles that wraps a seekable stream.
            This method is intended for usage within the Large BlockBlob upload algorithm.
            </summary>
            <param name="wrappedStream">The seekable <see cref="T:System.IO.Stream"/> object to be wrapped.</param>
            <param name="length">The length (copyValue) of the stream.</param>
            <param name="mutex">A <see cref="T:System.Threading.SemaphoreSlim"/> object which serves as an intrinsic lock/mutex to manage concurrent operations.</param>
            <returns>
            An enumerable collection of <see cref="T:Microsoft.Azure.Storage.Blob.SubStream"/> objects,
            each representing multiples of the StreamWriteSizeInBytes (blocks) in the wrapped stream.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.CheckAdjustBlockSize(System.Nullable{System.Int64})">
            <summary>
            Check if the total required blocks for the upload exceeds the maximum allowable block limit.
            Adjusts the block size to ensure a successful upload only if the value has not been explicitly set.
            Otherwise, throws a StorageException if the default value has been changed or if the blob size exceeds the maximum capacity.
            </summary>
            <param name="streamLength">The length of the stream.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudBlockBlob.GenerateExceptionForConflictFailure">
            <summary>
            Helper method to generate a 409 Conflict exception.
            </summary>
            <returns>Return a 409 error wrapped in StorageException </returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.CloudPageBlob">
            <summary>
            Represents a Microsoft Azure page blob.
            </summary>
            <summary>
            Represents a Microsoft Azure page blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWrite(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Opens a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
            <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> object.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 4 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWrite(System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Opens a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
            <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> object.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the block size to write, in bytes, 
            ranging from between 16 KB and 4 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginOpenWrite(System.Nullable{System.Int64},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
            <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginOpenWrite(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.</para>        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginOpenWrite(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
            <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginOpenWrite(System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
            <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndOpenWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to open a stream for writing to the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64})">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
            <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.</para>        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
            <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, see <see cref="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.</para>                        
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
            <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
            <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.OpenWriteAsync(System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to open a stream for writing to the blob. If the blob already exists, then existing data in the blob may be overwritten.
            </summary>
            <param name="size">The size of the page blob, in bytes. The size must be a multiple of 512. If <c>null</c>, the page blob must already exist.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobStream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes"/> property before calling this method to specify the page size to write, in multiples of 512 bytes, 
            ranging from between 512 and 4 MB inclusive.</para>
            <para>To throw an exception if the blob exists instead of overwriting it, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStream(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStream(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamHelper(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">Specifies the number of bytes from the Stream source to upload from the start position.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndUploadFromStream(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a stream to a page blob. 
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromStreamAsyncHelper(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Uploads a stream to a page blob. 
            </summary>
            <param name="source">The stream providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents an asynchronous action.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFile(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>        
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromFile(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromFile(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndUploadFromFile(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a file to a page blob. 
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String)">
            <summary>
            Initiates an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromFileAsync(System.String,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndUploadFromByteArray(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a page blob. If the blob already exists, it will be overwritten.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.Create(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Creates a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.
            </summary>
            <param name="size">The maximum size of the page blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.Create(System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Creates a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.
            </summary>
            <param name="size">The maximum size of the page blob, in bytes.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreate(System.Int64,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting,
            use <see cref="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreate(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/>.
            </summary>
            <param name="size">The maximum size of the page blob, in bytes.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreate(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.
            </summary>
            <param name="size">The maximum size of the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreate(System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.
            </summary>
            <param name="size">The maximum size of the blob, in bytes.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndCreate(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to create a page blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64)">
            <summary>
            Initiates an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting,
            use <see cref="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/>.
            </summary>
            <param name="size">The maximum size of the blob, in bytes.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting,
            use <see cref="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="size">The maximum size of the blob, in bytes.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.
            </summary>
            <param name="size">The maximum size of the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.
            </summary>
            <param name="size">The maximum size of the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateAsync(System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create a page blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/>
            object generated using <see cref="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition"/>.
            </summary>
            <param name="size">The maximum size of the blob, in bytes.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.Resize(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Resizes the page blob to the specified size.
            </summary>
            <param name="size">The size of the page blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginResize(System.Int64,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to resize the page blob to the specified size.
            </summary>
            <param name="size">The size of the page blob, in bytes.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginResize(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to resize the page blob to the specified size.
            </summary>
            <param name="size">The size of the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndResize(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to resize the page blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeAsync(System.Int64)">
            <summary>
            Initiates an asynchronous operation to resize the page blob to the specified size.
            </summary>
            <param name="size">The size of the blob, in bytes.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to resize the page blob to the specified size.
            </summary>
            <param name="size">The size of the blob, in bytes.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to resize the page blob to the specified size.
            </summary>
            <param name="size">The size of the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeAsync(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to resize the page blob to the specified size.
            </summary>
            <param name="size">The size of the blob, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumber(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Sets the page blob's sequence number.
            </summary>
            <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction"/>, indicating the operation to perform on the sequence number.</param>
            <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction"/> is equal to <see cref="F:SequenceNumberAction.Increment"/>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginSetSequenceNumber(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set the page blob's sequence number.
            </summary>
            <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction"/>, indicating the operation to perform on the sequence number.</param>
            <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction"/> is equal to <see cref="F:SequenceNumberAction.Increment"/>.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginSetSequenceNumber(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set the page blob's sequence number.
            </summary>
            <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction"/>, indicating the operation to perform on the sequence number.</param>
            <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction"/> is equal to <see cref="F:SequenceNumberAction.Increment"/>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndSetSequenceNumber(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to set the page blob's sequence number.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberAsync(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64})">
            <summary>
            Initiates an asynchronous operation to set the page blob's sequence number.
            </summary>
            <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction"/>, indicating the operation to perform on the sequence number.</param>
            <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction"/> is equal to <see cref="F:SequenceNumberAction.Increment"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberAsync(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to set the page blob's sequence number.
            </summary>
            <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction"/>, indicating the operation to perform on the sequence number.</param>
            <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction"/> is equal to <see cref="F:SequenceNumberAction.Increment"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberAsync(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to set the page blob's sequence number.
            </summary>
            <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction"/>, indicating the operation to perform on the sequence number.</param>
            <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction"/> is equal to <see cref="F:SequenceNumberAction.Increment"/>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberAsync(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to set the page blob's sequence number.
            </summary>
            <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction"/>, indicating the operation to perform on the sequence number.</param>
            <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if <paramref name="sequenceNumberAction"/> is equal to <see cref="F:SequenceNumberAction.Increment"/>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRanges(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Gets a collection of valid page ranges and their starting and ending bytes.
            </summary>
            <param name="offset">The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="length">The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An enumerable collection of page ranges.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginGetPageRanges(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return a collection of valid page ranges and their starting and ending bytes.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginGetPageRanges(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return a collection of valid page ranges and their starting and ending bytes.
            </summary>
            <param name="offset">The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="length">The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndGetPageRanges(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to return a collection of valid page ranges and their starting and ending bytes.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>An enumerable collection of page ranges.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesAsync">
            <summary>
            Initiates an asynchronous operation to return a collection of page ranges and their starting and ending bytes.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return a collection of page ranges and their starting and ending bytes.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to return a collection of page ranges and their starting and ending bytes.
            </summary>
            <param name="offset">The starting offset of the data range, in bytes. Must be a multiple of 512.</param>
            <param name="length">The length of the data range, in bytes. Must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return a collection of page ranges and their starting and ending bytes.
            </summary>
            <param name="offset">The starting offset of the data range, in bytes. Must be a multiple of 512.</param>
            <param name="length">The length of the data range, in bytes. Must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiff(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Gets the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
            <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset"/> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
            <param name="offset">The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="length">The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An enumerable collection of page ranges.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginGetPageRangesDiff(System.DateTimeOffset,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
            <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset"/> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginGetPageRangesDiff(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
            <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset"/> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
            <param name="offset">The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="length">The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndGetPageRangesDiff(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>An enumerable collection of page ranges.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffAsync(System.DateTimeOffset)">
            <summary>
            Initiates an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
            <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset"/> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffAsync(System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
            <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset"/> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffAsync(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
            <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset"/> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
            <param name="offset">The starting offset of the data range, in bytes. Must be a multiple of 512.</param>
            <param name="length">The length of the data range, in bytes. Must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffAsync(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to return the collection of page ranges that differ between a specified snapshot and this object.
            </summary>
            <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset"/> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
            <param name="offset">The starting offset of the data range, in bytes. Must be a multiple of 512.</param>
            <param name="length">The length of the data range, in bytes. Must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object that is an enumerable collection of type <see cref="T:Microsoft.Azure.Storage.Blob.PageRange"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Creates a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> object that is a blob snapshot.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreateSnapshot(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndCreateSnapshot(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> object that is a blob snapshot.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotAsync">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to create a snapshot of the blob.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePages(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Writes pages to a page blob.
            </summary>
            <param name="pageData">A <see cref="T:System.IO.Stream"/> object providing the page data.</param>
            <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePages(System.Uri,System.Int64,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Writes pages to a page blob.
            </summary>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset in the source at which to begin retrieving content.</param>
            <param name="count">The number of bytes from the source to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
            <param name="sourceContentMd5">The MD5 calculated for the range of bytes of the source.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginWritePages(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to write pages to a page blob.
            </summary>
            <param name="pageData">A <see cref="T:System.IO.Stream"/> object providing the page data.</param>
            <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginWritePages(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to write pages to a page blob.
            </summary>
            <param name="pageData">A <see cref="T:System.IO.Stream"/> object providing the page data.</param>
            <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginWritePages(System.Uri,System.Int64,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to write pages to a page blob.
            </summary>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset in the source at which to begin retrieving content.</param>
            <param name="count">The number of bytes from the source to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
            <param name="sourceContentMd5">The MD5 calculated for the range of bytes of the source.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginWritePages(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to write pages to a page blob.
            </summary>
            <param name="pageData">A <see cref="T:System.IO.Stream"/> object providing the page data.</param>
            <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> An <see cref="T:System.IProgress`1"/> object to gather progress deltas.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndWritePages(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to write pages to a page blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum)">
            <summary>
            Initiates an asynchronous operation to write pages to a page blob.
            </summary>
            <param name="pageData">A <see cref="T:System.IO.Stream"/> object providing the page data.</param>
            <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
            <param name="contentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to write pages to a page blob.
            </summary>
            <param name="pageData">A <see cref="T:System.IO.Stream"/> object providing the page data.</param>
            <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to write pages to a page blob.
            </summary>
            <param name="pageData">A <see cref="T:System.IO.Stream"/> object providing the page data.</param>
            <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to write pages to a page blob.
            </summary>
            <param name="pageData">A <see cref="T:System.IO.Stream"/> object providing the page data.</param>
            <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.IProgress{Microsoft.Azure.Storage.Core.Util.StorageProgress},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to write pages to a page blob.
            </summary>
            <param name="pageData">A <see cref="T:System.IO.Stream"/> object providing the page data.</param>
            <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
            <param name="contentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="progressHandler"> A <see cref="T:System.IProgress`1"/> object to handle <see cref="T:Microsoft.Azure.Storage.Core.Util.StorageProgress"/> messages.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            Clients may send the content checksum headers for a given operation as a means to ensure transactional integrity over the wire. 
            The <paramref name="contentChecksum"/> parameter permits clients who already have access to a pre-computed checksum value for a given byte range to provide it.
            If the <see cref="P:BlobRequestOptions.UseTransactionalMd5"/> or <see cref="P:BlobRequestOptions.UseTransactionalCrc64"/> properties are set to <c>true</c> and the corresponding content parameter is set 
            to <c>null</c>, then the client library will calculate the checksum value internally.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.WritePagesAsync(System.Uri,System.Int64,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to write pages to a page blob.
            </summary>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset in the source at which to begin retrieving content.</param>
            <param name="count">The number of bytes from the source to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="startOffset">The offset at which to begin writing, in bytes. The offset must be a multiple of 512.</param>
            <param name="sourceContentMd5">An optional hash value used to ensure transactional integrity. May be <c>null</c> or an empty string.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPages(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Clears pages from a page blob.
            </summary>
            <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
            <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginClearPages(System.Int64,System.Int64,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to clear pages from a page blob.
            </summary>
            <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
            <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginClearPages(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to clear pages from a page blob.
            </summary>
            <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
            <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndClearPages(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to clear pages from a page blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPagesAsync(System.Int64,System.Int64)">
            <summary>
            Initiates an asynchronous operation to clear pages from a page blob.
            </summary>
            <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
            <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPagesAsync(System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to clear pages from a page blob.
            </summary>
            <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
            <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPagesAsync(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to clear pages from a page blob.
            </summary>
            <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
            <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPagesAsync(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to clear pages from a page blob.
            </summary>
            <param name="startOffset">The offset at which to begin clearing pages, in bytes. The offset must be a multiple of 512.</param>
            <param name="length">The length of the data range to be cleared, in bytes. The length must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Begins an operation to start copying another page blob's contents, properties, and metadata to this page blob.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The copy ID associated with the copy operation.</returns>
            <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Begins an operation to start copying another page blob's contents, properties, and metadata to this page blob.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The copy ID associated with the copy operation.</returns>
            <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Begins an operation to start an incremental copy of another page blob's contents, properties, and metadata to this page blob.
            </summary>
            <param name="sourceSnapshot">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob which must be a snapshot.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The copy ID associated with the copy operation.</returns>
            <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopy(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Begins an operation to start an incremental copy of another page blob's contents, properties, and metadata to this page blob.
            </summary>
            <param name="sourceSnapshotUri">The <see cref="T:System.Uri"/> of the source blob which must be a snapshot.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The copy ID associated with the copy operation.</returns>
            <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another page blob's contents, properties, and metadata to this page blob.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartIncrementalCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start an incremental copy of another page blob's contents, properties, and metadata to this page blob.
            </summary>
            <param name="sourceSnapshot">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob which must be a snapshot.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another page blob's contents, properties, and metadata to this page blob.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another page blob's contents, properties, and metadata to this page blob.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartIncrementalCopy(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start an incremental copy of another page blob's contents, properties, and metadata to this page blob.
            </summary>
            <param name="sourceSnapshot">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob which must be a snapshot.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginStartIncrementalCopy(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to start copying another blob's contents, properties, and metadata to this blob.
            </summary>
            <param name="sourceSnapshot">The <see cref="T:System.Uri"/> of the source blob which must be a snapshot.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndStartIncrementalCopy(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to start an incremental copy of another blob's contents, properties, and metadata to this blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A string containing the copy ID associated with the copy operation.</returns>
            <remarks>
            This method fetches the blob's ETag, last-modified time, and part of the copy state.
            The copy ID and copy status fields are fetched, and the rest of the copy state is cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob)">
            <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this page blob.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this page blob.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this page blob.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this page blob.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start copying another blob's contents, properties, and metadata
            to this page blob.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob)">
            <summary>
            Initiates an asynchronous operation to start an incremental copy of another blob's contents, properties, and metadata
            to this page blob.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob which must be a snapshot.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start an incremental copy of another blob's contents, properties, and metadata
            to this page blob.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob which must be a snapshot.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopyAsync(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start an incremental copy of another blob's contents, properties, and metadata
            to this page blob.
            </summary>
            <param name="sourceSnapshot">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob which must be a snapshot.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.StartIncrementalCopyAsync(System.Uri,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to start an incremental copy of another blob's contents, properties, and metadata
            to this page blob.
            </summary>
            <param name="sourceSnapshotUri">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> that is the source blob which must be a snapshot.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <c>string</c> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTier(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Sets the tier of the premium blob.
            </summary>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginSetPremiumBlobTier(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set the tier of the premium blob.
            </summary>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.BeginSetPremiumBlobTier(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to set the tier of the premium blob.
            </summary>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request, or <c>null</c>.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.EndSetPremiumBlobTier(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to set the tier of the premium blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTierAsync(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier)">
            <summary>
            Initiates an asynchronous operation to set the tier of the premium blob.
            </summary>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTierAsync(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to set the tier of the premium blob.
            </summary>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTierAsync(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to set the tier of the premium blob.
            </summary>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetPremiumBlobTierAsync(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to set the premium tier of the blob.
            </summary>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateImpl(System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implements the Create method.
            </summary>
            <param name="sizeInBytes">The size in bytes.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that creates the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ResizeImpl(System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the Resize method.
            </summary>
            <param name="sizeInBytes">The size in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that sets the metadata.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetSequenceNumberImpl(Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the SetSequenceNumber method.
            </summary>
            <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction"/>, indicating the operation to perform on the sequence number.</param>
            <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if this operation is an increment action.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that sets the sequence number.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesImpl(System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the GetPageRanges method.
            </summary>
            <param name="offset">The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="length">The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> for getting the page ranges.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.GetPageRangesDiffImpl(System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the GetPageRangesDiff method.
            </summary>
            <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset"/> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
            <param name="offset">The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="length">The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> for getting the page ranges.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.PutPageImpl(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation method for the WritePage methods.
            </summary>
            <param name="pageData">The page data.</param>
            <param name="startOffset">The start offset.</param> 
            <param name="contentChecksum">The content checksum.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that writes the pages.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.PutPageImpl(System.Uri,System.Int64,System.Int64,System.Int64,Microsoft.Azure.Storage.Shared.Protocol.Checksum,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation method for the WritePage methods.
            </summary>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset in the source at which to begin retrieving content.</param>
            <param name="count">The number of bytes from the source to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="startOffset">The offset in the destination to begin writing.</param> 
            <param name="sourceContentChecksum">A hash value used to ensure transactional integrity. May be <c>null</c> or Checksum.None</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source blob. If <c>null</c>, no condition is used.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination blob. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that writes the pages.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.ClearPageImpl(System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation method for the ClearPage methods.
            </summary>
            <param name="startOffset">The start offset. Must be multiples of 512.</param>
            <param name="length">Length of the data range to be cleared. Must be multiples of 512.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that writes the pages.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.CreateSnapshotImpl(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation for the Snapshot method.
            </summary>
            <param name="metadata">A collection of name-value pairs defining the metadata of the snapshot, or <c>null</c>.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that creates the snapshot.</returns>
            <remarks>If the <c>metadata</c> parameter is <c>null</c> then no metadata is associated with the request.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.SetBlobTierImpl(Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Implementation method for the SetBlobTier methods.
            </summary>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.Executor.RESTCommand`1"/> that sets the blob tier.</returns>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CloudPageBlob.streamWriteSizeInBytes">
            <summary>
            Default is 4 MB.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">The absolute URI to the blob.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">The absolute URI to the blob.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">The absolute URI to the blob.</param>
            <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">The absolute URI to the blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">The absolute URI to the blob.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">The absolute URI to the blob. The service assumes this is the URI for the blob in the primary location.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(Microsoft.Azure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> class using an absolute URI to the blob.
            </summary>
            <param name="blobAbsoluteUri">The absolute URI to the blob. The service assumes this is the URI for the blob in the primary location.</param>
            <param name="snapshotTime">A <see cref="T:System.DateTimeOffset"/> specifying the snapshot timestamp, if the blob is a snapshot.</param>
            <param name="client">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(System.String,System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.CloudBlobContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> class using the specified blob name and
            the parent container reference.
            If snapshotTime is not null, the blob instance represents a Snapshot.
            </summary>
            <param name="blobName">Name of the blob.</param>
            <param name="snapshotTime">Snapshot time in case the blob is a snapshot.</param>
            <param name="container">The reference to the parent container.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.CloudPageBlob.#ctor(Microsoft.Azure.Storage.Blob.BlobAttributes,Microsoft.Azure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> class.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="serviceClient">The service client.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CloudPageBlob.StreamWriteSizeInBytes">
            <summary>
            Gets or sets the number of bytes to buffer when writing to a page blob stream.
            </summary>
            <value>The number of bytes to buffer, ranging from between 512 bytes and 4 MB inclusive.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.ICloudBlob">
            <summary>
            An interface required for Microsoft Azure blob types. The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> and <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> classes implement the <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> interface.
            </summary>
            <summary>
            An interface required for Microsoft Azure blob types. The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> and <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> classes implement the <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> interface.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.OpenRead(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Opens a stream for reading from the blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A stream to be used for reading from the blob.</returns>
            <remarks>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginOpenRead(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by the <see cref="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndOpenRead(System.IAsyncResult)"/> method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginOpenRead(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by the <see cref="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndOpenRead(System.IAsyncResult)"/> method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndOpenRead(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A stream to be used for reading from the blob.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by this method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.OpenReadAsync">
            <summary>
            Initiates an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:System.IO.Stream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by this method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.OpenReadAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:System.IO.Stream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by this method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:System.IO.Stream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by this method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to open a stream for reading from the blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:System.IO.Stream"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>On the <see cref="T:System.IO.Stream"/> object returned by this method, the <see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)"/> 
            method must be called exactly once for every <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> call. 
            Failing to end the read process before beginning another read process can cause unexpected behavior.</para>
            <para>Note that this method always makes a call to the <see cref="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)"/> method under the covers.</para>
            <para>Set the <see cref="P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes"/> property before calling this method to specify the minimum
            number of bytes to buffer when reading from the stream. The value must be at least 16 KB.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to the Microsoft Azure Blob Service. 
            </summary>
            <param name="source">The stream providing the blob content. Use a seek-able stream for optimal performance.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a stream to the Microsoft Azure Blob Service. 
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a blob.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>        
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a blob. 
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a block blob.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a stream to a blob. 
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndUploadFromStream(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a stream to a blob. 
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a blob.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>     
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a blob.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>       
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a blob. 
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a blob. 
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob.
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a blob. 
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a blob. 
            </summary>
            <param name="source">A <see cref="T:System.IO.Stream"/> object providing the blob content.</param>
            <param name="length">The number of bytes to write from the source stream at its current position.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads a file to the Microsoft Azure Blob Service. 
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a file to a blob.
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>        
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload a file to a blob. 
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndUploadFromFile(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload a file to a blob. 
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String)">
            <summary>
            Initiates an asynchronous operation to upload a file to a blob. 
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to a blob. 
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload a file to a blob. 
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a file to a blob. 
            </summary>
            <param name="path">A string containing the file path providing the blob content.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Uploads the contents of a byte array to a blob.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a blob.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to upload the contents of a byte array to a blob.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndUploadFromByteArray(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to upload the contents of a byte array to a blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload the contents of a byte array to a blob.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="index">The zero-based byte offset in buffer at which to begin uploading bytes to the blob.</param>
            <param name="count">The number of bytes to be written to the blob.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Downloads the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadToStream(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDownloadToStream(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToFile(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Downloads the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDownloadToFile(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a file.
            </summary>
            <param name="path">A string containing the path to the target file.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToByteArray(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Downloads the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDownloadToByteArray(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>int</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>int</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>int</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download the contents of a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>int</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Downloads a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDownloadRangeToStream(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a stream.
            </summary>
            <param name="target">A <see cref="T:System.IO.Stream"/> object representing the target stream.</param>
            <param name="offset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Downloads a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>int</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>int</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>int</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to download a range of bytes from a blob to a byte array.
            </summary>
            <param name="target">The target byte array.</param>
            <param name="index">The starting offset in the byte array.</param>
            <param name="blobOffset">The starting offset of the data range, in bytes.</param>
            <param name="length">The length of the data range, in bytes.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>int</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.Exists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Checks existence of the blob.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns><c>true</c> if the blob exists.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginExists(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to check existence of the blob.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginExists(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to check existence of the blob.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndExists(System.IAsyncResult)">
            <summary>
            Returns the asynchronous result of the request to check existence of the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns><c>true</c> if the blob exists.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ExistsAsync">
            <summary>
            Initiates an asynchronous operation to check existence of the blob.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to check existence of the blob.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to check existence of the blob.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to check existence of the blob.
            </summary>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Populates a blob's properties and metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginFetchAttributes(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginFetchAttributes(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndFetchAttributes(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributesAsync">
            <summary>
            Initiates an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to populate the blob's properties and metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Updates the blob's metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginSetMetadata(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to update the blob's metadata.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginSetMetadata(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to update the blob's metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndSetMetadata(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to update the blob's metadata.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetMetadataAsync">
            <summary>
            Initiates an asynchronous operation to update the blob's metadata.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetMetadataAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to update the blob's metadata.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to update the blob's metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to update the blob's metadata.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetProperties(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Updates the blob's properties.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginSetProperties(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to update the blob's properties.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginSetProperties(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to update the blob's properties.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndSetProperties(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to update the blob's properties.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetPropertiesAsync">
            <summary>
            Initiates an asynchronous operation to update the blob's properties.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to update the blob's properties.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to update the blob's properties.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to update the blob's properties.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.Delete(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Deletes the blob.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDelete(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to delete the blob.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDelete(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to delete the blob.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDelete(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to delete the blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteAsync">
            <summary>
            Initiates an asynchronous operation to delete the blob.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to delete the blob.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to delete the blob.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to delete the blob.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteIfExists(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Deletes the blob if it already exists.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns><c>true</c> if the blob did not already exist and was created; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDeleteIfExists(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to delete the blob if it already exists.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginDeleteIfExists(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to delete the blob if it already exists.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndDeleteIfExists(System.IAsyncResult)">
            <summary>
            Returns the result of an asynchronous request to delete the blob if it already exists.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns><c>true</c> if the blob did not already exist and was created; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync">
            <summary>
            Initiates an asynchronous operation to delete the blob if it already exists.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to delete the blob if it already exists.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to delete the blob if it already exists.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to delete the blob if it already exists.
            </summary>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>bool</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Acquires a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The ID of the acquired lease.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndAcquireLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="asyncResult">An IAsyncResult that references the pending asynchronous operation.</param>
            <returns>The ID of the acquired lease.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Initiates an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>string</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>string</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>string</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to acquire a lease on this blob.
            </summary>
            <param name="leaseTime">A <see cref="T:System.TimeSpan"/> representing the span of time for which to acquire the lease,
            which will be rounded down to seconds.</param>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>string</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.RenewLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Renews a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginRenewLease(Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginRenewLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndRenewLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition)">
            <summary>
            Initiates an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to renew a lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Changes the lease ID on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>The new lease ID.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginChangeLease(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndChangeLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>The new lease ID.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition)">
            <summary>
            Initiates an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>string</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>string</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>string</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to change the lease on this blob.
            </summary>
            <param name="proposedLeaseId">A string representing the proposed lease ID for the new lease.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <c>string</c> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ReleaseLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Releases the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginReleaseLease(Microsoft.Azure.Storage.AccessCondition,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginReleaseLease(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndReleaseLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="asyncResult">An IAsyncResult that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition)">
            <summary>
            Initiates an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to release the lease on this blob.
            </summary>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BreakLease(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Breaks the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.TimeSpan"/> representing the amount of time before the lease ends, to the second.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An optional callback delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndBreakLease(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="asyncResult">An IAsyncResult that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:System.TimeSpan"/> representing the amount of time before the lease ends, to the second.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})">
            <summary>
            Initiates an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <see cref="T:System.TimeSpan"/> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <see cref="T:System.TimeSpan"/> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <see cref="T:System.TimeSpan"/> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to break the current lease on this blob.
            </summary>
            <param name="breakPeriod">A <see cref="T:System.TimeSpan"/> representing the amount of time to allow the lease to remain,
            which will be rounded down to seconds.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object of type <see cref="T:System.TimeSpan"/> that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AbortCopy(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Aborts an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request. If <c>null</c>, default options are applied to the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginAbortCopy(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginAbortCopy(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object that will be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndAbortCopy(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String)">
            <summary>
            Initiates an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to abort an ongoing blob copy operation.
            </summary>
            <param name="copyId">A string identifying the copy operation.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>  
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginGetAccountProperties(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.BeginGetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that will receive notification when the asynchronous operation completes.</param>
            <param name="state">A user-defined object to be passed to the callback delegate.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.ICancellableAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.EndGetAccountProperties(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that references the pending asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetAccountPropertiesAsync">
            <summary>
            Initiates an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetAccountPropertiesAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initiates an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetAccountPropertiesAsync(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to get properties for the account this blob resides on.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetAccountProperties(Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Gets properties for the account this blob resides on.
            </summary>
            <param name="requestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties"/> object.</returns>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ICloudBlob.Name">
            <summary>
            Gets the blob's name.
            </summary>
            <value>A string containing the name of the blob.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ICloudBlob.ServiceClient">
            <summary>
            Gets the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object that represents the Blob service.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes">
            <summary>
            Gets or sets the number of bytes to buffer when writing to a page blob stream or
            the block size for writing to a block blob.
            </summary>
            <value>The number of bytes to buffer or the size of a block, in bytes.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes">
            <summary>
            Gets or sets the minimum number of bytes to buffer when reading from a blob stream.
            </summary>
            <value>The minimum number of bytes to buffer.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ICloudBlob.Properties">
            <summary>
            Gets the blob's system properties.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobProperties"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ICloudBlob.Metadata">
            <summary>
            Gets the user-defined metadata for the blob.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.IDictionary`2"/> object containing the blob's metadata as a collection of name-value pairs.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ICloudBlob.SnapshotTime">
            <summary>
            Gets the date and time that the blob snapshot was taken, if this blob is a snapshot.
            </summary>
            <value>A <see cref="T:System.DateTimeOffset"/> containing the blob's snapshot time if the blob is a snapshot; otherwise, <c>null</c>.</value>
            <remarks>
            If the blob is not a snapshot, the value of this property is <c>null</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ICloudBlob.IsSnapshot">
            <summary>
            Gets a value indicating whether this blob is a snapshot.
            </summary>
            <value><c>true</c> if this blob is a snapshot; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri">
            <summary>
            Gets the absolute URI to the blob, including query string information if the blob is a snapshot.
            </summary>
            <value>A <see cref="T:System.Uri"/> specifying the absolute URI to the blob, including snapshot query information if the blob is a snapshot.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri">
            <summary>
            Gets the blob's URI for both the primary and secondary locations, including query string information if the blob is a snapshot.
            </summary>
            <value>An object of type <see cref="T:Microsoft.Azure.Storage.StorageUri"/> containing the blob's URIs for both the primary and secondary locations, 
            including snapshot query information if the blob is a snapshot.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ICloudBlob.CopyState">
            <summary>
            Gets the state of the most recent or pending copy operation.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.ICloudBlob.CopyState"/> object containing the copy state, or <c>null</c> if there is no copy state for the blob.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ICloudBlob.BlobType">
            <summary>
            Gets the type of the blob.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.ICloudBlob.BlobType"/> enumeration value.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy)">
            <summary>
            Returns a shared access signature for the blob.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <returns>A shared access signature, as a URI query string.</returns>
            <remarks>The query string returned includes the leading question mark.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,System.String)">
            <summary>
            Returns a shared access signature for the blob.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <param name="groupPolicyIdentifier">A string identifying a stored access policy.</param>
            <returns>A shared access signature, as a URI query string.</returns>
            <remarks>The query string returned includes the leading question mark.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders)">
            <summary>
            Returns a shared access signature for the blob.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <param name="headers">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders"/> object specifying optional header values to set for a blob accessed with this SAS.</param>
            <returns>A shared access signature, as a URI query string.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.String)">
            <summary>
            Returns a shared access signature for the blob.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <param name="headers">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders"/> object specifying optional header values to set for a blob accessed with this SAS.</param>
            <param name="groupPolicyIdentifier">A string identifying a stored access policy.</param>
            <returns>A shared access signature, as a URI query string.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange)">
            <summary>
            Returns a shared access signature for the blob.
            </summary>
            <param name="policy">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> object specifying the access policy for the shared access signature.</param>
            <param name="headers">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders"/> object specifying optional header values to set for a blob accessed with this SAS.</param>
            <param name="groupPolicyIdentifier">A string identifying a stored access policy.</param>
            <param name="protocols">The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.</param>
            <param name="ipAddressOrRange">The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.</param>
            <returns>A shared access signature, as a URI query string.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.ParallelDownloadStream">
            <summary>
            A stream wrapper used by <see cref="T:Microsoft.Azure.Storage.Blob.ParallelDownloadToFile"/> to monitor that progress is being made.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.ParallelDownloadStream.downloadStream">
            <summary>
            The <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewStream"/> wrapped stream that is being written to.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ParallelDownloadStream.HangingCancellationToken">
            <summary>
            A <see cref="T:System.Threading.CancellationToken"/> which fires if the stream has
            not been written to since <see cref="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxIdleTimeMs"/>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.ParallelDownloadToFile">
            <summary>
            Used to download a single blob to a file in parallel.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ParallelDownloadToFile.Task">
            <summary>
            The Task to await for the entire download to complete.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.ParallelDownloadToFile.Offset">
            <summary>
            The starting offset in the blob to start downloading from.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.ParallelDownloadToFile.Length">
            <summary>
            The total length of the download.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ParallelDownloadToFile.Start(Microsoft.Azure.Storage.Blob.CloudBlob,System.String,System.IO.FileMode,System.Int32,System.Nullable{System.Int64},System.Int64,System.Nullable{System.Int64},System.Int32,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Starts the download of a blob to a file.
            </summary>
            <param name="blob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> to download.</param>
            <param name="filePath">A string containing the path to the target file.</param>
            <param name="fileMode">A <see cref="T:System.IO.FileMode"/> enumeration value that determines how to open or create the file.</param>
            <param name="parallelIOCount">The maximum number of ranges that can be downloaded concurrently</param>
            <param name="rangeSizeInBytes">The size of each individual range in bytes that is being dowloaded in parallel.
            The range size must be a multiple of 4 KB and a minimum of 4 MB with a default value of 16 MB.</param>
            <param name="offset">The offset of the blob.</param>
            <param name="length">The number of bytes to download.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.ParallelDownloadToFile"/> object which contains a task that can be awaited for completion.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ParallelDownloadToFile.DownloadToStreamWrapperAsync(System.IO.MemoryMappedFiles.MemoryMappedViewStream,System.Int64,System.Int64,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Wraps the downloadToStream logic to retry/recover the download operation
            in the case that the last time the input stream has been written to exceeds a threshold.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ParallelDownloadToFile.ValidateOrGetRangeSize(System.Boolean,System.Boolean,System.Nullable{System.Int64})">
            <summary>
            If the rangeSizeInBytes has a value, validate it.
            Otherwise set the rangeSizeInBytes to the appropriate default vlaue.
            </summary>
            <param name="useTransactionalMD5">Indicates if transactional MD5 validation is to be used.</param>
            <param name="useTransactionalCRC64">Indicates if transactional CRC64 validation is to be used.</param>
            <param name="rangeSizeInBytes">The range size in bytes to be used for each download operation
            or null to use the default value.</param>
            <returns>The rangeSizeInBytes value that was passed in if not null, otherwise the appropriate default value.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AppendBlock(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to commit a block to an append blob.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="timeout">An integer specifying the server timeout interval.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Net.HttpWebRequest"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AppendBlock(System.Uri,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to commit a block to an append blob.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="sourceContentChecksum">The checksum calculated for the range of bytes of the source.</param>
            <param name="timeout">An integer specifying the server timeout interval.</param>
            <param name="sourceAccessCondition">The source access condition to apply to the request.</param>
            <param name="destAccessCondition">The destination access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Net.HttpWebRequest"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.Put(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobProperties,Microsoft.Azure.Storage.Blob.BlobType,System.Int64,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to create a new block blob or page blob, or to update the content 
            of an existing block blob. 
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="properties">The properties to set for the blob.</param>
            <param name="blobType">The type of the blob.</param>
            <param name="pageBlobSize">For a page blob, the size of the blob. This parameter is ignored
            for block blobs.</param>
            <param name="pageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> containing blob request options</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AddSnapshot(Microsoft.Azure.Storage.Core.UriQueryBuilder,System.Nullable{System.DateTimeOffset})">
            <summary>
            Adds the snapshot.
            </summary>
            <param name="builder">The builder.</param>
            <param name="snapshot">The snapshot version, if the blob is a snapshot.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.GetPageRanges(System.Uri,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to return the list of valid page ranges for a page blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="snapshot">The snapshot timestamp, if the blob is a snapshot.</param>
            <param name="offset">The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="count">The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.GetPageRangesDiff(System.Uri,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to return the list of page ranges that differ between a specified snapshot and this object.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="snapshot">The snapshot timestamp, if the blob is a snapshot.</param>
            <param name="previousSnapshotTime">A <see cref="T:System.DateTimeOffset"/> representing the snapshot timestamp to use as the starting point for the diff. If this CloudPageBlob represents a snapshot, the previousSnapshotTime parameter must be prior to the current snapshot timestamp.</param>
            <param name="offset">The starting offset of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="count">The length of the data range over which to list page ranges, in bytes. Must be a multiple of 512.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AddCopySource(Microsoft.Azure.Storage.Core.StorageRequestMessage,System.Uri)">
            <summary>
            Adds the Copy Source Header for Blob Service Operations.
            </summary>
            <param name="request">The <see cref="T:Microsoft.Azure.Storage.Core.StorageRequestMessage"/> to add the copy source header to.</param>
            <param name="sourceUri">URI of the source</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AddRange(Microsoft.Azure.Storage.Core.StorageRequestMessage,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Adds the Range Header for Blob Service Operations.
            </summary>
            <param name="request">Request</param>
            <param name="offset">Starting byte of the range</param>
            <param name="count">Number of bytes in the range</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AddSourceRange(Microsoft.Azure.Storage.Core.StorageRequestMessage,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Adds the Source Range Header for Blob Service Operations.
            </summary>
            <param name="request">Request</param>
            <param name="offset">Starting byte of the range</param>
            <param name="count">Number of bytes in the range</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AddRangeImpl(System.String,Microsoft.Azure.Storage.Core.StorageRequestMessage,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Adds the Range Header for Blob Service Operations.
            </summary>
            <param name="header">Name of the header</param>
            <param name="request">Request</param>
            <param name="offset">Starting byte of the range</param>
            <param name="count">Number of bytes in the range</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.GetProperties(System.Uri,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to return the blob's system properties.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="snapshot">The snapshot timestamp, if the blob is a snapshot.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> containing blob request options</param>
            <returns>A web request for performing the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.SetProperties(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobProperties,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to set system properties for a blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="properties">The blob's properties.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.GetUserDelegationKey(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to get a user delegation key for user-delegation-based SAS.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="timeout">An integer specifying the server timeout interval.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="content">The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.StorageRequestMessage"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.Resize(System.Uri,System.Nullable{System.Int32},System.Int64,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to resize a page blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="newBlobSize">The new blob size, if the blob is a page blob. Set this parameter to <c>null</c> to keep the existing blob size.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.SetSequenceNumber(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.SequenceNumberAction,System.Nullable{System.Int64},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to set a page blob's sequence number.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="sequenceNumberAction">A value of type <see cref="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction"/>, indicating the operation to perform on the sequence number.</param>
            <param name="sequenceNumber">The sequence number. Set this parameter to <c>null</c> if this operation is an increment action.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.GetMetadata(System.Uri,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to return the user-defined metadata for the blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="snapshot">The snapshot timestamp, if the blob is a snapshot.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object containing blob request options</param>
            <returns>A web request for performing the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.SetMetadata(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to set user-defined metadata for the blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request for performing the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AddMetadata(Microsoft.Azure.Storage.Core.StorageRequestMessage,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds user-defined metadata to the request as one or more name-value pairs.
            </summary>
            <param name="request">The web request.</param>
            <param name="metadata">The user-defined metadata.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AddMetadata(Microsoft.Azure.Storage.Core.StorageRequestMessage,System.String,System.String)">
            <summary>
            Adds user-defined metadata to the request as a single name-value pair.
            </summary>
            <param name="request">The web request.</param>
            <param name="name">The metadata name.</param>
            <param name="value">The metadata value.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.Delete(System.Uri,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to delete a blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="snapshot">The snapshot timestamp, if the blob is a snapshot.</param>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to delete only blobs, only snapshots, or both.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.Undelete(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to undelete a soft-deleted blob.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="timeout">An integer specifying the server timeout interval.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.Snapshot(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to create a snapshot of a blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.Lease(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.LeaseAction,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Generates a web request to use to acquire, renew, change, release or break the lease for the blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval, in seconds.</param>
            <param name="action">The lease action to perform.</param>
            <param name="proposedLeaseId">A lease ID to propose for the result of an acquire or change operation,
            or null if no ID is proposed for an acquire operation. This should be null for renew, release, and break operations.</param>
            <param name="leaseDuration">The lease duration, in seconds, for acquire operations.
            If this is -1 then an infinite duration is specified. This should be null for renew, change, release, and break operations.</param>
            <param name="leaseBreakPeriod">The amount of time to wait, in seconds, after a break operation before the lease is broken.
            If this is null then the default time is used. This should be null for acquire, renew, change, and release operations.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AddProposedLeaseId(Microsoft.Azure.Storage.Core.StorageRequestMessage,System.String)">
            <summary>
            Adds a proposed lease id to a request.
            </summary>
            <param name="request">The request.</param>
            <param name="proposedLeaseId">The proposed lease id.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AddLeaseDuration(Microsoft.Azure.Storage.Core.StorageRequestMessage,System.Nullable{System.Int32})">
            <summary>
            Adds a lease duration to a request.
            </summary>
            <param name="request">The request.</param>
            <param name="leaseDuration">The lease duration.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AddLeaseBreakPeriod(Microsoft.Azure.Storage.Core.StorageRequestMessage,System.Nullable{System.Int32})">
            <summary>
            Adds a lease break period to a request.
            </summary>
            <param name="request">The request.</param>
            <param name="leaseBreakPeriod">The lease break period.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AddLeaseAction(Microsoft.Azure.Storage.Core.StorageRequestMessage,Microsoft.Azure.Storage.Blob.LeaseAction)">
            <summary>
            Adds a lease action to a request.
            </summary>
            <param name="request">The request.</param>
            <param name="leaseAction">The lease action.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.PutBlock(System.Uri,System.Nullable{System.Int32},System.String,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to write a block to a block blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="blockId">The block ID for this block.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content">The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object containing blob request options</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.PutBlock(System.Uri,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Nullable{System.Int32},System.String,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to write a block to a block blob.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> specifying the absolute URI to the blob.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="sourceContentChecksum">The checksum calculated for the range of bytes of the source.</param>
            <param name="timeout">An integer specifying the server timeout interval.</param>
            <param name="blockId">A string specifying the block ID for this block.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed.</param>
            <param name="content">The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object containing blob request options</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.PutBlockList(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobProperties,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to create or update a blob by committing a block list.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="properties">The properties to set for the blob.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object containing blob request options</param>
            <returns>A web request for performing the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.GetBlockList(System.Uri,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.Blob.BlockListingFilter,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to return the list of blocks for a block blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="snapshot">The snapshot timestamp, if the blob is a snapshot.</param>
            <param name="typesOfBlocks">The types of blocks to include in the list: committed, uncommitted, or both.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.PutPage(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.PageRange,Microsoft.Azure.Storage.Blob.Protocol.PageWrite,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to write or clear a range of pages in a page blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object containing blob request options.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.PutPage(System.Uri,System.Uri,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.PageRange,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to write or clear a range of pages in a page blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="sourceUri">A <see cref="T:System.Uri"/> specifying the absolute URI to the source blob.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or <c>null</c> to return all bytes through the end of the blob.</param>
            <param name="sourceContentChecksum">The checksum calculated for the range of bytes of the source.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="pageRange"></param>
            <param name="sourceAccessCondition">The source access condition to apply to the request.</param>
            <param name="destAccessCondition">The destination access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object containing blob request options</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.CopyFrom(System.Uri,System.Nullable{System.Int32},System.Uri,System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Generates a web request to copy a blob.
            </summary>
            <param name="uri">The absolute URI to the destination blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="source">The absolute URI to the source blob, including any necessary authentication parameters.</param>
            <param name="incrementalCopy">A boolean indicating whether or not this is an incremental copy.</param>
            <param name="sourceAccessCondition">The access condition to apply to the source blob.</param>
            <param name="destAccessCondition">The access condition to apply to the destination blob.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.CopyFrom(System.Uri,System.Nullable{System.Int32},System.Uri,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Generates a web request to copy a blob.
            </summary>
            <param name="uri">The absolute URI to the destination blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="source">The absolute URI to the source blob, including any necessary authentication parameters.</param>
            <param name="incrementalCopy">A boolean indicating whether or not this is an incremental copy.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set. Only valid on page blobs.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set. Only valid on block blobs.</param>
            <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
            <param name="sourceAccessCondition">The access condition to apply to the source blob.</param>
            <param name="destAccessCondition">The access condition to apply to the destination blob.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.CopyFrom(System.Uri,System.Nullable{System.Int32},System.Uri,Microsoft.Azure.Storage.Shared.Protocol.Checksum,System.Boolean,System.Boolean,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier},System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Generates a web request to copy a blob or file to another blob.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> specifying the absolute URI to the destination blob.</param>
            <param name="timeout">An integer specifying the server timeout interval.</param>
            <param name="source">A <see cref="T:System.Uri"/> specifying the absolute URI to the source object, including any necessary authentication parameters.</param>
            <param name="sourceContentChecksum">An optional hash value used to ensure transactional integrity. May be <c>null</c>.</param>
            <param name="incrementalCopy">A boolean indicating whether or not this is an incremental copy.</param>
            <param name="syncCopy">A boolean to enable synchronous server copy of blobs.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="standardBlockBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
            <param name="sourceAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met on the source object in order for the request to proceed.</param>
            <param name="destAccessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met on the destination blob in order for the request to proceed.</param>
            <param name="content"> The HTTP entity body and content headers.</param> 
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.AbortCopy(System.Uri,System.Nullable{System.Int32},System.String,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Generates a web request to abort a copy operation.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="copyId">The ID string of the copy operation to be aborted.</param>
            <param name="accessCondition">The access condition to apply to the request.
                Only lease conditions are supported for this operation.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request for performing the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.Get(System.Uri,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to get the blob's content, properties, and metadata.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="snapshot">The snapshot version, if the blob is a snapshot.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request for performing the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.Get(System.Uri,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.Azure.Storage.Shared.Protocol.ChecksumRequested,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Constructs a web request to return a specified range of the blob's content, together with its properties and metadata.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval, in seconds.</param>
            <param name="snapshot">The snapshot version, if the blob is a snapshot.</param>
            <param name="offset">The byte offset at which to begin returning content.</param>
            <param name="count">The number of bytes to return, or null to return all bytes through the end of the blob.</param>
            <param name="rangeContentChecksumRequested">Indicates which checksum headers are requested for the specified range.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object containing blob request options</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.GetAccountProperties(System.Uri,Microsoft.Azure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Creates a web request to get the properties of the Blob service account.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> specifying the Blob service endpoint.</param>
            <param name="builder">A <see cref="T:Microsoft.Azure.Storage.Core.UriQueryBuilder"/> object specifying additional parameters to add to the URI query string.</param>
            <param name="timeout">The server timeout interval, in seconds.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A StorageRequestMessage to get the account properties.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.GetServiceProperties(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to get the properties of the service.
            </summary>
            <param name="uri">The absolute URI to the service.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A StorageRequestMessage to get the service properties.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.SetServiceProperties(System.Uri,System.Nullable{System.Int32},System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Creates a web request to set the properties of the service.
            </summary>
            <param name="uri">The absolute URI to the service.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="content"> The HTTP entity body and content headers.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A web request to set the service properties.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.GetServiceStats(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to get the stats of the service.
            </summary>
            <param name="uri">The absolute URI to the service.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <param name="canonicalizer">A canonicalizer that converts HTTP request data into a standard form appropriate for signing.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object providing credentials for the request.</param>
            <returns>A StorageRequestMessage to get the service stats.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpRequestMessageFactory.SetBlobTier(System.Uri,System.Nullable{System.Int32},System.String,System.Nullable{Microsoft.Azure.Storage.Blob.RehydratePriority},System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to set the tier on a page blob.
            </summary>
            <param name="uri">The absolute URI to the blob.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="blobTier">The blob tier to set.</param>
            <param name="rehydratePriority">The priority with which to rehydrate an archived blob.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers">
            <summary>
            Provides a set of methods for parsing a response containing blob data from the Blob service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetProperties(System.Net.Http.HttpResponseMessage)">
            <summary>
            Gets the blob's properties from the response.
            </summary>
            <param name="response">The web response.</param>
            <returns>The blob's properties.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseStatus(System.Net.Http.HttpResponseMessage)">
            <summary>
            Extracts the lease status from a web response.
            </summary>
            <param name="response">The web response.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.LeaseStatus"/> enumeration from the web response.</returns>
            <remarks>If the appropriate header is not present, a status of <see cref="F:Microsoft.Azure.Storage.Blob.LeaseStatus.Unspecified"/> is returned.</remarks>
            <exception cref="T:System.ArgumentException">The header contains an unrecognized value.</exception>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseState(System.Net.Http.HttpResponseMessage)">
            <summary>
            Extracts the lease state from a web response.
            </summary>
            <param name="response">The web response.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.LeaseState"/> enumeration from the web response.</returns>
            <remarks>If the appropriate header is not present, a status of <see cref="F:Microsoft.Azure.Storage.Blob.LeaseState.Unspecified"/> is returned.</remarks>
            <exception cref="T:System.ArgumentException">The header contains an unrecognized value.</exception>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseDuration(System.Net.Http.HttpResponseMessage)">
            <summary>
            Extracts the lease duration from a web response.
            </summary>
            <param name="response">The web response.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.LeaseDuration"/> enumeration from the web response.</returns>
            <remarks>If the appropriate header is not present, a status of <see cref="F:Microsoft.Azure.Storage.Blob.LeaseDuration.Unspecified"/> is returned.</remarks>
            <exception cref="T:System.ArgumentException">The header contains an unrecognized value.</exception>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseId(System.Net.Http.HttpResponseMessage)">
            <summary>
            Extracts the lease ID header from a web response.
            </summary>
            <param name="response">The web response.</param>
            <returns>The lease ID.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRemainingLeaseTime(System.Net.Http.HttpResponseMessage)">
            <summary>
            Extracts the remaining lease time from a web response.
            </summary>
            <param name="response">The web response.</param>
            <returns>The remaining lease time, in seconds.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetMetadata(System.Net.Http.HttpResponseMessage)">
            <summary>
            Gets the user-defined metadata.
            </summary>
            <param name="response">The response from server.</param>
            <returns>A <see cref="!:IDictionary"/> of the metadata.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetCopyAttributes(System.Net.Http.HttpResponseMessage)">
            <summary>
            Extracts a <see cref="T:Microsoft.Azure.Storage.Blob.CopyState"/> object from the headers of a web response.
            </summary>
            <param name="response">The HTTP web response.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CopyState"/> object, or null if the web response does not contain a copy status.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetSnapshotTime(System.Net.Http.HttpResponseMessage)">
            <summary>
            Gets the snapshot timestamp from the response.
            </summary>
            <param name="response">The web response.</param>
            <returns>The snapshot timestamp.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadAccountProperties(System.Net.Http.HttpResponseMessage)">
            <summary>
            Reads account properties from an HttpResponseMessage object.
            </summary>
            <param name="response">The HttpResponseMessage from which to read the account properties.</param>
            <returns>The account properties stored in the header.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServicePropertiesAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Reads service properties from a stream.
            </summary>
            <param name="inputStream">The stream from which to read the service properties.</param>
            <returns>The service properties stored in the stream.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceStatsAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Reads service stats from a stream.
            </summary>
            <param name="inputStream">The stream from which to read the service stats.</param>
            <returns>The service stats stored in the stream.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseStatus(System.String)">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Storage.Blob.LeaseStatus"/> from a string.
            </summary>
            <param name="leaseStatus">The lease status string.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.LeaseStatus"/> enumeration.</returns>
            <remarks>If a null or empty string is supplied, a status of <see cref="F:Microsoft.Azure.Storage.Blob.LeaseStatus.Unspecified"/> is returned.</remarks>
            <exception cref="T:System.ArgumentException">The string contains an unrecognized value.</exception>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseState(System.String)">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Storage.Blob.LeaseState"/> from a string.
            </summary>
            <param name="leaseState">The lease state string.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.LeaseState"/> enumeration.</returns>
            <remarks>If a null or empty string is supplied, a status of <see cref="F:Microsoft.Azure.Storage.Blob.LeaseState.Unspecified"/> is returned.</remarks>
            <exception cref="T:System.ArgumentException">The string contains an unrecognized value.</exception>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseDuration(System.String)">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Storage.Blob.LeaseDuration"/> from a string.
            </summary>
            <param name="leaseDuration">The lease duration string.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.LeaseDuration"/> enumeration.</returns>
            <remarks>If a null or empty string is supplied, a status of <see cref="F:Microsoft.Azure.Storage.Blob.LeaseDuration.Unspecified"/> is returned.</remarks>
            <exception cref="T:System.ArgumentException">The string contains an unrecognized value.</exception>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetCopyAttributes(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Builds a <see cref="T:Microsoft.Azure.Storage.Blob.CopyState"/> object from the given strings containing formatted copy information.
            </summary>
            <param name="copyStatusString">The copy status, as a string.</param>
            <param name="copyId">The copy ID.</param>
            <param name="copySourceString">The source URI of the copy, as a string.</param>
            <param name="copyProgressString">A string formatted as progressBytes/TotalBytes.</param>
            <param name="copyCompletionTimeString">The copy completion time, as a string, or <c>null</c>.</param>
            <param name="copyStatusDescription">The copy status description, if any.</param>
            <param name="copyDestinationSnapshotTimeString">The incremental destination snapshot time for the latest incremental copy</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CopyState"/> object populated from the given strings.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetServerEncrypted(System.String)">
            <summary>
            Determines if a blob is listed as server-side encypted.
            </summary>
            <param name="encryptionHeader">String giving the status of server encryption.</param>
            <returns><c>true</c> if blob encrypted or <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetIncrementalCopyStatus(System.String)">
            <summary>
            Determines if a blob in an incremental copy.
            </summary>
            <param name="incrementalCopyHeader">String giving the incremental copy status of the blob</param>
            <returns><c>true</c> if blob is an incremental copy or <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetDeletionStatus(System.String)">
            <summary>
            Determines if a blob has been deleted.
            </summary>
            <param name="deletedHeader">String giving the deletion status of the blob</param>
            <returns><c>true</c> if blob has been deleted or <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.CheckIfTrue(System.String)">
            <summary>
            Determines if the header is equal to the value true.
            </summary>
            <param name="header">The header to check</param>
            <returns><c>true</c> if header equals true or <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetBlobTier(Microsoft.Azure.Storage.Blob.BlobType,System.String,System.Nullable{Microsoft.Azure.Storage.Blob.StandardBlobTier}@,System.Nullable{Microsoft.Azure.Storage.Blob.PremiumPageBlobTier}@)">
            <summary>
            Determines the tier of the blob.
            </summary>
            <param name="blobType">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobType" /> indicating the type of blob.</param>
            <param name="blobTierString">The blob tier as a string</param>
            <param name="standardBlobTier">A nullable <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/>. This value will be populated if the blob type is unspecified or is a block blob.</param>
            <param name="premiumPageBlobTier">A nullable <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/>. This value will be populated if the blob type is unspecified or is a page blob.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRehydrationStatus(System.String)">
            <summary>
            Determines the rehydration status of the blob.
            </summary>
            <param name="rehydrationStatus">The rehydration status as a string.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.RehydrationStatus"/> representing the rehydration status of the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.GetAccountProperties(System.Uri,Microsoft.Azure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Creates a web request to get the properties of the Blob service account.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> specifying the Blob service endpoint.</param>
            <param name="builder">A <see cref="T:Microsoft.Azure.Storage.Core.UriQueryBuilder"/> object specifying additional parameters to add to the URI query string.</param>
            <param name="timeout">The server timeout interval, in seconds.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.Create(System.Uri,System.Nullable{System.Int32},System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to create a new container.
            </summary>
            <param name="uri">The absolute URI to the container.</param>
            <param name="timeout">The server timeout interval.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.Create(System.Uri,System.Nullable{System.Int32},System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to create a new container.
            </summary>
            <param name="uri">The absolute URI to the container.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="accessType">An <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType"/> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.</param>                                                                                        
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.Delete(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to delete the container and all of the blobs within it.
            </summary>
            <param name="uri">The absolute URI to the container.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.GetMetadata(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Generates a web request to return the user-defined metadata for this container.
            </summary>
            <param name="uri">The absolute URI to the container.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.GetProperties(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Generates a web request to return the properties and user-defined metadata for this container.
            </summary>
            <param name="uri">The absolute URI to the container.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.SetMetadata(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Generates a web request to set user-defined metadata for the container.
            </summary>
            <param name="uri">The absolute URI to the container.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.Lease(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.LeaseAction,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Generates a web request to use to acquire, renew, change, release or break the lease for the container.
            </summary>
            <param name="uri">The absolute URI to the container.</param>
            <param name="timeout">The server timeout interval, in seconds.</param>
            <param name="action">The lease action to perform.</param>
            <param name="proposedLeaseId">A lease ID to propose for the result of an acquire or change operation,
            or null if no ID is proposed for an acquire operation. This should be null for renew, release, and break operations.</param>
            <param name="leaseDuration">The lease duration, in seconds, for acquire operations.
            If this is -1 then an infinite duration is specified. This should be null for renew, change, release, and break operations.</param>
            <param name="leaseBreakPeriod">The amount of time to wait, in seconds, after a break operation before the lease is broken.
            If this is null then the default time is used. This should be null for acquire, renew, change, and release operations.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.AddMetadata(Microsoft.Azure.Storage.Core.StorageRequestMessage,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds user-defined metadata to the request as one or more name-value pairs.
            </summary>
            <param name="request">The web request.</param>
            <param name="metadata">The user-defined metadata.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.AddMetadata(Microsoft.Azure.Storage.Core.StorageRequestMessage,System.String,System.String)">
            <summary>
            Adds user-defined metadata to the request as a single name-value pair.
            </summary>
            <param name="request">The web request.</param>
            <param name="name">The metadata name.</param>
            <param name="value">The metadata value.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.List(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.Shared.Protocol.ListingContext,Microsoft.Azure.Storage.Blob.ContainerListingDetails,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to return a listing of all containers in this storage account.
            </summary>
            <param name="uri">The absolute URI for the account.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="listingContext">A set of parameters for the listing operation.</param>
            <param name="detailsIncluded">Additional details to return with the listing.</param>
            <returns>A web request for the specified operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.GetAcl(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to return the ACL for a container.
            </summary>
            <param name="uri">The absolute URI to the container.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <returns><returns>A web request to use to perform the operation.</returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.SetAcl(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.Azure.Storage.AccessCondition,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Constructs a web request to set the ACL for a container.
            </summary>
            <param name="uri">The absolute URI to the container.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="publicAccess">The type of public access to allow for the container.</param>
            <param name="accessCondition">The access condition to apply to the request.</param>
            <returns><returns>A web request to use to perform the operation.</returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.ListBlobs(System.Uri,System.Nullable{System.Int32},Microsoft.Azure.Storage.Blob.Protocol.BlobListingContext,System.Net.Http.HttpContent,Microsoft.Azure.Storage.OperationContext,Microsoft.Azure.Storage.Core.Auth.ICanonicalizer,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Generates a web request to return a listing of all blobs in the container.
            </summary>
            <param name="uri">The absolute URI to the container.</param>
            <param name="timeout">The server timeout interval.</param>
            <param name="listingContext">A set of parameters for the listing operation.</param>
            <returns>A web request to use to perform the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpRequestMessageFactory.GetContainerUriQueryBuilder">
            <summary>
            Gets the container Uri query builder.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Core.UriQueryBuilder"/> for the container.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers.ReadAccountProperties(System.Net.Http.HttpResponseMessage)">
            <summary>
            Reads account properties from a HttpWebResponse.
            </summary>
            <param name="response">The HttpWebResponse from which to read the account properties.</param>
            <returns>The account properties stored in the headers.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers.GetProperties(System.Net.Http.HttpResponseMessage)">
            <summary>
            Gets the container's properties from the response.
            </summary>
            <param name="response">The web response.</param>
            <returns>The container's attributes.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers.GetMetadata(System.Net.Http.HttpResponseMessage)">
            <summary>
            Gets the user-defined metadata.
            </summary>
            <param name="response">The response from server.</param>
            <returns>A <see cref="!:IDictionary"/> of the metadata.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers.GetAcl(System.Net.Http.HttpResponseMessage)">
            <summary>
            Gets the ACL for the container from the response.
            </summary>
            <param name="response">The web response.</param>
            <returns>A value indicating the public access level for the container.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers.ReadSharedAccessIdentifiersAsync(System.IO.Stream,Microsoft.Azure.Storage.Blob.BlobContainerPermissions,System.Threading.CancellationToken)">
            <summary>
            Reads the share access policies from a stream in XML.
            </summary>
            <param name="inputStream">The stream of XML policies.</param>
            <param name="permissions">The permissions object to which the policies are to be written.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ContainerHttpResponseParsers.GetContainerAcl(System.String)">
            <summary>
            Converts the ACL string to a <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPermissions"/> object.
            </summary>
            <param name="acl">The string to convert.</param>
            <returns>The resulting <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPermissions"/> object.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.BlobAccessPolicyResponse">
            <summary>
            Parses the response XML from an operation to set the access policy for a container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobAccessPolicyResponse.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the BlobAccessPolicyResponse class.
            </summary>
            <param name="stream">The stream to be parsed.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobAccessPolicyResponse.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parses the current element.
            </summary>
            <param name="accessPolicyElement">The shared access policy element to parse.</param>
            <returns>The shared access policy.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry">
            <summary>
            Represents a container item returned in the XML response for a container listing operation.
            </summary>
            
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry.Metadata">
            <summary>
            Gets the user-defined metadata for the container.
            </summary>
            <value>The container's metadata, as a collection of name-value pairs.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry.Properties">
            <summary>
            Gets the container's system properties.
            </summary>
            <value>The container's properties.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry.Name">
            <summary>
            Gets the name of the container.
            </summary>
            <value>The container's name.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry.Uri">
            <summary>
            Gets the container's URI.
            </summary>
            <value>The absolute URI to the container.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings">
            <summary>
            Provides error code strings that are specific to the Blob service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidAppendCondition">
            <summary>
            Error code that may be returned when the specified append offset is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidMaxBlobSizeCondition">
            <summary>
            Error code that may be returned when the specified maximum blob size is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidBlobOrBlock">
            <summary>
            Error code that may be returned when the specified block or blob is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidBlockId">
            <summary>
            Error code that may be returned when a block ID is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidBlockList">
            <summary>
            Error code that may be returned when a block list is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.ContainerNotFound">
            <summary>
            The specified container was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.BlobNotFound">
            <summary>
            Error code that may be returned when a blob with the specified address cannot be found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.ContainerAlreadyExists">
            <summary>
            The specified container already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.ContainerDisabled">
            <summary>
            The specified container is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.ContainerBeingDeleted">
            <summary>
            The specified container is being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.BlobAlreadyExists">
            <summary>
            Error code that may be returned when a client attempts to create a blob that already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseNotPresentWithBlobOperation">
            <summary>
            Error code that may be returned when there is currently no lease on the blob.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseNotPresentWithContainerOperation">
            <summary>
            Error code that may be returned when there is currently no lease on the container.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseLost">
            <summary>
            Error code that may be returned when a lease ID was specified, but the lease has expired.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIdMismatchWithBlobOperation">
            <summary>
            Error code that may be returned when the lease ID specified did not match the lease ID for the blob.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIdMismatchWithContainerOperation">
            <summary>
            Error code that may be returned when the lease ID specified did not match the lease ID for the container.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIdMissing">
            <summary>
            Error code that may be returned when there is currently a lease on the resource and no lease ID was specified in the request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseNotPresentWithLeaseOperation">
            <summary>
            Error code that may be returned when there is currently no lease on the resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIdMismatchWithLeaseOperation">
            <summary>
            Error code that may be returned when the lease ID specified did not match the lease ID.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseAlreadyPresent">
            <summary>
            Error code that may be returned when there is already a lease present.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseAlreadyBroken">
            <summary>
            Error code that may be returned when the lease has already been broken and cannot be broken again.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIsBrokenAndCannotBeRenewed">
            <summary>
            Error code that may be returned when the lease ID matched, but the lease has been broken explicitly and cannot be renewed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIsBreakingAndCannotBeAcquired">
            <summary>
            Error code that may be returned when the lease ID matched, but the lease is breaking and cannot be acquired.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.LeaseIsBreakingAndCannotBeChanged">
            <summary>
            Error code that may be returned when the lease ID matched, but the lease is breaking and cannot be changed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InfiniteLeaseDurationRequired">
            <summary>
            Error code that may be returned when the destination of a copy operation has a lease of fixed duration.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.SnapshotsPresent">
            <summary>
            Error code that may be returned when the operation is not permitted because the blob has snapshots.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidBlobType">
            <summary>
            Error code that may be returned when the blob type is invalid for this operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidVersionForPageBlobOperation">
            <summary>
            Error code that may be returned when the operation on page blobs uses a version prior to 2009-09-19.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.InvalidPageRange">
            <summary>
            Error code that may be returned when the page range specified is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.SequenceNumberConditionNotMet">
            <summary>
            Error code that may be returned when the sequence number condition specified was not met.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.SequenceNumberIncrementTooLarge">
            <summary>
            Error code that may be returned when the sequence number increment cannot be performed because it would result in overflow of the sequence number.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.SourceConditionNotMet">
            <summary>
            Error code that may be returned when the source condition specified using HTTP conditional header(s) is not met.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.TargetConditionNotMet">
            <summary>
            Error code that may be returned when the target condition specified using HTTP conditional header(s) is not met.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.CopyAcrossAccountsNotSupported">
            <summary>
            Error code that may be returned when the copy source account and destination account are not the same.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.CannotVerifyCopySource">
            <summary>
            Error code that may be returned when the source of a copy cannot be accessed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.PendingCopyOperation">
            <summary>
            Error code that may be returned when an attempt to modify the destination of a pending copy is made.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.NoPendingCopyOperation">
            <summary>
            Error code that may be returned when an Abort Copy operation is called when there is no pending copy.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.BlobErrorCodeStrings.CopyIdMismatch">
            <summary>
            Error code that may be returned when the copy ID specified in an Abort Copy operation does not match the current pending copy ID.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.BlobListingContext">
            <summary>
            Provides a set of parameters for a blob listing operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobListingContext.#ctor(System.String,System.Nullable{System.Int32},System.String,Microsoft.Azure.Storage.Blob.BlobListingDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.Protocol.BlobListingContext"/> class.
            </summary>
            <param name="prefix">The blob prefix.</param>
            <param name="maxResults">The maximum number of results to return.</param>
            <param name="delimiter">The blob delimiter.</param>
            <param name="details">The include parameter.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.BlobListingContext.Delimiter">
            <summary>
            Gets or sets the delimiter for a blob listing operation.
            </summary>
            <value>The delimiter to use to traverse the virtual hierarchy of blobs.</value>
            <remarks>
            The delimiter parameter enables the caller to traverse the blob namespace by using a user-configured delimiter. 
            Using this parameter, it is possible to traverse a virtual hierarchy of blobs as though it were a file system. 
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.BlobListingContext.Details">
            <summary>
            Gets or sets the details for the listing operation, which indicates the types of data to include in the 
            response.
            </summary>
            <value>The details to include in the listing operation.</value>
            <remarks>
            The include parameter specifies that the response should include one or more of the following subsets: snapshots,
            metadata, uncommitted blobs.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.BlobRequest">
            <summary>
            Provides a set of helper methods for constructing a request against the Blob service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobRequest.WriteSharedAccessIdentifiers(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies,System.IO.Stream)">
            <summary>
            Writes a collection of shared access policies to the specified stream in XML format.
            </summary>
            <param name="sharedAccessPolicies">A collection of shared access policies.</param>
            <param name="outputStream">An output stream.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.BlobRequest.WriteBlockListBody(System.Collections.Generic.IEnumerable{Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem},System.IO.Stream)">
            <summary>
            Writes the body of the block list to the specified stream in XML format.
            </summary>
            <param name="blocks">An enumerable collection of <see cref="T:Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem"/> objects.</param>
            <param name="outputStream">The stream to which the block list is written.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.BlobResponse">
            <summary>
            Provides a set of helper methods for constructing a request against the Blob service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.GetBlockListResponse">
            <summary>
            Provides methods for parsing the response from an operation to return a block list.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.GetBlockListResponse.ParseAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Asynchronously parses the XML response returned by an operation to retrieve a list of blocks.
            </summary>
            <param name="stream">The stream containing the XML response.</param>
            <param name="token">The cancellation token.</param>
            <returns>The list of <see cref="T:Microsoft.Azure.Storage.Blob.ListBlockItem"/> objects.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.GetBlockListResponse.ParseBlockItemAsync(System.Boolean,System.Xml.XmlReader,System.Threading.CancellationToken)">
            <summary>
            Reads a block item for block listing.
            </summary>
            <param name="committed">Whether we are currently listing committed blocks or not</param>
            <param name="reader"></param>
            <param name="token"></param>
            <returns>Block listing entry</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.GetPageDiffRangesResponse">
            <summary>
            Provides methods for parsing the response from an operation to get a range of differing pages for a page blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.GetPageDiffRangesResponse.ParsePageDiffRangeAsync(System.Xml.XmlReader,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Reads a page range.
            </summary>
            <returns>Page range entry</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.GetPageDiffRangesResponse.ParseAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Parses the XML response for an operation to get a range of pages for a page blob.
            </summary>
            <returns>An enumerable collection of <see cref="T:Microsoft.Azure.Storage.Blob.PageRange"/> objects.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.GetPageRangesResponse">
            <summary>
            Provides methods for parsing the response from an operation to get a range of pages for a page blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.GetPageRangesResponse.ParsePageRangeAsync(System.Xml.XmlReader,System.Threading.CancellationToken)">
            <summary>
            Reads a page range.
            </summary>
            <returns>Page range entry</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.GetPageRangesResponse.ParseAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Parses the XML response for an operation to get a range of pages for a page blob.
            </summary>
            <returns>An enumerable collection of <see cref="T:Microsoft.Azure.Storage.Blob.PageRange"/> objects.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.IListBlobEntry">
            <summary>
            Represents an item that may be returned by a blob listing operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry">
            <summary>
            Represents a blob item returned in the XML response for a blob listing operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.#ctor(System.String,Microsoft.Azure.Storage.Blob.BlobAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry"/> class.
            </summary>
            <param name="name">A string containing the name of the blob.</param>
            <param name="attributes">The blob's attributes.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.Attributes">
            <summary>
            Stores the blob item's attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.Name">
            <summary>
            Gets the name of the blob item.
            </summary>
            <value>A string containing the name of the blob item.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.Properties">
            <summary>
            Gets the blob item's system properties.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobProperties"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.Metadata">
            <summary>
            Gets the user-defined metadata for the blob item.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.IDictionary`2"/> object containing the blob item's metadata as a collection of name-value pairs.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.Uri">
            <summary>
            Gets the blob item's URI.
            </summary>
            <value>The absolute URI to the blob item.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.SnapshotTime">
            <summary>
            Gets the date and time that the blob snapshot was taken, if this blob is a snapshot.
            </summary>
            <value>The blob's snapshot time if the blob is a snapshot; otherwise, <c>null</c>.</value>
            <remarks>
            If the blob is not a snapshot, the value of this property is <c>null</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.CopyState">
            <summary>
            Gets the state of the most recent or pending copy operation.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobEntry.CopyState"/> object containing the copy state, or <c>null</c> if no copy blob state exists for this blob.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.ListBlobPrefixEntry">
            <summary>
            Represents the blob name prefix that is returned in the XML response for a blob listing operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobPrefixEntry.Name">
            <summary>
            Gets the blob name prefix.
            </summary>
            <value>The blob name prefix.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.ListBlobsResponse">
            <summary>
            Provides methods for parsing the response from a blob listing operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.ListBlobsResponse.Blobs">
            <summary>
            Gets an enumerable collection of objects that implement <see cref="T:Microsoft.Azure.Storage.Blob.Protocol.IListBlobEntry"/> from the response.
            </summary>
            <value>An enumerable collection of objects that implement <see cref="T:Microsoft.Azure.Storage.Blob.Protocol.IListBlobEntry"/>.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ListBlobsResponse.ParseBlobEntryAsync(System.Xml.XmlReader,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Parses a blob entry in a blob listing response.
            </summary>
            <returns>Blob listing entry</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ListBlobsResponse.ParseBlobPrefixEntryAsync(System.Xml.XmlReader,System.Threading.CancellationToken)">
            <summary>
            Parses a blob prefix entry in a blob listing response.
            </summary>
            <returns>Blob listing entry</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ListBlobsResponse.ParseAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Parses the response XML for a blob listing operation.
            </summary>
            <returns>An enumerable collection of objects that implement <see cref="T:Microsoft.Azure.Storage.Blob.Protocol.IListBlobEntry"/>.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.ListContainersResponse">
            <summary>
            Provides methods for parsing the response from a container listing operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ListContainersResponse.ParseContainerEntryAsync(System.Xml.XmlReader,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Reads a container entry completely including its properties and metadata.
            </summary>
            <returns>Container listing entry</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.ListContainersResponse.ParseAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Parses the response XML for a container listing operation.
            </summary>
            <returns>An enumerable collection of <see cref="T:Microsoft.Azure.Storage.Blob.Protocol.BlobContainerEntry"/> objects.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.PageWrite">
            <summary>
            Describes actions that may be used for writing to a page blob or clearing a set of pages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.PageWrite.Update">
            <summary>
            Update the page with new data.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.Protocol.PageWrite.Clear">
            <summary>
            Clear the page.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem">
            <summary>
            Represents a block in a block list.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem.#ctor(System.String,Microsoft.Azure.Storage.Blob.BlockSearchMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem"/> class.
            </summary>
            <param name="id">The block ID.</param>
            <param name="searchMode">One of the enumeration values that specifies in which block lists to search for the block.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem.Id">
            <summary>
            Gets the block ID.
            </summary>
            <value>The block ID.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.Protocol.PutBlockListItem.SearchMode">
            <summary>
            Gets a value that indicates which block lists to search for the block.
            </summary>
            <value>One of the enumeration values that specifies in which block lists to search for the block.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobAccountExtensions.CreateCloudBlobClient(Microsoft.Azure.Storage.CloudStorageAccount)">
            <summary>
            Creates the Blob service client.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobClient"/> object.</returns>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobAttributes.Properties">
            <summary>
            Gets the blob's system properties.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobProperties"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobAttributes.Metadata">
            <summary>
            Gets the user-defined metadata for the blob.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.IDictionary`2"/> object containing the blob's metadata as a collection of name-value pairs.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobAttributes.Uri">
            <summary>
            Gets the blob's URI for the primary location.
            </summary>
            <value>A <see cref="T:System.Uri"/> specifying the absolute URI to the blob at the primary location.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobAttributes.StorageUri">
            <summary>
            Gets the blob's URIs for both the primary and secondary locations.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.BlobAttributes.StorageUri"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobAttributes.SnapshotTime">
            <summary>
            Gets the date and time that the blob snapshot was taken, if this blob is a snapshot.
            </summary>
            <value>A <see cref="T:System.DateTimeOffset"/> containing the blob's snapshot time if the blob is a snapshot; otherwise, <c>null</c>.</value>
            <remarks>
            If the blob is not a snapshot, the value of this property is <c>null</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobAttributes.IsDeleted">
            <summary>
            Gets the value indicating whether or not this blob has been deleted.
            </summary>
            <value>A bool representing if the has been deleted.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobAttributes.CopyState">
            <summary>
            Gets the state of the most recent or pending copy operation.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.BlobAttributes.CopyState"/> object containing the copy state, or <c>null</c> if no copy blob state exists for this blob.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobAttributes.AssertNoSnapshot">
            <summary>
            Verifies that the blob is not a snapshot.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobAttributes.AssertNotDeleted">
            <summary>
            Verifies that the blob has not been deleted.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobSetTierBatchOperation">
            <summary>
            Defines a set of SetTier suboperations to be executed as a single batched request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobSetTierBatchOperation.AddSubOperation(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.Blob.StandardBlobTier,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Adds an operation to be submitted as part of the batch.
            </summary>
            <param name="blockBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlockBlob"/> whose tier will be set.</param>
            <param name="standardBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.StandardBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="blobRequestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobSetTierBatchOperation.AddSubOperation(Microsoft.Azure.Storage.Blob.CloudPageBlob,Microsoft.Azure.Storage.Blob.PremiumPageBlobTier,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Adds an operation be submitted as part of the batch. 
            </summary>
            <param name="pageBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudPageBlob"/> whose tier will be set.</param>
            <param name="premiumPageBlobTier">A <see cref="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier"/> representing the tier to set.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="blobRequestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobDeleteBatchOperation">
            <summary>
            Defines a set of SetTier suboperations to be executed as a single batched request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobDeleteBatchOperation.AddSubOperation(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Adds an operation to be submitted as part of the batch.
            </summary>
            <param name="blob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> to be deleted.</param>
            <param name="deleteSnapshotsOption">A <see cref="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption"/> object indicating whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="blobRequestOptions">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BatchOperation">
            <summary>
            Defines the basic structure of constructing batched requests.  Specific operations are supported by specific implementations.
            </summary>
            <remarks>
            Batch operations allow for preparing a large number of requests and sending them all in one operation. Upon reaching the service, each suboperation is 
            treated independently. In particular, this means the batch operation is not atomic; some suboperations may fail while others succeed. If any
            suboperation fails, an exception will be thrown containing a list of both successful and failed responses with relevant information on each. 
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BatchOperation.Operations">
            <summary>
            The list of sub-operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BatchOperation.BatchID">
            <summary>
            The batch id which acts as the separator between sub requests. Must also be present in the headers of the uber request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationResponse">
            <summary>
            Represents the response to a single sub operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationResponse.OperationIndex">
            <summary>
            Indicates the index in the list of sub-responses.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationResponse.StatusCode">
            <summary>
            The HTTP status code. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationResponse.Headers">
            <summary>
            Any headers returned on the sub response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationResponse.#ctor">
            <summary>
            Constructs a new sub response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationError">
            <summary>
            Represents a failed response on a single sub response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationError.OperationIndex">
            <summary>
            Indicates the index in the list of sub-responses.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationError.StatusCode">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationError.ErrorCode">
            <summary>
            The error code returned in the headers by the service. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobBatchSubOperationError.ExtendedErrorInformation">
            <summary>
            The <see cref="T:Microsoft.Azure.Storage.StorageExtendedErrorInformation"/>. May be null.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobBatchException">
            <summary>
            This exception type is thrown when the uber request on a batch is successful but one or more of the sub requests has failed. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobBatchException.SuccessfulResponses">
            <summary>
            The list of successful responses. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobBatchException.ErrorResponses">
            <summary>
            The list of failed responses. 
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobContainerPermissions">
            <summary>
            Represents the permissions for a container.
            </summary>
            /// <remarks>
            ## Examples
             [!code-csharp[BlobContainerPermissions_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/SASTests.cs#sample_CloudBlobContainer_GetSetPermissions "BlobContainerPermissions Sample")]
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobContainerPermissions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPermissions"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContainerPermissions.PublicAccess">
            <summary>
            Gets or sets the public access setting for the container.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType"/> enumeration value.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContainerPermissions.SharedAccessPolicies">
            <summary>
            Gets the set of shared access policies for the container.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies"/> object.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobContainerProperties">
            <summary>
            Represents the system properties for a container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.ETag">
            <summary>
            Gets the ETag value for the container.
            </summary>
            <value>A string containing the container's quoted ETag value.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.HasImmutabilityPolicy">
            <summary>
            Gets the HasImmutabilityPolicy value for the container.
            </summary>
            <value>True if the container has an immutability policy, or False if not.  The value may be null.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.HasLegalHold">
            <summary>
            Gets the HasLegalHold value for the container.
            </summary>
            <value>True if the container has legal hold, or False if not.  The value may be null.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.LastModified">
            <summary>
            Gets the container's last-modified time.
            </summary>
            <value>A <see cref="T:System.DateTimeOffset"/> containing the container's last-modified time, in UTC format.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.LeaseStatus">
            <summary>
            Gets the container's lease status.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.LeaseStatus"/> object that indicates the container's lease status.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.LeaseState">
            <summary>
            Gets the container's lease state.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.LeaseState"/> object that indicates the container's lease state.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.LeaseDuration">
            <summary>
            Gets the container's lease duration.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.LeaseDuration"/> object that indicates the container's lease duration.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContainerProperties.PublicAccess">
            <summary>
             Gets the public access for the container.
            </summary>
            <remarks>This field should only be set using the container's Create() method or SetPermissions() method</remarks>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType"/> that specifies the level of public access that is allowed on the container.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType">
            <summary>
            Specifies the level of public access that is allowed on the container.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType.Off">
            <summary>
            No public access. Only the account owner can read resources in this container.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType.Container">
            <summary>
            Container-level public access. Anonymous clients can read container and blob data.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType.Blob">
            <summary>
            Blob-level public access. Anonymous clients can read blob data within this container, but not container data.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobContainerPublicAccessType.Unknown">
            <summary>
            Unknown access type.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken">
            <summary>
            Represents a continuation token for listing operations. 
            </summary>
            <remarks><see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> continuation tokens are used in methods that return a <see cref="T:Microsoft.Azure.Storage.Blob.BlobResultSegment"/> object, such as <see cref="M:Microsoft.Azure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmented(Microsoft.Azure.Storage.Blob.BlobContinuationToken)"/>.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContinuationToken.Version">
            <summary>
            Gets or sets the version for continuing results for <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> enumeration operations.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContinuationToken.Type">
            <summary>
            Gets or sets the type element (blob, queue, table, file) for continuing results for <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> enumeration operations.
            </summary>
            <value>The type element.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContinuationToken.NextMarker">
            <summary>
            Gets or sets the next marker for continuing results for <see cref="T:Microsoft.Azure.Storage.Blob.ICloudBlob"/> enumeration operations.
            </summary>
            <value>A string containing the NextMarker value.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobContinuationToken.TargetLocation">
            <summary>
            Gets or sets the storage location that the continuation token applies to.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.StorageLocation"/> enumeration value.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobContinuationToken.GetSchema">
            <summary>
            Gets an XML representation of an object.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobContinuationToken.ReadXmlAsync(System.Xml.XmlReader)">
            <summary>
            Generates a serializable continuation token from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the continuation token is deserialized.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobContinuationToken.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts a serializable continuation token into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the continuation token is serialized.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey">
            <summary>
            Immutable wrapper for an encryption key to be used with client provided key encryption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey.Key">
            <summary>
            Base64 encoded string of the encryption key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey.KeySHA256">
            <summary>
            Base64 encoded string of the encryption key's SHA256 hash.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey.EncryptionAlgorithm">
            <summary>
            The algorithm for Azure Blob Storage to encrypt with.
            Azure Blob Storage only offers AES256 encryption.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey.#ctor(System.String)">
            <summary>
            Creates a new wrapper for a client provided key.
            </summary>
            <param name="key">The encryption key encoded as a base64 string.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobCustomerProvidedKey.#ctor(System.Byte[])">
            <summary>
            Creates a new wrapper for a client provided key.
            </summary>
            <param name="key">The encryption key bytes.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobEncryptionData">
            <summary>
            Represents the blob encryption data that is stored as metadata on the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobEncryptionData.EncryptionMode">
            <summary>
            Gets or sets the blob client encryption mode.
            </summary>
            <value>The blob encryption mode.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobEncryptionMode">
            <summary>
            Specifies the blob encryption mode.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobEncryptionMode.None">
            <summary>
            No encryption.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobEncryptionMode.FullBlob">
            <summary>
            Use Blob level encryption mechanism.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobListingDetails">
            <summary>
            Specifies which items to include when listing a set of blobs.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.None">
            <summary>
            List only committed blobs, and do not return blob metadata.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.Snapshots">
            <summary>
            List committed blobs and blob snapshots.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.Metadata">
            <summary>
            Retrieve blob metadata for each blob returned in the listing.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.UncommittedBlobs">
            <summary>
            List committed and uncommitted blobs.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.Copy">
            <summary>
            Include copy properties in the listing.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.Deleted">
            <summary>
            Include deleted blobs in the listing.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobListingDetails.All">
            <summary>
            List all available committed blobs, uncommitted blobs, snapshots and deleted blobs and return all metadata and copy status for those blobs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobProperties">
            <summary>
            Represents the system properties for a blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.BlobProperties"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobProperties.#ctor(Microsoft.Azure.Storage.Blob.BlobProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.BlobProperties"/> class based on an existing instance.
            </summary>
            <param name="other">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobProperties"/> object.</param>
            <remarks>Lease-related properties will not be cloned, because a lease associated with the base blob is not copied to the snapshot.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.CacheControl">
            <summary>
            Gets or sets the cache-control value stored for the blob.
            </summary>
            <value>A string containing the blob's cache-control value.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.ContentDisposition">
            <summary>
            Gets or sets the content-disposition value stored for the blob.
            </summary>
            <value>A string containing the blob's content-disposition value.</value>
            <remarks>
            If this property has not been set for the blob, it returns <c>null</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.ContentEncoding">
            <summary>
            Gets or sets the content-encoding value stored for the blob.
            </summary>
            <value>A string containing the blob's content-encoding value.</value>
            <remarks>
            If this property has not been set for the blob, it returns <c>null</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.ContentLanguage">
            <summary>
            Gets or sets the content-language value stored for the blob.
            </summary>
            <value>A string containing the blob's content-language value.</value>
            <remarks>
            If this property has not been set for the blob, it returns <c>null</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.Length">
            <summary>
            Gets the size of the blob, in bytes.
            </summary>
            <value>A long value containing the blob's size in bytes.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.ContentMD5">
            <summary>
            Gets or sets the content-MD5 value stored for the blob.
            </summary>
            <value>A string containing the blob's content-MD5 hash.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.ContentChecksum">
            <summary>
            Gets or sets the content checksum value stored for the blob.
            </summary>
            <value>A Checksum instance containing the blob's content checksum values.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.ContentType">
            <summary>
            Gets or sets the content-type value stored for the blob.
            </summary>
            <value>A string containing the blob's content-type value.</value>
            <remarks>
            If this property has not been set for the blob, it returns <c>null</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.ETag">
            <summary>
            Gets the blob's ETag value.
            </summary>
            <value>A string containing the blob's ETag value.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.Created">
            <summary>
            Gets the the creation time for the blob, expressed as a UTC value.
            </summary>
            <value>A <see cref="T:System.DateTimeOffset"/> containing the blob's creation time, in UTC format.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.LastModified">
            <summary>
            Gets the the last-modified time for the blob, expressed as a UTC value.
            </summary>
            <value>A <see cref="T:System.DateTimeOffset"/> containing the blob's last-modified time, in UTC format.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.BlobType">
            <summary>
            Gets the type of the blob.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.BlobProperties.BlobType"/> object that indicates the type of the blob.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.LeaseStatus">
            <summary>
            Gets the blob's lease status.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.BlobProperties.LeaseStatus"/> object that indicates the blob's lease status.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.LeaseState">
            <summary>
            Gets the blob's lease state.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.BlobProperties.LeaseState"/> object that indicates the blob's lease state.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.LeaseDuration">
            <summary>
            Gets the blob's lease duration.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.BlobProperties.LeaseDuration"/> object that indicates the blob's lease duration.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.PageBlobSequenceNumber">
            <summary>
            If the blob is a page blob, gets the blob's current sequence number.
            </summary>
            <value>A long containing the blob's current sequence number.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.AppendBlobCommittedBlockCount">
            <summary>
            If the blob is an append blob, gets the number of committed blocks.
            </summary>
            <value>An integer containing the number of committed blocks.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.IsServerEncrypted">
            <summary>
            Gets the blob's server-side encryption state.
            </summary>
            <value>A bool representing the blob's server-side encryption state.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.IsIncrementalCopy">
            <summary>
            Gets a value indicating whether or not this blob is an incremental copy.
            </summary>
            <value>A bool representing if the blob is an incremental copy.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.StandardBlobTier">
            <summary>
            Gets a value indicating the tier of the block blob.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.BlobProperties.StandardBlobTier"/> object that indicates the block blob tier.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.RehydrationStatus">
            <summary>
            Gets a value indicating that the blob is being rehdrated and the tier of the blob once
            the rehydration from archive has completed.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.BlobProperties.RehydrationStatus"/> representing the rehydration status of the blob.</value>
            <remarks>Only applicable for block blobs in this version of the library.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.PremiumPageBlobTier">
            <summary>
            Gets a value indicating the tier of the premium page blob.
            </summary>
            <value>A <see cref="P:Microsoft.Azure.Storage.Blob.BlobProperties.PremiumPageBlobTier"/> object that indicates the page blob tier.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.BlobTierInferred">
            <summary>
            Gets a value indicating if the tier of the blob has been inferred.
            </summary>
            <value>A bool representing if the blob tier has been inferred.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.BlobTierLastModifiedTime">
            <summary>
            Gets the time for when the tier of the blob was last-modified, expressed as a UTC value.
            </summary>
            <value>A <see cref="T:System.DateTimeOffset"/> containing the time for when the tier of the blob was last-modified, in UTC format.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.DeletedTime">
            <summary>
            If the blob is deleted, gets the the deletion time for the blob, expressed as a UTC value.
            </summary>
            <value>A <see cref="T:System.DateTimeOffset"/> containing the blob's deletion time, in UTC format.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobProperties.RemainingDaysBeforePermanentDelete">
            <summary>
            If the blob is an soft-deleted, gets the number of remaining days before the blob is permenantly deleted.
            </summary>
            <value>An integer containing the number of remaining days before permenant delete.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.#ctor(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initializes a new instance of the BlobReadStreamBase class.
            </summary>
            <param name="blob">Blob reference to read from</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <value>The length in bytes of the stream.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type <c>SeekOrigin</c> indicating the reference
            point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
            <remarks>Seeking in a BlobReadStream disables checksum validation.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.SetLength(System.Int64)">
            <summary>
            This operation is not supported in BlobReadStreamBase.
            </summary>
            <param name="value">Not used.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This operation is not supported in BlobReadStreamBase.
            </summary>
            <param name="buffer">Not used.</param>
            <param name="offset">Not used.</param>
            <param name="count">Not used.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.Flush">
            <summary>
            This operation is a no-op in BlobReadStreamBase.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.ConsumeBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read as much as we can from the internal buffer
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing
            data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>Number of bytes read from the stream.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.GetReadSize">
            <summary>
            Calculates the number of bytes to read from the blob.
            </summary>
            <returns>Number of bytes to read.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.VerifyBlobChecksum(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Updates the blob checksum with newly downloaded content.
            </summary>
            <param name="buffer">The buffer to read the data from.</param>
            <param name="offset">The byte offset in buffer at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobReadStreamBase.Dispose(System.Boolean)">
            <summary>
            Releases the blob resources used by the Stream.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions">
            <summary>
            Represents a set of timeout and retry policy options that may be specified for a request against the Blob service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobRequestOptions.parallelOperationThreadCount">
            <summary>
            Stores the parallelism factor.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobRequestOptions.singleBlobUploadThresholdInBytes">
            <summary>
            Indicates the maximum size of a blob, in bytes, that may be uploaded as a single blob,
            ranging from between 1 and 256 MB inclusive. The Default is 128 MB.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobRequestOptions.maximumExecutionTime">
            <summary>
            Stores the maximum execution time.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobRequestOptions.BaseDefaultRequestOptions">
            <summary>
            Defines the absolute default option values, should neither the user nor client specify anything.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobRequestOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobRequestOptions.#ctor(Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Clones an instance of BlobRequestOptions so that we can apply defaults.
            </summary>
            <param name="other">BlobRequestOptions instance to be cloned.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.OperationExpiryTime">
            <summary>
             Gets or sets the absolute expiry time across all potential retries for the request. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.RetryPolicy">
             <summary>
             Gets or sets the retry policy for the request.
             </summary>
             <value>An object of type <see cref="T:Microsoft.Azure.Storage.RetryPolicies.IRetryPolicy"/>.</value>
             <remarks> Retry policies instruct the Storage Client to retry failed requests.
             By default, only some failures are retried. For example, connection failures and 
             throttling failures can be retried. Resource not found (404) or authentication 
             failures are not retried, because these are not likely to succeed on retry.
             If not set, the Storage Client uses an exponential backoff retry policy, where the wait time gets
             exponentially longer between requests, up to a total of around 30 seconds.
             The default retry policy is recommended for most scenarios.
             
            ## Examples
              [!code-csharp[Retry_Policy_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_RequestOptions_RetryPolicy "Retry Policy Sample")]         
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.EncryptionPolicy">
            <summary>
            Gets or sets the encryption policy for the request.
            </summary>
            <value>An object of type <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.EncryptionPolicy"/>.</value>
            <remarks>
            ## Examples
            [!code-csharp[Encryption_Policy_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobClientEncryptionTests.cs#sample_RequestOptions_EncryptionPolicy "Encryption Policy Sample")]        
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.RequireEncryption">
            <summary>
            Gets or sets a value to indicate whether data written and read by the client library should be encrypted.
            </summary>
            <value>Use <c>true</c> to specify that data should be encrypted/decrypted for all transactions; otherwise, <c>false</c>.</value>
            <remarks>
            RequireEncryption here refers to Client-Side Encryption.
            If this value is set to <c>true</c>, all calls will fail if the data
            is not encrypted/decrypted with an encryption policy. If this value 
            is false (the default), any data being downloaded that is not encrypted
            will be returned as-is.
            
             ## Examples
             [!code-csharp[Require_Encryption_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_RequestOptions_RequireEncryption "Require Encryption Sample")]        
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.SkipEncryptionPolicyValidation">
            <summary>
            Gets or sets a value to indicate whether validating the presence of the encryption policy should be skipped.
            </summary>
            <value>Use <c>true</c> to skip validation; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.CustomerProvidedKey">
            <summary>
            Gets or sets the blob customer provided key for the request.
            </summary>
            <value>An object of type <see cref="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.CustomerProvidedKey"/></value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry">
             <summary>
             Gets or sets a value that indicates whether a conditional failure should be absorbed on a retry attempt
             for the request. 
             </summary>
             <remarks>
             This option is used only by the <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> object in the <b>UploadFrom*</b> methods, 
             the <b>AppendFrom*</b> methods, and the <b>BlobWriteStream</b> class. By default, it is set to <c>false</c>. 
             Set this option to <c>true</c> only for single-writer scenarios. 
             Setting this option to <c>true</c> in a multi-writer scenario may lead to corrupted blob data.
             
             When calling "UploadFrom*" on an append blob, the Storage Client breaks the input data
             up into a number of data blocks, and uploads each data block with an "append block" operation.
             Normally, an "IfAppendPositionEqual" access condition is added to the append block operation, so that the
             upload operation will fail if some other process somewhere has appended data in the middle of this data stream.
             However, this can result in a false failure in a very specific case. If an append operation fails with a timeout,
             there is a chance that the operation succeeded on the service, but the "success" response did not make it back to the client.
             In this case, the client will retry, and then get an "append position not met" failure.
             
             Setting this value to <c>true</c> results in the upload operation continuing when it sees an "append position not met"
             failure on retry - accounting for the above possibility. However, this loses protection in the multi-writer
             scenario - if multiple threads are uploading to the blob at once, and this value is set to <c>true</c>, some data
             may be lost, because the client thinks the data was uploaded, when in fact it was the other process' data.
             
            ## Examples
            [!code-csharp[Absorb_Conditional_Errors_On_Retry_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/CloudAppendBlobTest.cs#sample_BlobRequestOptions_AbsorbConditionalErrorsOnRetry "Absorb Conditional Errors On Retry Sample")]  
             </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.LocationMode">
             <summary>
             Gets or sets the location mode of the request.
             </summary>
             <value>A <see cref="T:Microsoft.Azure.Storage.RetryPolicies.LocationMode"/> enumeration value indicating the location mode of the request.</value>
             <remarks>The LocationMode specifies in which locations the Storage Client 
             will attempt to make the request. This is only valid for RA-GRS accounts - accounts 
             where data can be read from either the primary or the secondary endpoint.
              ## Examples
              [!code-csharp[LocationMode_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_RequestOptions_LocationMode "LocationMode Sample")]        
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.ServerTimeout">
            <summary>
            Gets or sets the server timeout interval for a single HTTP request.
            </summary>
            <value>A <see cref="T:System.TimeSpan"/> containing the server timeout interval for each HTTP request.</value>
            <remarks>
            The server timeout is the timeout sent to the Azure Storage service 
            for each REST request made. If the API called makes multiple REST calls 
            (UploadFromStream, for example, or if the request retries), this timeout 
            will be applied separately to each request. This value is not 
            tracked or validated on the client, it is only passed to the Storage service.
            
             ## Examples
             [!code-csharp[Server_Timeout_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_RequestOptions_ServerTimeout_MaximumExecutionTime "Server Timeout Sample")]         
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.MaximumExecutionTime">
            <summary>
            Gets or sets the maximum execution time across all potential retries for the request. 
            </summary>
            <value>A <see cref="T:System.TimeSpan"/> representing the maximum execution time for retries for the request.</value>
            <remarks>
            The maximum execution time is the time allotted for a single API call.
            If the total amount of time spent in the API - across all REST requests, 
            retries, etc - exceeds this value, the client will timeout. This value 
            is only tracked on the client, it is not sent to the service.
             ## Examples
             [!code-csharp[Maximum_Execution_Time_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_RequestOptions_ServerTimeout_MaximumExecutionTime "Maximum Execution Time Sample")]        
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.ParallelOperationThreadCount">
             <summary>
             Gets or sets the number of blocks that may be simultaneously uploaded.
             </summary>
             <value>An integer value indicating the number of parallel blob upload operations that may proceed.</value>
             <remarks>
             When using the UploadFrom* methods on a blob, the blob will be broken up into blocks. Setting this 
             value limits the number of outstanding I/O "put block" requests that the library will have in-flight 
             at a given time. Default is 1 (no parallelism). Setting this value higher may result in 
             faster blob uploads, depending on the network between the client and the Azure Storage service.
             If blobs are small (less than 256 MB), keeping this value equal to 1 is advised.
              ## Examples
              [!code-csharp[Parallel_Operation_ThreadCount_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_BlobRequestOptions_ParallelOperationThreadCount "Parallel Operation ThreadCount Sample")]        
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.SingleBlobUploadThresholdInBytes">
            <summary>
            Gets or sets the maximum size of a blob in bytes that may be uploaded as a single blob. 
            </summary>
            <value>A long indicating the maximum size of a blob, in bytes, that may be uploaded as a single blob,
            ranging from between 1 and 256 MB inclusive.</value>
            <remarks>This value will be ignored if the ParallelOperationThreadCount is set to a value greater than 1</remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.UseTransactionalMD5">
            <summary>
            Gets or sets a value to calculate and send/validate content MD5 for transactions.
            </summary>
            <value>Use <c>true</c> to calculate and send/validate content MD5 for transactions; otherwise, <c>false</c>. Default is <c>false</c>.</value>
            <remarks>
            The UseTransactionalMD5 option instructs the Storage Client to calculate and validate 
            the MD5 hash of individual Storage REST operations. For a given REST operation, 
            if this value is set, both the Storage Client and the Storage service will calculate
            the MD5 hash of the transferred data, and will fail if the values do not match.
            This value is not persisted on the service or the client.
            This option applies to both upload and download operations.
            Note that HTTPS does a similar check during transit. If you are using HTTPS, 
            we recommend this feature be off.
             ## Examples
             [!code-csharp[Use_Transactional_MD5_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/MD5FlagsTest.cs#sample_BlobRequestOptions_UseTransactionalMD5 "Use Transactional MD5 Sample")] 
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.StoreBlobContentMD5">
            <summary>
            Gets or sets a value to indicate that an MD5 hash will be calculated and stored when uploading a blob.
            </summary>
            <value>Use <c>true</c> to calculate and store an MD5 hash when uploading a blob; otherwise, <c>false</c>. Defaults to <c>false</c>.</value>
            <remarks>This property is not supported for the <see cref="T:Microsoft.Azure.Storage.Blob.CloudAppendBlob"/> Append* APIs.
            The StoreBlobContentMD5 request option instructs the Storage Client to calculate the MD5 hash 
            of the blob content during an upload operation. This value is then stored on the 
            blob object as the Content-MD5 header. This option applies only to upload operations. 
            This is useful for validating the integrity of the blob upon later download, and 
            compatible with the Content-MD5 header as defined in the HTTP spec. If using 
            the Storage Client for later download, if the Content-MD5 header is present, 
            the MD5 hash of the content will be validated, unless "DisableContentMD5Validation" is set.
            Note that this value is not validated on the Azure Storage service on either upload or download of data; 
            it is merely stored and returned.
             ## Examples
             [!code-csharp[Store_Blob_Content_MD5_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/MD5FlagsTest.cs#sample_BlobRequestOptions_StoreBlobContentMD5 "Store Blob Content MD5 Sample")] 
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobRequestOptions.DisableContentMD5Validation">
             <summary>
             Gets or sets a value to indicate that MD5 validation will be disabled when downloading blobs.
             </summary>
             <value>Use <c>true</c> to disable MD5 validation; <c>false</c> to enable MD5 validation. Default is <c>false</c>.</value>
             <remarks>
             When downloading a blob, if the value already exists on the blob, the Storage service 
             will include the MD5 hash of the entire blob as a header. This option controls 
             whether or not the Storage Client will validate that MD5 hash on download.
             See <see cref="!:BlobRequestOptions.ChecksumOptions.StoreBlobContentMD5"/> for more details.
             
            ## Examples
            [!code-csharp[Disable_Content_MD5_Validation_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/MD5FlagsTest.cs#sample_BlobRequestOptions_DisableContentMD5Validation "Disable Content MD5 Validation Sample")]        
             </remarks>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobResultSegment">
            <summary>
            Represents a segment of <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/> results, with continuation information for pagination scenarios.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobResultSegment.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Storage.Blob.IListBlobItem},Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Creates a new instance of a BlobResultSegment.
            </summary>
            <param name="blobs">An enumerable collection of <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/> objects.</param>
            <param name="continuationToken">The <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> used to retrieve the next segment of <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/> results.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobResultSegment.Results">
            <summary>
            Gets an enumerable collection of <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/> results.
            </summary>
            <value>An enumerable collection of <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/> objects.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobResultSegment.ContinuationToken">
            <summary>
            Gets the continuation token used to retrieve the next segment of <see cref="T:Microsoft.Azure.Storage.Blob.IListBlobItem"/> results. Returns <c>null</c> if there are no more results.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlobType">
            <summary>
            The type of a blob.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobType.Unspecified">
            <summary>
            Not specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobType.PageBlob">
            <summary>
            A page blob.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobType.BlockBlob">
            <summary>
            A block blob.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlobType.AppendBlob">
            <summary>
            An append blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.#ctor(Microsoft.Azure.Storage.Blob.CloudBlobClient,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initializes a new instance of the BlobWriteStreamBase class.
            </summary>
            <param name="serviceClient">The service client.</param>        
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.#ctor(Microsoft.Azure.Storage.Blob.CloudBlockBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initializes a new instance of the BlobWriteStreamBase class for a block blob.
            </summary>
            <param name="blockBlob">Blob reference to write to.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.#ctor(Microsoft.Azure.Storage.Blob.CloudPageBlob,System.Int64,System.Boolean,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initializes a new instance of the BlobWriteStreamBase class for a page blob.
            </summary>
            <param name="pageBlob">Blob reference to write to.</param>
            <param name="pageBlobSize">Size of the page blob.</param>
            <param name="createNew">Use <c>true</c> if the page blob is newly created, <c>false</c> otherwise.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.#ctor(Microsoft.Azure.Storage.Blob.CloudAppendBlob,Microsoft.Azure.Storage.AccessCondition,Microsoft.Azure.Storage.Blob.BlobRequestOptions,Microsoft.Azure.Storage.OperationContext)">
            <summary>
            Initializes a new instance of the BlobWriteStreamBase class for an append blob.
            </summary>
            <param name="appendBlob">Blob reference to write to.</param>
            <param name="accessCondition">An <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the condition that must be met in order for the request to proceed. If <c>null</c>, no condition is used.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object that represents the context for the current operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This operation is not supported in BlobWriteStreamBase.
            </summary>
            <param name="buffer">Not used.</param>
            <param name="offset">Not used.</param>
            <param name="count">Not used.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.GetNewOffset(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Calculates the new position within the current stream for a Seek operation.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type <c>SeekOrigin</c> indicating the reference
            point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.SetLength(System.Int64)">
            <summary>
            This operation is not supported in BlobWriteStreamBase.
            </summary>
            <param name="value">Not used.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.GetCurrentBlockId">
            <summary>
            Generates a new block ID to be used for PutBlock.
            </summary>
            <returns>Base64 encoded block ID</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.BlobWriteStreamBase.Dispose(System.Boolean)">
            <summary>
            Releases the blob resources used by the Stream.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlockListingFilter">
            <summary>
            Indicates whether to list only committed blocks, only uncommitted blocks, or all blocks.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlockListingFilter.Committed">
            <summary>
            Committed blocks.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlockListingFilter.Uncommitted">
            <summary>
            Uncommitted blocks.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlockListingFilter.All">
            <summary>
            Both committed and uncommitted blocks.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.BlockSearchMode">
            <summary>
            Indicates which block lists should be searched to find a specified block. 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlockSearchMode.Committed">
            <summary>
            Search the committed block list only.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlockSearchMode.Uncommitted">
            <summary>
            Search the uncommitted block list only.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.BlockSearchMode.Latest">
            <summary>
            Search the uncommitted block list first, and if the block is not found there, search 
            the committed block list.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.ContainerListingDetails">
            <summary>
            Specifies which details to include when listing the containers in this storage account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.ContainerListingDetails.None">
            <summary>
            No additional details.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.ContainerListingDetails.Metadata">
            <summary>
            Retrieve container metadata.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.ContainerListingDetails.All">
            <summary>
            Retrieve all available details.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.ContainerResultSegment">
            <summary>
            Represents a segment of <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> results and contains continuation and pagination information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.ContainerResultSegment.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Storage.Blob.CloudBlobContainer},Microsoft.Azure.Storage.Blob.BlobContinuationToken)">
            <summary>
            Creates a new instance of ContainerResultSegment.
            </summary>
            <param name="containers">An enumerable collection of <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> objects.</param>
            <param name="continuationToken">The <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> used to retrieve the next segment of <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> results.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ContainerResultSegment.Results">
            <summary>
            Gets an enumerable collection of <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> results.
            </summary>
            <value>An enumerable collection of <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> objects.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ContainerResultSegment.ContinuationToken">
            <summary>
            Gets the continuation token used to retrieve the next segment of <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> results.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.BlobContinuationToken"/> object.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.CopyState">
            <summary>
            Represents the attributes of a copy operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CopyState.CopyId">
            <summary>
            Gets the ID of the copy operation.
            </summary>
            <value>A copy ID string.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CopyState.CompletionTime">
            <summary>
            Gets the time the copy operation completed, and indicates whether completion was due to a successful copy, the cancelling of the operation, or a failure.
            </summary>
            <value>A <see cref="T:System.DateTimeOffset"/> containing the completion time, or <c>null</c> if the operation has not completed.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CopyState.Status">
            <summary>
            Gets the status of the copy operation.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.CopyStatus"/> enumeration indicating the status of the operation.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CopyState.Source">
            <summary>
            Gets the source URI of a copy operation.
            </summary>
            <value>A <see cref="T:System.Uri"/> indicating the source of a copy operation, or <c>null</c>.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CopyState.BytesCopied">
            <summary>
            Gets the number of bytes copied in the operation so far.
            </summary>
            <value>The number of bytes copied in the operation so far, or <c>null</c>.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CopyState.TotalBytes">
            <summary>
            Gets the total number of bytes in the source of the copy.
            </summary>
            <value>The number of bytes in the source, or <c>null</c>.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CopyState.StatusDescription">
            <summary>
            Gets the description of the current status, if any.
            </summary>
            <value>A status description string, or <c>null</c>.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.CopyState.DestinationSnapshotTime">
            <summary>
            Gets the incremental destination snapshot time for the latest incremental copy, if present.
            </summary>
            <value>A <see cref="T:System.DateTimeOffset"/> containing the destination snapshot time for the latest
            incremental copy, or <c>null</c>.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.CopyStatus">
            <summary>
            Represents the status of a copy blob operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CopyStatus.Invalid">
            <summary>
            The copy status is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CopyStatus.Pending">
            <summary>
            The copy operation is pending.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CopyStatus.Success">
            <summary>
            The copy operation succeeded.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CopyStatus.Aborted">
            <summary>
            The copy operation has been aborted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.CopyStatus.Failed">
            <summary>
            The copy operation encountered an error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption">
            <summary>
            The set of options describing delete operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption.None">
            <summary>
            Delete the blob only. If the blob has snapshots, this option will result in an error from the service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption.IncludeSnapshots">
            <summary>
            Delete the blob and its snapshots.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.DeleteSnapshotsOption.DeleteSnapshotsOnly">
            <summary>
            Delete the blob's snapshots only.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.IListBlobItem">
            <summary>
            Represents an item that may be returned by a blob listing operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.IListBlobItem.Uri">
            <summary>
            Gets the URI to the blob item, at the primary location.
            </summary>
            <value>The <see cref="T:System.Uri"/> for the blob item.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.IListBlobItem.StorageUri">
            <summary>
            Gets the blob item's URIs for both the primary and secondary locations.
            </summary>
            <value>An object of type <see cref="P:Microsoft.Azure.Storage.Blob.IListBlobItem.StorageUri"/> containing the blob item's URIs for both the primary and secondary locations.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.IListBlobItem.Parent">
            <summary>
            Gets the blob item's parent virtual directory.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> object.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.IListBlobItem.Container">
            <summary>
            Gets the blob item's container.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobContainer"/> object.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.LeaseAction">
            <summary>
            Describes actions that can be performed on a lease.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseAction.Acquire">
            <summary>
            Acquire the lease.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseAction.Renew">
            <summary>
            Renew the lease.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseAction.Release">
            <summary>
            Release the lease.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseAction.Break">
            <summary>
            Break the lease.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseAction.Change">
            <summary>
            Change the lease ID.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.LeaseDuration">
            <summary>
            The lease duration of a resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseDuration.Unspecified">
            <summary>
            The lease duration is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseDuration.Fixed">
            <summary>
            The lease duration is finite.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseDuration.Infinite">
            <summary>
            The lease duration is infinite.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.LeaseState">
            <summary>
            The lease state of a resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseState.Unspecified">
            <summary>
            The lease state is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseState.Available">
            <summary>
            The lease is in the Available state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseState.Leased">
            <summary>
            The lease is in the Leased state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseState.Expired">
            <summary>
            The lease is in the Expired state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseState.Breaking">
            <summary>
            The lease is in the Breaking state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseState.Broken">
            <summary>
            The lease is in the Broken state.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.LeaseStatus">
            <summary>
            The lease status of a resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseStatus.Unspecified">
            <summary>
            The lease status is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseStatus.Locked">
            <summary>
            The resource is locked.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.LeaseStatus.Unlocked">
            <summary>
            The resource is available to be locked.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.ListBlockItem">
            <summary>
            Represents a block retrieved from the blob's block list.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ListBlockItem.Name">
            <summary>
            Gets the name of the block.
            </summary>
            <value>The block name.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ListBlockItem.Length">
            <summary>
            Gets the size of block in bytes.
            </summary>
            <value>The block size.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.ListBlockItem.Committed">
            <summary>
            Gets a value indicating whether or not the block has been committed.
            </summary>
            <value><c>true</c> if the block has been committed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.PageDiffRange">
            <summary>
            Represents a range of pages in a page blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.PageDiffRange.#ctor(System.Int64,System.Int64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.PageDiffRange"/> class.
            </summary>
            <param name="start">The starting offset.</param>
            <param name="end">The ending offset.</param>
            <param name="isCleared">True if the page range is a cleared range, false otherwise.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.PageDiffRange.IsClearedPageRange">
            <summary>
            True if the page range is a cleared range, false otherwise.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.PageRange">
            <summary>
            Represents a range of pages in a page blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.PageRange.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.PageRange"/> class.
            </summary>
            <param name="start">The starting offset.</param>
            <param name="end">The ending offset.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.PageRange.StartOffset">
            <summary>
            Gets the starting offset of the page range.
            </summary>
            <value>The starting offset.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.PageRange.EndOffset">
            <summary>
            Gets the ending offset of the page range.
            </summary>
            <value>The ending offset.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.PageRange.ToString">
            <summary>
            Returns the content of the page range as a string.
            </summary>
            <returns>The content of the page range.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier">
            <summary>
            The tier of the page blob.
            Please take a look at https://docs.microsoft.com/en-us/azure/storage/storage-premium-storage#scalability-and-performance-targets
            for detailed information on the corresponding IOPS and throughtput per PremiumPageBlobTier.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.Unknown">
            <summary>
            The tier is not recognized by this version of the library.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P4">
            <summary>
            P4 Tier
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P6">
            <summary>
            P6 Tier
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P10">
            <summary>
            P10 Tier
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P20">
            <summary>
            P20 Tier
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P30">
            <summary>
            P30 Tier
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P40">
            <summary>
            P40 Tier
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P50">
            <summary>
            P50 Tier
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P60">
            <summary>
            P60 Tier
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P70">
            <summary>
            P70 Tier
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.PremiumPageBlobTier.P80">
            <summary>
            P80 Tier
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.RehydratePriority">
            <summary>
            The priority with which to rehydrate an archived blob.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.RehydrationStatus">
            <summary>
            The rehydration status for a blob that is currently archived.
            </summary>
            <remarks>Only applicable to block blobs for this version.</remarks>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.RehydrationStatus.Unknown">
            <summary>
            The rehydration status is unknown.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.RehydrationStatus.PendingToHot">
            <summary>
            The blob is being rehydrated to hot storage.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.RehydrationStatus.PendingToCool">
            <summary>
            The blob is being rehydrated to cool storage.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.SequenceNumberAction">
            <summary>
            Describes actions that can be performed on a page blob sequence number.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.SequenceNumberAction.Max">
            <summary>
            Sets the sequence number to be the higher of the value included with the request and the value currently stored for the blob.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.SequenceNumberAction.Update">
            <summary>
            Sets the sequence number to the value included with the request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.SequenceNumberAction.Increment">
            <summary>
            Increments the value of the sequence number by 1.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders">
            <summary>
            Represents the optional headers that can be returned with blobs accessed using SAS.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.#ctor(Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders"/> class based on an existing instance.
            </summary>
            <param name="sharedAccessBlobHeaders">The set of <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders"/> to clone.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.CacheControl">
            <summary>
            Gets or sets the cache-control header returned with the blob.
            </summary>
            <value>A string containing the cache-control value.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.ContentDisposition">
            <summary>
            Gets or sets the content-disposition header returned with the blob.
            </summary>
            <value>A string containing the content-disposition value.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.ContentEncoding">
            <summary>
            Gets or sets the content-encoding header returned with the blob.
            </summary>
            <value>A string containing the content-encoding value.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.ContentLanguage">
            <summary>
            Gets or sets the content-language header returned with the blob.
            </summary>
            <value>A string containing the content-language value.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders.ContentType">
            <summary>
            Gets or sets the content-type header returned with the blob.
            </summary>
            <value>A string containing the content-type value.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions">
            <summary>
            Specifies the set of possible permissions for a shared access policy.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.None">
            <summary>
            No shared access granted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.Read">
            <summary>
            Read access granted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.Write">
            <summary>
            Write access granted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.Delete">
            <summary>
            Delete access granted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.List">
            <summary>
            List access granted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.Add">
            <summary>
            Add access granted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions.Create">
            <summary>
            Create access granted.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies">
            <summary>
            Represents the collection of shared access policies defined for a container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Add(System.String,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy)">
            <summary>
            Adds the specified key and <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value to the collection of shared access policies.
            </summary>
            <param name="key">The key of the <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value to add.</param>
            <param name="value">The <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value to add the collection of shared access policies.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.ContainsKey(System.String)">
            <summary>
            Determines whether the collection of shared access policies contains the specified key.
            </summary>
            <param name="key">The key to locate in the collection of shared access policies.</param>
            <returns><c>true</c> if the collection of shared access policies contains an element with the specified key; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Keys">
            <summary>
            Gets a collection containing the keys in the shared access policies collection.
            </summary>
            <value>A collection of strings containing the keys of the shared access policies collection.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Remove(System.String)">
            <summary>
            Removes the value with the specified key from the shared access policies collection.
            </summary>
            <param name="key">A string containing the key of the <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> item to remove.</param>
            <returns><c>true</c> if the element is successfully found and removed; otherwise, <c>false</c>. This method returns <c>false</c> if the key is not found.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.TryGetValue(System.String,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy@)">
            <summary>
            Gets the <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> item associated with the specified key. 
            </summary>
            <param name="key">A string containing the key of the value to get.</param>
            <param name="value">The <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> item to get.</param>
            <returns>The <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> item associated with the specified key, if the key is found; otherwise, the default value for the <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> type.</returns>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Values">
            <summary>
            Gets a collection containing the values in the shared access policies collection.
            </summary>
            <value>A collection of <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> items in the shared access policies collection.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> item associated with the specified key.
            </summary>
            <param name="key">A string containing the key of the <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value to get or set.</param>
            <returns>The <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> item associated with the specified key, or <c>null</c> if key is not in the shared access policies collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy})">
            <summary>
            Adds the specified key/<see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value, stored in a <see cref="T:System.Collections.Generic.KeyValuePair`2"/>, to the collection of shared access policies.
            </summary>
            <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2"/> object, containing a key/<see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value pair, to add to the shared access policies collection.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Clear">
            <summary>
            Removes all keys and <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> values from the shared access collection.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy})">
            <summary>
            Determines whether the collection of shared access policies contains the key and <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value in the specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/> object.
            </summary>
            <param name="item">A <see cref="T:System.Collections.Generic.KeyValuePair`2"/> object containing the key and <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value to search for.</param>
            <returns><c>true</c> if the shared access policies collection contains the specified key/value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy}[],System.Int32)">
            <summary>
            Copies each key in the key/<see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value pair to a compatible one-dimensional array, starting at the specified index
            of the target array.
            </summary>
            <param name="array">A one-dimensional array of <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> objects that serves as the destination for the elements copied from the shared access policies collection.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Count">
            <summary>
            Gets the number of key/<see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value pairs contained in the shared access policies collection.
            </summary>
            <value>The number of key/<see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value pairs contained in the shared access policies collection.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection of shared access policies is read-only. 
            </summary>
            <value><c>true</c> if the collection of shared access policies is read-only; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy})">
            <summary>
            Removes the <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value, specified in the <see cref="T:System.Collections.Generic.KeyValuePair`2"/> object, from the shared access policies collection.
            </summary>
            <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2"/> object, containing a key and <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> value, to remove from the shared access policies collection.</param>
            <returns><c>true</c> if the item was successfully removed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection of shared access policies.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> of type <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicies.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection of shared access policies.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection of shared access policies.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy">
            <summary>
            Represents a shared access policy, which specifies the start time, expiry time, 
            and permissions for a shared access signature.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy.SharedAccessStartTime">
            <summary>
            Gets or sets the start time for a shared access signature associated with this shared access policy.
            </summary>
            <value>A <see cref="T:System.DateTimeOffset"/> specifying the shared access start time.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy.SharedAccessExpiryTime">
            <summary>
            Gets or sets the expiry time for a shared access signature associated with this shared access policy.
            </summary>
            <value>A <see cref="T:System.DateTimeOffset"/> specifying the shared access expiry time.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy.Permissions">
            <summary>
            Gets or sets the permissions for a shared access signature associated with this shared access policy.
            </summary>
            <value>A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions"/> object.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy.PermissionsToString(Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions)">
            <summary>
            Converts the permissions specified for the shared access policy to a string.
            </summary>
            <param name="permissions">A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions"/> object.</param>
            <returns>The shared access permissions, in string format.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy.PermissionsFromString(System.String)">
            <summary>
            Constructs a <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions"/> object from a permissions string.
            </summary>
            <param name="input">The shared access permissions, in string format.</param>
            <returns>A <see cref="T:Microsoft.Azure.Storage.Blob.SharedAccessBlobPermissions"/> object.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.StandardBlobTier">
            <summary>
            The tier of the block blob on a standard storage account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.StandardBlobTier.Unknown">
            <summary>
            The tier is not recognized by this version of the library
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.StandardBlobTier.Hot">
            <summary>
            Hot Storage
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.StandardBlobTier.Cool">
            <summary>
            Cool Storage
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.Blob.StandardBlobTier.Archive">
            <summary>
            Archive Storage
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Blob.SubStream">
            <summary>
            A wrapper class that creates a logical substream from a region within an existing seekable stream.
            Allows for concurrent, asynchronous read and seek operations on the wrapped stream.
            Ensures thread-safe operations between related substream instances via a shared, user-supplied synchronization mutex.
            This class will buffer read requests to minimize overhead on the underlying stream.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SubStream.#ctor(System.IO.Stream,System.Int64,System.Int64,System.Threading.SemaphoreSlim)">
            <summary>
            Creates a new SubStream instance.
            </summary>
            <param name="stream">A seekable source stream.</param>
            <param name="streamBeginIndex">The index in the wrapped stream where the logical SubStream should begin.</param>
            <param name="substreamLength">The length of the SubStream.</param>
            <param name="globalSemaphore"> A <see cref="T:System.Threading.SemaphoreSlim"/> object that is shared between related SubStream instances.</param>
            <remarks>
            The source stream to be wrapped must be seekable.
            The Semaphore object provided must have the initialCount thread parameter set to one to ensure only one concurrent request is granted at a time.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SubStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Reads a block of bytes asynchronously from the substream read buffer.
            </summary>
            <param name="buffer">When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read.</param>
            <param name="cancellationToken">An object of type <see cref="T:System.Threading.CancellationToken"/> that propagates notification that operation should be canceled.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the substream has been reached.</returns>
            <remarks>
            If the read request cannot be satisfied because the read buffer is empty or contains less than the requested number of the bytes, 
            the wrapped stream will be called to refill the read buffer.
            Only one read request to the underlying wrapped stream will be allowed at a time and concurrent requests will be queued up by effect of the shared semaphore mutex.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SubStream.ReadAsyncHelper(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Reads a block of bytes from the wrapped stream asynchronously and writes the data to the SubStream buffer.
            </summary>
            <param name="buffer">When this method returns, the substream read buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read.</param>
            <param name="cancellationToken">An object of type <see cref="T:System.Threading.CancellationToken"/> that propagates notification that operation should be canceled.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the substream has been reached.</returns>
            <remarks>
            This method will allow only one read request to the underlying wrapped stream at a time, 
            while concurrent requests will be queued up by effect of the shared semaphore mutex.
            The caller is responsible for adjusting the substream position after a successful read.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.Blob.SubStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current substream. 
            This operation does not perform a seek on the wrapped stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type System.IO.SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current substream.</returns>
            <exception cref="T:System.NotSupportedException">Thrown if using the unsupported <paramref name="origin"/> SeekOrigin.End </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="offset"/> is invalid for SeekOrigin.</exception>
        </member>
        <member name="T:Microsoft.Azure.Storage.Core.BlobDecryptStream">
            <summary>
            Stream that will be used for decrypting blob ranges. It buffers 16 bytes of IV (if required) before creating a crypto stream and routing the 
            rest of the data through it.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.Core.Auth.BlobSharedAccessSignatureHelper">
            <summary>
            Contains helper methods for implementing shared access signatures.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Core.Auth.BlobSharedAccessSignatureHelper.GetSignature(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange,Microsoft.Azure.Storage.UserDelegationKey)">
            <summary>
            Get the complete query builder for creating the Shared Access Signature query.
            </summary>
            <param name="policy">The shared access policy to hash.</param>
            <param name="headers">The optional header values to set for a blob returned with this SAS.</param>
            <param name="accessPolicyIdentifier">An optional identifier for the policy.</param>
            <param name="resourceType">"b" for blobs, "bs" for blob snapshots, or "c" for containers.</param>
            <param name="signature">The signature to use.</param>
            <param name="accountKeyName">The name of the key used to create the signature, or <c>null</c> if the key is implicit.</param>
            <param name="sasVersion">A string indicating the desired SAS version to use, in storage service version format.</param>
            <param name="protocols">The HTTP/HTTPS protocols for Account SAS.</param>
            <param name="ipAddressOrRange">The IP range for IPSAS.</param>
            <param name="delegationKey">Key information for signatures using user-delegation-based SAS.</param>
            <returns>The finished query builder.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Core.Auth.BlobSharedAccessSignatureHelper.GetHash(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange,Microsoft.Azure.Storage.UserDelegationKey)">
            <summary>
            Get the signature hash embedded inside the User Delegation Shared Access Signature.
            </summary>
            <param name="policy">The shared access policy to hash.</param>
            <param name="headers">The optional header values to set for a blob returned with this SAS.</param>
            <param name="resourceName">The canonical resource string, unescaped.</param>
            <param name="sasVersion">A string indicating the desired SAS version to use, in storage service version format.</param>
            <param name="resourceIdentifier">Resource type id string.</param>
            <param name="snapTime">Time of snapshot if applicable.</param>
            <param name="protocols">The HTTP/HTTPS protocols for Account SAS.</param>
            <param name="ipAddressOrRange">The IP range for IPSAS.</param>
            <param name="delegationKey">The user delegaion key used for signing.</param>
            <returns>The signed hash.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.Core.Auth.BlobSharedAccessSignatureHelper.GetHash(Microsoft.Azure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.Azure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Storage.SharedAccessProtocol},Microsoft.Azure.Storage.IPAddressOrRange,System.Byte[],System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Get the signature hash embedded inside the Shared Access Signature.
            </summary>
            <param name="policy">The shared access policy to hash.</param>
            <param name="headers">The optional header values to set for a blob returned with this SAS.</param>
            <param name="accessPolicyIdentifier">An optional identifier for the policy.</param>
            <param name="resourceName">The canonical resource string, unescaped.</param>
            <param name="sasVersion">A string indicating the desired SAS version to use, in storage service version format.</param>
            <param name="protocols">The HTTP/HTTPS protocols for Account SAS.</param>
            <param name="ipAddressOrRange">The IP range for IPSAS.</param>
            <param name="keyValue">The key value retrieved as an atomic operation used for signing.</param>
            <param name="resource">Resource type identifier (e.g. "b", "c", "bs").</param>
            <param name="snapshotTimestamp">Timestamp of the snapshot for a snapshot-only SAS, null otherwise.</param>
            <returns>The signed hash.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.Core.ReadLengthLimitingStream">
            <summary>
            Stream that will be used to limit read operations on a wrapped stream.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.Core.Util.BlobCommonUtility.CreateTemporaryExecutionState(Microsoft.Azure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Create an ExecutionState object that can be used for pre-request operations
            such as buffering user's data.
            </summary>
            <param name="options">Request options</param>
            <returns>Temporary ExecutionState object</returns>
        </member>
    </members>
</doc>
