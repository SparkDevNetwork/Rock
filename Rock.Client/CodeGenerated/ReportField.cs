//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//
using System;
using System.Collections.Generic;


namespace Rock.Client
{
    /// <summary>
    /// Base client model for ReportField that only includes the non-virtual fields. Use this for PUT/POSTs
    /// </summary>
    public partial class ReportFieldEntity
    {
        /// <summary />
        public int Id { get; set; }

        /// <summary />
        public string ColumnHeaderText { get; set; }

        /// <summary />
        public int ColumnOrder { get; set; }

        /// <summary />
        public int? DataSelectComponentEntityTypeId { get; set; }

        /// <summary />
        public Guid? ForeignGuid { get; set; }

        /// <summary />
        public string ForeignKey { get; set; }

        /// <summary />
        public bool? IsCommunicationMergeField { get; set; }

        /// <summary />
        public bool? IsCommunicationRecipientField { get; set; }

        /// <summary />
        public Rock.Client.Enums.ReportFieldType ReportFieldType { get; set; }

        /// <summary />
        public int ReportId { get; set; }

        /// <summary />
        public string Selection { get; set; }

        /// <summary />
        public bool ShowInGrid { get; set; }

        /// <summary />
        public int /* SortDirection*/ SortDirection { get; set; }

        /// <summary />
        public int? SortOrder { get; set; }

        /// <summary />
        public DateTime? CreatedDateTime { get; set; }

        /// <summary />
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary />
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary />
        public int? ModifiedByPersonAliasId { get; set; }

        /// <summary />
        public Guid Guid { get; set; }

        /// <summary />
        public int? ForeignId { get; set; }

        /// <summary>
        /// Copies the base properties from a source ReportField object
        /// </summary>
        /// <param name="source">The source.</param>
        public void CopyPropertiesFrom( ReportField source )
        {
            this.Id = source.Id;
            this.ColumnHeaderText = source.ColumnHeaderText;
            this.ColumnOrder = source.ColumnOrder;
            this.DataSelectComponentEntityTypeId = source.DataSelectComponentEntityTypeId;
            this.ForeignGuid = source.ForeignGuid;
            this.ForeignKey = source.ForeignKey;
            this.IsCommunicationMergeField = source.IsCommunicationMergeField;
            this.IsCommunicationRecipientField = source.IsCommunicationRecipientField;
            this.ReportFieldType = source.ReportFieldType;
            this.ReportId = source.ReportId;
            this.Selection = source.Selection;
            this.ShowInGrid = source.ShowInGrid;
            this.SortDirection = source.SortDirection;
            this.SortOrder = source.SortOrder;
            this.CreatedDateTime = source.CreatedDateTime;
            this.ModifiedDateTime = source.ModifiedDateTime;
            this.CreatedByPersonAliasId = source.CreatedByPersonAliasId;
            this.ModifiedByPersonAliasId = source.ModifiedByPersonAliasId;
            this.Guid = source.Guid;
            this.ForeignId = source.ForeignId;

        }
    }

    /// <summary>
    /// Client model for ReportField that includes all the fields that are available for GETs. Use this for GETs (use ReportFieldEntity for POST/PUTs)
    /// </summary>
    public partial class ReportField : ReportFieldEntity
    {
        /// <summary />
        public EntityType DataSelectComponentEntityType { get; set; }

    }
}
