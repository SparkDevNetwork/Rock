//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//
using System;
using System.Collections.Generic;


namespace Rock.Client
{
    /// <summary>
    /// Base client model for PersistedDataset that only includes the non-virtual fields. Use this for PUT/POSTs
    /// </summary>
    public partial class PersistedDatasetEntity
    {
        /// <summary />
        public int Id { get; set; }

        /// <summary />
        public string AccessKey { get; set; }

        /// <summary />
        public bool AllowManualRefresh { get; set; } = true;

        /// <summary />
        public string BuildScript { get; set; }

        /// <summary />
        public Rock.Client.Enums.PersistedDatasetScriptType BuildScriptType { get; set; }

        /// <summary />
        public string Description { get; set; }

        /// <summary />
        public string EnabledLavaCommands { get; set; }

        /// <summary />
        public int? EntityTypeId { get; set; }

        /// <summary />
        public DateTime? ExpireDateTime { get; set; }

        /// <summary />
        public Guid? ForeignGuid { get; set; }

        /// <summary />
        public string ForeignKey { get; set; }

        /// <summary />
        public bool IsActive { get; set; } = true;

        /// <summary />
        public bool IsSystem { get; set; }

        /// <summary />
        public DateTime? LastRefreshDateTime { get; set; }

        /// <summary />
        public int? MemoryCacheDurationMS { get; set; }

        /// <summary />
        public string Name { get; set; }

        /// <summary />
        public int? RefreshIntervalMinutes { get; set; }

        /// <summary />
        public string ResultData { get; set; }

        /// <summary />
        public Rock.Client.Enums.PersistedDatasetDataFormat ResultFormat { get; set; }

        /// <summary />
        public double? TimeToBuildMS { get; set; }

        /// <summary />
        public Guid Guid { get; set; }

        /// <summary />
        public int? ForeignId { get; set; }

        /// <summary>
        /// Copies the base properties from a source PersistedDataset object
        /// </summary>
        /// <param name="source">The source.</param>
        public void CopyPropertiesFrom( PersistedDataset source )
        {
            this.Id = source.Id;
            this.AccessKey = source.AccessKey;
            this.AllowManualRefresh = source.AllowManualRefresh;
            this.BuildScript = source.BuildScript;
            this.BuildScriptType = source.BuildScriptType;
            this.Description = source.Description;
            this.EnabledLavaCommands = source.EnabledLavaCommands;
            this.EntityTypeId = source.EntityTypeId;
            this.ExpireDateTime = source.ExpireDateTime;
            this.ForeignGuid = source.ForeignGuid;
            this.ForeignKey = source.ForeignKey;
            this.IsActive = source.IsActive;
            this.IsSystem = source.IsSystem;
            this.LastRefreshDateTime = source.LastRefreshDateTime;
            this.MemoryCacheDurationMS = source.MemoryCacheDurationMS;
            this.Name = source.Name;
            this.RefreshIntervalMinutes = source.RefreshIntervalMinutes;
            this.ResultData = source.ResultData;
            this.ResultFormat = source.ResultFormat;
            this.TimeToBuildMS = source.TimeToBuildMS;
            this.Guid = source.Guid;
            this.ForeignId = source.ForeignId;

        }
    }

    /// <summary>
    /// Client model for PersistedDataset that includes all the fields that are available for GETs. Use this for GETs (use PersistedDatasetEntity for POST/PUTs)
    /// </summary>
    public partial class PersistedDataset : PersistedDatasetEntity
    {
        /// <summary />
        public EntityType EntityType { get; set; }

    }
}
