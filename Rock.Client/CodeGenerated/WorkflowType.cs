//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//
using System;
using System.Collections.Generic;


namespace Rock.Client
{
    /// <summary>
    /// Base client model for WorkflowType that only includes the non-virtual fields. Use this for PUT/POSTs
    /// </summary>
    public partial class WorkflowTypeEntity
    {
        /// <summary />
        public int Id { get; set; }

        /// <summary />
        public int? CategoryId { get; set; }

        /// <summary />
        public int? CompletedWorkflowRetentionPeriod { get; set; }

        /// <summary />
        public string Description { get; set; }

        /// <summary />
        public Guid? ForeignGuid { get; set; }

        /// <summary />
        public string ForeignKey { get; set; }

        /// <summary />
        public string IconCssClass { get; set; }

        /// <summary />
        public bool? IsActive { get; set; } = true;

        /// <summary />
        public bool IsPersisted { get; set; }

        /// <summary />
        public bool IsSystem { get; set; }

        /// <summary />
        public Rock.Client.Enums.WorkflowLoggingLevel LoggingLevel { get; set; }

        /// <summary />
        public int? LogRetentionPeriod { get; set; }

        /// <summary />
        public string Name { get; set; }

        /// <summary />
        public string NoActionMessage { get; set; }

        /// <summary />
        public int Order { get; set; }

        /// <summary />
        public int? ProcessingIntervalSeconds { get; set; }

        /// <summary />
        public string SummaryViewText { get; set; }

        /// <summary />
        public string WorkflowIdPrefix { get; set; }

        /// <summary />
        public string WorkTerm { get; set; }

        /// <summary />
        public DateTime? CreatedDateTime { get; set; }

        /// <summary />
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary />
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary />
        public int? ModifiedByPersonAliasId { get; set; }

        /// <summary />
        public Guid Guid { get; set; }

        /// <summary />
        public int? ForeignId { get; set; }

        /// <summary>
        /// Copies the base properties from a source WorkflowType object
        /// </summary>
        /// <param name="source">The source.</param>
        public void CopyPropertiesFrom( WorkflowType source )
        {
            this.Id = source.Id;
            this.CategoryId = source.CategoryId;
            this.CompletedWorkflowRetentionPeriod = source.CompletedWorkflowRetentionPeriod;
            this.Description = source.Description;
            this.ForeignGuid = source.ForeignGuid;
            this.ForeignKey = source.ForeignKey;
            this.IconCssClass = source.IconCssClass;
            this.IsActive = source.IsActive;
            this.IsPersisted = source.IsPersisted;
            this.IsSystem = source.IsSystem;
            this.LoggingLevel = source.LoggingLevel;
            this.LogRetentionPeriod = source.LogRetentionPeriod;
            this.Name = source.Name;
            this.NoActionMessage = source.NoActionMessage;
            this.Order = source.Order;
            this.ProcessingIntervalSeconds = source.ProcessingIntervalSeconds;
            this.SummaryViewText = source.SummaryViewText;
            this.WorkflowIdPrefix = source.WorkflowIdPrefix;
            this.WorkTerm = source.WorkTerm;
            this.CreatedDateTime = source.CreatedDateTime;
            this.ModifiedDateTime = source.ModifiedDateTime;
            this.CreatedByPersonAliasId = source.CreatedByPersonAliasId;
            this.ModifiedByPersonAliasId = source.ModifiedByPersonAliasId;
            this.Guid = source.Guid;
            this.ForeignId = source.ForeignId;

        }
    }

    /// <summary>
    /// Client model for WorkflowType that includes all the fields that are available for GETs. Use this for GETs (use WorkflowTypeEntity for POST/PUTs)
    /// </summary>
    public partial class WorkflowType : WorkflowTypeEntity
    {
        /// <summary />
        public ICollection<WorkflowActivityType> ActivityTypes { get; set; }

        /// <summary />
        public Category Category { get; set; }

    }
}
