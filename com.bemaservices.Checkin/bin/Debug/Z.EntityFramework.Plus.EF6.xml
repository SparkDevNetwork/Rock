<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Z.EntityFramework.Plus.EF6</name>
    </assembly>
    <members>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetDbTransaction(System.Data.Entity.Core.EntityClient.EntityConnection)">
            <summary>An EntityConnection extension method that gets database transaction.</summary>
            <param name="entityConnection">The @this to act on.</param>
            <returns>The database transaction.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetEntityTransaction(System.Data.Entity.Core.EntityClient.EntityConnection)">
            <summary>An EntityConnection extension method that gets the entity transaction.</summary>
            <param name="entityConnection">The entity connection to act on.</param>
            <returns>The entity transaction from the entity connection.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetStoreTransaction(System.Data.Entity.Core.EntityClient.EntityConnection)">
            <summary>An EntityConnection extension method that gets the store transaction.</summary>
            <param name="entityConnection">The entity connection to act on.</param>
            <returns>The store transaction from the entity connection.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetObjectQuerySafe(System.Linq.IQueryable)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that get the ObjectQuery from the query.</summary>
            <param name="query">The query to get the ObjectQuery from.</param>
            <returns>The ObjectQuery from the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetObjectQuery(System.Linq.IQueryable)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that get the ObjectQuery from the query.</summary>
            <param name="query">The query to get the ObjectQuery from.</param>
            <returns>The ObjectQuery from the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.SelectByName``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{System.String})">
            <summary>Select from the query all names.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to select name from.</param>
            <param name="names">The name to select.</param>
            <returns>An IQueryable with the name selected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetObjectQuery``1(System.Linq.IQueryable{``0})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that get the ObjectQuery from the query.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to get the ObjectQuery from.</param>
            <returns>The ObjectQuery from the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.CreateStoreCommand(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>An ObjectContext extension method that creates store command .</summary>
            <param name="context">The context to act on.</param>
            <returns>The new store command from the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetEntitySet``1(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>An ObjectContext extension method that creates store command .</summary>
            <param name="context">The context to act on.</param>
            <returns>The new store command from the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetInterceptionContext(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>An ObjectContext extension method that gets interception context.</summary>
            <param name="context">The context to act on.</param>
            <returns>The interception context from the ObjectContext.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.IfDbNullThenNull(System.Object)">
            <summary>An object extension method that return null if the value is DBNull.Value.</summary>
            <param name="item">The item to act on.</param>
            <returns>Null if the value is DBNull.Value.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags,System.Boolean)">
            <summary>A Type extension method that gets a field.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="type">The type to act on.</param>
            <param name="name">The name.</param>
            <param name="bindingAttr">The binding attribute.</param>
            <param name="recursif">True to recursif.</param>
            <returns>The field.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetPropertyOrFieldAccessor(System.Linq.Expressions.LambdaExpression)">
            <summary>
                A LambdaExpression extension method that gets property or field accessor.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <returns>The property or field accessor.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetPropertyOrFieldAccessors(System.Linq.Expressions.LambdaExpression)">
            <summary>
                Gets the property or field accessors in this collection.
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>An array of property or field accessor.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.RemoveConvert(System.Linq.Expressions.Expression)">
            <summary>
                An Expression extension method that removes all convert expression from the expression.
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>An Expression without convert expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetPropertyOrField(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression)">
            <summary>
                An Expression extension method that gets a property or field from an expression.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <param name="parameterExpression">The parameter @this.</param>
            <returns>The property or field from the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetPropertyOrFieldAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression)">
            <summary>
                An Expression extension method that gets a property or field access from an expression.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <param name="parameterExpression">The parameter @this.</param>
            <returns>The property or field access from the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.DeserializeXml``1(System.String)">
            <summary>
                A string extension method that deserialize XML.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <returns>A T.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.PropertyOrFieldAccessor.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.Reflection.MemberInfo})">
            <summary>Constructor.</summary>
            <param name="propertyOrFieldPaths">The FieldPaths.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.PropertyOrFieldAccessor.#ctor(System.Reflection.MemberInfo)">
            <summary>Constructor.</summary>
            <param name="property">The property.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.PropertyOrFieldAccessor.PropertyOrFieldPaths">
            <summary>Gets or sets the FieldPaths.</summary>
            <value>The FieldPaths.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.PropertyOrFieldAccessor.PropertyOrField">
            <summary>Gets or sets the property.</summary>
            <value>The property.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.PropertyOrFieldAccessor.GetValue(System.Object)">
            <summary>
                Gets a value.
            </summary>
            <param name="obj">The object.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.PropertyOrFieldAccessor.GetValue``1(System.Object)">
            <summary>
                Gets a value.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="obj">The object.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.PropertyOrFieldAccessor.SetValue(System.Object,System.Object)">
            <summary>
                Sets a value.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.PropertyOrFieldAccessor.ToString">
            <summary>
                Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.Infrastructure.DbModelPlus">
            <summary>A data Model for the database.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Infrastructure.DbModelPlus.ConceptualModel">
            <summary>Gets or sets the conceptual model.</summary>
            <value>The conceptual model.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Infrastructure.DbModelPlus.StoreModel">
            <summary>Gets or sets the store model.</summary>
            <value>The store model.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Infrastructure.DbModelPlus.MappingModel">
            <summary>Gets or sets the mapping model.</summary>
            <value>The mapping model.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.Internal.Core.Infrastructure.DbModelPlus.Entity``1">
            <summary>Gets the entity.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <returns>A T.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.Mapping.ComplexPropertyMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.ComplexPropertyMapping.ComplexEntityType">
            <summary>Gets or sets the type of the complex entity.</summary>
            <value>The type of the complex entity.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.ComplexPropertyMapping.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.ComplexPropertyMapping.TypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.ComplexPropertyMapping.ScalarProperties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The scalar properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.ComplexPropertyMapping.ComplexProperties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The complex properties.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.Mapping.ConditionPropertyMapping">
            <summary>A condition property mapping.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.ConditionPropertyMapping.Value">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.ConditionPropertyMapping.ColumnName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the column.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.Mapping.EntityContainerMapping">
            <summary>An entity container mapping.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.EntityContainerMapping.EntitySetMappings">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The entity set mappings.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.Mapping.EntitySetMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.EntitySetMapping.ConceptualSet">
            <summary>Gets or sets the set the conceptual belongs to.</summary>
            <value>The conceptual set.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.EntitySetMapping.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.EntitySetMapping.EntityTypeMappings">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The entity type mappings.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.Mapping.EntityTypeMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.EntityTypeMapping.EntityType">
            <summary>Gets or sets the type of the entity.</summary>
            <value>The type of the entity.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.EntityTypeMapping.TypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.EntityTypeMapping.MappingFragment">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The mapping fragment.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.Mapping.MappingFragment">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.Internal.Core.Mapping.MappingFragment.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.MappingFragment.StoreEntitySet">
            <summary>Gets or sets the set the store entity belongs to.</summary>
            <value>The store entity set.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.MappingFragment.ScalarAccessors">
            <summary>Gets or sets the scalar accessors.</summary>
            <value>The scalar accessors.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.MappingFragment.StoreEntitySetName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the store entity set.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.MappingFragment.ScalarProperties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The scalar properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.MappingFragment.ComplexProperties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The complex properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.MappingFragment.Conditions">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The conditions.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.Mapping.ScalarPropertyMapping">
            <summary>A scalar property mapping.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.ScalarPropertyMapping.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.ScalarPropertyMapping.ColumnName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the column.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.Mapping.SchemaMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.Mapping.SchemaMapping.EntityContainerMappings">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The entity container mapping.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainer">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainer.Index_EntitySets_Name">
            <summary>Gets or sets the name of the index entity sets.</summary>
            <value>The name of the index entity sets.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainer.EntitySets">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The entity sets.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainerEntitySet">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainerEntitySet.EntityType">
            <summary>Gets or sets the type of the entity.</summary>
            <value>The type of the entity.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainerEntitySet.IsTPC">
            <summary>Gets or sets a value indicating whether this object is tpc.</summary>
            <value>true if this object is tpc, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainerEntitySet.IsTPH">
            <summary>Gets or sets a value indicating whether this object is tph.</summary>
            <value>true if this object is tph, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainerEntitySet.IsTPT">
            <summary>Gets or sets a value indicating whether this object is tpt.</summary>
            <value>true if this object is tpt, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainerEntitySet.EntitySetMapping">
            <summary>Gets or sets the entity set mapping.</summary>
            <value>The entity set mapping.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainerEntitySet.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainerEntitySet.EntityTypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the entity type.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainerEntitySet.Schema">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The schema.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityContainerEntitySet.Table">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The table.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityKeyElement">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.EntityKeyElement.PropertyRefs">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The property references.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.ParentEntity">
            <summary>Gets or sets the parent entity.</summary>
            <value>The parent entity.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.IsConcurrency">
            <summary>Gets or sets the is concurrency.</summary>
            <value>The is concurrency.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.IsComplex">
            <summary>Gets or sets a value indicating whether this object is complex.</summary>
            <value>true if this object is complex, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.ComplexType">
            <summary>Gets or sets the type of the complex.</summary>
            <value>The type of the complex.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.IsEnum">
            <summary>Gets or sets a value indicating whether this object is enum.</summary>
            <value>true if this object is enum, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.EnumType">
            <summary>Gets or sets the type of the enum.</summary>
            <value>The type of the enum.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.Type">
            <summary>Gets or sets the type.</summary>
            <value>The type.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.IsPrimaryKey">
            <summary>Gets or sets a value indicating whether this object is primary key.</summary>
            <value>true if this object is primary key, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.IsComputed">
            <summary>Gets or sets a value indicating whether this object is computed.</summary>
            <value>true if this object is computed, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.TypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.Nullable">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>true if nullable, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.StoreGeneratedPattern">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The store generated pattern.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.Unicode">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>true if unicode, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.FixedLength">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>true if fixed length, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.MaxLength">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The length of the maximum.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.Precision">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The precision.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.Scale">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The scale.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Property.ConcurrencyMode">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The concurrency mode.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.PropertyRefElement">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.PropertyRefElement.Property">
            <summary>Gets or sets the property.</summary>
            <value>The property.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.PropertyRefElement.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Schema">
            <summary>A schema.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Schema.Index_ComplexTypes_Name">
            <summary>Gets or sets the name of the index complex types.</summary>
            <value>The name of the index complex types.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Schema.Index_EntityTypes_Name">
            <summary>Gets or sets the name of the index entity types.</summary>
            <value>The name of the index entity types.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Schema.Index_EnumTypes_Name">
            <summary>Gets or sets the name of the index enum types.</summary>
            <value>The name of the index enum types.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Schema.Alias">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The alias.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Schema.EntityTypes">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>A list of types of the entities.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Schema.ComplexTypes">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>A list of types of the complexes.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Schema.EnumTypes">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>A list of types of the enums.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Schema.EntityContainers">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The entity container.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType.IsTPC">
            <summary>Gets or sets a value indicating whether this object is tpc.</summary>
            <value>true if this object is tpc, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType.IsTPT">
            <summary>Gets or sets a value indicating whether this object is tpt.</summary>
            <value>true if this object is tpt, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType.IsTPH">
            <summary>Gets or sets a value indicating whether this object is tph.</summary>
            <value>true if this object is tph, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType.Index_Properties_Name">
            <summary>Gets or sets the name of the index properties.</summary>
            <value>The name of the index properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType.EntityTypeMapping">
            <summary>Gets or sets the entity type mapping.</summary>
            <value>The entity type mapping.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType.EntitySet">
            <summary>Gets or sets the set the entity belongs to.</summary>
            <value>The entity set.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType.GenericEntitySetMapping">
            <summary>Gets or sets the generic entity set mapping.</summary>
            <value>The generic entity set mapping.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType.BaseType">
            <summary>Gets or sets the type of the base.</summary>
            <value>The type of the base.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType.Key">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType.Properties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType.BaseTypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the base type.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType`1">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType`1.Info">
            <summary>Gets or sets the entity.</summary>
            <value>The entity.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEnumMember">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEnumMember.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEnumMember.Value">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEnumType">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEnumType.Type">
            <summary>Gets or sets the type.</summary>
            <value>The type.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEnumType.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEnumType.IsFlags">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>true if this object is flags, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEnumType.UnderlyingTypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the underlying type.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEnumType.Members">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The members.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Utility.CreateGetFunc(System.Type,System.String)">
            <summary>
                Creates get function.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyName">Name of the property.</param>
            <returns>The new get function.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.Internal.Model.GetCodeFirstModel(System.Data.Entity.DbContext)">
            <summary>
                A DbContext extension method that gets database first model.
            </summary>
            <param name="context">The @this to act on.</param>
            <returns>The database first model.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.Internal.Model.GetConceptualModelString(System.Data.Entity.DbContext,System.String)">
            <summary>
                A DbContext extension method that gets conceptual model string.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <returns>The conceptual model string.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.Internal.Model.GetDatabaseFirst(System.Data.Entity.DbContext)">
            <summary>
                A DbContext extension method that gets database first model.
            </summary>
            <param name="context">The @this to act on.</param>
            <returns>The database first model.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.Internal.Model.GetMappingModelString(System.Data.Entity.DbContext,System.String)">
            <summary>
                A DbContext extension method that gets mapping model string.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <returns>The mapping model string.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.Internal.Model.GetModelName(System.Data.Entity.DbContext)">
            <summary>
                A DbContext extension method that gets model name.
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>The model name.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.Internal.Model.GetModelNames(System.Data.Entity.DbContext)">
            <summary>
                A DbContext extension method that gets model name.
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>The model name.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.Internal.Model.GetModelXDocument(System.Data.Entity.DbContext)">
            <summary>
                A DbContext extension method that gets model x coordinate document.
            </summary>
            <param name="db">The db to act on.</param>
            <returns>The model x coordinate document.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.Internal.Model.GetStorageModelString(System.Data.Entity.DbContext,System.String)">
            <summary>
                A DbContext extension method that gets storage model string.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <returns>The storage model string.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.Audit">
            <summary>An audit.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.Audit._configuration">
            <summary>The lazy configuration.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Audit.Entries">
            <summary>Gets or sets the entries.</summary>
            <value>The entries.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Audit.CreatedBy">
            <summary>Gets or sets the  created by username.</summary>
            <value>The created by username.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Audit.Configuration">
            <summary>Gets the configuration.</summary>
            <value>The configuration.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Audit.CurrentOrDefaultConfiguration">
            <summary>Gets the current or default configuration.</summary>
            <value>The current or default configuration.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.PostSaveChanges">
            <summary>Updates audit entries after the save changes has been executed.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.PreSaveChanges(System.Data.Entity.DbContext)">
            <summary>Adds audit entries before the save changes has been executed.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditEntityAdded(Z.EntityFramework.Plus.Audit,System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Audit entity added.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="objectStateEntry">The object state entry.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditEntityAdded(Z.EntityFramework.Plus.AuditEntry,System.Data.Entity.Core.Objects.ObjectStateEntry,System.Data.Entity.Core.Objects.DbUpdatableDataRecord,System.String)">
            <summary>Audit entity added.</summary>
            <param name="auditEntry">The audit entry.</param>
            <param name="objectStateEntry">The object state entry.</param>
            <param name="record">The record.</param>
            <param name="prefix">The prefix.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditEntityDeleted(Z.EntityFramework.Plus.Audit,System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Audit entity deleted.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="objectStateEntry">The object state entry.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditEntityDeleted(Z.EntityFramework.Plus.AuditEntry,System.Data.Entity.Core.Objects.ObjectStateEntry,System.Data.Common.DbDataRecord,System.String)">
            <summary>Audit entity deleted.</summary>
            <param name="entry">The entry.</param>
            <param name="record">The record.</param>
            <param name="prefix">The prefix.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditEntityModified(Z.EntityFramework.Plus.Audit,System.Data.Entity.Core.Objects.ObjectStateEntry,Z.EntityFramework.Plus.AuditEntryState)">
            <summary>Audit entity modified.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="objectStateEntry">The object state entry.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditEntityModified(Z.EntityFramework.Plus.Audit,Z.EntityFramework.Plus.AuditEntry,System.Data.Entity.Core.Objects.ObjectStateEntry,System.Data.Common.DbDataRecord,System.Data.Entity.Core.Objects.DbUpdatableDataRecord,System.String)">
            <summary>Audit entity modified.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="entry">The entry.</param>
            <param name="objectStateEntry">The object state entry.</param>
            <param name="orginalRecord">The orginal record.</param>
            <param name="currentRecord">The current record.</param>
            <param name="prefix">The prefix.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditRelationAdded(Z.EntityFramework.Plus.Audit,System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Audit relationship added.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="objectStateEntry">The object state entry.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditRelationDeleted(Z.EntityFramework.Plus.Audit,System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Audit relationship deleted.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="objectStateEntry">The object state entry.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.PostSaveChanges(Z.EntityFramework.Plus.Audit)">
            <summary>Updates audit entries after the save changes has been executed.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.PreSaveChanges(Z.EntityFramework.Plus.Audit,System.Data.Entity.DbContext)">
            <summary>Adds audit entries before the save changes has been executed.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="context">The context used to audits and saves all changes made.</param>
        </member>
        <member name="T:Z.EntityFramework.Plus.AuditConfiguration">
            <summary>An audit configuration.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.AuditEntryFactory">
            <summary>Gets or sets the audit entry factory.</summary>
            <value>The audit entry factory.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.AuditEntryPropertyFactory">
            <summary>Gets or sets the audit entry property factory.</summary>
            <value>The audit entry property factory.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.AutoSavePreAction">
            <summary>Gets or sets the automatic audit save pre action.</summary>
            <value>The automatic audit save pre action.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.EntityValueFormatters">
            <summary>Gets or sets a list of formatter for entity values.</summary>
            <value>A list of formatter for entity values.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.ExcludeIncludeEntityPredicates">
            <summary>Gets or sets a list of predicates to exclude or include entities.</summary>
            <value>A list of predicates to exclude or include entities.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.ExcludeIncludePropertyPredicates">
            <summary>Gets or sets a list of predicates to exclude or include properties.</summary>
            <value>A list of predicates to exclude or include properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreEntityAdded">
            <summary>Gets or sets a value indicating whether the entity with Added state are audited.</summary>
            <value>true if entity with Added state are audited, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreEntityDeleted">
            <summary>Gets or sets a value indicating whether the entity with Deleted state are audited.</summary>
            <value>true if entity with Deleted state are audited, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreEntityModified">
            <summary>Gets or sets a value indicating whether the entity with Modified state are audited.</summary>
            <value>true if entity with Modified state are audited, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreEntitySoftAdded">
            <summary>Gets or sets a value indicating whether the ignore entity soft added.</summary>
            <value>true if ignore entity soft added, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreEntitySoftDeleted">
            <summary>Gets or sets a value indicating whether the ignore entity soft deleted.</summary>
            <value>true if ignore entity soft deleted, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreRelationshipAdded">
            <summary>Gets or sets a value indicating whether the association with Added state are audited.</summary>
            <value>true if association with Added state are audited, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreRelationshipDeleted">
            <summary>Gets or sets a value indicating whether the association with Deleted state are audited.</summary>
            <value>true if association with Deleted state are audited, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnorePropertyUnchanged">
            <summary>Gets or sets a value indicating whether all unchanged property of a modified entity are audited.</summary>
            <value>true if unchanged property of a modified entity are audited, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IsAuditedDictionary">
            <summary>Gets or sets a dictionary indicating if an entity type or a property name is audited.</summary>
            <value>A dictionary indicating if an entity type or a property name is audited.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.SoftAddedPredicates">
            <summary>Gets or sets a list of predicates to check if the modified entity is soft added.</summary>
            <value>A list of predicates to check if the modified entity is soft added.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.SoftDeletedPredicates">
            <summary>Gets or sets a list of predicates to check if the modified entity is soft deleted.</summary>
            <value>A list of predicates to check if the modified entity is soft deleted.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.ValueFormatterDictionary">
            <summary>Gets or sets a dictionary of value formatter for a property name.</summary>
            <value>A dictionary of value formatter for a property name.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.ExcludeRelationshipIfOneExcluded">
            <summary>
            Gets or sets a value indicating whether the exclude relationship if one excluded.
            </summary>
            <value>True if exclude relationship if one excluded, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.UseNullForDBNullValue">
            <summary>
                Gets or sets a value indicating whether null value should be used in the Audit instead of DBNull.Value
            </summary>
            <value>The value indicating whether null value should be used in the Audit instead of DBNull.Value</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.Clone">
            <summary>Makes a deep copy of this object.</summary>
            <returns>A copy of this object.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.Exclude(System.Func{System.Object,System.Boolean})">
            <summary>Excludes from the audit all entities which satisfy the predicate.</summary>
            <param name="excludeEntityPredicate">The exclude entity predicate.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.Exclude``1">
            <summary>Excludes from the audit all entities of 'T' type or entities which the type derive from 'T'.</summary>
            <typeparam name="T">Generic type to exclude.</typeparam>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.ExcludeProperty">
            <summary>Excludes from the audit all properties.</summary>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.ExcludeProperty``1">
            <summary>
                Excludes from the audit all properties from entities of 'T' type or entities which the type
                derive from 'T'.
            </summary>
            <typeparam name="T">Generic type to exclude all properties.</typeparam>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.ExcludeProperty``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Excludes from the audit selected properties from entities of 'T' type or entities which the
                type derive from 'T'.
            </summary>
            <typeparam name="T">Generic type to exclude selected properties.</typeparam>
            <param name="propertySelector">The property selector.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.Format``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Func{System.Object,System.Object})">
            <summary>
                Formats value for selected properties from entities of 'T' type or entities which the type
                derive from 'T'.
            </summary>
            <typeparam name="T">Generic type to format selected properties.</typeparam>
            <param name="propertySelector">The property selector.</param>
            <param name="formatter">The formatter to use to format value.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.FormatValue(System.Object,System.String,System.Object)">
            <summary>Format a value for the specified entry and property name.</summary>
            <param name="entry">The entry.</param>
            <param name="propertyName">The property name.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.GetEntityModifiedState(System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Gets the state of the entity modified (EntityModified, EntitySoftAdded, EntitySoftDeleted).</summary>
            <param name="entry">The entry.</param>
            <returns>The state of the entity modified (EntityModified, EntitySoftAdded, EntitySoftDeleted).</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.Include(System.Func{System.Object,System.Boolean})">
            <summary>Includes from the audit all entities which satisfy the predicate.</summary>
            <param name="includeEntityPredicate">The include entity predicate.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.Include``1">
            <summary>Includes from the audit all entities of 'T' type or entities which the type derive from 'T'.</summary>
            <typeparam name="T">Generic type to include.</typeparam>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.IncludeProperty">
            <summary>Includes from the audit all properties.</summary>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.IncludeProperty``1">
            <summary>
                Includes from the audit all properties from entities of 'T' type or entities which the type
                derive from 'T'.
            </summary>
            <typeparam name="T">Generic type to include all properties.</typeparam>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.IncludeProperty``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Includes from the audit selected properties from entities of 'T' type or entities which the
                type derive from 'T'.
            </summary>
            <typeparam name="T">Generic type to include selected properties.</typeparam>
            <param name="propertySelector">The property selector.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.IsAuditedEntity(System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Checks if the entity is audited.</summary>
            <param name="entry">The entry.</param>
            <returns>true if the entity is audited, false if not.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.IsAuditedProperty(System.Data.Entity.Core.Objects.ObjectStateEntry,System.String)">
            <summary>Check if the property name is audited.</summary>
            <param name="entry">The entry.</param>
            <param name="propertyName">The property name.</param>
            <returns>true if the property name is audited, false if not.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.SoftAdded(System.Func{System.Object,System.Boolean})">
            <summary>
                Change from "EntityModified" to "EntitySoftAdded" for all entities which satisfy the predicate.
            </summary>
            <param name="softAddPredicate">The soft add predicate.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.SoftAdded``1(System.Func{``0,System.Boolean})">
            <summary>
                Change from "EntityModified" to "EntitySoftAdded" for all entities of 'T' type or entities which the
                type derive from 'T' and which satisfy the predicate.
            </summary>
            <typeparam name="T">Generic type to soft add entity.</typeparam>
            <param name="softAddPredicate">The soft add predicate.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.SoftDeleted(System.Func{System.Object,System.Boolean})">
            <summary>
                Change from "EntityModified' to "EntitySoftDeleted" for all entities which satisfy the predicate.
            </summary>
            <param name="softDeletePredicate">The soft add predicate.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.SoftDeleted``1(System.Func{``0,System.Boolean})">
            <summary>
                Change from "EntityModified" to "EntitySoftDeleted" for all entities of 'T' type or entities which the
                type derive from 'T' and which satisfy the predicate.
            </summary>
            <typeparam name="T">Generic type to soft delete entity.</typeparam>
            <param name="softDeletePredicate">The soft delete predicate.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.AuditEntry">
            <summary>An audit entry.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.AuditEntryID">
            <summary>Gets or sets the identifier of the audit entry.</summary>
            <value>The identifier of the audit entry.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.CreatedBy">
            <summary>Gets or sets who created this object.</summary>
            <value>Describes who created this object.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.CreatedDate">
            <summary>Gets or sets the the date of the changes.</summary>
            <value>The date of the changes.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.DelayedKey">
            <summary>Gets or sets the delayed key.</summary>
            <value>The delayed key.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.Entity">
            <summary>Gets or sets the object state entry.</summary>
            <value>The object state entry.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.Entry">
            <summary>Gets or sets the object state entry.</summary>
            <value>The object state entry.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.EntitySetName">
            <summary>Gets or sets the name of the entity set.</summary>
            <value>The name of the entity set.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.EntityTypeName">
            <summary>Gets or sets the name of the entity type.</summary>
            <value>The name of the entity type.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.Parent">
            <summary>Gets or sets the parent.</summary>
            <value>The parent.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.Properties">
            <summary>Gets or sets the properties.</summary>
            <value>The properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.State">
            <summary>Gets or sets the entry state.</summary>
            <value>The entry state.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.StateName">
            <summary>Gets or sets the name of the entry state.</summary>
            <value>The name of the entry state.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.AuditEntryProperty">
            <summary>An audit entry property.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.AuditEntryPropertyID">
            <summary>Gets or sets the identifier of the audit entry property.</summary>
            <value>The identifier of the audit entry property.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.AuditEntryID">
            <summary>Gets or sets the identifier of the audit entry.</summary>
            <value>The identifier of the audit entry.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.Parent">
            <summary>Gets or sets the parent.</summary>
            <value>The parent.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.PropertyName">
            <summary>Gets or sets the name of the property audited.</summary>
            <value>The name of the property audited.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.RelationName">
            <summary>Gets or sets the name of the relation audited.</summary>
            <value>The name of the relation audited.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.NewValue">
            <summary>Gets or sets the new value audited.</summary>
            <value>The new value audited.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.IsValueSet">
            <summary>Gets or sets a value indicating whether OldValue and NewValue is set.</summary>
            <value>true if OldValue and NewValue is set, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.InternalPropertyName">
            <summary>Gets or sets the name of the property internally.</summary>
            <value>The name of the property internally.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.NewValueFormatted">
            <summary>Gets or sets the new value audited formatted.</summary>
            <value>The new value audited formatted.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.OldValue">
            <summary>Gets or sets the old value audited.</summary>
            <value>The old value audited.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.OldValueFormatted">
            <summary>Gets or sets the old value audited formatted.</summary>
            <value>The old value audited formatted.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.AuditEntryState">
            <summary>Values that represent audit entry states.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.EntityAdded">
            <summary>An enum constant representing the entity added option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.EntityDeleted">
            <summary>An enum constant representing the entity deleted option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.EntityModified">
            <summary>An enum constant representing the entity modified option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.EntitySoftAdded">
            <summary>An enum constant representing the entity soft added option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.EntitySoftDeleted">
            <summary>An enum constant representing the entity soft deleted option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.RelationshipAdded">
            <summary>An enum constant representing the relationship added option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.RelationshipDeleted">
            <summary>An enum constant representing the relationship deleted option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.EntityCurrent">
            <summary>An enum constant representing the entity current option.</summary>
        </member>
        <member name="T:Z.EntityFramework.Plus.AuditManager">
            <summary>Manager for audits.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditManager.#cctor">
            <summary>Static constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditManager.DefaultConfiguration">
            <summary>Gets or sets the default audit configuration.</summary>
            <value>The default audit configuration.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditExtensions.SaveChanges(System.Data.Entity.DbContext,Z.EntityFramework.Plus.Audit)">
            <summary>Audits and saves all changes made in this context to the underlying database.</summary>
            <param name="context">The context used to audits and saves all changes made.</param>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <returns>The number of objects written to the underlying database.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditExtensions.SaveChangesAsync(System.Data.Entity.DbContext,Z.EntityFramework.Plus.Audit)">
            <summary>Asynchronously audits and saves all changes made in this context to the underlying database.</summary>
            <param name="context">The context used to audits and saves all changes made.</param>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains the number of objects written
                to the underlying database
            </returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditExtensions.SaveChangesAsync(System.Data.Entity.DbContext,Z.EntityFramework.Plus.Audit,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that saves the changes asynchronous.</summary>
            <param name="context">The context used to audits and saves all changes made.</param>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="cancellationToken">A CancellationToken to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains the number of objects written
                to the underlying database
            </returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.BatchDelete">
            <summary>Class to batch delete.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.BatchDelete.CommandTextTemplate">
            <summary>The command text template.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.BatchDelete.CommandTextPostgreSQLTemplate">
            <summary>The command text postgre SQL template.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.BatchDelete.CommandTextTemplate_MySql">
            <summary>The command text postgre SQL template.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.BatchDelete.CommandTextWhileTemplate">
            <summary>The command text template with WHILE loop.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.BatchDelete.CommandTextWhileDelayTemplate">
            <summary>The command text template with DELAY and WHILE loop</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchDelete.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchDelete.BatchSize">
            <summary>Gets or sets the size of the batch.</summary>
            <value>The size of the batch.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchDelete.BatchDelayInterval">
            <summary>Gets or sets the batch delay interval in milliseconds (The wait time between batch).</summary>
            <value>The batch delay interval in milliseconds (The wait time between batch).</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchDelete.UseTableLock">
            <summary>Gets or sets a value indicating whether the query use table lock.</summary>
            <value>True if use table lock, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchDelete.Executing">
            <summary>Gets or sets the DbCommand before being executed.</summary>
            <value>The DbCommand before being executed.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchDelete.Execute``1(System.Linq.IQueryable{``0})">
            <summary>Executes the batch delete operation.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query used to execute the batch operation.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchDelete.CreateCommand``1(System.Data.Entity.Core.Objects.ObjectQuery,Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType{``0})">
            <summary>Creates a command to execute the batch operation.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query.</param>
            <param name="entity">The schema entity.</param>
            <param name="visitor">The visitor.</param>
            <returns>The new command to execute the batch operation.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.BatchDeleteManager">
            <summary>Manage EF+ Batch Delete Configuration.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchDeleteManager.BatchDeleteBuilder">
            <summary>Gets or sets the batch delete builder to change default configuration.</summary>
            <value>The batch delete builder to change default configuration.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchDeleteManager.IsInMemoryQuery">
            <summary>
            Gets or sets a value indicating whether this object is in memory query.
            </summary>
            <value>True if this object is in memory query, false if not.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.BatchDeleteVisitor">
            <summary>A batch delete visitor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchDeleteVisitor.HasOrderBy">
            <summary>Gets or sets a value indicating whether the expression contains an OrderBy method.</summary>
            <value>true if the expression contains an OrderBy metho has order by, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchDeleteVisitor.HasSkip">
            <summary>Gets or sets a value indicating whether the expression contains an Skip method.</summary>
            <value>true if the expression contains an Skip metho has order by, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchDeleteVisitor.HasTake">
            <summary>Gets or sets a value indicating whether the expression contains an Take method.</summary>
            <value>true if the expression contains an Take metho has order by, false if not.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchDeleteVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Visits the children of the <see cref="T:System.Linq.Expressions.MethodCallExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
                The modified expression, if it or any subexpression was modified; otherwise, returns the
                original expression.
            </returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchDeleteExtensions.Delete``1(System.Linq.IQueryable{``0})">
            <summary>
                An IQueryable&lt;T&gt; extension method that deletes all rows from the query without
                retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to delete rows from without retrieving entities.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchDeleteExtensions.Delete``1(System.Linq.IQueryable{``0},System.Action{Z.EntityFramework.Plus.BatchDelete})">
            <summary>
                An IQueryable&lt;T&gt; extension method that deletes all rows from the query without
                retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to delete rows from without retrieving entities.</param>
            <param name="batchDeleteBuilder">The batch builder action to change default configuration.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchDeleteExtensions.DeleteAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that deletes all rows asynchronously from the query
                without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to delete rows from without retrieving entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task with the number of rows affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchDeleteExtensions.DeleteAsync``1(System.Linq.IQueryable{``0},System.Action{Z.EntityFramework.Plus.BatchDelete},System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that deletes all rows from the query without
                retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to delete rows from without retrieving entities.</param>
            <param name="batchDeleteBuilder">The batch delete builder to change default configuration.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task with the number of rows affected.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.BatchUpdate">
            <summary>Class to batch delete.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.BatchUpdate.CommandTextTemplate">
            <summary>The command text template.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchUpdate.Executing">
            <summary>Gets or sets the DbCommand before being executed.</summary>
            <value>The DbCommand before being executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchUpdate.UseTableLock">
            <summary>Gets or sets a value indicating whether the query use table lock.</summary>
            <value>True if use table lock, false if not.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchUpdate.Execute``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})">
            <summary>Executes the batch delete operation.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query used to execute the batch operation.</param>
            <param name="updateFactory">The update factory.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchUpdate.CreateCommand``1(System.Data.Entity.Core.Objects.ObjectQuery,Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.SchemaEntityType{``0},System.Collections.Generic.List{System.Tuple{System.String,System.Object}})">
            <summary>Creates a command to execute the batch operation.</summary>
            <param name="query">The query.</param>
            <param name="entity">The schema entity.</param>
            <returns>The new command to execute the batch operation.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.BatchUpdateManager">
            <summary>Manage EF+ Batch Update Configuration.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchUpdateManager.BatchUpdateBuilder">
            <summary>Gets or sets the batch update builder to change default configuration.</summary>
            <value>The batch update builder to change default configuration.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchUpdateManager.IsInMemoryQuery">
            <summary>
            Gets or sets a value indicating whether this object is in memory query.
            </summary>
            <value>True if this object is in memory query, false if not.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.BatchUpdateVisitor">
            <summary>A batch update visitor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.BatchUpdateVisitor.HasOrderBy">
            <summary>Gets or sets a value indicating whether the expression contains an OrderBy method.</summary>
            <value>true if the expression contains an OrderBy metho has order by, false if not.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchUpdateVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Visits the children of the <see cref="T:System.Linq.Expressions.MethodCallExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
                The modified expression, if it or any subexpression was modified; otherwise, returns the
                original expression.
            </returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchUpdateExtensions.Update``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows from the query using an
                expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="updateFactory">The update expression.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchUpdateExtensions.Update``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}},System.Action{Z.EntityFramework.Plus.BatchUpdate})">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows from the query using an
                expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="updateFactory">The update expression.</param>
            <param name="batchUpdateBuilder">The batch builder action to change default configuration.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchUpdateExtensions.UpdateAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}},System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows asynchronously from the query
                using an expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="updateFactory">The update factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task with the number of rows affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BatchUpdateExtensions.UpdateAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}},System.Action{Z.EntityFramework.Plus.BatchUpdate},System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows from the query using an
                expression  without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="updateFactory">The update factory.</param>
            <param name="batchUpdateBuilder">The batch delete builder to change default configuration.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task with the number of rows affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCache``1(System.Linq.IQueryable{``0},System.Runtime.Caching.CacheItemPolicy,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized and cached before being returned.
            </summary>
            <typeparam name="T">The generic type of the query.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="policy">The policy to use to cache the query.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCache``1(System.Linq.IQueryable{``0},System.DateTimeOffset,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="absoluteExpiration">The fixed date and time at which the cache entry will expire.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCache``1(System.Linq.IQueryable{``0},System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCacheAsync``1(System.Linq.IQueryable{``0},System.Runtime.Caching.CacheItemPolicy,System.Threading.CancellationToken,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized asynchronously and cached before being returned.
            </summary>
            <typeparam name="T">The generic type of the query.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="policy">The policy to use to cache the query.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCacheAsync``1(System.Linq.IQueryable{``0},System.Runtime.Caching.CacheItemPolicy,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized asynchronously and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="policy">The policy to use to cache the query.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCacheAsync``1(System.Linq.IQueryable{``0},System.DateTimeOffset,System.Threading.CancellationToken,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized asynchronously and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="absoluteExpiration">The fixed date and time at which the cache entry will expire.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCacheAsync``1(System.Linq.IQueryable{``0},System.DateTimeOffset,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized asynchronously and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="absoluteExpiration">The fixed date and time at which the cache entry will expire.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCacheAsync``1(System.Linq.IQueryable{``0},System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized asynchronously and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCacheAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized asynchronously and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCache``1(Z.EntityFramework.Plus.QueryDeferred{``0},System.Runtime.Caching.CacheItemPolicy,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized and cached before being returned.
            </summary>
            <typeparam name="T">The generic type of the query.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="policy">The policy to use to cache the query.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCache``1(Z.EntityFramework.Plus.QueryDeferred{``0},System.DateTimeOffset,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="absoluteExpiration">The fixed date and time at which the cache entry will expire.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCache``1(Z.EntityFramework.Plus.QueryDeferred{``0},System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCacheAsync``1(Z.EntityFramework.Plus.QueryDeferred{``0},System.Runtime.Caching.CacheItemPolicy,System.Threading.CancellationToken,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized asynchronously and cached before being returned.
            </summary>
            <typeparam name="T">The generic type of the query.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="policy">The policy to use to cache the query.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCacheAsync``1(Z.EntityFramework.Plus.QueryDeferred{``0},System.Runtime.Caching.CacheItemPolicy,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized asynchronously and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="policy">The policy to use to cache the query.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCacheAsync``1(Z.EntityFramework.Plus.QueryDeferred{``0},System.DateTimeOffset,System.Threading.CancellationToken,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized asynchronously and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="absoluteExpiration">The fixed date and time at which the cache entry will expire.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCacheAsync``1(Z.EntityFramework.Plus.QueryDeferred{``0},System.DateTimeOffset,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized asynchronously and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="absoluteExpiration">The fixed date and time at which the cache entry will expire.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCacheAsync``1(Z.EntityFramework.Plus.QueryDeferred{``0},System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized asynchronously and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheExtensions.FromCacheAsync``1(Z.EntityFramework.Plus.QueryDeferred{``0},System.Threading.CancellationToken,System.String[])">
            <summary>
                Return the result of the <paramref name="query" /> from the cache. If the query is not cached
                yet, the query is materialized asynchronously and cached before being returned.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache in the QueryCacheManager.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="tags">
                A variable-length parameters list containing tags to expire cached
                entries.
            </param>
            <returns>The result of the query.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryCacheManager">
            <summary>Manage EF+ Query Cache Configuration.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheManager.#cctor">
            <summary>Static constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryCacheManager.Cache">
            <summary>Gets or sets the cache to use for QueryCacheExtensions extension methods.</summary>
            <value>The cache to use for QueryCacheExtensions extension methods.</value>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryCacheManager._defaultCacheItemPolicy">
            <summary>The default cache item policy.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryCacheManager._cacheItemPolicyFactory">
            <summary>The cache item policy factory.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryCacheManager.DefaultCacheItemPolicy">
            <summary>Gets or sets the default cache item policy to use when no policy is specified.</summary>
            <value>The default cache item policy to use when no policy is specified.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryCacheManager.CacheItemPolicyFactory">
            <summary>Gets or sets the cache item policy factory.</summary>
            <value>The cache item policy factory.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryCacheManager.CachePrefix">
            <summary>Gets or sets the cache prefix to use to create the cache key.</summary>
            <value>The cache prefix to use to create the cache key.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryCacheManager.CacheKeyFactory">
            <summary>Gets or sets the cache key factory.</summary>
            <value>The cache key factory.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryCacheManager.IncludeConnectionInCacheKey">
            <summary>
                Gets or sets a value indicating whether the connection in cache key should be included.
            </summary>
            <value>true if include connection in cache key, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryCacheManager.CacheTags">
            <summary>Gets the dictionary cache tags used to store tags and corresponding cached keys.</summary>
            <value>The cache tags used to store tags and corresponding cached keys.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryCacheManager.UseFirstTagAsCacheKey">
            <summary>
                Gets or sets a value indicating whether this object use first tag as cache key.
            </summary>
            <value>true if use first tag as cache key, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryCacheManager.UseTagsAsCacheKey">
            <summary>
                Gets or sets a value indicating whether this object use tag as cache key.
            </summary>
            <value>true if use tag as cache key, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryCacheManager.IsCommandInfoOptionalForCacheKey">
            <summary>
            Gets or sets a value indicating whether this object is command information optional for cache
            key.
            </summary>
            <value>
            True if this object is command information optional for cache key, false if not.
            </value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheManager.AddCacheTag(System.String,System.String[])">
            <summary>Adds cache tags corresponding to a cached key in the CacheTags dictionary.</summary>
            <param name="cacheKey">The cache key.</param>
            <param name="tags">A variable-length parameters list containing tags corresponding to the <paramref name="cacheKey" />.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Z.EntityFramework.Plus.QueryCacheManager.ExpireAll" -->
        <member name="M:Z.EntityFramework.Plus.QueryCacheManager.ExpireTag(System.String[])">
            <summary>Expire all cached keys linked to specified tags.</summary>
            <param name="tags">
                A variable-length parameters list containing tag to expire linked cache
                key.
            </param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheManager.GetCacheKey(System.Linq.IQueryable,System.String[])">
            <summary>Gets cached keys used to cache or retrieve a query from the QueryCacheManager.</summary>
            <param name="query">The query to cache or retrieve from the QueryCacheManager.</param>
            <param name="tags">A variable-length parameters list containing tags to create the cache key.</param>
            <returns>The cache key used to cache or retrieve a query from the QueryCacheManager.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryCacheManager.GetCacheKey``1(Z.EntityFramework.Plus.QueryDeferred{``0},System.String[])">
            <summary>Gets cached keys used to cache or retrieve a query from the QueryCacheManager.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to cache or retrieve from the QueryCacheManager.</param>
            <param name="tags">A variable-length parameters list containing tags to create the cache key.</param>
            <returns>The cache key used to cache or retrieve a query from the QueryCacheManager.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryDeferred`1">
            <summary>A class to store immediate LINQ IQueryable query and expression deferred.</summary>
            <typeparam name="TResult">Type of the result of the query deferred.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDeferred`1.#ctor(System.Data.Entity.Core.Objects.ObjectQuery,System.Linq.Expressions.Expression)">
            <summary>Constructor.</summary>
            <param name="query">The deferred query.</param>
            <param name="expression">The deferred expression.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDeferred`1.Expression">
            <summary>Gets or sets the deferred expression.</summary>
            <value>The deferred expression.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDeferred`1.Query">
            <summary>Gets or sets the deferred query.</summary>
            <value>The deferred query.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDeferred`1.Execute">
            <summary>Execute the deferred expression and return the result.</summary>
            <returns>The result of the deferred expression executed.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDeferred`1.ExecuteAsync">
            <summary>Execute asynchrounously the deferred expression and return the result.</summary>
            <returns>The result of the deferred expression executed asynchrounously.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDeferred`1.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>Execute asynchrounously the deferred expression and return the result.</summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The result of the deferred expression executed asynchrounously.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.BaseQueryFilterInterceptor">
            <summary>A base class for query filter.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.UniqueKey">
            <summary>The unique key.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.IsFilterEnabledList">
            <summary>List of is filter enabled.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.OwnerContext">
            <summary>Gets or sets the context that owns this item.</summary>
            <value>The owner context.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.IsDefaultEnabled">
            <summary>Gets or sets a value indicating whether the filter is enabled by default.</summary>
            <value>true if the filter is enabled by default, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.ElementType">
            <summary>Gets or sets the type of the element.</summary>
            <value>The type of the element.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.GetDbExpression(System.Data.Entity.DbContext,System.Type)">
            <summary>Gets database expression.</summary>
            <param name="context">The context.</param>
            <param name="type">The type.</param>
            <returns>The database expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.Disable">
            <summary>Disables this filter.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.Disable``1">
            <summary>Disables this filter on the speficied type.</summary>
            <typeparam name="TType">Type of the element to disable the filter on.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.Disable(System.Type[])">
            <summary>Disable this filter on the specified types.</summary>
            <param name="types">A variable-length parameters list containing types to disable the filter on.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.Enable">
            <summary>Enables this filter.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.Enable``1">
            <summary>Enables this filter on the speficied type.</summary>
            <typeparam name="TType">Type of the element to enable the filter on.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.Enable(System.Type[])">
            <summary>Enables this filter on the specified types.</summary>
            <param name="types">A variable-length parameters list containing types to enable the filter on.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryFilterInterceptor.IsTypeEnabled(System.Type)">
            <summary>Queries if a type is enabled.</summary>
            <param name="type">The type.</param>
            <returns>true if a type is enabled, false if not.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorFilterExtensions.Filter(System.Data.Entity.DbContext,System.Object)">
            <summary>Gets the filter associated with the specified key from the context.</summary>
            <param name="context">The context filtered.</param>
            <param name="key">The filter key associated to the filter.</param>
            <returns>The filter associated with the specified key from the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorFilterExtensions.Filter``1(System.Data.Entity.DbContext,System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Boolean)">
            <summary>
                Creates and return a filter added for the context.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="context">The context to filter.</param>
            <param name="queryFilter">The query filter to apply to the the context.</param>
            <param name="isEnabled">true if the filter is enabled.</param>
            <returns>The filter created and added to the the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorFilterExtensions.Filter``1(System.Data.Entity.DbContext,System.Object,System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Boolean)">
            <summary>
                Creates and return a filter associated with the specified key added for the context.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="context">The context filtered.</param>
            <param name="key">The filter key associated to the filter.</param>
            <param name="queryFilter">The query filter to apply to the the context.</param>
            <param name="isEnabled">true if the filter is enabled.</param>
            <returns>The filter created and added to the the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorFilterExtensions.AsNoFilter``1(System.Data.Entity.IDbSet{``0})">
            <summary>Return the orginal query before the context was filtered.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The filtered query from which the original query should be retrieved.</param>
            <returns>The orginal query before the context was filtered.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorFilterExtensions.Filter``1(System.Data.Entity.IDbSet{``0},System.Object[])">
            <summary>
                Filter the query using context filters associated with specified keys.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to filter using context filters associated with specified keys.</param>
            <param name="keys">
                A variable-length parameters list containing keys associated to context filters to use to filter the
                query.
            </param>
            <returns>The query filtered using context filters associated with specified keys.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryFilterInterceptor`1">
            <summary>A class for query filter.</summary>
            <typeparam name="T">The type of the filter element.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterInterceptor`1.#ctor(System.Func{System.Linq.IQueryable{`0},System.Linq.IQueryable{`0}})">
            <summary>Constructor.</summary>
            <param name="filter">The filter.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterInterceptor`1.Filter">
            <summary>Gets or sets the filter.</summary>
            <value>The filter.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterInterceptor`1.GetDbExpression(System.Data.Entity.DbContext,System.Type)">
            <summary>Gets database expression.</summary>
            <param name="context">The context.</param>
            <param name="type">The type.</param>
            <returns>The database expression.</returns>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterInterceptorApply.ApplyFilterList">
            <summary>List of apply filters.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterInterceptorApply.GlobalFilters">
            <summary>The global filters.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterInterceptorApply.InstanceFilters">
            <summary>The instance filters.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterInterceptorApply.IsEnabled(Z.EntityFramework.Plus.BaseQueryFilterInterceptor)">
            <summary>Query if 'filter' is enabled.</summary>
            <param name="filter">Specifies the filter.</param>
            <returns>true if enabled, false if not.</returns>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterContextInterceptor.ClearCacheRequired">
            <summary>true if clear cache required. Always true the fist time we create the context.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterContextInterceptor.FilterSetByType">
            <summary>Gets or sets filter set by type.</summary>
            <value>The filter set by type.</value>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterContextInterceptor.FilterByEntitySetBase">
            <summary>The filter by entity set base.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterContextInterceptor.FilterByKey">
            <summary>Gets or sets the filters.</summary>
            <value>The filters.</value>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterContextInterceptor.FilterByType">
            <summary>Type of the filter by.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterContextInterceptor.GlobalFilterByKey">
            <summary>Gets or sets the filters.</summary>
            <value>The filters.</value>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterContextInterceptor.GlobalFilterByType">
            <summary>Type of the filter by.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterContextInterceptor.TypeByDbSet">
            <summary>Set the type by database belongs to.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterContextInterceptor.TypeByEntitySetBase">
            <summary>The type by entity set base.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterContextInterceptor.FilterSets">
            <summary>Gets or sets filter sets.</summary>
            <value>The filter sets.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterContextInterceptor.Context">
            <summary>Gets or sets the context associated with the filter context.</summary>
            <value>The context associated with the filter context.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterContextInterceptor.GetApplicableFilter(System.String)">
            <summary>Gets applicable filter.</summary>
            <param name="dbSetName">Name of the database set.</param>
            <returns>The applicable filter.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterContextInterceptor.GetGlobalApplicableFilter(System.String)">
            <summary>Gets global applicable filter.</summary>
            <param name="dbSetName">Name of the database set.</param>
            <returns>The global applicable filter.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterContextInterceptor.AddFilter``1(System.Object,System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}})">
            <summary>Adds a query filter to the filter context associated with the specified key.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="key">The filter key.</param>
            <param name="filter">The filter.</param>
            <returns>The query filter added to the filter context associated with the specified ke .</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterContextInterceptor.ClearCache">
            <summary>Clears the cache.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterContextInterceptor.GetFilter(System.Object)">
            <summary>Gets the filter associated to the specified key.</summary>
            <param name="key">The filter key.</param>
            <returns>The filter associated to the specified key.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterContextInterceptor.Initialize(System.Data.Entity.DbContext)">
            <summary>Initializes this object.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryFilterInterceptorDbCommandTree">
            <summary>A query interceptor filter database command tree.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterInterceptorDbCommandTree.TreeCreated(System.Data.Entity.Infrastructure.Interception.DbCommandTreeInterceptionContext)">
            <summary>
                This method is called after a new
                <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree" /> has been created.
                The tree that is used after interception can be changed by setting
                <see cref="P:System.Data.Entity.Infrastructure.Interception.DbCommandTreeInterceptionContext.Result" />
                while intercepting.
            </summary>
            <param name="interceptionContext">Contextual information associated with the call.</param>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryFilterInterceptorDbFilterExpression">
            <summary>A query interceptor filter database filter expression.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterInterceptorDbFilterExpression.FilterID">
            <summary>Identifier for the filter.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterInterceptorDbFilterExpression.HookID">
            <summary>Identifier for the hook.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterInterceptorDbFilterExpression.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)">
            <summary>
                Implements the visitor pattern for a predicate applied to filter an input set.
            </summary>
            <param name="expression">The filter expression.</param>
            <returns>The implemented visitor.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryInterceptorFilter.QueryFilterInterceptorDbProjectExpression">
            <summary>A database project to input expression visitor.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryInterceptorFilter.QueryFilterInterceptorDbProjectExpression.DbScanExpression">
            <summary>The database scan expression.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryInterceptorFilter.QueryFilterInterceptorDbProjectExpression.ParameterCollection">
            <summary>Collection of parameters.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorFilter.QueryFilterInterceptorDbProjectExpression.Visit(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)">
            <summary>
                Implements the visitor pattern for the projection of a given input set over the specified
                expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The implemented visitor.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorFilter.QueryFilterInterceptorDbProjectExpression.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
            <summary>
                Implements the visitor pattern for a scan over an entity set or relationship set, as
                indicated by the Target property.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The implemented visitor.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorFilter.QueryFilterInterceptorDbProjectExpression.Visit(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)">
            <summary>
                Implements the visitor pattern for a reference to a parameter declared on the command tree
                that contains this expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The implemented visitor.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryFilterInterceptorDbScanExpression">
            <summary>A database scan expression visitor.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterInterceptorDbScanExpression.Context">
            <summary>The context.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterInterceptorDbScanExpression.FilteredExpression">
            <summary>The filtered expression.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterInterceptorDbScanExpression.FilterQuery">
            <summary>The filter query.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterInterceptorDbScanExpression.InstanceFilterContext">
            <summary>Context for the instance filter.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterInterceptorDbScanExpression.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
            <summary>
                Implements the visitor pattern for a scan over an entity set or relationship set, as
                indicated by the Target property.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The implemented visitor.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterInterceptorDbScanExpression.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
            <summary>Implements the visitor pattern for retrieving an instance property.</summary>
            <param name="expression">The expression.</param>
            <returns>The implemented visitor.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterInterceptorDbScanExpression.ApplyFilter(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.String)">
            <summary>Applies the filter.</summary>
            <param name="baseExpression">The base expression.</param>
            <param name="fullName">Name of the full.</param>
            <returns>A DbExpression.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryFilterManager">
            <summary>A class to manage query interceptor filter options.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterManager.PrefixFilter">
            <summary>A filter specifying the prefix.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterManager.PrefixHook">
            <summary>The prefix hook.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterManager.DisableAllFilter">
            <summary>A filter specifying the disable all.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFilterManager.EnableFilterById">
            <summary>Identifier for the enable filter by.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterManager.#cctor">
            <summary>Static constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterManager.AllowPropertyFilter">
            <summary>Gets or sets a value indicating whether we allow property to be filtering.</summary>
            <value>True if allow property filtering, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterManager.DbExpressionByHook">
            <summary>Gets the database expression by hook.</summary>
            <value>The database expression by hook.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterManager.DbExpressionParameterByHook">
            <summary>Gets the database expression parameter by hook.</summary>
            <value>The database expression parameter by hook.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterManager.GlobalFiltersByKey">
            <summary>Gets the global filters.</summary>
            <value>The global filters.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterManager.GlobalFilterByType">
            <summary>Gets or sets the type of the global filter by.</summary>
            <value>The type of the global filter by.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterManager.CacheWeakFilterContext">
            <summary>Gets or sets the weak table containing filter context for a specified context.</summary>
            <value>The weak table containing filter context for a specified context.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterManager.Filter(System.Object)">
            <summary>Gets the filter associated with the specified key from the context.</summary>
            <param name="key">The filter key associated to the filter.</param>
            <returns>The filter associated with the specified key from the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterManager.Filter``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Boolean)">
            <summary>
                Creates and return a filter added for the context.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="queryFilter">The query filter to apply to the the context.</param>
            <param name="isEnabled">true if the filter is enabled.</param>
            <returns>The filter created and added to the the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterManager.Filter``1(System.Object,System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Boolean)">
            <summary>
                Creates and return a filter associated with the specified key added for the context.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="key">The filter key associated to the filter.</param>
            <param name="queryFilter">The query filter to apply to the the context.</param>
            <param name="isEnabled">true if the filter is enabled.</param>
            <returns>The filter created and added to the the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterManager.AddOrGetFilterContext(System.Data.Entity.DbContext)">
            <summary>Adds or get the filter context associated with the context.</summary>
            <param name="context">The context associated with the filter context.</param>
            <returns>The filter context associated with the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterManager.HookFilter``1(System.Linq.IQueryable{``0},System.String)">
            <summary>Hook filter.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query.</param>
            <param name="value">The value.</param>
            <returns>An IQueryable&lt;T&gt;</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterManager.InitilizeGlobalFilter(System.Data.Entity.DbContext)">
            <summary>Initilize global filter in the context.</summary>
            <param name="context">The context to initialize global filter on.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterManager.ClearQueryCache(System.Data.Entity.DbContext)">
            <summary>Clears the query cache described by context.</summary>
            <param name="context">The context to initialize global filter on.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterManager.ForceAlwaysEmptyQueryCacheManager(System.Data.Entity.DbContext)">
            <summary>Ensures that always empty dictionary.</summary>
            <param name="context">The context to initialize global filter on.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterManager.ClearAllCache">
            <summary>Clears all cache.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterManager.ClearGlobalFilter">
            <summary>Clears the global filter.</summary>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryFilterSet">
            <summary>A class for query filter set.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterSet.#ctor(System.Data.Entity.DbContext,System.Reflection.PropertyInfo)">
            <summary>Constructor.</summary>
            <param name="dbSetProperty">The database set property.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterSet.CreateFilterQueryableCompiled">
            <summary>Gets or sets the compiled function to create a new filter queryable.</summary>
            <value>The compiled function to create a new filter queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterSet.DbSetProperty">
            <summary>Gets or sets the database set property.</summary>
            <value>The database set property.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterSet.ElementType">
            <summary>Gets or sets the type of the element.</summary>
            <value>The type of the element.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterSet.GetDbSetCompiled">
            <summary>Gets or sets the compiled function to retrieve the DbSet from the DbContext.</summary>
            <value>The compiled function to retrieve the DbSet from the DbContext.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFilterSet.UpdateInternalQueryCompiled">
            <summary>Gets or sets the compiled action to update the internal query.</summary>
            <value>The compiled action to update the internal query.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterSet.CompileCreateFilterQueryable">
            <summary>Compiles the function to create a new filter queryable.</summary>
            <returns>The compiled the function to create a new filter queryable</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterSet.CompileGetDbSet(System.Reflection.PropertyInfo)">
            <summary>Compiles the function to retrieve the DbSet from the DbContext.</summary>
            <param name="dbSetProperty">The database set property.</param>
            <returns>The compiled the function to retrieve the DbSet from the DbContext.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFilterSet.CompileUpdateInternalQuery(System.Reflection.PropertyInfo)">
            <summary>Compiles the action to update the internal query.</summary>
            <param name="dbSetProperty">The database set property.</param>
            <returns>The compiled the action to update the internal query.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.BaseQueryFuture">
            <summary>Interace for QueryFuture class.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryFuture.HasValue">
            <summary>Gets the value indicating whether the query future has a value.</summary>
            <value>true if this query future has a value, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryFuture.OwnerBatch">
            <summary>Gets or sets the batch that owns the query future.</summary>
            <value>The batch that owns the query future.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryFuture.Query">
            <summary>Gets or sets the query deferred.</summary>
            <value>The query deferred.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryFuture.SetResult(System.Data.Common.DbDataReader)">
            <summary>Sets the result of the query deferred.</summary>
            <param name="reader">The reader returned from the query execution.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryFuture.GetQueryEnumerator``1(System.Data.Common.DbDataReader)">
            <summary>Sets the result of the query deferred.</summary>
            <param name="reader">The reader returned from the query execution.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureExtensions.Future``1(System.Linq.IQueryable{``0})">
            <summary>
                Defer the execution of the <paramref name="query" /> and batch the query command with other
                future queries. The batch is executed when a future query requires a database round trip.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">
                The query to defer the execution of and to add in the batch of future
                queries.
            </param>
            <returns>
                The QueryFutureEnumerable&lt;TEntity&gt; added to the batch of futures queries.
            </returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureExtensions.FutureValue``1(System.Linq.IQueryable{``0})">
            <summary>
                Defer the execution of the <paramref name="query" /> and batch the query command with other
                future queries. The batch is executed when a future query requires a database round trip.
            </summary>
            <typeparam name="TResult">The type of the query result.</typeparam>
            <param name="query">
                The query to defer the execution of and to add in the batch of future
                queries.
            </param>
            <returns>
                The QueryFutureValue&lt;TResult,TResult&gt; added to the batch of futures queries.
            </returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureExtensions.FutureValue``1(Z.EntityFramework.Plus.QueryDeferred{``0})">
            <summary>
                Defer the execution of the <paramref name="query" /> and batch the query command with other
                future queries. The batch is executed when a future query requires a database round trip.
            </summary>
            <typeparam name="TResult">The type of the query result.</typeparam>
            <param name="query">The query to defer the execution and to add in the batch of future queries.</param>
            <returns>
                The QueryFutureValue&lt;TResult,TResult&gt; added to the batch of futures queries.
            </returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryFutureBatch">
            <summary>Class to own future queries in a batch</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureBatch.#ctor(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>Constructor.</summary>
            <param name="context">The context related to the query future batched.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFutureBatch.Context">
            <summary>Gets or sets the context related to the query future batched.</summary>
            <value>The context related to the query future batched.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFutureBatch.Queries">
            <summary>Gets or sets deferred query lists waiting to be executed.</summary>
            <value>The deferred queries list waiting to be executed.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureBatch.ExecuteQueries">
            <summary>Executes deferred query lists.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureBatch.ExecuteQueriesAsync">
            <summary>Executes deferred query lists.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureBatch.CreateCommandCombined">
            <summary>Creates a new command combining deferred queries.</summary>
            <returns>The combined command created from deferred queries.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryFutureEnumerable`1">
            <summary>Class for query future value.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFutureEnumerable`1._result">
            <summary>The result of the query future.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureEnumerable`1.#ctor(Z.EntityFramework.Plus.QueryFutureBatch,System.Data.Entity.Core.Objects.ObjectQuery{`0})">
            <summary>Constructor.</summary>
            <param name="ownerBatch">The batch that owns this item.</param>
            <param name="query">
                The query to defer the execution and to add in the batch of future
                queries.
            </param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureEnumerable`1.GetEnumerator">
            <summary>Gets the enumerator of the query future.</summary>
            <returns>The enumerator of the query future.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gets the enumerator of the query future.</summary>
            <returns>The enumerator of the query future.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureEnumerable`1.SetResult(System.Data.Common.DbDataReader)">
            <summary>Sets the result of the query deferred.</summary>
            <param name="reader">The reader returned from the query execution.</param>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryFutureManager">
            <summary>Manage EF+ Query Future Configuration.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureManager.#cctor">
            <summary>Static constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFutureManager.AllowQueryBatch">
            <summary>Gets or sets a value indicating whether we allow query batch.</summary>
            <value>True if allow query batch, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFutureManager.CacheWeakFutureBatch">
            <summary>Gets or sets the weak table used to cache future batch associated to a context.</summary>
            <value>The weak table used to cache future batch associated to a context.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureManager.AddOrGetBatch(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>Adds or gets the future batch associated to the context.</summary>
            <param name="context">The context used to cache the future batch.</param>
            <returns>The future batch associated to the context.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryFutureValue`1">
            <summary>Class for query future value.</summary>
            <typeparam name="TResult">Type of the result.</typeparam>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryFutureValue`1._result">
            <summary>The result of the query future.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureValue`1.#ctor(Z.EntityFramework.Plus.QueryFutureBatch,System.Data.Entity.Core.Objects.ObjectQuery)">
            <summary>Constructor.</summary>
            <param name="ownerBatch">The batch that owns this item.</param>
            <param name="query">
                The query to defer the execution and to add in the batch of future
                queries.
            </param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryFutureValue`1.Value">
            <summary>Gets the value of the future query.</summary>
            <value>The value of the future query.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureValue`1.ValueAsync">
            <summary>Gets the value of the future query.</summary>
            <value>The value of the future query.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureValue`1.SetResult(System.Data.Common.DbDataReader)">
            <summary>Sets the result of the query deferred.</summary>
            <param name="reader">The reader returned from the query execution.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryFutureValue`1.op_Implicit(Z.EntityFramework.Plus.QueryFutureValue{`0})~`0">
            <summary>
            Performs an implicit conversion from QueryFutureValue to TResult.
            </summary>
            <param name="futureValue">The future value.</param>
            <returns>The result of forcing this lazy value.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryInterceptorProvider">
            <summary>A class for query include filter provider.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider.#ctor(System.Data.Entity.Infrastructure.IDbAsyncQueryProvider)">
            <summary>Constructor.</summary>
            <param name="originalProvider">The original provider.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorProvider.CurrentQueryable">
            <summary>Gets or sets the current queryable.</summary>
            <value>The current queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorProvider.OriginalProvider">
            <summary>Gets or sets the original provider.</summary>
            <value>The original provider.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider.CreateQuery(System.Linq.Expressions.Expression)">
            <summary>Creates a query from the expression.</summary>
            <exception cref="!:Exception">Thrown when an exception error condition occurs.</exception>
            <param name="expression">The expression to create the query from.</param>
            <returns>The new query created from the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>Creates a query from the expression.</summary>
            <typeparam name="TElement">The type of elements of the query.</typeparam>
            <param name="expression">The expression to create the query from.</param>
            <returns>The new query created from the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider.Execute(System.Linq.Expressions.Expression)">
            <summary>Executes the given expression.</summary>
            <param name="expression">The expression to execute.</param>
            <returns>The object returned by the execution of the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider.Execute``1(System.Linq.Expressions.Expression)">
            <summary>Executes the given expression.</summary>
            <typeparam name="TResult">Type of the result.</typeparam>
            <param name="expression">The expression to execute.</param>
            <returns>The object returned by the execution of the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider.ExecuteAsync(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>Executes the asynchronous operation.</summary>
            <param name="expression">The expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task&lt;object&gt;</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>Executes the asynchronous operation.</summary>
            <typeparam name="TResult">Type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task&lt;TResult&gt;</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryInterceptorProvider`1">
            <summary>A class for query include filter provider.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider`1.#ctor(System.Data.Entity.Infrastructure.IDbAsyncQueryProvider)">
            <summary>Constructor.</summary>
            <param name="originalProvider">The original provider.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorProvider`1.CurrentQueryable">
            <summary>Gets or sets the current queryable.</summary>
            <value>The current queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorProvider`1.OriginalProvider">
            <summary>Gets or sets the original provider.</summary>
            <value>The original provider.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider`1.CreateQuery(System.Linq.Expressions.Expression)">
            <summary>Creates a query from the expression.</summary>
            <param name="expression">The expression to create the query from.</param>
            <returns>The new query created from the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider`1.CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>Creates a query from the expression.</summary>
            <typeparam name="TElement">The type of elements of the query.</typeparam>
            <param name="expression">The expression to create the query from.</param>
            <returns>The new query created from the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider`1.Execute(System.Linq.Expressions.Expression)">
            <summary>Executes the given expression.</summary>
            <param name="expression">The expression to execute.</param>
            <returns>The object returned by the execution of the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider`1.Execute``1(System.Linq.Expressions.Expression)">
            <summary>Executes the given expression.</summary>
            <typeparam name="TResult">Type of the result.</typeparam>
            <param name="expression">The expression to execute.</param>
            <returns>The object returned by the execution of the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider`1.ExecuteAsync(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>Executes the asynchronous operation.</summary>
            <param name="expression">The expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task&lt;object&gt;</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorProvider`1.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>Executes the asynchronous operation.</summary>
            <typeparam name="TResult">Type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task&lt;TResult&gt;</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryInterceptorQueryable">
            <summary>A class for query include filter parent queryable.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable.#ctor(System.Linq.IQueryable,System.Linq.Expressions.ExpressionVisitor[])">
            <summary>Constructor.</summary>
            <param name="query">The query.</param>
            <param name="visitors">The visitors.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorQueryable.Visitors">
            <summary>Gets or sets the visitors.</summary>
            <value>The visitors.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorQueryable.InternalProvider">
            <summary>Gets or sets the internal provider.</summary>
            <value>The internal provider.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorQueryable.OriginalQueryable">
            <summary>Gets or sets the original queryable.</summary>
            <value>The original queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorQueryable.ElementType">
            <summary>Gets the type of the element.</summary>
            <value>The type of the element.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorQueryable.Expression">
            <summary>Gets the expression.</summary>
            <value>The expression.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorQueryable.Provider">
            <summary>Gets the provider.</summary>
            <value>The provider.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gets the enumerator.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable.Visit">
            <summary>Gets the visit.</summary>
            <returns>An IQueryable.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable.Visit(System.Linq.Expressions.Expression)">
            <summary>Gets the visit.</summary>
            <param name="expression">The expression.</param>
            <returns>An IQueryable.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable.Include(System.String)">
            <summary>Includes the given file.</summary>
            <param name="path">Full pathname of the file.</param>
            <returns>An IQueryable.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable.GetAsyncEnumerator">
            <summary>Gets asynchronous enumerator.</summary>
            <returns>The asynchronous enumerator.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryInterceptorQueryable`1">
            <summary>A class for query include filter parent queryable.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.#ctor(System.Linq.IQueryable{`0},System.Linq.Expressions.ExpressionVisitor[])">
            <summary>Constructor.</summary>
            <param name="query">The query.</param>
            <param name="visitors">The visitors.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.Visitors">
            <summary>Gets or sets the visitors.</summary>
            <value>The visitors.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.InternalProvider">
            <summary>Gets or sets the internal provider.</summary>
            <value>The internal provider.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.OriginalQueryable">
            <summary>Gets or sets the original queryable.</summary>
            <value>The original queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.ElementType">
            <summary>Gets the type of the element.</summary>
            <value>The type of the element.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.Expression">
            <summary>Gets the expression.</summary>
            <value>The expression.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.Provider">
            <summary>Gets the provider.</summary>
            <value>The provider.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.GetEnumerator">
            <summary>Gets the enumerator.</summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gets the enumerator.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.Visit">
            <summary>Gets the visit.</summary>
            <returns>An IQueryable&lt;T&gt;</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.Visit(System.Linq.Expressions.Expression)">
            <summary>Gets the visit.</summary>
            <param name="expression">The expression.</param>
            <returns>An IQueryable&lt;T&gt;</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.Include(System.String)">
            <summary>Includes the given file.</summary>
            <param name="path">Full pathname of the file.</param>
            <returns>An IQueryable&lt;T&gt;</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.System#Data#Entity#Infrastructure#IDbAsyncEnumerable{T}#GetAsyncEnumerator">
            <summary>Gets asynchronous enumerator.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <returns>The asynchronous enumerator.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryInterceptorQueryable`1.GetAsyncEnumerator">
            <summary>Gets asynchronous enumerator.</summary>
            <returns>The asynchronous enumerator.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.BaseQueryIncludeOptimizedChild">
            <summary>Base class for query include optimized child.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryIncludeOptimizedChild.IsLazy">
            <summary>Gets or sets a value indicating whether this object is lazy.</summary>
            <value>true if this object is lazy, false if not.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryIncludeOptimizedChild.CreateIncludeQuery(System.Linq.IQueryable)">
            <summary>Creates the query to use to load related entities.</summary>
            <param name="rootQuery">The root query.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryIncludeOptimizedChild.GetFilter">
            <summary>Gets the filter.</summary>
            <returns>The filter.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryIncludeOptimizedChild.GetFilteredQuery(System.Linq.IQueryable)">
            <summary>Gets filtered query.</summary>
            <param name="query">The query.</param>
            <returns>The filtered query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedExtensions.IncludeOptimized``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
            <summary>
                An IQueryable&lt;T&gt; extension method that include and filter related entities with a optimized SQL.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <typeparam name="TChild">The type of elements of the child query.</typeparam>
            <param name="query">The query to filter included related entities.</param>
            <param name="queryIncludeFilter">The query filter to apply on included related entities.</param>
            <returns>An IQueryable&lt;T&gt; that include and filter related entities.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedExtensions.IncludeOptimized``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
                An IQueryable&lt;T&gt; extension method that include and filter related entities with a
                optimized SQL.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <typeparam name="TChild">Type of the child.</typeparam>
            <param name="query">The query to filter included related entities.</param>
            <param name="queryIncludeFilter">The query filter to apply on included related entities.</param>
            <returns>An IQueryable&lt;T&gt; that include and filter related entities.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedExtensions.IncludeOptimizedByPath``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
                An IQueryable&lt;T&gt; extension method that include and filter related entities with a optimized SQL.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to filter included related entities.</param>
            <param name="navigationProperties">The navigation properties to include.</param>
            <returns>An IQueryable&lt;T&gt; that include and filter related entities.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryIncludeOptimizedByPath">
            <summary>A query include optimized by path.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedByPath.IncludeOptimizedByPath``1(System.Linq.IQueryable{``0},System.String)">
            <summary>Include optimized by path.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query.</param>
            <param name="navigationPath">Full pathname of the navigation file.</param>
            <returns>An IQueryable&lt;T&gt;</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedByPath.CreateLambdaExpression(System.Type,System.String[],System.Int32)">
            <summary>Creates lambda expression.</summary>
            <param name="parameterType">Type of the parameter.</param>
            <param name="paths">The paths.</param>
            <param name="currentIndex">The current index.</param>
            <returns>The new lambda expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedByPath.AppendPath(System.Linq.Expressions.Expression,System.String[],System.Int32)">
            <summary>Appends a path.</summary>
            <param name="expression">The expression.</param>
            <param name="paths">The paths.</param>
            <param name="currentIndex">The current index.</param>
            <returns>An Expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedByPath.AppendPropertyPath(System.Linq.Expressions.Expression,System.String[],System.Int32)">
            <summary>Appends a property path.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="expression">The expression.</param>
            <param name="paths">The paths.</param>
            <param name="currentIndex">The current index.</param>
            <returns>An Expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedByPath.AppendSelectPath(System.Linq.Expressions.Expression,System.String[],System.Int32)">
            <summary>Appends a select path.</summary>
            <param name="expression">The expression.</param>
            <param name="paths">The paths.</param>
            <param name="currentIndex">The current index.</param>
            <returns>An Expression.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryIncludeOptimizedChild`2">
            <summary>A class for query include optimized child.</summary>
            <typeparam name="T">The type of elements of the parent query.</typeparam>
            <typeparam name="TChild">The type of elements of the child.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedChild`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>Constructor.</summary>
            <param name="filter">The query filter to apply on included related entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedChild`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Boolean)">
            <summary>Constructor.</summary>
            <param name="filter">The query filter to apply on included related entities.</param>
            <param name="isLazy">true if this object is lazy, false if not.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeOptimizedChild`2.Filter">
            <summary>Gets or sets the query filter to include related entities.</summary>
            <value>The query filter to include related entities.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedChild`2.CreateIncludeQuery(System.Linq.IQueryable)">
            <summary>Creates the query to use to load related entities.</summary>
            <param name="rootQuery">The root query.</param>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryIncludeOptimizedExpressionReduceVisitor">
            <summary>A query include optimized expression reduce visitor.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedExpressionReduceVisitor.AddMemberExpression(System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.MemberExpression,System.Linq.Expressions.Expression@)">
            <summary>Adds a member expression.</summary>
            <param name="node">The node.</param>
            <param name="memberExpression">The member expression.</param>
            <param name="outExpression">[out] The out expression.</param>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedExpressionReduceVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>
                Visits the children of the <see cref="T:System.Linq.Expressions.Expression`1" />.
            </summary>
            <typeparam name="T">The type of the delegate.</typeparam>
            <param name="node">The expression to visit.</param>
            <returns>
                The modified expression, if it or any subexpression was modified; otherwise, returns the
                original expression.
            </returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryIncludeOptimizedLazyLoading">
            <summary>Collection of query include optimized nulls.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedLazyLoading.SetLazyLoaded(System.Object,System.Collections.Generic.List{Z.EntityFramework.Plus.BaseQueryIncludeOptimizedChild})">
            <summary>Null collection to empty.</summary>
            <param name="item">The item.</param>
            <param name="childs">The childs.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedLazyLoading.SetLazyLoaded(System.Object,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>Check null recursive.</summary>
            <param name="currentItem">The current item.</param>
            <param name="paths">The paths.</param>
            <param name="index">Zero-based index of the.</param>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryIncludeOptimizedNullCollection">
            <summary>Collection of query include optimized nulls.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedNullCollection.NullCollectionToEmpty(System.Object,System.Collections.Generic.List{Z.EntityFramework.Plus.BaseQueryIncludeOptimizedChild})">
            <summary>Null collection to empty.</summary>
            <param name="item">The item.</param>
            <param name="childs">The childs.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedNullCollection.CheckNullRecursive(System.Object,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>Check null recursive.</summary>
            <param name="currentItem">The current item.</param>
            <param name="paths">The paths.</param>
            <param name="index">Zero-based index of the.</param>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1">
            <summary>A class for query include optimized parent queryable.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.#ctor(System.Linq.IQueryable{`0})">
            <summary>Constructor.</summary>
            <param name="query">The query parent.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.#ctor(System.Linq.IQueryable{`0},System.Collections.Generic.List{Z.EntityFramework.Plus.BaseQueryIncludeOptimizedChild})">
            <summary>Constructor.</summary>
            <param name="query">The query.</param>
            <param name="childs">The childs.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.Childs">
            <summary>Gets or sets the query childs.</summary>
            <value>The query childs.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.InternalProvider">
            <summary>Gets or sets the internal provider.</summary>
            <value>The internal provider.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.OriginalQueryable">
            <summary>Gets or sets the original queryable.</summary>
            <value>The original queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.ElementType">
            <summary>Gets the type of the element.</summary>
            <value>The type of the element.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.Expression">
            <summary>Gets the expression.</summary>
            <value>The expression.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.Provider">
            <summary>Gets the provider.</summary>
            <value>The provider.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.GetEnumerator">
            <summary>Gets the enumerator.</summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gets the enumerator.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.CreateEnumerable">
            <summary>Enumerates create enumerable in this collection.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <returns>
                An enumerator that allows foreach to be used to process create enumerable in this collection.
            </returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.CreateQueryable(System.Linq.IQueryable{`0})">
            <summary>Creates the queryable.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <returns>The new queryable.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.Include(System.String)">
            <summary>Includes the related entities path in the query.</summary>
            <param name="path">The related entities path in the query to include.</param>
            <returns>The new queryable.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.GetQueryCacheUniqueKey(System.String[])">
            <summary>Gets query cache unique key.</summary>
            <returns>The query cache unique key.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.System#Data#Entity#Infrastructure#IDbAsyncEnumerable{T}#GetAsyncEnumerator">
            <summary>Gets the asynchrounously enumerator.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <returns>The asynchrounously enumerator.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedParentQueryable`1.GetAsyncEnumerator">
            <summary>Gets the asynchrounously enumerator.</summary>
            <returns>The asynchrounously enumerator.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryIncludeOptimizedProvider`1">
            <summary>A class for query include optimized provider.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedProvider`1.#ctor(System.Linq.IQueryProvider)">
            <summary>Constructor.</summary>
            <param name="originalProvider">The original provider.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeOptimizedProvider`1.CurrentQueryable">
            <summary>Gets or sets the current queryable.</summary>
            <value>The current queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeOptimizedProvider`1.OriginalProvider">
            <summary>Gets or sets the original provider.</summary>
            <value>The original provider.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedProvider`1.CreateQuery(System.Linq.Expressions.Expression)">
            <summary>Creates a query from the expression.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="expression">The expression to create the query from.</param>
            <returns>The new query created from the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedProvider`1.CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>Creates a query from the expression.</summary>
            <typeparam name="TElement">The type of elements of the query.</typeparam>
            <param name="expression">The expression to create the query from.</param>
            <returns>The new query created from the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedProvider`1.Execute(System.Linq.Expressions.Expression)">
            <summary>Executes the given expression.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="expression">The expression to execute.</param>
            <returns>The object returned by the execution of the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedProvider`1.Execute``1(System.Linq.Expressions.Expression)">
            <summary>Executes the given expression.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="TResult">Type of the result.</typeparam>
            <param name="expression">The expression to execute.</param>
            <returns>The object returned by the execution of the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedProvider`1.ExecuteAsync(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>Executes the given expression asynchronously.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="expression">The expression to execute.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The object returned by the execution of the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeOptimizedProvider`1.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>Executes the given expression asynchronously.</summary>
            <typeparam name="TResult">Type of the result.</typeparam>
            <param name="expression">The expression to execute.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The object returned by the execution of the expression.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.BaseQueryIncludeFilterChild">
            <summary>Base class for query include filter child.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryIncludeFilterChild.CreateIncludeQuery(System.Linq.IQueryable)">
            <summary>Creates the query to use to load related entities.</summary>
            <param name="rootQuery">The root query.</param>
            <returns>The query to use to load related entities.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryIncludeFilterChild.GetFilter">
            <summary>Gets the filter.</summary>
            <returns>The filter.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterExtensions.IncludeFilter``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
            <summary>
                An IQueryable&lt;T&gt; extension method that include and filter related entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <typeparam name="TChild">The type of elements of the child query.</typeparam>
            <param name="query">The query to filter included related entities.</param>
            <param name="queryIncludeFilter">The query filter to apply on included related entities.</param>
            <returns>An IQueryable&lt;T&gt; that include and filter related entities.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterExtensions.IncludeFilter``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
                An IQueryable&lt;T&gt; extension method that include and filter related entities.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <typeparam name="TChild">Type of the child.</typeparam>
            <param name="query">The query to filter included related entities.</param>
            <param name="queryIncludeFilter">The query filter to apply on included related entities.</param>
            <returns>An IQueryable&lt;T&gt; that include and filter related entities.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryIncludeFilterChild`2">
            <summary>A class for query include filter child.</summary>
            <typeparam name="T">The type of elements of the parent query.</typeparam>
            <typeparam name="TChild">The type of elements of the child.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterChild`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{`1}}})">
            <summary>Constructor.</summary>
            <param name="filter">The query filter to apply on included related entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterChild`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>Constructor.</summary>
            <param name="filter">The query filter to apply on included related entities.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeFilterChild`2.Filter">
            <summary>Gets or sets the query filter to include related entities.</summary>
            <value>The query filter to include related entities.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeFilterChild`2.FilterSingle">
            <summary>Gets or sets the query filter to include related entities.</summary>
            <value>The query filter to include related entities.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterChild`2.CreateIncludeQuery(System.Linq.IQueryable)">
            <summary>Creates the query to use to load related entities.</summary>
            <param name="rootQuery">The root query.</param>
            <returns>The query to use to load related entities.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryIncludeFilterLazyLoading">
            <summary>Collection of query include optimized nulls.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterLazyLoading.SetLazyLoaded(System.Object,System.Collections.Generic.List{Z.EntityFramework.Plus.BaseQueryIncludeFilterChild})">
            <summary>Null collection to empty.</summary>
            <param name="item">The item.</param>
            <param name="childs">The childs.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterLazyLoading.SetLazyLoaded(System.Object,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>Check null recursive.</summary>
            <param name="currentItem">The current item.</param>
            <param name="paths">The paths.</param>
            <param name="index">Zero-based index of the.</param>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryIncludeFilterNullCollection">
            <summary>Collection of query include optimized nulls.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterNullCollection.NullCollectionToEmpty(System.Object,System.Collections.Generic.List{Z.EntityFramework.Plus.BaseQueryIncludeFilterChild})">
            <summary>Null collection to empty.</summary>
            <param name="item">The item.</param>
            <param name="childs">The childs.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterNullCollection.CheckNullRecursive(System.Object,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>Check null recursive.</summary>
            <param name="currentItem">The current item.</param>
            <param name="paths">The paths.</param>
            <param name="index">Zero-based index of the.</param>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1">
            <summary>A class for query include filter parent queryable.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.#ctor(System.Linq.IQueryable{`0})">
            <summary>Constructor.</summary>
            <param name="query">The query parent.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.#ctor(System.Linq.IQueryable{`0},System.Collections.Generic.List{Z.EntityFramework.Plus.BaseQueryIncludeFilterChild})">
            <summary>Constructor.</summary>
            <param name="query">The query.</param>
            <param name="childs">The childs.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.Childs">
            <summary>Gets or sets the query childs.</summary>
            <value>The query childs.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.InternalProvider">
            <summary>Gets or sets the internal provider.</summary>
            <value>The internal provider.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.OriginalQueryable">
            <summary>Gets or sets the original queryable.</summary>
            <value>The original queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.ElementType">
            <summary>Gets the type of the element.</summary>
            <value>The type of the element.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.Expression">
            <summary>Gets the expression.</summary>
            <value>The expression.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.Provider">
            <summary>Gets the provider.</summary>
            <value>The provider.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.GetEnumerator">
            <summary>Gets the enumerator.</summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gets the enumerator.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.CreateEnumerable">
            <summary>Enumerates create enumerable in this collection.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <returns>
                An enumerator that allows foreach to be used to process create enumerable in this collection.
            </returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.CreateQueryable">
            <summary>Creates the queryable.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <returns>The new queryable.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.GetQueryCacheUniqueKey(System.String[])">
            <summary>Gets query cache unique key.</summary>
            <returns>The query cache unique key.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.CreateAnonymousFromQuery``2(System.Linq.IQueryable{``0},System.Linq.IQueryable{``1})">
            <summary>
                Create a new Queryable selecting parent and child query in an anonymous type.
            </summary>
            <typeparam name="TElement">The type of elements of the query.</typeparam>
            <param name="parent">The parent query.</param>
            <param name="child">The child query.</param>
            <returns>The new Queryable selecting parent and child query in an anonymous type.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.Include(System.String)">
            <summary>Includes the related entities path in the query.</summary>
            <param name="path">The related entities path in the query to include.</param>
            <returns>The new queryable.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.System#Data#Entity#Infrastructure#IDbAsyncEnumerable{T}#GetAsyncEnumerator">
            <summary>Gets the asynchrounously enumerator.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <returns>The asynchrounously enumerator.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.GetAsyncEnumerator">
            <summary>Gets the asynchrounously enumerator.</summary>
            <returns>The asynchrounously enumerator.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryIncludeFilterProvider`1">
            <summary>A class for query include filter provider.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterProvider`1.#ctor(System.Linq.IQueryProvider)">
            <summary>Constructor.</summary>
            <param name="originalProvider">The original provider.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeFilterProvider`1.CurrentQueryable">
            <summary>Gets or sets the current queryable.</summary>
            <value>The current queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryIncludeFilterProvider`1.OriginalProvider">
            <summary>Gets or sets the original provider.</summary>
            <value>The original provider.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterProvider`1.CreateQuery(System.Linq.Expressions.Expression)">
            <summary>Creates a query from the expression.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="expression">The expression to create the query from.</param>
            <returns>The new query created from the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterProvider`1.CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>Creates a query from the expression.</summary>
            <typeparam name="TElement">The type of elements of the query.</typeparam>
            <param name="expression">The expression to create the query from.</param>
            <returns>The new query created from the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterProvider`1.Execute(System.Linq.Expressions.Expression)">
            <summary>Executes the given expression.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="expression">The expression to execute.</param>
            <returns>The object returned by the execution of the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryIncludeFilterProvider`1.Execute``1(System.Linq.Expressions.Expression)">
            <summary>Executes the given expression.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="TResult">Type of the result.</typeparam>
            <param name="expression">The expression to execute.</param>
            <returns>The object returned by the execution of the expression.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.BaseQueryDbSetFilter">
            <summary>A base class for query filter.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryDbSetFilter.ElementType">
            <summary>Gets or sets the type of the filter element.</summary>
            <value>The type of the filter element.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryDbSetFilter.IsDefaultEnabled">
            <summary>Gets or sets a value indicating whether the filter is enabled by default.</summary>
            <value>true if the filter is enabled by default, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryDbSetFilter.OwnerFilterContext">
            <summary>Gets or sets the filter context that owns this filter.</summary>
            <value>The filter context that owns this filter.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryDbSetFilter.ApplyFilter``1(System.Object)">
            <summary>Apply the filter on the query and return the new filtered query.</summary>
            <param name="query">The query to filter.</param>
            <returns>The new query filered query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryDbSetFilter.Disable">
            <summary>Disables this filter.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryDbSetFilter.Disable``1">
            <summary>Disables this filter on the speficied type.</summary>
            <typeparam name="TType">Type of the element to disable the filter on.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryDbSetFilter.Disable(System.Type[])">
            <summary>Disable this filter on the specified types.</summary>
            <param name="types">A variable-length parameters list containing types to disable the filter on.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryDbSetFilter.Enable">
            <summary>Enables this filter.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryDbSetFilter.Enable``1">
            <summary>Enables this filter on the speficied type.</summary>
            <typeparam name="TType">Type of the element to enable the filter on.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryDbSetFilter.Enable(System.Type[])">
            <summary>Enables this filter on the specified types.</summary>
            <param name="types">A variable-length parameters list containing types to enable the filter on.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryDbSetFilter.GetFilter">
            <summary>Gets the filter.</summary>
            <returns>The filter.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryDbSetFilter.Clone(Z.EntityFramework.Plus.QueryDbSetFilterContext)">
            <summary>Makes a deep copy of this filter.</summary>
            <param name="filterContext">The filter context that owns the filter copy.</param>
            <returns>A copy of this filter.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.BaseQueryDbSetFilterQueryable">
            <summary>A base class for query filter queryable.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryDbSetFilterQueryable.Context">
            <summary>Gets or sets the context associated to the filter queryable.</summary>
            <value>The context associated to the filter queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryDbSetFilterQueryable.Filters">
            <summary>Gets or sets the filters used by the filter queryable.</summary>
            <value>The filters used by the filter queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryDbSetFilterQueryable.FilterSet">
            <summary>Gets or sets the filter set associated with the filter queryable.</summary>
            <value>The filter set associated with the filter queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.BaseQueryDbSetFilterQueryable.OriginalQuery">
            <summary>Gets or sets the original query.</summary>
            <value>The original query.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryDbSetFilterQueryable.DisableFilter(Z.EntityFramework.Plus.BaseQueryDbSetFilter)">
            <summary>Disables the filter on the associated query.</summary>
            <param name="filter">The filter to disable on the associated query.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryDbSetFilterQueryable.EnableFilter(Z.EntityFramework.Plus.BaseQueryDbSetFilter)">
            <summary>Enables the filter on the associated query.</summary>
            <param name="filter">The filter to enable on the associated query.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.BaseQueryDbSetFilterQueryable.UpdateInternalQuery">
            <summary>Updates the internal query.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterExtensions.DbSetFilter(System.Data.Entity.DbContext,System.Object)">
            <summary>Gets the filter associated with the specified key from the context.</summary>
            <param name="context">The context filtered.</param>
            <param name="key">The filter key associated to the filter.</param>
            <returns>The filter associated with the specified key from the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterExtensions.DbSetFilter``1(System.Data.Entity.DbContext,System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Boolean)">
            <summary>
                Creates and return a filter added for the context.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="context">The context to filter.</param>
            <param name="queryFilter">The query filter to apply to the the context.</param>
            <param name="isEnabled">true if the filter is enabled.</param>
            <returns>The filter created and added to the the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterExtensions.DbSetFilter``1(System.Data.Entity.DbContext,System.Object,System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Boolean)">
            <summary>
                Creates and return a filter associated with the specified key added for the context.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="context">The context filtered.</param>
            <param name="key">The filter key associated to the filter.</param>
            <param name="queryFilter">The query filter to apply to the the context.</param>
            <param name="isEnabled">true if the filter is enabled.</param>
            <returns>The filter created and added to the the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterExtensions.AsNoDbSetFilter``1(System.Data.Entity.IDbSet{``0})">
            <summary>Return the orginal query before the context was filtered.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The filtered query from which the original query should be retrieved.</param>
            <returns>The orginal query before the context was filtered.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterExtensions.DbSetFilter``1(System.Data.Entity.IDbSet{``0},System.Object[])">
            <summary>
                Filter the query using context filters associated with specified keys.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to filter using context filters associated with specified keys.</param>
            <param name="keys">
                A variable-length parameters list containing keys associated to context filters to use to filter the
                query.
            </param>
            <returns>The query filtered using context filters associated with specified keys.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryDbSetFilter`1">
            <summary>A class for query filter.</summary>
            <typeparam name="T">The type of the filter element.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilter`1.#ctor(Z.EntityFramework.Plus.QueryDbSetFilterContext,System.Func{System.Linq.IQueryable{`0},System.Linq.IQueryable{`0}})">
            <summary>Constructor.</summary>
            <param name="ownerFilterContext">The context that owns his filter.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilter`1.Filter">
            <summary>Gets or sets the filter.</summary>
            <value>The filter.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilter`1.ApplyFilter``1(System.Object)">
            <summary>Apply the filter on the query and return the new filtered query.</summary>
            <param name="query">The query to filter.</param>
            <returns>The new query filered query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilter`1.GetFilter">
            <summary>Gets the filter.</summary>
            <returns>The filter.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilter`1.Clone(Z.EntityFramework.Plus.QueryDbSetFilterContext)">
            <summary>Makes a deep copy of this filter.</summary>
            <param name="filterContext">The filter context that owns the filter copy.</param>
            <returns>A copy of this filter.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryDbSetFilterContext">
            <summary>A class for query filter context.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterContext.#ctor(System.Data.Entity.DbContext)">
            <summary>Constructor.</summary>
            <param name="context">The context associated to the filter context.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterContext.#ctor(System.Data.Entity.DbContext,System.Boolean)">
            <summary>Create a new QueryFilterContext.</summary>
            <param name="context">The context associated to the filter context.</param>
            <param name="isGenericContext">true if this filter context is the generic context used by other filter context.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterContext.Context">
            <summary>Gets or sets the context associated with the filter context.</summary>
            <value>The context associated with the filter context.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterContext.Filters">
            <summary>Gets or sets the filters.</summary>
            <value>The filters.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterContext.FilterSetByType">
            <summary>Gets or sets filter set by type.</summary>
            <value>The filter set by type.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterContext.FilterSets">
            <summary>Gets or sets filter sets.</summary>
            <value>The filter sets.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterContext.AddFilter``1(System.Object,System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}})">
            <summary>Adds a query filter to the filter context associated with the specified key.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="key">The filter key.</param>
            <param name="filter">The filter.</param>
            <returns>The query filter added to the filter context associated with the specified ke .</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterContext.ApplyFilter``1(System.Linq.IQueryable{``0})">
            <summary>Filter the query using context filters associated with specified keys.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to filter using context filters associated with specified keys.</param>
            <returns>The query filtered using context filters associated with specified keys.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterContext.ApplyFilter``1(System.Linq.IQueryable{``0},System.Object[])">
            <summary>Filter the query using context filters associated with specified keys.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to filter using context filters associated with specified keys.</param>
            <param name="keys">
                A variable-length parameters list containing keys associated to context
                filters to use to filter the query.
            </param>
            <returns>The query filtered using context filters associated with specified keys.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterContext.DisableFilter(Z.EntityFramework.Plus.BaseQueryDbSetFilter,System.Type[])">
            <summary>Disable this filter on the specified types.</summary>
            <param name="filter">The filter to disable.</param>
            <param name="types">A variable-length parameters list containing types to disable the filter on.</param>
            m>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterContext.EnableFilter(Z.EntityFramework.Plus.BaseQueryDbSetFilter,System.Type[])">
            <summary>Enables this filter on the specified types.</summary>
            <param name="filter">The filter to enable.</param>
            <param name="types">A variable-length parameters list containing types to enable the filter on.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterContext.GetFilter(System.Object)">
            <summary>Gets the filter associated to the specified key.</summary>
            <param name="key">The filter key.</param>
            <returns>The filter associated to the specified key.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterContext.LoadGenericContextInfo(System.Data.Entity.DbContext)">
            <summary>Load context information to the generic context.</summary>
            <param name="context">The context to use to load information to the generic context.</param>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryDbSetFilterManager">
            <summary>A class to manage query filter options.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.QueryDbSetFilterManager.GenericFilterContextLock">
            <summary>The generic filter context lock.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterManager.#cctor">
            <summary>Static constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterManager.GlobalFilters">
            <summary>Gets the global filters.</summary>
            <value>The global filters.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterManager.GlobalInitializeFilterActions">
            <summary>Gets or sets the global initialize filter actions.</summary>
            <value>The global initialize filter actions.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterManager.CacheGenericFilterContext">
            <summary>Gets or sets the dictionary containing generic filter context information for a DbContext.FullName.</summary>
            <value>The dictionary containing generic filter context information for a DbContext.FullName.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterManager.CacheWeakFilterContext">
            <summary>Gets or sets the weak table containing filter context for a specified context.</summary>
            <value>The weak table containing filter context for a specified context.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterManager.CacheWeakFilterQueryable">
            <summary>Gets or sets the weak table containing filter queryable for a specified query.</summary>
            <value>The weak table containing filter queryable for a specified query.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterManager.AddOrGetGenericFilterContext(System.Data.Entity.DbContext)">
            <summary>Adds or gets the generic filter context associated with the context.</summary>
            <param name="context">The context associated to the filter context.</param>
            <returns>The generic filter context associated with the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterManager.AddOrGetFilterContext(System.Data.Entity.DbContext)">
            <summary>Adds or get the filter context associated with the context.</summary>
            <param name="context">The context associated with the filter context.</param>
            <returns>The filter context associated with the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterManager.GetFilterQueryable(System.Linq.IQueryable)">
            <summary>Gets the filter queryable associated with the query.</summary>
            <param name="query">The query associated with the filter queryable.</param>
            <returns>The filter queryable associated with the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterManager.Filter(System.Object)">
            <summary>Gets the filter associated with the specified key from the context.</summary>
            <param name="key">The filter key associated to the filter.</param>
            <returns>The filter associated with the specified key from the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterManager.Filter``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Boolean)">
            <summary>
                Creates and return a filter added for the context.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="queryFilter">The query filter to apply to the the context.</param>
            <param name="isEnabled">true if the filter is enabled.</param>
            <returns>The filter created and added to the the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterManager.Filter``1(System.Object,System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Boolean)">
            <summary>
                Creates and return a filter associated with the specified key added for the context.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="key">The filter key associated to the filter.</param>
            <param name="queryFilter">The query filter to apply to the the context.</param>
            <param name="isEnabled">true if the filter is enabled.</param>
            <returns>The filter created and added to the the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterManager.InitilizeGlobalFilter(System.Data.Entity.DbContext)">
            <summary>Initilize global filter in the context.</summary>
            <param name="context">The context to initialize global filter on.</param>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryDbSetFilterQueryable`1">
            <summary>A class for query filter queryable.</summary>
            <typeparam name="T">The type of elements of the filter queryable.</typeparam>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterQueryable`1.#ctor(System.Data.Entity.DbContext,Z.EntityFramework.Plus.QueryDbSetFilterSet,System.Linq.IQueryable{`0})">
            <summary>Constructor.</summary>
            <param name="context">The context associated to the filter queryable.</param>
            <param name="filterSet">The filter set associated with the filter queryable.</param>
            <param name="originalQuery">The original query.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterQueryable`1.UpdateInternalQuery">
            <summary>Updates the internal query.</summary>
        </member>
        <member name="T:Z.EntityFramework.Plus.QueryDbSetFilterSet">
            <summary>A class for query filter set.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterSet.#ctor(System.Reflection.PropertyInfo)">
            <summary>Constructor.</summary>
            <param name="dbSetProperty">The database set property.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterSet.CreateFilterQueryableCompiled">
            <summary>Gets or sets the compiled function to create a new filter queryable.</summary>
            <value>The compiled function to create a new filter queryable.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterSet.DbSetProperty">
            <summary>Gets or sets the database set property.</summary>
            <value>The database set property.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterSet.ElementType">
            <summary>Gets or sets the type of the element.</summary>
            <value>The type of the element.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterSet.GetDbSetCompiled">
            <summary>Gets or sets the compiled function to retrieve the DbSet from the DbContext.</summary>
            <value>The compiled function to retrieve the DbSet from the DbContext.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.QueryDbSetFilterSet.UpdateInternalQueryCompiled">
            <summary>Gets or sets the compiled action to update the internal query.</summary>
            <value>The compiled action to update the internal query.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterSet.AddOrGetFilterQueryable(System.Data.Entity.DbContext)">
            <summary>Gets or sets the compiled action to update the internal query.</summary>
            <value>The compiled action to update the internal query.</value>
            <summary>Adds an or get a filter queryable from the context.</summary>
            <param name="context">The context to add or get a filter queryable.</param>
            <returns>the filter queryable fromt the context.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterSet.CompileCreateFilterQueryable">
            <summary>Compiles the function to create a new filter queryable.</summary>
            <returns>The compiled the function to create a new filter queryable</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterSet.CompileGetDbSet(System.Reflection.PropertyInfo)">
            <summary>Compiles the function to retrieve the DbSet from the DbContext.</summary>
            <param name="dbSetProperty">The database set property.</param>
            <returns>The compiled the function to retrieve the DbSet from the DbContext.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.QueryDbSetFilterSet.CompileUpdateInternalQuery(System.Reflection.PropertyInfo)">
            <summary>Compiles the action to update the internal query.</summary>
            <param name="dbSetProperty">The database set property.</param>
            <returns>The compiled the action to update the internal query.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping">
            <summary>A scalar accessor mapping.</summary>
        </member>
        <member name="F:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.GetValueFastGets">
            <summary>The get value fast gets.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.IsFromAssociation">
            <summary>Gets or sets a value indicating whether this object is from association.</summary>
            <value>true if this object is from association, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.IsComputed">
            <summary>Gets or sets a value indicating whether this object is computed.</summary>
            <value>true if this object is computed, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.UseIsNullColumn">
            <summary>Gets or sets a value indicating whether this object use is null column.</summary>
            <value>true if use is null column, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.AccessorPath">
            <summary>Gets or sets the full pathname of the accessor file.</summary>
            <value>The full pathname of the accessor file.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.ColumnName">
            <summary>Gets or sets the name of the column.</summary>
            <value>The name of the column.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.Type">
            <summary>Gets or sets the type.</summary>
            <value>The type.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.IsStorageMapped">
            <summary>Gets or sets a value indicating whether this object is storage mapped.</summary>
            <value>true if this object is storage mapped, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.IsKey">
            <summary>Gets or sets a value indicating whether this object is key.</summary>
            <value>true if this object is key, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.ConstantValue">
            <summary>Gets or sets the constant value.</summary>
            <value>The constant value.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.GetValue(System.Object)">
            <summary>Gets a value.</summary>
            <param name="obj">The object.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.SetValue(System.Object,System.Object)">
            <summary>Sets a value.</summary>
            <param name="obj">The object.</param>
            <param name="valueItem">The value item.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.GetValueFastGet(System.Object)">
            <summary>Gets value fast get.</summary>
            <param name="obj">The object.</param>
            <returns>The value fast get.</returns>
        </member>
        <member name="M:Z.EF.Plus.BatchUpdate.Shared.Extensions.DbModelPlusExtentions.To``1(System.Object)">
            <summary>
                A System.Object extension method that toes the given this.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">this.</param>
            <returns>A T.</returns>
        </member>
        <member name="M:Z.EF.Plus.BatchUpdate.Shared.Extensions.DbModelPlusExtentions.To(System.Object,System.Type)">
            <summary>
                A System.Object extension method that toes the given this.
            </summary>
            <param name="this">this.</param>
            <param name="type">The type.</param>
            <returns>An object.</returns>
            <example>
                <code>
            using System;
            using Microsoft.VisualStudio.TestTools.UnitTesting;
            
            
            namespace ExtensionMethods.Examples
            {
            [TestClass]
            public class System_Object_To
            {
            [TestMethod]
            public void To()
            {
            string nullValue = null;
            string value = &quot;1&quot;;
            object dbNullValue = DBNull.Value;
            
            // Exemples
            var result1 = value.To&lt;int&gt;(); // return 1;
            var result2 = value.To&lt;int?&gt;(); // return 1;
            var result3 = nullValue.To&lt;int?&gt;(); // return null;
            var result4 = dbNullValue.To&lt;int?&gt;(); // return null;
            
            // Unit Test
            Assert.AreEqual(1, result1);
            Assert.AreEqual(1, result2.Value);
            Assert.IsFalse(result3.HasValue);
            Assert.IsFalse(result4.HasValue);
            }
            }
            }
            </code>
            </example>
            <example>
                <code>
            using System;
            using Microsoft.VisualStudio.TestTools.UnitTesting;
            
            
            namespace ExtensionMethods.Examples
            {
            [TestClass]
            public class System_Object_To
            {
            [TestMethod]
            public void To()
            {
            string nullValue = null;
            string value = &quot;1&quot;;
            object dbNullValue = DBNull.Value;
            
            // Exemples
            var result1 = value.To&lt;int&gt;(); // return 1;
            var result2 = value.To&lt;int?&gt;(); // return 1;
            var result3 = nullValue.To&lt;int?&gt;(); // return null;
            var result4 = dbNullValue.To&lt;int?&gt;(); // return null;
            
            // Unit Test
            Assert.AreEqual(1, result1);
            Assert.AreEqual(1, result2.Value);
            Assert.IsFalse(result3.HasValue);
            Assert.IsFalse(result4.HasValue);
            }
            }
            }
            </code>
            </example>
        </member>
        <member name="P:Z.EF.Plus.BatchUpdate.Shared.Model.TableDefinition.Order">
            <summary>
            When dealing with inherited types, update the entity with the highest order (no dependencies first)
            </summary>
        </member>
    </members>
</doc>
