//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// UserLogin View Model
    /// </summary>
    public partial class UserLoginBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets the API key associated with the UserLogin
        /// </summary>
        /// <value>
        /// A System.String representing the API key that is associated with the UserLogin
        /// </value>
        public string ApiKey { get; set; }

        /// <summary>
        /// Gets or sets the EntityTypeId of the Rock.Model.EntityType for the authentication service that this UserLogin user will use.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the EntityTypeId of the Rock.Model.EntityType that this DataView reports on.
        /// </value>
        public int? EntityTypeId { get; set; }

        /// <summary>
        /// Gets or sets the number of failed password attempts within the failed password attempt window.
        /// </summary>
        /// <value>
        /// An System.Int32 representing the failed password attempts during the attempt window.
        /// </value>
        public int? FailedPasswordAttemptCount { get; set; }

        /// <summary>
        /// Gets or sets the failed password attempt window start date time.
        /// </summary>
        /// <value>
        /// The failed password attempt window start date time.
        /// </value>
        public DateTime? FailedPasswordAttemptWindowStartDateTime { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if the UserLogin has been confirmed.
        /// </summary>
        /// <value>
        /// A System.Boolean value that is true if the UserLogin has been confirmed; otherwise false.
        /// </value>
        public bool? IsConfirmed { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if the UserLogin is currently locked out.
        /// </summary>
        /// <value>
        /// A System.Boolean that is true if the UserLogin is currently locked out; otherwise false.
        /// </value>
        public bool? IsLockedOut { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if the user is currently online and logged in to the system.
        /// </summary>
        /// <value>
        /// A System.Boolean value that is true if the user is currently online and logged in with this UserLogin; otherwise false.
        /// </value>
        public bool? IsOnLine { get; set; }

        /// <summary>
        /// Gets or sets the is password change required.
        /// </summary>
        /// <value>
        /// The is password change required.
        /// </value>
        public bool? IsPasswordChangeRequired { get; set; }

        /// <summary>
        /// Gets or sets the date and time of the last activity (login, password change, etc.) performed with this UserLogin.
        /// </summary>
        /// <value>
        /// A System.DateTime representing the date and time of the last activity associated with this UserLogin.
        /// </value>
        public DateTime? LastActivityDateTime { get; set; }

        /// <summary>
        /// Gets or sets date and time that the UserLogin was last locked out.
        /// </summary>
        /// <value>
        /// A System.DateTime representing the date and time that the user login was last locked out.
        /// </value>
        public DateTime? LastLockedOutDateTime { get; set; }

        /// <summary>
        /// Gets or sets the most recent date and time that a user successfully logged in using this UserLogin.
        /// </summary>
        /// <value>
        /// A System.DateTime representing the most recent date and time that a user successfully logged in with this UserLogin.
        /// </value>
        public DateTime? LastLoginDateTime { get; set; }

        /// <summary>
        /// Gets or sets the date and time that the password was successfully changed.
        /// </summary>
        /// <value>
        /// A System.DateTime representing when the password was last changed.
        /// </value>
        public DateTime? LastPasswordChangedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the last time that user was notified about their password expiring.
        /// </summary>
        /// <value>
        /// The last password expiration warning date time.
        /// </value>
        public DateTime? LastPasswordExpirationWarningDateTime { get; set; }

        /// <summary>
        /// Gets or sets the Password.  Stored as a BCrypt hash for Rock Database Auth, but possibly a different hashtype for other ServiceTypes
        /// </summary>
        /// <value>
        /// A System.String representing the password. 
        /// </value>
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets the Id of the Rock.Model.Person who this UserLogin belongs to.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the Id of the Rock.Model.Person that this UserLogin belongs to.
        /// </value>
        public int? PersonId { get; set; }

        /// <summary>
        /// Gets or sets the UserName that is associated with this UserLogin. This property is required.
        /// </summary>
        /// <value>
        /// A System.String representing the UserName that is associated with this UserLogin.
        /// </value>
        public string UserName { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
