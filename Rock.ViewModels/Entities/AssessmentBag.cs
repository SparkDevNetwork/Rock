//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// Assessment View Model
    /// </summary>
    public partial class AssessmentBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets the result data for the Assessment taken.
        /// </summary>
        /// <value>
        /// A System.String a JSON return data string of the Assessment result..
        /// </value>
        public string AssessmentResultData { get; set; }

        /// <summary>
        /// Gets or sets the Id of the Rock.Model.AssessmentType
        /// </summary>
        /// <value>
        /// A System.Int32 of the Rock.Model.AssessmentType associated with the Assessment.
        /// </value>
        public int AssessmentTypeId { get; set; }

        /// <summary>
        /// Gets or sets the date of when the Assessment was completed.
        /// </summary>
        /// <value>
        /// A System.DateTime for when the Assessment was complete.
        /// </value>
        public DateTime? CompletedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the result last reminder date.
        /// </summary>
        /// <value>
        /// A System.DateTime of the last reminder for the Assessment.
        /// </value>
        public DateTime? LastReminderDate { get; set; }

        /// <summary>
        /// Gets or sets the Id of the person Rock.Model.Person who is associated with the assessment.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the PersonAliasId of Rock.Model.PersonAlias associated with the Assessment.
        /// </value>
        public int PersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the date when the assessment was requested.
        /// </summary>
        /// <value>
        /// A System.DateTime of when the request for the assessment was made..
        /// </value>
        public DateTime? RequestedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the date of the requested due date.
        /// </summary>
        /// <value>
        /// A System.DateTime of when the Assessment is due.
        /// </value>
        public DateTime? RequestedDueDate { get; set; }

        /// <summary>
        /// Gets or sets the RequesterPersonAliasId of the Rock.Model.Person that requested the assessment.
        /// </summary>
        /// <value>
        /// A System.Int32 of the Rock.Model.PersonAlias making the request for the Assessment.
        /// </value>
        public int? RequesterPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the enum of the assessment status.
        /// Requirement from Jon, a pending assessment will stay in a pending status if it was never taken, even if a new one is requested.
        /// </summary>
        /// <value>
        /// A System.Enum for the Assessment status (i.e Complete, Pending).
        /// </value>
        public int Status { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
