//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// BinaryFile View Model
    /// </summary>
    public partial class BinaryFileBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets additional information for the file.
        /// </summary>
        /// <value>
        /// The additional information.
        /// </value>
        public string AdditionalInformation { get; set; }

        /// <summary>
        /// Gets or sets the id of the Rock.Model.BinaryFileType that this file belongs to.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the Rock.Model.BinaryFileType.
        /// </value>
        public int? BinaryFileTypeId { get; set; }

        /// <summary>
        /// Gets or sets the content last modified.
        /// </summary>
        /// <value>
        /// The content last modified.
        /// </value>
        public DateTime? ContentLastModified { get; set; }

        /// <summary>
        /// Gets or sets a user defined description of the file.
        /// </summary>
        /// <value>
        /// A System.String representing the user defined description of the file.
        /// </value>
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the name of the file, including any extensions. This name is usually captured when the file is uploaded to Rock and this same name will be used when the file is downloaded. This property is required.
        /// </summary>
        /// <value>
        /// A System.String representing the name of the file, including the extension.
        /// </value>
        public string FileName { get; set; }

        /// <summary>
        /// Gets or sets the size of the file (in bytes)
        /// </summary>
        /// <value>
        /// The size of the file in bytes.
        /// </value>
        public long? FileSize { get; set; }

        /// <summary>
        /// Gets or sets a value indicating the height of a file type.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the height in pixels of a file type.
        /// </value>
        public int? Height { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if this file is part of the Rock core system/framework.
        /// </summary>
        /// <value>
        /// A System.Boolean value that is true if this file is part of the core system/framework; otherwise false.
        /// </value>
        public bool IsSystem { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if this is a temporary file. This property is required.
        /// </summary>
        /// <value>
        /// A System.Boolean value that is true if this is a temporary file, otherwise false.
        /// </value>
        public bool IsTemporary { get; set; }

        /// <summary>
        /// Gets or sets the Mime Type for the file. This property is required
        /// </summary>
        /// <value>
        /// A System.String representing the Mime Type for the file.
        /// </value>
        public string MimeType { get; set; }

        /// <summary>
        /// Gets or sets the parent Entity ID to determine security access.
        /// </summary>
        /// <value>
        /// The parent entity identifier.
        /// </value>
        public int? ParentEntityId { get; set; }

        /// <summary>
        /// Gets or sets the Parent EntityType ID to determine security access.
        /// </summary>
        /// <value>
        /// The parent entity type identifier.
        /// </value>
        public int? ParentEntityTypeId { get; set; }

        /// <summary>
        /// Gets or sets a path to the file that is understandable by the storage provider.
        /// </summary>
        /// <value>
        /// The URL.
        /// </value>
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets the storage entity settings.
        /// </summary>
        /// <value>
        /// The storage entity settings.
        /// </value>
        public string StorageEntitySettings { get; set; }

        /// <summary>
        /// Gets or sets a value indicating the width of a file type.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the width in pixels of a file type.
        /// </value>
        public int? Width { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
