//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// DefinedType View Model
    /// </summary>
    public partial class DefinedTypeBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets a flag indicating if the Defined Values associated with this Defined Type can be grouped into categories.
        /// </summary>
        /// <value>
        /// true if this DefinedType supports values that can be grouped into categories; otherwise false.
        /// </value>
        public bool? CategorizedValuesEnabled { get; set; }

        /// <summary>
        /// Gets or sets the category identifier.
        /// </summary>
        /// <value>
        /// The category identifier.
        /// </value>
        public int? CategoryId { get; set; }

        /// <summary>
        /// Gets or sets a user defined description of the DefinedType.
        /// </summary>
        /// <value>
        /// A System.String representing the description of the DefinedType.
        /// </value>
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the DefinedValues for this DefinedType should allow security settings.
        /// </summary>
        /// <value>
        ///   true if [enable security on values]; otherwise, false.
        /// </value>
        public bool EnableSecurityOnValues { get; set; }

        /// <summary>
        /// Gets or sets the FieldTypeId of the Rock.Model.FieldType that is used to set/select, and at times display the DefinedValues that are associated with
        /// NOTE: Currently, Text is the only supported fieldType for DefinedTypes.
        /// this DefinedType. 
        /// </summary>
        /// <value>
        /// A System.Int32 representing the FieldTypeId of the Rock.Model.FieldType that is used for DefinedType.
        /// </value>
        public int? FieldTypeId { get; set; }

        /// <summary>
        /// Gets or sets the help text for the defined type.
        /// </summary>
        /// <value>
        /// A System.String representing the help text.
        /// </value>
        public string HelpText { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this Defined Type is active.
        /// </summary>
        /// <value>
        ///   true if this instance is active; otherwise, false.
        /// </value>
        public bool IsActive { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if this DefinedType is part of the Rock core system/framework. This property is required.
        /// </summary>
        /// <value>
        /// A System.Boolean that is true if this DefinedType is part of the Rock core system/framework; otherwise this value is false.
        /// </value>
        public bool IsSystem { get; set; }

        /// <summary>
        /// Gets or sets the Name of the DefinedType.
        /// </summary>
        /// <value>
        /// A System.String representing the name of the DefinedType.
        /// </value>
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the display order of this DefinedType.  The lower the number the higher the display priority.  This property is required.
        /// </summary>
        /// <value>
        /// A System.Int32 that represents the display order of this DefinedType.
        /// </value>
        public int Order { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
