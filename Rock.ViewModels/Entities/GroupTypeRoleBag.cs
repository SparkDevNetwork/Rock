//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// GroupTypeRole View Model
    /// </summary>
    public partial class GroupTypeRoleBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets a value indicating whether this instance can edit.
        /// </summary>
        /// <value>
        ///   true if this instance can edit; otherwise, false.
        /// </value>
        public bool CanEdit { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this instance can manage members.
        /// </summary>
        /// <value>
        ///   true if this instance can manage members; otherwise, false.
        /// </value>
        public bool CanManageMembers { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this instance can view.
        /// </summary>
        /// <value>
        ///   true if this instance can view; otherwise, false.
        /// </value>
        public bool CanView { get; set; }

        /// <summary>
        /// Gets or sets the user defined description of the GroupRole. This property is required.
        /// </summary>
        /// <value>
        /// A System.String representing the user defined description of the GroupRole.
        /// </value>
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the Id of the Rock.Model.GroupType that this GroupRole belongs to. This property is required.
        /// </summary>
        /// <value>
        /// An System.Int32 representing the Id of the Rock.Model.GroupType that this GroupRole belongs to.
        /// </value>
        public int? GroupTypeId { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if this is a group leader role.  
        /// </summary>
        /// <value>
        /// A System.Boolean value that is true if this is a GroupLeader role; otherwise false.
        /// </value>
        public bool IsLeader { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if this GroupRole is part of the Rock core system/framework. This property is required.
        /// </summary>
        /// <value>
        /// A System.Boolean value that is true if this GroupRole is part of the Rock core system/framework; otherwise false.
        /// </value>
        public bool IsSystem { get; set; }

        /// <summary>
        /// Gets or sets the maximum count of GroupMembers that a Rock.Model.Group can have who 
        /// belong to this GroupRole.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the maximum count of GroupMembers that a Rock.Model.Group can have
        /// who belong to this GroupRole. If there isn't a maximum, this value is null.
        /// </value>
        public int? MaxCount { get; set; }

        /// <summary>
        /// Gets or sets the minimum count of GroupMembers that a Rock.Model.Group can have who belong to this GroupRole.
        /// </summary>
        /// <value>
        /// The min count of GroupMebers that a Rock.Model.Group can have who belong to this GroupRole. If there is no minimum
        /// this value is null.
        /// </value>
        public int? MinCount { get; set; }

        /// <summary>
        /// Gets or sets the Name of the GroupRole. This property is required.
        /// </summary>
        /// <value>
        /// A System.String representing the Name of the GroupRole.
        /// </value>
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the sort order position of the GroupRole.  The lower the SortOrder the higher the GroupRole shows in lists/controls.  
        /// </summary>
        /// <value>
        /// A System.Int32 representing the sort order of the GroupRole.
        /// </value>
        public int Order { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this role should receive requirements notifications].
        /// </summary>
        /// <value>
        /// true if the role should receive requirements notifications; otherwise, false.
        /// </value>
        public bool ReceiveRequirementsNotifications { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
