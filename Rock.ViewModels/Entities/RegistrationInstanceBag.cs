//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// RegistrationInstance View Model
    /// </summary>
    public partial class RegistrationInstanceBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets the account identifier.
        /// </summary>
        /// <value>
        /// The account identifier.
        /// </value>
        public int? AccountId { get; set; }

        /// <summary>
        /// Gets or sets the additional confirmation details.
        /// </summary>
        /// <value>
        /// The additional confirmation details.
        /// </value>
        public string AdditionalConfirmationDetails { get; set; }

        /// <summary>
        /// Gets or sets the additional reminder details.
        /// </summary>
        /// <value>
        /// The additional reminder details.
        /// </value>
        public string AdditionalReminderDetails { get; set; }

        /// <summary>
        /// Gets or sets the contact email.
        /// </summary>
        /// <value>
        /// The contact email.
        /// </value>
        public string ContactEmail { get; set; }

        /// <summary>
        /// Gets or sets the name of the contact.
        /// </summary>
        /// <value>
        /// The name of the contact.
        /// </value>
        public int? ContactPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the contact phone.
        /// </summary>
        /// <value>
        /// The contact phone.
        /// </value>
        public string ContactPhone { get; set; }

        /// <summary>
        /// Gets or sets the cost (if Rock.Model.RegistrationTemplate.SetCostOnInstance == true).
        /// </summary>
        /// <value>
        /// The cost.
        /// </value>
        public decimal? Cost { get; set; }

        /// <summary>
        /// Gets or sets the default amount to pay per registrant (if Rock.Model.RegistrationTemplate.SetCostOnInstance == true).
        /// If this is null, the default payment will be the Rock.Model.RegistrationInstance.Cost
        /// </summary>
        /// <value>
        /// The default payment.
        /// </value>
        public decimal? DefaultPayment { get; set; }

        /// <summary>
        /// Gets or sets the details.
        /// </summary>
        /// <value>
        /// The details.
        /// </value>
        public string Details { get; set; }

        /// <summary>
        /// Gets or sets the end date time.
        /// </summary>
        /// <value>
        /// The end date time.
        /// </value>
        public DateTime? EndDateTime { get; set; }

        /// <summary>
        /// Gets or sets the external gateway fund identifier.
        /// </summary>
        /// <value>
        /// The external gateway fund identifier.
        /// </value>
        public int? ExternalGatewayFundId { get; set; }

        /// <summary>
        /// Gets or sets the external gateway merchant identifier.
        /// </summary>
        /// <value>
        /// The external gateway merchant identifier.
        /// </value>
        public int? ExternalGatewayMerchantId { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this instance is active.
        /// </summary>
        /// <value>
        ///   true if this instance is active; otherwise, false.
        /// </value>
        public bool IsActive { get; set; }

        /// <summary>
        /// Gets or sets the maximum attendees.
        /// </summary>
        /// <value>
        /// The maximum attendees.
        /// </value>
        public int? MaxAttendees { get; set; }

        /// <summary>
        /// Gets or sets the minimum initial payment (if Rock.Model.RegistrationTemplate.SetCostOnInstance == true).
        /// </summary>
        /// <value>
        /// The minimum initial payment.
        /// </value>
        public decimal? MinimumInitialPayment { get; set; }

        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        /// <value>
        /// The name.
        /// </value>
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the registration instructions.
        /// </summary>
        /// <value>
        /// The registration instructions.
        /// </value>
        public string RegistrationInstructions { get; set; }

        /// <summary>
        /// Gets or sets the registration metering threshold.
        /// </summary>
        /// <value>
        /// The registration metering threshold.
        /// </value>
        public int? RegistrationMeteringThreshold { get; set; }

        /// <summary>
        /// Gets or sets the Rock.Model.RegistrationTemplate identifier.
        /// </summary>
        /// <value>
        /// The registration template identifier.
        /// </value>
        public int RegistrationTemplateId { get; set; }

        /// <summary>
        /// Optional workflow type to launch at end of registration
        /// </summary>
        /// <value>
        /// The workflow type id.
        /// </value>
        public int? RegistrationWorkflowTypeId { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether [reminder sent].
        /// </summary>
        /// <value>
        ///   true if [reminder sent]; otherwise, false.
        /// </value>
        public bool ReminderSent { get; set; }

        /// <summary>
        /// Gets or sets the send reminder date time.
        /// </summary>
        /// <value>
        /// The send reminder date time.
        /// </value>
        public DateTime? SendReminderDateTime { get; set; }

        /// <summary>
        /// Gets or sets the start date time.
        /// </summary>
        /// <value>
        /// The start date time.
        /// </value>
        public DateTime? StartDateTime { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether [timeout is enabled].
        /// Is there a time limit for a user submitting a registration? Their spot will be reserved until they submit
        /// or the session times out.
        /// </summary>
        /// <value>
        ///   true if [timeout is enabled]; otherwise, false.
        /// </value>
        public bool TimeoutIsEnabled { get; set; }

        /// <summary>
        /// Gets or sets the timeout length minutes. The amount of minutes that a spot will be held for a registrant
        /// until they submit or timeout occurs.
        /// </summary>
        /// <value>
        /// The timeout length minutes.
        /// </value>
        public int? TimeoutLengthMinutes { get; set; }

        /// <summary>
        /// Gets or sets the timeout threshold. The lower limit of available registrations before the checkout timer
        /// is enabled. The checkout timer functionality will only display when there are fewer available registrations
        /// than configured.
        /// </summary>
        /// <value>
        /// The timeout threshold.
        /// </value>
        public int? TimeoutThreshold { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
