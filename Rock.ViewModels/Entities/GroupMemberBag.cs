//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// GroupMember View Model
    /// </summary>
    public partial class GroupMemberBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets the PersonAliasId that archived (soft deleted) this group member
        /// </summary>
        /// <value>
        /// The archived by person alias identifier.
        /// </value>
        public int? ArchivedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the date time that this group member was archived (soft deleted)
        /// </summary>
        /// <value>
        /// The archived date time.
        /// </value>
        public DateTime? ArchivedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the communication preference.
        /// </summary>
        /// <value>
        /// The communication preference.
        /// </value>
        public int CommunicationPreference { get; set; }

        /// <summary>
        /// Gets or sets the date/time that the person was added to the group.
        /// Rock will automatically set this value when a group member is added if it isn't set manually
        /// </summary>
        /// <value>
        /// The date added.
        /// </value>
        public DateTime? DateTimeAdded { get; set; }

        /// <summary>
        /// Gets or sets the Id of the Rock.Model.Group that this GroupMember is associated with. This property is required.
        /// </summary>
        /// <value>
        /// An System.Int32 representing the Id of the Rock.Model.Group that the GroupMember is associated with.
        /// </value>
        public int GroupId { get; set; }

        /// <summary>
        /// Gets or sets the GroupMember's status (Rock.Model.GroupMemberStatus) in the Group. This value is required.
        /// </summary>
        /// <value>
        /// A Rock.Model.GroupMemberStatus enum value that represents the GroupMember's status in the group.  A GroupMemberStatus.Active indicates that the GroupMember is active,
        /// A GroupMemberStatus.Inactive value indicates that the GroupMember is not active, otherwise their GroupMemberStatus will be GroupMemberStatus.Pending.
        /// </value>
        public int GroupMemberStatus { get; set; }

        /// <summary>
        /// Gets or sets the order of Groups of the Group's GroupType for the Person.
        /// For example, if this is a FamilyGroupType, GroupOrder can be used to specify which family should be 
        /// listed as 1st (primary), 2nd, 3rd, etc for the Person.
        /// If GroupOrder is null, the group will be listed in no particular order after the ones that do have a GroupOrder.
        /// NOTE: Use int.MaxValue in OrderBy statements for null GroupOrder values
        /// </summary>
        /// <value>
        /// The group order.
        /// </value>
        public int? GroupOrder { get; set; }

        /// <summary>
        /// Gets or sets the Id of the GroupMember's Rock.Model.GroupMember.GroupRole in the Rock.Model.Group. This property is required.
        /// </summary>
        /// <value>
        /// An System.Int32 representing the Id of the Rock.Model.GroupTypeRole that the Group Member is in.
        /// </value>
        public int GroupRoleId { get; set; }

        /// <summary>
        /// Gets or sets the Id of the Rock.Model.GroupType that this Group member belongs to. This property is required.
        /// </summary>
        /// <value>
        /// An System.Int32 representing the Id of the Rock.Model.GroupType that this group member part of.
        /// </value>
        public int GroupTypeId { get; set; }

        /// <summary>
        /// Gets or sets the number of additional guests that member will be bring to group.  Only applies when group has the 'AllowGuests' flag set to true.
        /// </summary>
        /// <value>
        /// The guest count.
        /// </value>
        public int? GuestCount { get; set; }

        /// <summary>
        /// Gets or sets the date that this group member became inactive
        /// </summary>
        /// <value>
        /// The in active date time.
        /// </value>
        public DateTime? InactiveDateTime { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this group member is archived (soft deleted)
        /// </summary>
        /// <value>
        ///   true if this instance is archived; otherwise, false.
        /// </value>
        public bool IsArchived { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this instance is notified.
        /// </summary>
        /// <value>
        /// true if this instance is notified; otherwise, false.
        /// </value>
        public bool IsNotified { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if this GroupMember is part of the Rock core system/framework. This property is required.
        /// </summary>
        /// <value>
        /// A System.Boolean value that is true if this GroupMember is a part of the Rock core system/framework; otherwise false.
        /// </value>
        public bool IsSystem { get; set; }

        /// <summary>
        /// Gets or sets the note.
        /// </summary>
        /// <value>
        /// A System.String representing the note.
        /// </value>
        public string Note { get; set; }

        /// <summary>
        /// Gets or sets the Id of the Rock.Model.Person that is represented by the GroupMember. This property is required.
        /// </summary>
        /// <value>
        /// An System.Int32 representing the Id of the Rock.Model.Person who is represented by the GroupMember.
        /// </value>
        public int PersonId { get; set; }

        /// <summary>
        /// Gets or sets the number of days prior to the schedule to send a reminder email. See also Rock.Model.GroupType.ScheduleReminderEmailOffsetDays.
        /// </summary>
        /// <value>
        /// The schedule reminder email offset days.
        /// </value>
        public int? ScheduleReminderEmailOffsetDays { get; set; }

        /// <summary>
        /// Gets or sets the schedule start date to base the schedule off of. See Rock.Model.GroupMemberScheduleTemplate.
        /// </summary>
        /// <value>
        /// The schedule start date.
        /// </value>
        public DateTime? ScheduleStartDate { get; set; }

        /// <summary>
        /// Gets or sets the Id of the Rock.Model.GroupMemberScheduleTemplate
        /// </summary>
        /// <value>
        /// The schedule template identifier.
        /// </value>
        public int? ScheduleTemplateId { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
