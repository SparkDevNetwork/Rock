//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// History View Model
    /// </summary>
    public partial class HistoryBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets the caption
        /// </summary>
        /// <value>
        /// A System.String representing the caption of the History.
        /// </value>
        public string Caption { get; set; }

        /// <summary>
        /// Gets or sets the Id of the Rock.Model.Category. This property is required.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the Id of the Rock.Model.Category
        /// </value>
        public int CategoryId { get; set; }

        /// <summary>
        /// Gets or sets the ChangeType which is a structured (for querying) field to describe what type of data was changed (Record, Property, Attribute, Location, Schedule, etc)
        /// Rock.Model.History.HistoryChangeType constants for common change types
        /// </summary>
        /// <value>
        /// The type of the change.
        /// </value>
        public string ChangeType { get; set; }

        /// <summary>
        /// Gets or sets the Id of the entity that this history is related to.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the Id of the entity (object) that this history is related to.
        /// </value>
        public int EntityId { get; set; }

        /// <summary>
        /// Gets or sets the Id of the Rock.Model.EntityType. This property is required.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the Id of the Rock.Model.EntityType
        /// </value>
        public int EntityTypeId { get; set; }

        /// <summary>
        /// Gets or sets whether the NewValue and/or OldValue is null because the value is sensitive data that shouldn't be logged
        /// If "IsSensitive" doesn't apply to this, it can be left null
        /// </summary>
        /// <value>
        /// IsSensitive.
        /// </value>
        public bool? IsSensitive { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if this history is part of the Rock core system/framework. This property is required.
        /// </summary>
        /// <value>
        /// A System.Boolean value that is true if this history is part of the Rock core system/framework; otherwise false.
        /// </value>
        public bool IsSystem { get; set; }

        /// <summary>
        /// Creates new rawvalue.
        /// </summary>
        /// <value>
        /// The new raw value.
        /// </value>
        public string NewRawValue { get; set; }

        /// <summary>
        /// Gets or sets the new value.
        /// </summary>
        /// <value>
        /// The new value.
        /// </value>
        public string NewValue { get; set; }

        /// <summary>
        /// Gets or sets the old raw value.
        /// </summary>
        /// <value>
        /// The old raw value.
        /// </value>
        public string OldRawValue { get; set; }

        /// <summary>
        /// Gets or sets the old value.
        /// </summary>
        /// <value>
        /// The old value.
        /// </value>
        public string OldValue { get; set; }

        /// <summary>
        /// Gets or sets the related data.
        /// </summary>
        /// <value>
        /// The related data.
        /// </value>
        public string RelatedData { get; set; }

        /// <summary>
        /// Gets or sets the related entity identifier.
        /// </summary>
        /// <value>
        /// The related entity identifier.
        /// </value>
        public int? RelatedEntityId { get; set; }

        /// <summary>
        /// Gets or sets the related entity type identifier.
        /// </summary>
        /// <value>
        /// The related entity type identifier.
        /// </value>
        public int? RelatedEntityTypeId { get; set; }

        /// <summary>
        /// Optional: Gets or sets name of the tool or process that changed the value
        /// </summary>
        /// <value>
        /// The source of change.
        /// </value>
        public string SourceOfChange { get; set; }

        /// <summary>
        /// Gets or sets the name of the value depending on ChangeType: ChangeTypeName.Property =&gt; Property Friendly Name, ChangeType.Attribute =&gt; Attribute Name, ChangeType.Record =&gt; the ToString of the record
        /// </summary>
        /// <value>
        /// The name of the value.
        /// </value>
        public string ValueName { get; set; }

        /// <summary>
        /// Gets or sets the verb which is a structured (for querying) field to describe what the action is (ADD, DELETE, UPDATE, VIEW, WATCHED,  etc).
        /// Rock.Model.History.HistoryVerb constants for common verbs
        /// </summary>
        /// <value>
        /// A System.String representing the verb of the History.
        /// </value>
        public string Verb { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
