//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// CommunicationRecipient View Model
    /// </summary>
    public partial class CommunicationRecipientBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets the AdditionalMergeValues as a Json string.
        /// </summary>
        /// <value>
        /// A Json formatted System.String containing the AdditionalMergeValues for the communication recipient. 
        /// </value>
        public string AdditionalMergeValuesJson { get; set; }

        /// <summary>
        /// Gets or sets the CommunicationId of the Rock.Model.Communication.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the CommunicationId of the Rock.Model.Communication.
        /// </value>
        public int CommunicationId { get; set; }

        /// <summary>
        /// Gets or sets the medium entity type identifier.
        /// </summary>
        /// <value>
        /// The medium entity type identifier.
        /// </value>
        public int? MediumEntityTypeId { get; set; }

        /// <summary>
        /// Gets or sets type of client that the recipient used to open the communication.
        /// </summary>
        /// <value>
        /// The client.
        /// </value>
        public string OpenedClient { get; set; }

        /// <summary>
        /// Gets or sets the datetime that communication was opened by recipient.
        /// </summary>
        /// <value>
        /// The opened date time.
        /// </value>
        public DateTime? OpenedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the personal device identifier.
        /// </summary>
        /// <value>
        /// The personal device identifier.
        /// </value>
        public int? PersonalDeviceId { get; set; }

        /// <summary>
        /// Gets or sets the PersonId of the Rock.Model.Person who is being sent the Rock.Model.Communication.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the PersonId of the Rock.Model.Person who is being sent the Rock.Model.Communication.
        /// </value>
        public int? PersonAliasId { get; set; }

        /// <summary>
        /// The response code from 100-99999 (excluding 666 and 911)
        /// with a prefix of '@'. For example, '@126345'
        /// Note: this numeric portion must be between 3 and 5 digits due
        /// to a regex that parses the message to find response codes
        /// </summary>
        /// <value>
        /// The response code.
        /// </value>
        public string ResponseCode { get; set; }

        /// <summary>
        /// Gets or sets the datetime that communication was sent.
        /// </summary>
        /// <value>
        /// The send date time.
        /// </value>
        public DateTime? SendDateTime { get; set; }

        /// <summary>
        /// Gets or sets the message as it was sent to the recipient (i.e. after lava merge).
        /// </summary>
        /// <value>
        /// The sent message.
        /// </value>
        public string SentMessage { get; set; }

        /// <summary>
        /// Gets or sets the status of the Communication submission to the recipient.
        /// </summary>
        /// <value>
        /// A Rock.Model.CommunicationRecipientStatus Enum representing the status of Rock.Model.Communication submission to the recipient.
        /// This property will be  CommunicationRecipientStatus.Pending when Rock is waiting to send the Rock.Model.Communication to the recipient;
        /// CommunicationRecipientStatus.Success when Rock has successfully sent the Rock.Model.Communication to the recipient;
        /// CommunicationRecipientStatus.Failed when the attempt to send the Rock.Model.Communication failed.
        /// CommunicationRecipientStatus.Cancelled when the attempt to send the Rock.Model.Communication was canceled.
        /// </value>
        public int Status { get; set; }

        /// <summary>
        /// Gets or sets the status note.
        /// </summary>
        /// <value>
        /// A System.String representing the status note.
        /// </value>
        public string StatusNote { get; set; }

        /// <summary>
        /// Gets or sets the transport entity type identifier.
        /// </summary>
        /// <value>
        /// The transport identifier.
        /// </value>
        public string TransportEntityTypeName { get; set; }

        /// <summary>
        /// Gets or sets the unique message identifier.
        /// </summary>
        /// <value>
        /// The unique message identifier.
        /// </value>
        public string UniqueMessageId { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
