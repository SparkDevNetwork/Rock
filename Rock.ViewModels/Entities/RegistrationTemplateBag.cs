//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// RegistrationTemplate View Model
    /// </summary>
    public partial class RegistrationTemplateBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets a value indicating whether a person note should be added when a person registers for this type of registration.
        /// </summary>
        /// <value>
        ///   true if [add person note]; otherwise, false.
        /// </value>
        public bool AddPersonNote { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether to allow external registration updates (should a person be able to update their registration on-line after submitting it).
        /// </summary>
        /// <value>
        /// true if [allow external registration updates]; otherwise, false.
        /// </value>
        public bool AllowExternalRegistrationUpdates { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether [allow multiple registrants].
        /// </summary>
        /// <value>
        /// true if [allow multiple registrants]; otherwise, false.
        /// </value>
        public bool AllowMultipleRegistrants { get; set; }

        /// <summary>
        /// Gets or sets the batch name prefix.
        /// </summary>
        /// <value>
        /// The batch name prefix.
        /// </value>
        public string BatchNamePrefix { get; set; }

        /// <summary>
        /// Gets or sets the category identifier.
        /// </summary>
        /// <value>
        /// The category identifier.
        /// </value>
        public int? CategoryId { get; set; }

        /// <summary>
        /// Gets or sets the confirmation email text to send.
        /// </summary>
        /// <value>
        /// The confirmation email template.
        /// </value>
        public string ConfirmationEmailTemplate { get; set; }

        /// <summary>
        /// Gets or sets the confirmation from email.
        /// </summary>
        /// <value>
        /// The confirmation from email.
        /// </value>
        public string ConfirmationFromEmail { get; set; }

        /// <summary>
        /// Gets or sets the name of the confirmation from.
        /// </summary>
        /// <value>
        /// The name of the confirmation from.
        /// </value>
        public string ConfirmationFromName { get; set; }

        /// <summary>
        /// Gets or sets the confirmation subject.
        /// </summary>
        /// <value>
        /// The confirmation subject.
        /// </value>
        public string ConfirmationSubject { get; set; }

        /// <summary>
        /// Gets or sets the cost (if Rock.Model.RegistrationTemplate.SetCostOnInstance == false).
        /// </summary>
        /// <value>
        /// The cost.
        /// </value>
        public decimal Cost { get; set; }

        /// <summary>
        /// Gets or sets the default amount to pay per registrant (if Rock.Model.RegistrationTemplate.SetCostOnInstance == false).
        /// If this is null, the default payment will be the Rock.Model.RegistrationTemplate.Cost
        /// </summary>
        /// <value>
        /// The default payment.
        /// </value>
        public decimal? DefaultPayment { get; set; }

        /// <summary>
        /// Gets or sets the description of the Attribute.
        /// </summary>
        /// <value>
        /// A System.String that represents the description of the registration template.
        /// </value>
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the term to use for discount code
        /// </summary>
        /// <value>
        /// The discount code term.
        /// </value>
        public string DiscountCodeTerm { get; set; }

        /// <summary>
        /// Gets or sets the term to use for fee
        /// </summary>
        /// <value>
        /// The fee term.
        /// </value>
        public string FeeTerm { get; set; }

        /// <summary>
        /// Gets or sets the financial gateway identifier.
        /// </summary>
        /// <value>
        /// The financial gateway identifier.
        /// </value>
        public int? FinancialGatewayId { get; set; }

        /// <summary>
        /// Gets or sets the group member role that registrants will be added to group as
        /// </summary>
        /// <value>
        /// The group member role identifier.
        /// </value>
        public int? GroupMemberRoleId { get; set; }

        /// <summary>
        /// Gets or sets the group member status that registrants will be added to group with.
        /// </summary>
        /// <value>
        /// The group member status.
        /// </value>
        public int GroupMemberStatus { get; set; }

        /// <summary>
        /// Gets or sets the group type that this registration template applies to
        /// </summary>
        /// <value>
        /// The group type identifier.
        /// </value>
        public int? GroupTypeId { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this instance is active.
        /// </summary>
        /// <value>
        ///   true if this instance is active; otherwise, false.
        /// </value>
        public bool IsActive { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this instance is registration metering enabled.
        /// </summary>
        /// <value>
        ///   true if this instance is registration metering enabled; otherwise, false.
        /// </value>
        public bool IsRegistrationMeteringEnabled { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether [log in required].
        /// </summary>
        /// <value>
        ///   true if [log in required]; otherwise, false.
        /// </value>
        public bool LoginRequired { get; set; }

        /// <summary>
        /// Gets or sets the maximum registrants.
        /// </summary>
        /// <value>
        /// The maximum registrants.
        /// </value>
        public int? MaxRegistrants { get; set; }

        /// <summary>
        /// Gets or sets the minimum initial payment (if Rock.Model.RegistrationTemplate.SetCostOnInstance == false).
        /// </summary>
        /// <value>
        /// The minimum initial payment.
        /// </value>
        public decimal? MinimumInitialPayment { get; set; }

        /// <summary>
        /// Gets or sets the name of the registration template
        /// </summary>
        /// <value>
        /// The name.
        /// </value>
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the notify.
        /// </summary>
        /// <value>
        /// The notify.
        /// </value>
        public int Notify { get; set; }

        /// <summary>
        /// Gets or sets the payment reminder email template.
        /// </summary>
        /// <value>
        /// The payment reminder email template.
        /// </value>
        public string PaymentReminderEmailTemplate { get; set; }

        /// <summary>
        /// Gets or sets the payment reminder from email.
        /// </summary>
        /// <value>
        /// The payment reminder from email.
        /// </value>
        public string PaymentReminderFromEmail { get; set; }

        /// <summary>
        /// Gets or sets the name of the payment reminder from.
        /// </summary>
        /// <value>
        /// The name of the payment reminder from.
        /// </value>
        public string PaymentReminderFromName { get; set; }

        /// <summary>
        /// Gets or sets the payment reminder subject.
        /// </summary>
        /// <value>
        /// The payment reminder subject.
        /// </value>
        public string PaymentReminderSubject { get; set; }

        /// <summary>
        /// Gets or sets the payment reminder time span in days.
        /// </summary>
        /// <value>
        /// The payment reminder time span in days.
        /// </value>
        public int? PaymentReminderTimeSpan { get; set; }

        /// <summary>
        /// Gets or sets flag indicating if registrants registered for this template are typically in same family. values are ( yes, no, ask ).
        /// </summary>
        /// <value>
        /// The registrants same family.
        /// </value>
        public int RegistrantsSameFamily { get; set; }

        /// <summary>
        /// Gets or sets the term to use for registrant
        /// </summary>
        /// <value>
        /// The registrant term.
        /// </value>
        public string RegistrantTerm { get; set; }

        /// <summary>
        /// Optional workflow type to launch for registrant
        /// </summary>
        /// <value>
        /// The workflow type id.
        /// </value>
        public int? RegistrantWorkflowTypeId { get; set; }

        /// <summary>
        /// Gets or sets the registrar option.
        /// </summary>
        /// <value>
        /// The registrar option.
        /// </value>
        public int RegistrarOption { get; set; }

        /// <summary>
        /// Gets or sets the section title for attributes that are collected at the end of the registration entry process.
        /// </summary>
        /// <value>
        /// The registration attribute title end.
        /// </value>
        public string RegistrationAttributeTitleEnd { get; set; }

        /// <summary>
        /// Gets or sets the section title for attributes that are collected at the start of the registration entry process.
        /// </summary>
        /// <value>
        /// The registration attribute title start.
        /// </value>
        public string RegistrationAttributeTitleStart { get; set; }

        /// <summary>
        /// Gets or sets the registration instructions.
        /// </summary>
        /// <value>
        /// The registration instructions.
        /// </value>
        public string RegistrationInstructions { get; set; }

        /// <summary>
        /// Gets or sets the term to use for registration
        /// </summary>
        /// <value>
        /// The registration term.
        /// </value>
        public string RegistrationTerm { get; set; }

        /// <summary>
        /// Optional workflow type to launch at end of registration
        /// </summary>
        /// <value>
        /// The workflow type id.
        /// </value>
        public int? RegistrationWorkflowTypeId { get; set; }

        /// <summary>
        /// Gets or sets the reminder email template.
        /// </summary>
        /// <value>
        /// The reminder email template.
        /// </value>
        public string ReminderEmailTemplate { get; set; }

        /// <summary>
        /// Gets or sets the reminder from email.
        /// </summary>
        /// <value>
        /// The reminder from email.
        /// </value>
        public string ReminderFromEmail { get; set; }

        /// <summary>
        /// Gets or sets the name of the reminder from.
        /// </summary>
        /// <value>
        /// The name of the reminder from.
        /// </value>
        public string ReminderFromName { get; set; }

        /// <summary>
        /// Gets or sets the reminder subject.
        /// </summary>
        /// <value>
        /// The reminder subject.
        /// </value>
        public string ReminderSubject { get; set; }

        /// <summary>
        /// Gets or sets the name of the request entry.
        /// </summary>
        /// <value>
        /// The name of the request entry.
        /// </value>
        public string RequestEntryName { get; set; }

        /// <summary>
        /// Gets or sets the required signature document type identifier.
        /// </summary>
        /// <value>
        /// The required signature document type identifier.
        /// </value>
        public int? RequiredSignatureDocumentTemplateId { get; set; }

        /// <summary>
        /// Gets or sets the set cost on instance.
        /// </summary>
        /// <value>
        /// The set cost on instance.
        /// </value>
        public bool? SetCostOnInstance { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether [show current family members].
        /// </summary>
        /// <value>
        /// true if [show current family members]; otherwise, false.
        /// </value>
        public bool ShowCurrentFamilyMembers { get; set; }

        /// <summary>
        /// Gets or sets the signature documentation.
        /// </summary>
        /// <value>
        /// The signature documentation.
        /// </value>
        public int SignatureDocumentAction { get; set; }

        /// <summary>
        /// Gets or sets the success text.
        /// </summary>
        /// <value>
        /// The success text.
        /// </value>
        public string SuccessText { get; set; }

        /// <summary>
        /// Gets or sets the success title.
        /// </summary>
        /// <value>
        /// The success title.
        /// </value>
        public string SuccessTitle { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether a wait list is enabled for this event template
        /// </summary>
        /// <value>
        ///   true if [wait list enabled]; otherwise, false.
        /// </value>
        public bool WaitListEnabled { get; set; }

        /// <summary>
        /// Gets or sets the wait list transition email template.
        /// </summary>
        /// <value>
        /// The wait list transition email template.
        /// </value>
        public string WaitListTransitionEmailTemplate { get; set; }

        /// <summary>
        /// Gets or sets the wait list transition from email.
        /// </summary>
        /// <value>
        /// The wait list transition from email.
        /// </value>
        public string WaitListTransitionFromEmail { get; set; }

        /// <summary>
        /// Gets or sets the name of the wait list transition from.
        /// </summary>
        /// <value>
        /// The name of the wait list transition from.
        /// </value>
        public string WaitListTransitionFromName { get; set; }

        /// <summary>
        /// Gets or sets the wait list transition subject.
        /// </summary>
        /// <value>
        /// The wait list transition subject.
        /// </value>
        public string WaitListTransitionSubject { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
