//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// InteractiveExperienceAction View Model
    /// </summary>
    public partial class InteractiveExperienceActionBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets the EntityTypeId for the Rock.Model.EntityType of action. This property is required.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the EntityTypeId for the Rock.Model.EntityType of action.
        /// </value>
        public int ActionEntityTypeId { get; set; }

        /// <summary>
        /// Gets or sets the action settings json.
        /// </summary>
        /// <value>
        /// The action settings json.
        /// </value>
        public string ActionSettingsJson { get; set; }

        /// <summary>
        /// Gets or sets the Id of the Rock.Model.InteractiveExperience that this InteractiveExperienceAction is associated with. This property is required.
        /// </summary>
        /// <value>
        /// An System.Int32 representing the Id of the Rock.Model.InteractiveExperience that the InteractiveExperienceAction is associated with.
        /// </value>
        public int InteractiveExperienceId { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this instance is moderation required.
        /// </summary>
        /// <value>
        /// true if this instance is moderation required; otherwise, false.
        /// </value>
        public bool IsModerationRequired { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if multiple submission allowed.
        /// </summary>
        /// <value>
        /// A System.Boolean value that is true if multiple submission allowed; otherwise false.
        /// </value>
        public bool IsMultipleSubmissionAllowed { get; set; }

        /// <summary>
        /// Gets or sets a value indicating if response anonymous.
        /// </summary>
        /// <value>
        /// A System.Boolean value that is true if response anonymous; otherwise false.
        /// </value>
        public bool IsResponseAnonymous { get; set; }

        /// <summary>
        /// Gets or sets the sort order of this action.
        /// </summary>
        /// <value>
        /// The sort order of this action.
        /// </value>
        public int Order { get; set; }

        /// <summary>
        /// Gets or sets the EntityTypeId for the Rock.Model.EntityType of the response visual.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the EntityTypeId for the Rock.Model.EntityType of the response visual.
        /// </value>
        public int? ResponseVisualEntityTypeId { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
