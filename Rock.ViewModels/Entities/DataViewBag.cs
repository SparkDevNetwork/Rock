//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// DataView View Model
    /// </summary>
    public partial class DataViewBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets the CategoryId of the Rock.Model.Category that this DataView belongs to. If there is no Category, this value will be null.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the CategoryId of the Rock.Model.Category that this DataView belongs to. If it is not part of a Category this value will be null.
        /// </value>
        public int? CategoryId { get; set; }

        /// <summary>
        /// Gets or sets the DataViewFilterId of the root/base Rock.Model.DataViewFilter that is used to generate this DataView. 
        /// </summary>
        /// <value>
        /// A System.Int32 that represents the DataViewFilterId of the root/base Rock.Model.DataViewFilter that is used to generate this DataView. If there is 
        /// not a filter on this DataView, this value will be null.
        /// </value>
        public int? DataViewFilterId { get; set; }

        /// <summary>
        /// Gets or sets the user defined description of the DataView
        /// </summary>
        /// <value>
        /// A System.String representing the description of the DataView.
        /// </value>
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the EntityTypeId of the Rock.Model.EntityType (Rock.Data.IEntity) that this DataView reports on.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the EntityTypeId of the Rock.Model.EntityType that this DataView reports on.
        /// </value>
        public int? EntityTypeId { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether deceased should be included.
        /// </summary>
        /// <value>
        ///   true if [include deceased]; otherwise, false.
        /// </value>
        public bool IncludeDeceased { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if this DataView is part of the Rock core system/framework.
        /// </summary>
        /// <value>
        /// A System.Boolean value that is true if it is part of the Rock core system/framework; otherwise false.
        /// </value>
        public bool IsSystem { get; set; }

        /// <summary>
        /// Gets or sets the last run date time.
        /// </summary>
        /// <value>
        /// The last run date time.
        /// </value>
        public DateTime? LastRunDateTime { get; set; }

        /// <summary>
        /// Gets or sets the Name of the DataView.
        /// </summary>
        /// <value>
        /// A System.String representing the Name of the DataView.
        /// </value>
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the persisted last refresh date time.
        /// </summary>
        /// <value>
        /// The persisted last refresh date time.
        /// </value>
        public DateTime? PersistedLastRefreshDateTime { get; set; }

        /// <summary>
        /// Gets or sets the persisted last run duration in milliseconds.
        /// </summary>
        /// <value>
        /// The persisted last run duration in milliseconds.
        /// </value>
        public int? PersistedLastRunDurationMilliseconds { get; set; }

        /// <summary>
        /// Gets or sets the persisted schedule interval minutes.
        /// If this is null, then the DataView is not persisted.
        /// </summary>
        /// <value>
        /// The persisted schedule interval minutes.
        /// </value>
        public int? PersistedScheduleIntervalMinutes { get; set; }

        /// <summary>
        /// Gets or sets the run count.
        /// </summary>
        /// <value>
        /// The run count.
        /// </value>
        public int? RunCount { get; set; }

        /// <summary>
        /// Gets or sets the DateTime that the Run Count was last reset to 0.
        /// </summary>
        /// <value>
        /// The run count last refresh date time.
        /// </value>
        public DateTime? RunCountLastRefreshDateTime { get; set; }

        /// <summary>
        /// The amount of time in milliseconds that it took to run the Rock.Model.DataView
        /// </summary>
        /// <value>
        /// The time to run in ms.
        /// </value>
        public double? TimeToRunDurationMilliseconds { get; set; }

        /// <summary>
        /// Gets or sets the EntityTypeId of the Rock.Model.EntityType (MEF Component) that is used for an optional transformation on this DataView.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the EntityTypeId of the Rock.Model.EntityType that is used for an optional transformation on this DataView. If there
        /// is not a transformation on this DataView, this value will be null.
        /// </value>
        public int? TransformEntityTypeId { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
