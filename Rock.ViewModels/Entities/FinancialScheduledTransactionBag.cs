//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// FinancialScheduledTransaction View Model
    /// </summary>
    public partial class FinancialScheduledTransactionBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets the authorized person alias identifier.
        /// </summary>
        /// <value>
        /// The authorized person alias identifier.
        /// </value>
        public int AuthorizedPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the date to remind user to update scheduled transaction.
        /// </summary>
        /// <value>
        /// A System.DateTime representing the date to remind the user to update the scheduled transaction.
        /// </value>
        public DateTime? CardReminderDate { get; set; }

        /// <summary>
        /// Gets or sets the end date for this transaction schedule. Transactions will cease to occur on or before this date.  This property is nullable for ongoing 
        /// schedules or for schedules that will end after a specified number of payments/transaction occur (in the Rock.Model.FinancialScheduledTransaction.NumberOfPayments property).
        /// </summary>
        /// <value>
        /// A System.DateTime representing the end date for this transaction schedule. If there isn't an end date for this transaction schedule
        /// this value will be null.
        /// </value>
        public DateTime? EndDate { get; set; }

        /// <summary>
        /// Gets or sets the gateway identifier.
        /// </summary>
        /// <value>
        /// The gateway identifier.
        /// </value>
        public int? FinancialGatewayId { get; set; }

        /// <summary>
        /// Gets or sets the financial payment detail identifier.
        /// </summary>
        /// <value>
        /// The financial payment detail identifier.
        /// </value>
        public int? FinancialPaymentDetailId { get; set; }

        /// <summary>
        /// Gets or sets the foreign currency code value identifier.
        /// </summary>
        /// <value>
        /// The foreign currency code value identifier.
        /// </value>
        public int? ForeignCurrencyCodeValueId { get; set; }

        /// <summary>
        /// Gets or sets the payment gateway's payment schedule key/identifier.  This is the value that uniquely identifies the payment schedule on 
        /// with the payment gateway.
        /// </summary>
        /// <value>
        /// A System.String representing the financial gateway's unique identifier for the payment schedule.
        /// </value>
        public string GatewayScheduleId { get; set; }

        /// <summary>
        /// Gets or sets the inactivate date time.
        /// </summary>
        /// <value>
        /// The inactivate date time.
        /// </value>
        public DateTime? InactivateDateTime { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if this scheduled transaction is active.
        /// </summary>
        /// <value>
        /// A System.Boolean that is true if this scheduled transaction is active; otherwise false.
        /// </value>
        public bool IsActive { get; set; }

        /// <summary>
        /// Gets or sets the date that user was last reminded to update scheduled transaction.
        /// </summary>
        /// <value>
        /// A System.DateTime representing the date that the user was last reminded to update the scheduled transaction.
        /// </value>
        public DateTime? LastRemindedDate { get; set; }

        /// <summary>
        /// Gets or sets the date and time of the last status update. In other words,
        /// the date and time the gateway was last queried for the status of the scheduled profile/transaction.
        /// </summary>
        /// <value>
        /// A System.DateTime representing the date and time of the last status update.
        /// </value>
        public DateTime? LastStatusUpdateDateTime { get; set; }

        /// <summary>
        /// Gets or sets the date of the next payment in this schedule.
        /// </summary>
        /// <value>
        /// A System.DateTime representing the date of the next payment in this schedule.
        /// </value>
        public DateTime? NextPaymentDate { get; set; }

        /// <summary>
        /// Gets or sets the maximum number of times that this payment should repeat in this schedule.  If there is not a set number of payments, this value will be null. 
        /// This property is overridden by the schedule's Rock.Model.FinancialScheduledTransaction.EndDate.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the maximum number of times that this payment should repeat.
        /// </value>
        public int? NumberOfPayments { get; set; }

        /// <summary>
        /// The JSON for Rock.Model.FinancialScheduledTransaction.PreviousGatewayScheduleIds. If this is null,
        /// there are no PreviousGatewayScheduleIds.
        /// </summary>
        public string PreviousGatewayScheduleIdsJson { get; set; }

        /// <summary>
        /// Gets or sets the source type value identifier.
        /// </summary>
        /// <value>
        /// The source type value identifier.
        /// </value>
        public int? SourceTypeValueId { get; set; }

        /// <summary>
        /// Gets or sets the start date for this schedule. The first transaction will occur on or after this date.
        /// </summary>
        /// <value>
        /// A System.DateTime representing the start date for this schedule.
        /// </value>
        public DateTime StartDate { get; set; }

        /// <summary>
        /// The status of the scheduled transactions provided by the payment gateway (i.e. Active, Cancelled, etc).
        /// If the gateway doesn't have a status field, this will be null;
        /// The payment gateway component maps this based on the Rock.Model.FinancialScheduledTransaction.StatusMessage.
        /// </summary>
        /// <value>
        /// The status.
        /// </value>
        public int? Status { get; set; }

        /// <summary>
        /// Gets or sets the raw scheduled transaction status message returned from the Gateway
        /// If the gateway doesn't have a status field, this will be null;
        /// </summary>
        /// <value>
        /// The status message.
        /// </value>
        public string StatusMessage { get; set; }

        /// <summary>
        /// Gets or sets a summary of the scheduled transaction. This would store any comments made.
        /// </summary>
        /// <value>
        /// A System.String representing a summary of the scheduled transaction.
        /// </value>
        public string Summary { get; set; }

        /// <summary>
        /// Gets or sets the transaction code used for this scheduled transaction.
        /// </summary>
        /// <value>
        /// A System.String representing the transaction code for this scheduled transaction.
        /// </value>
        public string TransactionCode { get; set; }

        /// <summary>
        /// Gets or sets the DefinedValueId of the transaction frequency Rock.Model.DefinedValue that represents the frequency that this 
        /// transaction will occur.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the DefinedValueId of this transaction's frequency Rock.Model.DefinedValue.
        /// </value>
        public int TransactionFrequencyValueId { get; set; }

        /// <summary>
        /// Gets or sets the transaction type value identifier.
        /// </summary>
        /// <value>
        /// The transaction type value identifier.
        /// </value>
        public int? TransactionTypeValueId { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
