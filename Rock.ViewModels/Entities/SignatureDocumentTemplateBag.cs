//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// SignatureDocumentTemplate View Model
    /// </summary>
    public partial class SignatureDocumentTemplateBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets the binary file type identifier.
        /// </summary>
        /// <value>
        /// The binary file type identifier.
        /// </value>
        public int? BinaryFileTypeId { get; set; }

        /// <summary>
        /// The System Communication that will be used when sending the signature document completion email.
        /// </summary>
        /// <value>
        /// The completion system communication identifier.
        /// </value>
        public int? CompletionSystemCommunicationId { get; set; }

        /// <summary>
        /// Gets or sets a user defined description or summary about the SignatureDocumentTemplate.
        /// </summary>
        /// <value>
        /// A System.String representing a description/summary of the SignatureDocumentTemplate.
        /// </value>
        public string Description { get; set; }

        /// <summary>
        /// The term used to simply describe the document (wavier, release form, etc.).
        /// </summary>
        /// <value>
        /// The document term.
        /// </value>
        public string DocumentTerm { get; set; }

        /// <summary>
        /// Gets or sets the invite system email identifier.
        /// </summary>
        /// <value>
        /// The invite system email identifier.
        /// </value>
        public int? InviteSystemCommunicationId { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating if this item is active or not.
        /// </summary>
        /// <value>
        /// A System.Boolean that is  true if this instance is active; otherwise, false.
        /// </value>
        public bool IsActive { get; set; }

        /// <summary>
        /// The Lava template that will be used to build the signature document.
        /// </summary>
        public string LavaTemplate { get; set; }

        /// <summary>
        /// Gets or sets the friendly Name of the SignatureDocumentTemplate. This property is required.
        /// </summary>
        /// <value>
        /// A System.String representing the friendly Name of the SignatureDocumentTemplate.
        /// </value>
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the provider entity type identifier.
        /// </summary>
        /// <value>
        /// The provider entity type identifier.
        /// </value>
        public int? ProviderEntityTypeId { get; set; }

        /// <summary>
        /// Gets or sets the provider template key.
        /// </summary>
        /// <value>
        /// The provider template key.
        /// </value>
        public string ProviderTemplateKey { get; set; }

        /// <summary>
        /// This is used to define which kind of signature is being collected from the individual.
        /// Ex: Rock.Model.SignatureType.Drawn or Rock.Model.SignatureType.Typed, etc.
        /// </summary>
        /// <value>
        /// The type of the signature.
        /// </value>
        public int SignatureType { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
