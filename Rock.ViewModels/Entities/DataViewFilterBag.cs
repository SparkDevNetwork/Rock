//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// DataViewFilter View Model
    /// </summary>
    public partial class DataViewFilterBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets the id of the Data View that owns this record.
        /// </summary>
        /// <value>
        /// The data view identifier.
        /// </value>
        public int? DataViewId { get; set; }

        /// <summary>
        /// Gets or sets the EntityTypeId of the Rock.Reporting.DataFilterComponent that this filter is using.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the EntityTypeId of the Rock.Model.EntityType that is being used in the filter.
        /// </value>
        public int? EntityTypeId { get; set; }

        /// <summary>
        /// Gets or sets the expression type of this DataViewFilter.
        /// </summary>
        /// <value>
        /// A Rock.Model.FilterExpressionType that represents the expression type for the filter.  When FilterExpressionType.Filter it represents a filter expression, when FilterExpressionType.GroupAll it means that 
        /// all conditions found in child expressions must be met, when FilterExpressionType.GroupOr it means that at least one condition found in the child filter expressions must be met.
        /// </value>
        public int ExpressionType { get; set; }

        /// <summary>
        /// Gets or sets the DataViewFilterId of the parent DataViewFilter.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the DataViewFilterId of the parent DataViewFilter. If this DataViewFilter does not have a parent, this value will be null.
        /// </value>
        public int? ParentId { get; set; }

        /// <summary>
        /// Gets or sets the id of the data view that this record uses for filtering.
        /// </summary>
        /// <value>
        /// The related data view identifier.
        /// </value>
        public int? RelatedDataViewId { get; set; }

        /// <summary>
        /// Gets or sets the value that the DataViewFilter is filtering by.
        /// </summary>
        /// <value>
        /// A System.String containing the value to be used as a filter.
        /// </value>
        public string Selection { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
