<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->
<template>
    <Modal v-model="isVisible"
           title="Settings"
           saveText="Save"
           @save="onSave">
        <SectionHeader title="Filters" />

        <div class="row">
            <div class="col-md-4">
                <DropDownList v-model="attended"
                              label="Attended"
                              :items="attendedOptions" />
            </div>

            <div class="col-md-4">
                <PersonPicker v-model="enteredBy" label="Entered By" />
            </div>
        </div>
    </Modal>
</template>

<script setup lang="ts">
    import DropDownList from "@Obsidian/Controls/dropDownList.obs";
    import PersonPicker from "@Obsidian/Controls/personPicker.obs";
    import Modal from "@Obsidian/Controls/modal.obs";
    import SectionHeader from "@Obsidian/Controls/sectionHeader.obs";
    import { ref, PropType, watch } from "vue";
    import { GridSettingsOptions } from "./types.partial";
    import { useVModelPassthrough } from "@Obsidian/Utility/component";
    import { deepEqual } from "@Obsidian/Utility/util";
    import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";

    const props = defineProps({
        modelValue: {
            type: Object as PropType<GridSettingsOptions>,
            required: true
        },

        visible: {
            type: Boolean as PropType<boolean>,
            required: true
        }
    });

    const emit = defineEmits<{
        (e: "update:modelValue", value: GridSettingsOptions): void;
        (e: "update:visible", value: boolean): void;
        (e: "close"): void;
    }>();

    const attended = ref(props.modelValue.attended ?? "");
    const enteredBy = ref(props.modelValue.enteredBy ?? undefined);
    const isVisible = useVModelPassthrough(props, "visible", emit);
    const attendedOptions = [
        {
            text: "[All]",
            value: ""
        },
        {
            text: "Did Attend",
            value: "true"
        },
        {
            text: "Did Not Attend",
            value: "false"
        }
    ] as ListItemBag[];

    function onSave(): void {
        const value: GridSettingsOptions = {
            attended: attended.value,
            enteredBy: enteredBy.value
        };

        if (!deepEqual(value, props.modelValue, true)) {
            emit("update:modelValue", value);
        }

        isVisible.value = false;
    }

    watch(() => props.modelValue, () => {
        attended.value = props.modelValue.attended ?? "";
        enteredBy.value = props.modelValue.enteredBy ?? undefined;
    });

    watch(isVisible, () => {
        if (!isVisible.value) {
            emit("close");
        }
    });
</script>
