<template>
    <Grid v-if="isVisible"
          :definition="config.gridDefinition ?? undefined"
          :data="gridDataSource"
          keyField="idKey"
          itemTerm="Clicks"
          stickyHeader
          liveUpdates
          :showLaunchWorkflow="false">

        <DateTimeColumn name="interactionDateTime"
                        title="Date / Time"
                        field="interactionDateTime"
                        :filter="textValueFilter"
                        :itemClass="'align-right justify-content-end'"
                        visiblePriority="xs" />

        <PersonColumn name="person"
                      title="Person"
                      field="person"
                      :filter="pickExistingValueFilter"
                      visiblePriority="xs"
                      :showAsLink="true" />

        <TextColumn name="clientType"
                    title="Client Type"
                    field="clientType"
                    :filter="textValueFilter"
                    visiblePriority="xs" />

        <TextColumn name="operatingSystem"
                    title="Operating System"
                    field="operatingSystem"
                    :filter="textValueFilter"
                    visiblePriority="xs" />

        <TextColumn name="application"
                    title="Browser"
                    field="application"
                    :filter="textValueFilter"
                    visiblePriority="xs" />

        <TextColumn name="source"
                    title="UTM Source"
                    field="source"
                    :filter="textValueFilter"
                    visiblePriority="xs" />
    </Grid>
</template>

<script setup lang="ts">
    import { useConfigurationValues, useInvokeBlockAction } from "@Obsidian/Utility/block";
    import Grid, { DateTimeColumn, PersonColumn, TextColumn, pickExistingValueFilter, textValueFilter } from "@Obsidian/Controls/grid";
    import { ListBlockBox } from "@Obsidian/ViewModels/Blocks/listBlockBox";
    import { PageShortLinkClickListOptionsBag } from "@Obsidian/ViewModels/Blocks/Cms/PageShortLinkClickList/pageShortLinkClickListOptionsBag";
    import { GridDataBag } from "@Obsidian/ViewModels/Core/Grid/gridDataBag";
    import { reactive, ref, computed } from "vue";
    import { useStore } from "@Obsidian/PageState";

    const config = useConfigurationValues<ListBlockBox<PageShortLinkClickListOptionsBag>>();
    const invokeBlockAction = useInvokeBlockAction();

    // #region Values

    const gridDataSource = ref<Promise<GridDataBag>>();

    let gridData: GridDataBag | undefined;

    // #endregion

    // #region Computed Values

    const isVisible = computed((): boolean => {
        return useStore().state.areSecondaryBlocksShown;
    });

    // #endregion

    // #region Functions

    /**
     * Called when the grid is requesting the row data be loaded.
     */
    async function loadGridData(): Promise<GridDataBag> {
        const result = await invokeBlockAction<GridDataBag>("GetGridData");

        if (result.isSuccess && result.data && result.data.rows) {
            gridData = reactive(result.data);
            return gridData;
        }
        else {
            throw new Error(result.errorMessage ?? "Unknown error while trying to load grid data.");
        }
    }
    // #endregion

    gridDataSource.value = loadGridData();
</script>