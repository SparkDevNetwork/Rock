<template>
    <GalleryAndResult :importCode="importCode" :exampleCode="exampleCode">

        <ReminderButton :contextEntityTypeGuid="contextEntityTypeGuid" :contextEntityGuid="contextEntityGuid" />

        <template #settings>
            <div class="row">
                <div class="col-md-4">
                    <Toggle label="Entity Type" v-model="usePerson" trueText="Person" falseText="Group" />
                </div>
                <div class="col-md-6" v-show="usePerson">
                    <PersonPicker label="Person" v-model="person" enableSelfSelection />
                </div>
                <div class="col-md-6" v-show="!usePerson">
                    <GroupPicker label="Group" v-model="group" />
                </div>
            </div>
        </template>
    </GalleryAndResult>
</template>

<script setup lang="ts">
    import { computed, ref } from "vue";
    import GalleryAndResult from "./galleryAndResult.partial.obs";
    import ReminderButton from "@Obsidian/Controls/internal/reminderButton.obs";
    import PersonPicker from "@Obsidian/Controls/personPicker.obs";
    import GroupPicker from "@Obsidian/Controls/groupPicker.obs";
    import Toggle from "@Obsidian/Controls/toggle.obs";
    import { getSfcControlImportPath } from "./utils.partial";
    import { EntityType } from "@Obsidian/SystemGuids/entityType";
    import { useStore } from "@Obsidian/PageState";
    import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";

    const usePerson = ref(true);
    const pageState = useStore().state;

    // A Person
    const person = ref({
        value: pageState.currentPerson?.guid,
        text: pageState.currentPerson?.fullName
    });

    // A Group
    const group = ref<ListItemBag>();

    const contextEntityGuid = computed(() => {
        if (usePerson.value) {
            return person.value?.value ?? "";
        }

        return group.value?.value ?? "";
    });

    const contextEntityTypeGuid = computed(() => {
        if (usePerson.value) {
            return EntityType.PersonAlias;
        }

        return EntityType.Group;
    });

    const importCode = getSfcControlImportPath("internal/reminderButton");
    const exampleCode = computed(() => {
        return `<ReminderButton />`;
    });
</script>