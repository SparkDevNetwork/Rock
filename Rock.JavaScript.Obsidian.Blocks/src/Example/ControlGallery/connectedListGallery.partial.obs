<template>
    <GalleryAndResult :importCode="importCode" :exampleCode="exampleCode" enableReflection>

        <ConnectedList :hideConnectors="hideConnectors">
            <div v-if="showCustomElements" style="text-align: center;">
                <HighlightLabel labelType="info">Hello</HighlightLabel>
            </div>

            <ConnectedListButton aside="hello@triumph.tech"
                                 asideIconCssClass="fa fa-user"
                                 badgeText="Step 1"
                                 iconCssClass="fa fa-chart-line"
                                 description="This step calculates weekly growth based on new signups."
                                 :primaryActions="primaryActions"
                                 :secondaryActions="secondaryActions"
                                 title="Growth Metrics"
                                 @click="onClick" />

            <div v-if="showCustomElements" style="text-align: center;">
                <HighlightLabel labelType="info">World</HighlightLabel>
            </div>

            <ConnectedListButton aside="hello@triumph.tech"
                                 asideIconCssClass="fa fa-user"
                                 badgeText="Step 2"
                                 iconCssClass="fa fa-chart-line"
                                 description="This step calculates weekly growth based on new signups."
                                 :primaryActions="primaryActions"
                                 :secondaryActions="secondaryActions"
                                 title="Growth Metrics"
                                 @click="onClick" />

            <ConnectedListAddButton @click="onClick" />
        </ConnectedList>

        <template #settings>
            <div class="row">
                <Switch v-model="hideConnectors" formGroupClasses="col-md-4" label="Hide Connectors" />
                <Switch v-model="showCustomElements" formGroupClasses="col-md-4" label="Show Custom Elements" />
            </div>
        </template>
    </GalleryAndResult>
</template>

<script setup lang="ts">
    import { computed, ref } from "vue";
    import GalleryAndResult from "./common/galleryAndResult.partial.obs";
    import ConnectedList from "@Obsidian/Controls/connectedList.obs";
    import ConnectedListAddButton from "@Obsidian/Controls/connectedListAddButton.obs";
    import ConnectedListButton from "@Obsidian/Controls/connectedListButton.obs";
    import HighlightLabel from "@Obsidian/Controls/highlightLabel.obs";
    import Switch from "@Obsidian/Controls/switch.obs";
    import { MenuAction } from "@Obsidian/Types/Controls/dropDownMenu";

    const importCode = `import ConnectedListButton from "@Obsidian/Controls/connectedListButton.obs";`;

    const hideConnectors = ref<boolean>(false);
    const showCustomElements = ref<boolean>(false);

    const primaryActions: MenuAction[] = [
        {
            iconCssClass: "fa fa-edit",
            title: "Edit",
            type: "default",
            handler: () => alert("Edit clicked"),
        },
        {
            iconCssClass: "fa fa-copy",
            title: "Duplicate",
            type: "default",
            handler: () => alert("Duplicate clicked"),
        }
    ];

    const secondaryActions: MenuAction[] = [
        {
            iconCssClass: "fa fa-trash",
            title: "Delete",
            type: "default",
            handler: () => alert("Delete clicked"),
        }
    ];

    const exampleCode = computed<string>(() => {
        return `<ConnectedList :hideConnectors="${hideConnectors.value}">${showCustomElements.value ? `
    <div style="text-align: center;">
        <HighlightLabel labelType="info">Hello</HighlightLabel>
    </div>
` : ""}
    <ConnectedListButton aside="hello@triumph.tech"
                         asideIconCssClass="fa fa-user"
                         badgeText="Step 1"
                         iconCssClass="fa fa-chart-line"
                         description="This step calculates weekly growth based on new signups."
                         :primaryActions="${JSON.stringify(primaryActions, null, 2).replace(/\n/g, "\n                         ").replace(/"/g, "'")}"
                         :secondaryActions="${JSON.stringify(secondaryActions, null, 2).replace(/\n/g, "\n                         ").replace(/"/g, "'")}"
                         title="Growth Metrics"
                         @click="onClick" />${showCustomElements.value ? `

    <div style="text-align: center;">
        <HighlightLabel labelType="info">World</HighlightLabel>
    </div>` : ""}

    <ConnectedListButton aside="hello@triumph.tech"
                         asideIconCssClass="fa fa-user"
                         badgeText="Step 2"
                         iconCssClass="fa fa-chart-line"
                         description="This step calculates weekly growth based on new signups."
                         :primaryActions="${JSON.stringify(primaryActions, null, 2).replace(/\n/g, "\n                         ").replace(/"/g, "'")}"
                         :secondaryActions="${JSON.stringify(secondaryActions, null, 2).replace(/\n/g, "\n                         ").replace(/"/g, "'")}"
                         title="Growth Metrics"
                         @click="onClick" />

    <ConnectedListAddButton @click="onClick" />
</ConnectedList>`;
    });

    function onClick(): void {
        alert("Button clicked!");
    }
</script>