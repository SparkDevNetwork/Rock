<template>
    <GalleryAndResult :value="value" :importCode="importCode" :exampleCode="exampleCode" enableReflection>

        <MergeFieldPicker label="Merge Field" v-model="value" :multiple="multiple" :enhanceForLongLists="enhanceForLongLists" :additionalFields="additionalFields" />

        <template #settings>
            <div class="row">
                <div class="col-md-4">
                    <CheckBox label="Multiple" v-model="multiple" />
                </div>
                <div class="col-md-4">
                    <CheckBox label="Enhance For Long Lists" v-model="enhanceForLongLists" help="Enable search" />
                </div>
                <div class="col-md-4">
                    <TextBox label="Root Merge Fields" v-model="additionalFields" />
                </div>
            </div>
            <p class="text-semibold font-italic">Not all settings are demonstrated in this gallery.</p>
        </template>
    </GalleryAndResult>
</template>

<script setup lang="ts">
    import { computed, ref } from "vue";
    import GalleryAndResult from "./common/galleryAndResult.partial.obs";
    import MergeFieldPicker from "@Obsidian/Controls/mergeFieldPicker.obs";
    import TextBox from "@Obsidian/Controls/textBox.obs";
    import CheckBox from "@Obsidian/Controls/checkBox.obs";

    import { getSfcControlImportPath } from "./common/utils.partial";

    const value = ref([
        {
            "value": "Rock.Model.Group|ArchivedByPersonAlias|Person|Aliases|AliasedDateTime",
            "text": "Aliased Date Time"
        },
        {
            "value": "Rock.Model.Person|ConnectionStatusValue|Category|CreatedByPersonAliasId",
            "text": "Created By Person Alias Id"
        }
    ]);

    const multiple = ref(true);
    const enhanceForLongLists = ref(false);
    const additionalFields = ref("GlobalAttribute,Rock.Model.Person,Rock.Model.Group");

    const importCode = getSfcControlImportPath("mergeFieldPicker");

    const exampleCode = computed(() => {
        const fieldsProp = additionalFields.value ? ` additionalFields="${additionalFields.value}"` : "";
        const multipleProp = multiple.value ? ` multiple` : "";
        const enhanceForLongListsProp = enhanceForLongLists.value ? ` enhanceForLongLists` : "";

        return `<MergeFieldPicker label="Merge Field" v-model="value"${fieldsProp}${multipleProp}${enhanceForLongListsProp} />`;
    });
</script>