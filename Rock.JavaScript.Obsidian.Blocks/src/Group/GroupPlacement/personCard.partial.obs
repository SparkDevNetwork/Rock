<template>
    <div class="person-card" :style="{ borderLeftColor: getPersonBorderColor(person.gender) }">
        <div class="d-flex align-items-center flex-grow-1">
            <div class="mr-3 flex-shrink-0"
                 :style="{ 'width': '36px', 'height': '36px', 'border-radius': '18px', 'background-image': `url('${person.photoUrl}')`, 'background-size': 'cover' }">
            </div>
            {{ person.lastName }}, {{ person.nickname }}
        </div>
        <div :class="['dropdown', 'dropdown-right', { 'open': openDropdownIndex === index }]">
            <button type="button"
                    class="btn btn-xs btn-link btn-overflow"
                    data-toggle="dropdown"
                    aria-haspopup="true"
                    aria-expanded="false"
                    @click.stop="togglePersonDropdown(index)">
                <i class="fa fa-ellipsis-v"></i>
            </button>
            <ul class="dropdown-menu">
                <li>
                    <button type="button"
                            class="dropdown-item btn-link"
                            @click.stop="editPerson(person.personId)">
                        Edit
                    </button>
                </li>
                <li>
                    <button type="button"
                            class="dropdown-item btn-link"
                            @click.stop="removePerson(person.personId)">
                        Remove
                    </button>
                </li>
            </ul>
        </div>
    </div>
</template>

<style scoped>
.person-card {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    border-left: 4px solid var(--color-interface-medium);
    border-radius: 4px;
    width: 300px;
    height: 48px;
    margin: 10px 0;
    /* margin: 0 8px 12px 0; */
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    color: #343a40;
    cursor: move;
    cursor: -webkit-grab;
    /* cursor: grab; */
    background-color: #fff;
    box-shadow: 0 1px 0 #d1d2d7
}
</style>

<script setup lang="ts">
    import { PropType, ref, computed } from "vue";
    import { PersonBag } from "@Obsidian/ViewModels/Blocks/Group/GroupPlacement/personBag";
    import { Gender } from "@Obsidian/Enums/Crm/gender";

    const props = defineProps({
        isCardExpanded: {
            type: Boolean as PropType<boolean>,
            required: true
        },
        person: {
            type: Object as PropType<PersonBag>,
            required: true
        },
        index: {
            type: Number as PropType<number>,
            required: true
        },
    });

    const emit = defineEmits<{
        (e: "toggleCardExpansion"): void;
    }>();

    const openDropdownIndex = ref<number | null>(null);

    function getPersonBorderColor(gender: Gender) {
        switch (gender) {
            case Gender.Male:
                return "#1A8AE5";
            case Gender.Female:
                return "#DE69CE";
            case Gender.Unknown:
            default:
                return "var(--color-interface-medium)";
        }
    }

    function togglePersonDropdown(index: number) {
        openDropdownIndex.value = openDropdownIndex.value === index ? null : index;
    }
    function editPerson(personId: number) {
        // Logic to edit the person
    }
    function removePerson(personId: number) {
        // Logic to remove the person
    }

</script>