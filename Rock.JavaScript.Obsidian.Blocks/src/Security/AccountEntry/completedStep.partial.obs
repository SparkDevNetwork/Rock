<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->
<template>
    <div v-if="options.isPlainCaption && options.caption">{{ options.caption }}</div>
    <NotificationBox v-else-if="options.caption" alertType="success">{{ options.caption }}</NotificationBox>

    <RockButton v-if="options.redirectUrl" :btnType="BtnType.Primary" :disabled="disabled" @click="onContinueClicked">Continue</RockButton>
</template>

<script setup lang="ts">
    import { onMounted, PropType } from "vue";
    import NotificationBox from "@Obsidian/Controls/notificationBox.obs";
    import RockButton from "@Obsidian/Controls/rockButton.obs";
    import { BtnType } from "@Obsidian/Enums/Controls/btnType";
    import { AccountEntryCompletedStepBag } from "@Obsidian/ViewModels/Blocks/Security/AccountEntry/accountEntryCompletedStepBag";

    const props = defineProps({
        disabled: {
            type: Boolean as PropType<boolean>,
            required: false,
            default: false
        },
        options: {
            type: Object as PropType<AccountEntryCompletedStepBag>,
            required: true
        }
    });

    const emit = defineEmits<{
        (e: "navigate", value: string): void
    }>();

    //#region Values

    //#endregion

    //#region Event Handlers

    function onContinueClicked(): void {
        tryNavigate(props.options.redirectUrl);
    }

    //#endregion

    //#region Functions

    function tryNavigate(url: string | null | undefined): void {
        if (url) {
            emit("navigate", url);
        }
    }

    //#endregion

    onMounted(() => {
        if (props.options.isRedirectAutomatic) {
            tryNavigate(props.options.redirectUrl);
        }
    });
</script>