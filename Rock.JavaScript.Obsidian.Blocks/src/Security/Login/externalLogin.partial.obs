<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->
<template>
    <div class="external-logins">
        <div v-if="hasExternalLogins && isCaptionNotEmpty" v-html="caption"></div>

        <RockButton v-for="login in externalLogins"
                    :btnType="BtnType.Authentication"
                    :class="login.cssClass + ' btn-authentication-v2'"
                    :disabled="disabled"
                    @click="onExternalLoginClick(login)">{{ login.text }}</RockButton>
    </div>
</template>

<script setup lang="ts">
    import { computed, PropType } from "vue";
    import RockButton from "@Obsidian/Controls/rockButton.obs";
    import { BtnType } from "@Obsidian/Enums/Controls/btnType";
    import { ExternalAuthenticationButtonBag } from "@Obsidian/ViewModels/Blocks/Security/Login/externalAuthenticationButtonBag";

    const props = defineProps({
        modelValue: {
            type: Array as PropType<ExternalAuthenticationButtonBag[]>,
            required: true,
            default: []
        },
        disabled: {
            type: Boolean as PropType<boolean>,
            required: false,
            default: false
        },
        caption: {
            type: String as PropType<string>,
            required: false,
            default: ""
        }
    });

    const emit = defineEmits<{
        (e: "login", value: ExternalAuthenticationButtonBag): void
    }>();

    // #endregion

    // #region Computed Values

    const externalLogins = computed<ExternalAuthenticationButtonBag[]>(() => {
        return props.modelValue?.filter(l => !!l.authenticationType) ?? [];
    });

    const hasExternalLogins = computed<boolean>(() => !!externalLogins.value.length);

    const isCaptionNotEmpty = computed<boolean>(() => !!props.caption);

    // #endregion

    // #region Event Handlers

    /**
     * Handles the event when an external login button is clicked.
     */
    function onExternalLoginClick(externalLogin: ExternalAuthenticationButtonBag): void {
        emit("login", externalLogin);
    }

    // #endregion
</script>