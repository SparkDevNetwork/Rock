<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->
<template>

    <RockButton
        v-if="isCredentialLoginSupported && internalLoginMethod !== LoginMethod.InternalDatabase"
        :btnType="BtnType.Default"
        class="btn-block"
        :disabled="disabled"
        type="button"
        @click="onSignInWithAccountClicked()">Sign in with Account</RockButton>

    <RockButton
        v-else-if="isPasswordlessLoginSupported && internalLoginMethod !== LoginMethod.Passwordless"
        :btnType="BtnType.Default"
        class="btn-block"
        :disabled="disabled"
        type="button"
        @click="onSignInWithEmailOrPhoneClicked()">Sign in with Email or Phone</RockButton>
</template>

<script setup lang="ts">
    import { PropType } from "vue";
    import RockButton from "@Obsidian/Controls/rockButton.obs";
    import { LoginMethod } from "@Obsidian/Enums/Blocks/Security/Login/loginMethod";
    import { BtnType } from "@Obsidian/Enums/Controls/btnType";
    import { useVModelPassthrough } from "@Obsidian/Utility/component";

    const props = defineProps({
        modelValue: {
            type: Object as PropType<LoginMethod | undefined>,
            required: true
        },
        isCredentialLoginSupported: {
            type: Boolean as PropType<boolean>,
            required: true
        },
        isPasswordlessLoginSupported: {
            type: Boolean as PropType<boolean>,
            required: true
        },
        disabled: {
            type: Boolean as PropType<boolean>,
            required: false,
            default: false
        }
    });

    const emit = defineEmits<{
        (e: "update:modelValue", _value: LoginMethod | undefined): void
    }>();

    //#region Values

    //#endregion

    //#region Computed Values

    const internalLoginMethod = useVModelPassthrough(props, "modelValue", emit);

    //#endregion

    //#region Event Handlers

    function onSignInWithAccountClicked(): void {
        internalLoginMethod.value = LoginMethod.InternalDatabase;
    }

    function onSignInWithEmailOrPhoneClicked(): void {
        internalLoginMethod.value = LoginMethod.Passwordless;
    }

    //#endregion

</script>