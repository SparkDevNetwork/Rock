<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->
<template>
    <RockButton
                class="btn-copy-to-clipboard"
                isSquare
                :onClick="copy"
                data-toggle="tooltip"
                :data-placement="tooltipPlacement"
                data-container="body"
                :data-original-title="tooltip"
                ref="el"><i class="fa fa-clipboard"></i></RockButton>
</template>

<script setup lang="ts">
    import { ComponentPublicInstance, onMounted, PropType, ref } from "vue";
    import RockButton from "./rockButton.obs";

    const props = defineProps({
        value: {
            type: String as PropType<string>,
            required: true
        },
        tooltip: {
            type: String as PropType<string>,
            default: "Copy"
        },
        /**
         * The direction from the button that the tooltip pops up on. NOTE: This is not reactive.
         * If it is changed after initialized, the tooltip will still show up wherever you
         * originally told it to show up.
         */
        tooltipPlacement: {
            type: String as PropType<"auto" | "top" | "right" | "bottom" | "left">,
            default: "auto"
        }
    });

    const el = ref<ComponentPublicInstance | null>(null);
    let jEl;

    function copy(e: MouseEvent): void {
        e.preventDefault();
        navigator.clipboard.writeText(props.value);

        jEl.attr("data-original-title", "Copied")
            .tooltip("show")
            .attr("data-original-title", props.tooltip);

    }

    onMounted(() => {
        if (!el.value) {
            return;
        }

        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        const jquery = <any>window[<any>"$"];
        jEl = jquery(el.value?.$el).tooltip();
    });
</script>
