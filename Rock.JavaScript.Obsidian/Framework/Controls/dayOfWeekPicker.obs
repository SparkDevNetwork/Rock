<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->
<template>
    <CheckBoxList v-if="multiple" v-model="checkBoxValue" :items="options" horizontal />
    <DropDownList v-else v-model="dropDownValue" :items="options" />
</template>

<script setup lang="ts">
    import { PropType, computed } from "vue";
    import { DayOfWeek } from "@Obsidian/Enums/Controls/dayOfWeek";
    import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";
    import { useVModelPassthrough } from "@Obsidian/Utility/component";
    import DropDownList from "./dropDownList.obs";
    import CheckBoxList from "./checkBoxList.obs";

    const props = defineProps({
        modelValue: {
            type: String as PropType<string | string[] | null>,
            default: ""
        },
        multiple: {
            type: Boolean as PropType<boolean>,
            default: false
        }
    });

    const emit = defineEmits<{
        (e: "update:modelValue", _value: string): void
    }>();

    const internalValue = useVModelPassthrough(props, "modelValue", emit);

    const checkBoxValue = computed<string[]>({
        get() {
            if (!internalValue.value) {
                return [];
            }
            else if (Array.isArray(internalValue.value)) {
                return internalValue.value;
            }
            else {
                return [internalValue.value];
            }
        },
        set(newVal) {
            internalValue.value = newVal;
        }
    });

    // dropDown cannot use null values, but for consistency between pickers, DayOfWeekPicker does
    // so we need to convert nulls to string or string[]
    const dropDownValue = computed<string | string[]>({
        get() {
            if (props.multiple) {
                return internalValue.value ?? [];
            }
            else {
                return internalValue.value ?? "";
            }
        },
        set(newVal) {
            internalValue.value = newVal;
        }
    });

    const options: ListItemBag[] = [
        { text: "Sunday", value: DayOfWeek.Sunday.toString() },
        { text: "Monday", value: DayOfWeek.Monday.toString() },
        { text: "Tuesday", value: DayOfWeek.Tuesday.toString() },
        { text: "Wednesday", value: DayOfWeek.Wednesday.toString() },
        { text: "Thursday", value: DayOfWeek.Thursday.toString() },
        { text: "Friday", value: DayOfWeek.Friday.toString() },
        { text: "Saturday", value: DayOfWeek.Saturday.toString() }
    ];
</script>
