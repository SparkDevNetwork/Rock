//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { Gender } from "@Obsidian/Enums/Crm/gender";
import { PhoneNumberBoxWithSmsControlBag } from "@Obsidian/ViewModels/Controls/phoneNumberBoxWithSmsControlBag";
import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";

/** A registration for a person from the check-in kiosk. */
export type RegistrationPersonBag = {
    /** The primary check-in alternate identifier for this individual. */
    alternateId?: string | null;

    /**
     * The person attribute values that have been configured to be viewed
     * or edited on the kiosk.
     */
    attributeValues?: Record<string, string> | null;

    /** The date of birth for the individual. */
    birthDate?: string | null;

    /** The configured connection status for the individual. */
    connectionStatus?: ListItemBag | null;

    /** The main contact e-mail address for the individual. */
    email?: string | null;

    /** The configured ethnicity value for the individual. */
    ethnicity?: ListItemBag | null;

    /** The known gender of the individual. */
    gender: Gender;

    /**
     * The grade of the individual. This is encoded as the grade offset
     * value converted to a string.
     */
    grade?: ListItemBag | null;

    /**
     * The encrypted identifier of the person. When saving, this value
     * should be an empty string if this is a new person to be created.
     */
    id?: string | null;

    /**
     * true if this individual is an adult; otherwise false.
     * All adults will be placed in the same family group.
     */
    isAdult: boolean;

    /**
     * true if this adult is married. If set to false then
     * they will be marked as single.
     */
    isMarried: boolean;

    /** The last name of the individual. */
    lastName?: string | null;

    /** The nick name the person is known by. */
    nickName?: string | null;

    /**
     * The phone number for this individual. Currently this is the mobile
     * phone number but in the future this may become configurable.
     */
    phoneNumber?: PhoneNumberBoxWithSmsControlBag | null;

    /** The configured race value for the individual. */
    race?: ListItemBag | null;

    /** The Person record status of the individual. */
    recordStatus?: ListItemBag | null;

    /**
     * The relationship to the adults in the family. A value of null
     * implies no relationship because they are in the same family. Other
     * configured relationships may also indicate being in the same family.
     */
    relationshipToAdult?: ListItemBag | null;

    /**
     * An optional suffix to distinguish between individuals with the
     * same name in the same family.
     */
    suffix?: ListItemBag | null;
};
