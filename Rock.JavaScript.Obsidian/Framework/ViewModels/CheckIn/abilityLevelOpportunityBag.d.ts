//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

/** Defines a single ability level that can be used during check-in. */
export type AbilityLevelOpportunityBag = {
    /** Gets or sets the identifier of this item. */
    id?: string | null;

    /**
     * Determines if this ability level should be considered of lower
     * priority than the others. This is used to indicate that the selected
     * ability level is currently higher than this item and it should be
     * displayed in a way to make it clear that this wouldn't normally be
     * selected.
     */
    isDeprioritized: boolean;

    /**
     * Determines if this ability level is unavailable for selection during
     * a self-serve check-in. This may be overridden when assisted by a
     * staff member. If every ability level is disabled then the entire
     * screen should be skipped.
     */
    isDisabled: boolean;

    /** Gets or sets the display name of this item. */
    name?: string | null;
};
