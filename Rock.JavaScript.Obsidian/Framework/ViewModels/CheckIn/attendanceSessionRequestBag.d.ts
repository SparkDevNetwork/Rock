//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { FamilySearchMode } from "@Obsidian/Enums/CheckIn/familySearchMode";
import { Guid } from "@Obsidian/Types";

/**
 * Identifies information about an attendance session that is being
 * requested to be created.
 */
export type AttendanceSessionRequestBag = {
    /**
     * Gets or sets the family identifier that was determined during
     * the family search operation.
     */
    familyId?: string | null;

    /**
     * Gets or sets the unique identifier of the check-in session. This is
     * a unique identifier instead of a regular identifier since it needs
     * to come from the client.
     */
    guid: Guid;

    /**
     * Gets or sets a value indicating whether this session should enforce
     * location capacity limits on the locations.
     */
    isCapacityThresholdEnforced: boolean;

    /**
     * Gets or sets a value indicating whether this session should create
     * pending attendance records that will later be made permanent all
     * at once.
     */
    isPending: boolean;

    /**
     * Gets or sets the identifier of the person performing the action
     * for this session.
     */
    performedByPersonId?: string | null;

    /** Gets or sets the mode used when searching for families. */
    searchMode: FamilySearchMode;

    /** Gets or sets the term used when searching for families. */
    searchTerm?: string | null;
};
