//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

/** The configuration options for a text field. */
export type TextFieldConfigurationBag = {
    /**
     * Contains a lookup table of string length and font sizes as key and
     * value pairs. The key represents the string length and the value is
     * the font size. The value from the largest key that is less than or
     * equal to the length of the text is used.
     */
    adaptiveFontSize?: string | null;

    /**
     * How to format the collection when multiple values are provided by
     * the data source.
     */
    collectionFormat?: string | null;

    /**
     * The dynamic text template to use for a custom text field. The text
     * is used as a lava template to generate the final text to render.
     */
    dynamicTextTemplate?: string | null;

    /**
     * The default font size to use when rendering text. This is in
     * points per inch with 72 meaning 1 inch in height.
     */
    fontSize?: string | null;

    /**
     * The key that identifiers the option to use in the data source
     * formatter. This may be null.
     */
    formatterOptionKey?: string | null;

    /** The horizontal alignment of the text in the field. */
    horizontalAlignment?: string | null;

    /** Determines if the text is drawn bolder than normal text. */
    isBold?: string | null;

    /**
     * Determines if the color is inverted when drawing. On Zebra printers
     * will result in an already black background turning white and an
     * already white background turning black. Other printers may simply
     * switch to white mode.
     */
    isColorInverted?: string | null;

    /**
     * Determines if the text is drawn in a more condensed font than
     * normal text.
     */
    isCondensed?: string | null;

    /**
     * Determines if the custom text field is using the dynamic text
     * template or the static text template.
     */
    isDynamicText?: string | null;

    /**
     * The maximum length of the text in the field. Any text of greater
     * length will be truncated without any ellipsis. For collections
     * of strings this maximum applies to each individual string.
     */
    maxLength?: string | null;

    /**
     * The placeholder text to use when the text field uses either dynamic
     * Lava or a data source. This is displayed in the designer as well as
     * when generating the preview.
     */
    placeholderText?: string | null;

    /**
     * The key that identifies the data source to use for the value to
     * display in the text field.
     */
    sourceKey?: string | null;

    /** The static text to use for a custom text field. */
    staticText?: string | null;
};
