//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { LabelType } from "@Obsidian/Enums/CheckIn/Labels/labelType";
import { DataSourceBag } from "@Obsidian/ViewModels/Blocks/CheckIn/Configuration/LabelDesigner/dataSourceBag";
import { IconItemBag } from "@Obsidian/ViewModels/Blocks/CheckIn/Configuration/LabelDesigner/iconItemBag";
import { LabelDetailBag } from "@Obsidian/ViewModels/Blocks/CheckIn/Configuration/LabelDesigner/labelDetailBag";
import { FieldFilterSourceBag } from "@Obsidian/ViewModels/Reporting/fieldFilterSourceBag";

/** The configuration options for the label designer block. */
export type LabelDesignerOptionsBag = {
    /**
     * The list of data sources that are available to pick from when
     * editing a dynamic text field.
     */
    dataSources?: DataSourceBag[] | null;

    /**
     * The filter sources that are available to pick from when editing
     * a field filter or the label filter.
     */
    filterSources?: FieldFilterSourceBag[] | null;

    /**
     * The list of icons that are available to pick from when editing an
     * icon field.
     */
    icons?: IconItemBag[] | null;

    /** The identifier for the check-in label that is being designed. */
    idKey?: string | null;

    /**
     * Determines if the label is a system label. If so it can not be
     * saved, but they can look around and run preview tests.
     */
    isSystem: boolean;

    /** The data that describes the check-in label that is being designed. */
    label?: LabelDetailBag | null;

    /** The name of the label being designed. */
    labelName?: string | null;

    /** The type of label being designed. */
    labelType: LabelType;

    /** The URL to return to when the cancel button is clicked. */
    returnUrl?: string | null;
};
