//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { RequirementLevel } from "@Obsidian/Enums/Controls/requirementLevel";
import { RegistrationFamilyBag } from "@Obsidian/ViewModels/CheckIn/registrationFamilyBag";
import { RegistrationPersonBag } from "@Obsidian/ViewModels/CheckIn/registrationPersonBag";
import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";
import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";
import { ValidPropertiesBox } from "@Obsidian/ViewModels/Utility/validPropertiesBox";

/** The response that will be sent back from the EditFamily block action. */
export type EditFamilyResponseBag = {
    /** The attributes that can be viewed and edited on adults. */
    adultAttributes?: Record<string, PublicAttributeBag> | null;

    /** The attributes that can be viewed and edited on children. */
    childAttributes?: Record<string, PublicAttributeBag> | null;

    /**
     * Specifies the default relationship that new children will have
     * towards adults.
     */
    childRelationship?: ListItemBag | null;

    /** Determines how the birthdate field will be displayed for adults. */
    displayBirthdateForAdults: RequirementLevel;

    /** Determines how the birthdate field will be displayed for children. */
    displayBirthdateForChildren: RequirementLevel;

    /** Determines how the ethnicity field will be displayed for adults. */
    displayEthnicityForAdults: RequirementLevel;

    /** Determines how the ethnicity field will be displayed for children. */
    displayEthnicityForChildren: RequirementLevel;

    /** Determines how the grade will be displayed for children. */
    displayGradeForChildren: RequirementLevel;

    /** Determines how the race will be displayed for adults. */
    displayRaceForAdults: RequirementLevel;

    /** Determines how the race will be displayed for children. */
    displayRaceForChildren: RequirementLevel;

    /** The details of the family that is being edited. */
    family?: ValidPropertiesBox<RegistrationFamilyBag> | null;

    /** The attributes that can be viewed and edited on the family. */
    familyAttributes?: Record<string, PublicAttributeBag> | null;

    /** Determines if the Alternate Id field is visible when editing adults. */
    isAlternateIdFieldVisibleForAdults: boolean;

    /** Determines if the Alternate Id field is visible when editing children. */
    isAlternateIdFieldVisibleForChildren: boolean;

    /**
     * Determines if check-in should be allowed after registration has
     * been completed.
     */
    isCheckInAfterRegistrationAllowed: boolean;

    /** Determines if default state of the SMS button. */
    isSmsButtonCheckedByDefault: boolean;

    /** Determines if the SMS Enabled/Disabled button is visible. */
    isSmsButtonVisible: boolean;

    /** The details of the people in the family that are being edited. */
    people?: ValidPropertiesBox<RegistrationPersonBag>[] | null;

    /**
     * Determines which relationships (like "can check-in") are available
     * in the UI.
     */
    relationships?: ListItemBag[] | null;

    /** Determines which suffixes are available in the UI. */
    suffixes?: ListItemBag[] | null;
};
