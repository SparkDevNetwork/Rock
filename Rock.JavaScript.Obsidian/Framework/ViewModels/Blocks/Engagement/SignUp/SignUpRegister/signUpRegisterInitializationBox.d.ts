//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { RegisterMode } from "@Obsidian/Enums/Blocks/Engagement/SignUp/registerMode";
import { SignUpRegistrantBag } from "@Obsidian/ViewModels/Blocks/Engagement/SignUp/SignUpRegister/signUpRegistrantBag";
import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";
import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** The box that contains all the initialization information for the Sign-Up Register block. */
export type SignUpRegisterInitializationBox = {
    /** Gets or sets the communication preference items available for the registrant to select. */
    communicationPreferenceItems?: ListItemBag[] | null;

    /**
     * Gets or sets the error message. A non-empty value indicates that
     * an error is preventing the block from being displayed.
     */
    errorMessage?: string | null;

    /** Gets or sets the registrant member attributes. */
    memberAttributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the registrant member opportunity attributes. */
    memberOpportunityAttributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the registration mode the block is in. */
    mode: RegisterMode;

    /** Gets or sets the navigation urls. */
    navigationUrls?: Record<string, string> | null;

    /** Gets or sets whether this project has required group requirements. */
    projectHasRequiredGroupRequirements: boolean;

    /**
     * Gets or sets the list of existing or possible registrants, including the registrar.
     * 
     * Each {@link SignUpRegistrantBag.willAttend} value indicates whether they're already registered (<see langword="true" />) or available to be registered (<see langword="false" />).
     */
    registrants?: SignUpRegistrantBag[] | null;

    /** Gets or sets whether to require that a value be entered for email when registering in Anonymous mode. */
    requireEmail: boolean;

    /** Gets or sets whether to require that a value be entered for mobile phone when registering in Anonymous mode. */
    requireMobilePhone: boolean;

    /** Gets or sets the security grant token. */
    securityGrantToken?: string | null;

    /** Gets or sets the optional title to display above the register form. */
    title?: string | null;
};
