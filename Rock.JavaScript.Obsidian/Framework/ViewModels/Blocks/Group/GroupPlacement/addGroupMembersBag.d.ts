//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { PlacementMode } from "@Obsidian/Enums/Group/placementMode";
import { GroupMemberBag } from "@Obsidian/ViewModels/Blocks/Group/GroupPlacement/groupMemberBag";
import { GroupPlacementKeysBag } from "@Obsidian/ViewModels/Blocks/Group/GroupPlacement/groupPlacementKeysBag";
import { PlacementGroupBag } from "@Obsidian/ViewModels/Blocks/Group/GroupPlacement/placementGroupBag";

/** Represents the data required to add one or more people to a group during the placement process. */
export type AddGroupMembersBag = {
    /** Contextual keys that define the placement scope, such as registration template or instance information. */
    groupPlacementKeys?: GroupPlacementKeysBag | null;

    /** A list of pending group members to be added, including person details, role, and attribute data. */
    pendingGroupMembers?: GroupMemberBag[] | null;

    /** Indicates the mode of placement being performed (e.g., based on registration template, instance, or group). */
    placementMode: PlacementMode;

    /** The group to which the members should be added, including metadata such as name, ID, and capacity. */
    targetGroup?: PlacementGroupBag | null;
};
