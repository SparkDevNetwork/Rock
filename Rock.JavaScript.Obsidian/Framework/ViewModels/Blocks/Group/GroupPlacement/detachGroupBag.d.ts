//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { PlacementMode } from "@Obsidian/Enums/Group/placementMode";
import { GroupPlacementKeysBag } from "@Obsidian/ViewModels/Blocks/Group/GroupPlacement/groupPlacementKeysBag";

/** Represents the data needed to detach a group from a placement context. */
export type DetachGroupBag = {
    /** The realtime connection ID. */
    connectionId?: string | null;

    /** The encrypted identifier key of the group to be detached. */
    groupIdKey?: string | null;

    /** Contextual placement keys that define the relationship or linkage of the group within the placement system. */
    groupPlacementKeys?: GroupPlacementKeysBag | null;

    /** The placement mode indicating the context in which the group is being detached. */
    placementMode: PlacementMode;
};
