//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { Guid } from "@Obsidian/Types";

/** Represents a collection of contextual keys and identifiers used to scope a group placement session. */
export type GroupPlacementKeysBag = {
    /** The encrypted key of the destination group type that defines what kind of group people will be placed into. */
    destinationGroupTypeIdKey?: string | null;

    /** The encrypted key for the entity set that may define the scope of people or groups involved in the placement. */
    entitySetIdKey?: string | null;

    /** The GUID of the registration instance, if available. */
    registrationInstanceGuid?: Guid | null;

    /** The encrypted key for the registration instance associated with the placement. */
    registrationInstanceIdKey?: string | null;

    /** The GUID of the registration template, if available. */
    registrationTemplateGuid?: Guid | null;

    /** The encrypted key for the registration template associated with the placement. */
    registrationTemplateIdKey?: string | null;

    /** The encrypted key representing the specific registration template placement being used. */
    registrationTemplatePlacementIdKey?: string | null;

    /** The GUID of the source group, if available. */
    sourceGroupGuid?: Guid | null;

    /** The encrypted key of the source group where individuals are initially associated. */
    sourceGroupIdKey?: string | null;

    /** The encrypted key of the source group type used to categorize or filter source groups. */
    sourceGroupTypeIdKey?: string | null;
};
