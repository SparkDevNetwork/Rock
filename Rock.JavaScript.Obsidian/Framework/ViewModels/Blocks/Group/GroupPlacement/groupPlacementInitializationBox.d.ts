//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { PlacementMode } from "@Obsidian/Enums/Group/placementMode";
import { DestinationGroupTypeRoleBag } from "@Obsidian/ViewModels/Blocks/Group/GroupPlacement/destinationGroupTypeRoleBag";
import { GroupPlacementKeysBag } from "@Obsidian/ViewModels/Blocks/Group/GroupPlacement/groupPlacementKeysBag";
import { PersonBag } from "@Obsidian/ViewModels/Blocks/Group/GroupPlacement/personBag";
import { PlacementConfigurationSettingOptionsBag } from "@Obsidian/ViewModels/Blocks/Group/GroupPlacement/placementConfigurationSettingOptionsBag";
import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";
import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/**
 * Contains all the initialization data needed to configure and display the group placement block,
 * including placement settings, roles, attributes, context, and navigation.
 */
export type GroupPlacementInitializationBox = {
    /** Attributes that can be applied to new groups added during placement. */
    attributesForGroupAdd?: Record<string, PublicAttributeBag> | null;

    /** The URL of the page to return to when navigating "back" from the placement UI. */
    backPageUrl?: string | null;

    /** A list of group type roles that are available for destination groups during placement. */
    destinationGroupTypeRoles?: DestinationGroupTypeRoleBag[] | null;

    /** Gets or sets the error message, if any, to be displayed to the user. */
    errorMessage?: string | null;

    /** Contextual keys that define the placement scope. */
    groupPlacementKeys?: GroupPlacementKeysBag | null;

    /** Indicates whether the logged in person has edit permissions for the Destination Group Type. */
    isPersonPermittedToEditGroupType: boolean;

    /** Indicates whether multiple group placements are allowed per person. */
    isPlacementAllowingMultiple: boolean;

    /** Gets or sets the navigation URLs for common actions like saving, canceling, or navigating to other blocks. */
    navigationUrls?: Record<string, string> | null;

    /** A set of configuration options that influence how placement is performed and displayed. */
    placementConfigurationSettingOptions?: PlacementConfigurationSettingOptionsBag | null;

    /** Indicates the mode of placement. */
    placementMode: PlacementMode;

    /** A list of placement options configured for the current registration template. */
    registrationTemplatePlacements?: ListItemBag[] | null;

    /** The source person passed in by page parameters, typically the registrant or individual being placed. */
    sourcePerson?: PersonBag | null;

    /** The title to be displayed on the placement interface. */
    title?: string | null;
};
