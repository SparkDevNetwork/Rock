//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { Guid } from "@Obsidian/Types";
import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";
import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** The box that contains all the initialization information for the Prayer Request Entry block. */
export type PrayerRequestEntryInitializationBox = {
    /** The default value for the "Allow Comments" field. */
    allowCommentsDefaultValue: boolean;

    /** The prayer request attributes that can be edited. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /**
     * The categories the person can choose from when entering their prayer request.
     * If empty, then categories will not be shown.
     */
    categories?: ListItemBag[] | null;

    /**
     * The number of characters allowed when entering a new prayer request.
     * There will be no limit if this is not a positive number.
     */
    characterLimit: number;

    /**
     * The default campus of the person making the prayer request.
     * Defaults to the campus of the currently authenticated person.
     */
    defaultCampus?: ListItemBag | null;

    /**
     * The default category to use for all new prayer requests.
     * If <see cref="P:Rock.ViewModels.Blocks.Prayer.PrayerRequestEntry.PrayerRequestEntryInitializationBox.Categories" /> contains this default value, then it will be selected by default.
     */
    defaultCategoryGuid?: Guid | null;

    /**
     * The default email of the person making the prayer request.
     * Defaults to the email of the currently authenticated person.
     */
    defaultEmail?: string | null;

    /**
     * The default first name of the person making the prayer request.
     * Defaults to the first name of the currently authenticated person.
     */
    defaultFirstName?: string | null;

    /**
     * The default last name of the person making the prayer request.
     * Defaults to the last name of the currently authenticated person.
     */
    defaultLastName?: string | null;

    /**
     * The default prayer request text.
     * Defaults to the value of the "Request" page parameter.
     */
    defaultRequest?: string | null;

    /**
     * Gets or sets the error message. A non-empty value indicates that
     * an error is preventing the block from being displayed.
     */
    errorMessage?: string | null;

    /** Determines if the "Allow Comments" field should be shown. */
    isAllowCommentsShown: boolean;

    /**
     * Determines if the campus field is required.
     * If there is only one active campus, then the campus field will not show. If not show and if this is set to <c>true</c>, then the single campus is automatically used.
     */
    isCampusRequired: boolean;

    /**
     * Determines if the campus field is shown.
     * If there is only one active campus, then the campus field will not show.
     */
    isCampusShown: boolean;

    /** Determines if the "Is Public" field is shown. */
    isIsPublicShown: boolean;

    /** Determines if the last name field is required. */
    isLastNameRequired: boolean;

    /** Determines if the "Mobile Phone" field is shown. */
    isMobilePhoneShown: boolean;

    /** Determines if the parent page will be redirected to on successful save. */
    isPageRedirectedToParentOnSave: boolean;

    /**
     * Determines if the current page will be refreshed on successful save.
     * This is ignored if <see cref="P:Rock.ViewModels.Blocks.Prayer.PrayerRequestEntry.PrayerRequestEntryInitializationBox.IsPageRedirectedToParentOnSave" /> is <c>true</c>.
     */
    isPageRefreshedOnSave: boolean;

    /** The default value for the "Is Public" field. */
    isPublicDefaultValue: boolean;

    /** Determines if the requester info is shown. */
    isRequesterInfoShown: boolean;

    /** Determines if the "Is Urgent" field is shown. */
    isUrgentShown: boolean;

    /** Gets or sets the navigation urls. */
    navigationUrls?: Record<string, string> | null;

    /** The parent page URL to redirect to if Rock.ViewModels.Blocks.Prayer.PrayerRequestEntry.PrayerRequestEntryInitializationBox.IsPageRedirectedToParentOnSave is true. */
    parentPageUrl?: string | null;

    /** Gets or sets the security grant token. */
    securityGrantToken?: string | null;
};
