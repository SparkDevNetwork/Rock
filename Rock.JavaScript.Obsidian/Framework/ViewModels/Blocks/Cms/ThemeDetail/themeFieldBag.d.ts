//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { ThemeFieldType } from "@Obsidian/Enums/Cms/themeFieldType";

/** A single UI field that will be displayed in the editor. */
export type ThemeFieldBag = {
    /** The default value of the variable. */
    defaultValue?: string | null;

    /**
     * The description of this field. For variables this is the help text.
     * Other fields use this as additional text to display in the UI.
     */
    description?: string | null;

    /** The child fields of this field. Only used by panel fields. */
    fields?: ThemeFieldBag[] | null;

    /** Specifies the input width of the text input box. */
    inputWidth?: string | null;

    /**
     * Determines if the panel should default to expanded. Only used by
     * panel fields.
     */
    isExpanded: boolean;

    /**
     * Determines if the text field should be displayed as a multiline
     * input box.
     */
    isMultiline: boolean;

    /**
     * The name of the field. When type is a variable then this contains
     * the user friendly name of the variable. Otherwise it is the title
     * of the heading or panel.
     */
    name?: string | null;

    /** The type of field represented by this instance. */
    type: ThemeFieldType;

    /** The name of the variable. */
    variable?: string | null;
};
