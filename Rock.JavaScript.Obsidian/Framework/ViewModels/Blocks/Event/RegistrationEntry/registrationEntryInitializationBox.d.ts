//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { RegistrantsSameFamily } from "@Obsidian/Enums/Event/registrantsSameFamily";
import { RegistrarOption } from "@Obsidian/Enums/Event/registrarOption";
import { Guid } from "@Obsidian/Types";
import { RegistrationEntryFamilyMemberBag } from "@Obsidian/ViewModels/Blocks/Event/RegistrationEntry/registrationEntryFamilyMemberBag";
import { RegistrationEntryFeeBag } from "@Obsidian/ViewModels/Blocks/Event/RegistrationEntry/registrationEntryFeeBag";
import { RegistrationEntryFormBag } from "@Obsidian/ViewModels/Blocks/Event/RegistrationEntry/registrationEntryFormBag";
import { RegistrationEntrySessionBag } from "@Obsidian/ViewModels/Blocks/Event/RegistrationEntry/registrationEntrySessionBag";
import { RegistrationEntrySuccessBag } from "@Obsidian/ViewModels/Blocks/Event/RegistrationEntry/registrationEntrySuccessBag";
import { GatewayControlBag } from "@Obsidian/ViewModels/Controls/gatewayControlBag";
import { SavedFinancialAccountListItemBag } from "@Obsidian/ViewModels/Finance/savedFinancialAccountListItemBag";
import { CurrencyInfoBag } from "@Obsidian/ViewModels/Utility/currencyInfoBag";
import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";
import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** RegistrationEntryBlockViewModel */
export type RegistrationEntryInitializationBox = {
    /** Gets or sets a value indicating whether [allow registration updates]. */
    allowRegistrationUpdates: boolean;

    /** Gets or sets the amount due today. */
    amountDueToday?: number | null;

    /** Gets or sets the campuses available for the user to select. */
    campuses?: ListItemBag[] | null;

    /** Gets or sets the connection statuses available for the user to select. */
    connectionStatuses?: ListItemBag[] | null;

    /** Gets or sets the cost. */
    cost: number;

    /** Gets or sets the currency information. */
    currencyInfo?: CurrencyInfoBag | null;

    /** Gets or sets the current person family unique identifier. */
    currentPersonFamilyGuid?: Guid | null;

    /** Gets or sets a value indicating whether captcha support should be disabled for this block. */
    disableCaptchaSupport: boolean;

    /** Gets or sets a value indicating whether the save account option should be available. */
    enableSaveAccount: boolean;

    /** Gets or sets the ethnicities available for the user to select. */
    ethnicities?: ListItemBag[] | null;

    /** Gets or sets the family members. */
    familyMembers?: RegistrationEntryFamilyMemberBag[] | null;

    /** Gets or sets the term for specifying which household or family a person is a member of. */
    familyTerm?: string | null;

    /** Gets or sets the fees. */
    fees?: RegistrationEntryFeeBag[] | null;

    /** Gets or sets a value indicating whether [force email update]. */
    forceEmailUpdate: boolean;

    /** Gets or sets the gateway control. */
    gatewayControl?: GatewayControlBag | null;

    /** Gets or sets the gateway unique identifier. */
    gatewayGuid?: Guid | null;

    /** Gets or sets the grades available for the user to select. */
    grades?: ListItemBag[] | null;

    /** Gets or sets a value indicating whether this instance has discounts available. */
    hasDiscountsAvailable: boolean;

    /** Gets or sets a value that indicates if the progress bar should be hidden. */
    hideProgressBar: boolean;

    /** Gets or sets the initial amount to pay. */
    initialAmountToPay?: number | null;

    /** Gets or sets the name of the instance. */
    instanceName?: string | null;

    /** Gets or sets the instructions HTML. */
    instructionsHtml?: string | null;

    /** Gets a value indicating whether or not this is an existing registration. */
    isExistingRegistration: boolean;

    /**
     * Gets a value indicating whether this registration requires the
     * signature document to be signed inline.
     */
    isInlineSignatureRequired: boolean;

    /** Gets value indicating whether registrants should be able to pay their registration costs in multiple, scheduled installments. */
    isPaymentPlanAllowed: boolean;

    /** Gets a value indicating whether the payment plan has been configured. */
    isPaymentPlanConfigured: boolean;

    /** Gets or sets a value indicating whether this instance is redirect gateway. */
    isRedirectGateway: boolean;

    /** Gets or sets a value indicating whether the signature should be drawn. */
    isSignatureDrawn: boolean;

    /** Gets or sets a value indicating whether this instance is unauthorized. */
    isUnauthorized: boolean;

    /** Gets or sets a value indicating whether [login required to register]. */
    loginRequiredToRegister: boolean;

    /** Gets or sets the marital statuses available for the user to select. */
    maritalStatuses?: ListItemBag[] | null;

    /** Gets or sets the maximum registrants. */
    maxRegistrants: number;

    /** Gets the payment deadline date. */
    paymentDeadlineDate?: string | null;

    /** Gets the collection of payment plan frequencies from which a registrant can select. */
    paymentPlanFrequencies?: ListItemBag[] | null;

    /** Gets or sets the plural fee term. */
    pluralFeeTerm?: string | null;

    /** Gets or sets the registrant plural term. */
    pluralRegistrantTerm?: string | null;

    /** Gets or sets the plural registration term. */
    pluralRegistrationTerm?: string | null;

    /** Gets or sets the races available for the user to select. */
    races?: ListItemBag[] | null;

    /** Gets or sets the redirect gateway URL. */
    redirectGatewayUrl?: string | null;

    /** Gets or sets the registrant forms. */
    registrantForms?: RegistrationEntryFormBag[] | null;

    /** Gets or sets a value indicating whether [do ask for family]. */
    registrantsSameFamily: RegistrantsSameFamily;

    /** Gets or sets the registrant term. */
    registrantTerm?: string | null;

    /** Gets or sets the registrar option. */
    registrarOption: RegistrarOption;

    /** Gets or sets the registration attributes end. */
    registrationAttributesEnd?: PublicAttributeBag[] | null;

    /** Gets or sets the registration attributes start. */
    registrationAttributesStart?: PublicAttributeBag[] | null;

    /** Gets or sets the registration attribute title end. */
    registrationAttributeTitleEnd?: string | null;

    /** Gets or sets the registration attribute title start. */
    registrationAttributeTitleStart?: string | null;

    /**
     * Gets or sets a message to show when the registration instance cannot be used,
     * either because it cannot be found, or is outside the time you're allowed to register.
     */
    registrationInstanceNotFoundMessage?: string | null;

    /** Gets or sets the registration term. */
    registrationTerm?: string | null;

    /** Gets or sets the saved accounts that can be offered to use for payment. */
    savedAccounts?: SavedFinancialAccountListItemBag[] | null;

    /**
     * Gets or sets the registration entry block session. If the registration is existing, then these are the args sent
     * to create it.
     */
    session?: RegistrationEntrySessionBag | null;

    /** Gets or sets a value indicating whether to show the SMS OptIn checkbox under the phone number */
    showSmsOptIn: boolean;

    /** Gets the name of the signature document template. */
    signatureDocumentTemplateName?: string | null;

    /** Gets the signature document term. */
    signatureDocumentTerm?: string | null;

    /** Gets or sets the spots remaining. */
    spotsRemaining?: number | null;

    /** Gets or sets a value indicating whether [start at beginning]. */
    startAtBeginning: boolean;

    /** Gets or sets the success view model. */
    successViewModel?: RegistrationEntrySuccessBag | null;

    /** Gets or sets the timeout minutes. */
    timeoutMinutes?: number | null;

    /** Gets or sets a value indicating whether [wait list enabled]. */
    waitListEnabled: boolean;
};
