//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { Guid } from "@Obsidian/Types";

/** Registrant Info */
export type RegistrantBag = {
    /** The registration cost for the registrant at the time of the registration. */
    cost: number;

    /** Gets or sets the unique identifier of a previously-signed signature document that should be reused for this registrant. */
    existingSignatureDocumentGuid?: Guid | null;

    /** Gets or sets the family unique identifier. */
    familyGuid?: Guid | null;

    /** Gets or sets the fee item quantities. */
    feeItemQuantities?: Record<Guid, number> | null;

    /** Gets or sets the field values. */
    fieldValues?: Record<Guid, unknown> | null;

    /** Gets or sets the unique identifier. */
    guid: Guid;

    /** Gets or sets a value indicating whether this instance is on wait list. */
    isOnWaitList: boolean;

    /** Gets or sets the person unique identifier. */
    personGuid?: Guid | null;

    /** Gets or sets the encoded signature data. */
    signatureData?: string | null;
};
