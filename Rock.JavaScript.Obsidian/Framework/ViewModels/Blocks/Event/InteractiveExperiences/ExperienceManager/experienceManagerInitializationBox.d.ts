//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";

/**
 * Class ExperienceManagerInitializationBox.
 * Implements the Rock.ViewModels.Blocks.BlockBox
 */
export type ExperienceManagerInitializationBox = {
    /** Gets or sets the actions configured for this experience. */
    actions?: ListItemBag[] | null;

    /**
     * Gets or sets the error message. A non-empty value indicates that
     * an error is preventing the block from being displayed.
     */
    errorMessage?: string | null;

    /** Gets or sets the name of the experience. */
    experienceName?: string | null;

    /** Gets or sets the experience token used to authenticate to the RealTime topic. */
    experienceToken?: string | null;

    /** Gets or sets a value indicating whether this experience is inactive. */
    isExperienceInactive: boolean;

    /**
     * Gets or sets a value indicating whether to display the notification
     * toggle option to the individual.
     */
    isNotificationAvailable: boolean;

    /** Gets or sets the navigation urls. */
    navigationUrls?: Record<string, string> | null;

    /** Gets or sets the occurrence identifier key. */
    occurrenceIdKey?: string | null;

    /** Gets or sets the number of active participants in the experience. */
    participantCount: number;

    /** Gets or sets the number of seconds between participant count updates. */
    participantCountUpdateInterval: number;

    /** Gets or sets the security grant token. */
    securityGrantToken?: string | null;

    /** Gets or sets the tabs that should be shown in the manager. */
    tabsToShow?: string[] | null;
};
