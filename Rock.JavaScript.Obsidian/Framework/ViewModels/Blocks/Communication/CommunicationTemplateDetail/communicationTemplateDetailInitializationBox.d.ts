//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { PushOpenAction } from "@Obsidian/Enums/Blocks/Communication/CommunicationTemplateDetail/pushOpenAction";
import { CommunicationTemplateVersion } from "@Obsidian/Enums/Communication/communicationTemplateVersion";
import { Guid } from "@Obsidian/Types";
import { PageRouteValueBag } from "@Obsidian/ViewModels/Rest/Controls/pageRouteValueBag";
import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";

/** Represents the initialization box for the Communication Template Detail block. */
export type CommunicationTemplateDetailInitializationBox = {
    /** Gets or sets the attachments. */
    attachments?: ListItemBag[] | null;

    /** Gets or sets the GUID of the attachments binary file type. */
    attachmentsBinaryFileTypeGuid: Guid;

    /** Gets or sets the BCC email addresses. */
    bccEmails?: string | null;

    /** Gets or sets the category of the template. */
    category?: ListItemBag | null;

    /** Gets or sets the CC email addresses. */
    ccEmails?: string | null;

    /** Gets or sets the description of the template. */
    description?: string | null;

    /**
     * Gets or sets the error message. A non-empty value indicates that
     * an error is preventing the block from being displayed.
     */
    errorMessage?: string | null;

    /** Gets or sets the email address of the sender. */
    fromEmail?: string | null;

    /** Gets or sets the name of the sender. */
    fromName?: string | null;

    /** Gets or sets the unique identifier of the template. */
    guid: Guid;

    /** Gets or sets the binary file for the template preview. */
    imageFile?: ListItemBag | null;

    /** Gets or sets a value indicating whether this template is active. */
    isActive: boolean;

    /** Gets or sets a value indicating whether CSS inlining is enabled. */
    isCssInliningEnabled: boolean;

    /** Gets or sets a value indicating whether editing is restricted. */
    isEditRestricted: boolean;

    /** Gets or sets a value indicating whether editing is restricted by the system. */
    isEditRestrictedSystem: boolean;

    /** Gets or sets a value indicating whether editing is restricted for unauthorized users. */
    isEditRestrictedUnauthorized: boolean;

    /** Gets or sets a value indicating whether this is a new communication template. */
    isNew: boolean;

    /** Gets or sets a value indicating whether the template is read-only. */
    isReadOnly: boolean;

    /** Gets or sets a value indicating whether the push medium is configured to use the Rock Mobile Push transport. */
    isRockMobilePushTransportConfigured: boolean;

    /** Gets or sets a value indicating whether this template is a starter template. */
    isStarter: boolean;

    /**
     * A Dictionary of Key,DefaultValue for Lava MergeFields that can be used when processing Lava in the CommunicationTemplate
     * By convention, a Key with a 'Color' suffix will indicate that the Value is selected using a ColorPicker. Otherwise,it is just text
     */
    lavaFields?: Record<string, string> | null;

    /** Gets or sets the binary file for the template logo. */
    logoBinaryFile?: ListItemBag | null;

    /** Gets or sets the message content. */
    message?: string | null;

    /** Gets or sets the name of the template. */
    name?: string | null;

    /** Gets or sets the navigation urls. */
    navigationUrls?: Record<string, string> | null;

    /** Gets or sets the message content of the push notification. */
    pushMessage?: string | null;

    /** Gets or sets the mobile application for the push notification. */
    pushMobileApplication?: ListItemBag | null;

    /** Gets or sets the push notification mobile applications that can be selected. */
    pushMobileApplications?: ListItemBag[] | null;

    /** Gets or sets the mobile page for the push notification. */
    pushMobilePage?: PageRouteValueBag | null;

    /** Gets or sets the query string parameters for the push mobile page. */
    pushMobilePageQueryString?: Record<string, string> | null;

    /** Gets or sets the push open action. */
    pushOpenAction: PushOpenAction;

    /** Gets or sets the push open message. */
    pushOpenMessage?: string | null;

    /** Gets or sets the JSON content for the push open message. */
    pushOpenMessageJson?: string | null;

    /** Gets or sets the title of the push notification. */
    pushTitle?: string | null;

    /** Gets or sets the URL for the push notification. */
    pushUrl?: string | null;

    /** Gets or sets the reply-to email address. */
    replyToEmail?: string | null;

    /** Gets or sets the security grant token. */
    securityGrantToken?: string | null;

    /** Gets or sets the selected system phone number. */
    smsFromSystemPhoneNumber?: ListItemBag | null;

    /** Gets or sets the list of system phone numbers available for sending SMS messages. */
    smsFromSystemPhoneNumbers?: ListItemBag[] | null;

    /** Gets or sets the SMS message content. */
    smsMessage?: string | null;

    /** Gets or sets the subject of the email. */
    subject?: string | null;

    /** Gets or sets the title of the block. */
    title?: string | null;

    /** Gets or sets the communication template version. */
    version: CommunicationTemplateVersion;
};
