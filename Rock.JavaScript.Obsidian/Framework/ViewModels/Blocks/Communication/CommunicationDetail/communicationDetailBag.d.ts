//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { CommunicationType } from "@Obsidian/Enums/Communication/communicationType";
import { InferredCommunicationStatus } from "@Obsidian/Enums/Communication/inferredCommunicationStatus";
import { CommunicationDeliveryBreakdownBag } from "@Obsidian/ViewModels/Blocks/Communication/CommunicationDetail/communicationDeliveryBreakdownBag";

/** A bag that contains information about the detail of a communication. */
export type CommunicationDetailBag = {
    /** Gets or sets the name of the communication flow this communication belongs to. */
    communicationFlowName?: string | null;

    /** Gets or sets the Rock.ViewModels.Blocks.Communication.CommunicationDetail.CommunicationDeliveryBreakdownBag for this communication. */
    deliveryBreakdown?: CommunicationDeliveryBreakdownBag | null;

    /** Gets or sets the future send datetime for this communication. */
    futureSendDateTime?: string | null;

    /** Gets or sets the Rock.Enums.Communication.InferredCommunicationStatus for this communication. */
    inferredStatus: InferredCommunicationStatus;

    /** Gets or sets whether this is a bulk communication. */
    isBulk: boolean;

    /** Gets or sets the name [or subject or push title] of the communication. */
    name?: string | null;

    /** Gets or sets the send datetime for this communication. */
    sendDateTime?: string | null;

    /** Gets or sets the topic of this communication. */
    topic?: string | null;

    /** Gets or sets the total count of all recipients tied to this communication. */
    totalRecipientCount: number;

    /** Gets or sets the Rock.Enums.Communication.CommunicationType for this communication. */
    type: CommunicationType;
};
