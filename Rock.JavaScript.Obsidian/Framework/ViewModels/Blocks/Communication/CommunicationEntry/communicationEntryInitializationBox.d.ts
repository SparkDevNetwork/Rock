//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { Mode } from "@Obsidian/Enums/Blocks/Communication/CommunicationEntry/mode";
import { CommunicationEntryAuthorizationBag } from "@Obsidian/ViewModels/Blocks/Communication/CommunicationEntry/communicationEntryAuthorizationBag";
import { CommunicationEntryCommunicationBag } from "@Obsidian/ViewModels/Blocks/Communication/CommunicationEntry/communicationEntryCommunicationBag";
import { CommunicationEntryMediumOptionsBaseBag } from "@Obsidian/ViewModels/Blocks/Communication/CommunicationEntry/communicationEntryMediumOptionsBaseBag";
import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";

/** Box containing initialization information for the Communication Entry block. */
export type CommunicationEntryInitializationBox = {
    /** Gets or sets a value indicating whether additional email recipients are allowed. */
    areAdditionalEmailRecipientsAllowed: boolean;

    /** Gets or sets a value indicating whether the email metrics reminder options are shown. */
    areEmailMetricsReminderOptionsShown: boolean;

    /** Gets or sets the authorization details for the block. */
    authorization?: CommunicationEntryAuthorizationBag | null;

    /** Gets or sets the communication details being created/edited. */
    communication?: CommunicationEntryCommunicationBag | null;

    /**
     * Gets or sets the error message. A non-empty value indicates that
     * an error is preventing the block from being displayed.
     */
    errorMessage?: string | null;

    /** Gets or sets a value indicating whether CC/BCC entry is allowed. */
    isCcBccEntryAllowed: boolean;

    /** Gets or sets a value indicating whether the block is in edit mode. */
    isEditMode: boolean;

    /**
     * Gets or sets a value indicating whether the entire Communication Entry block is hidden.
     * There should be another block on the page that will display the Communication details in view mode when this is true.
     */
    isHidden: boolean;

    /** Gets a value indicating whether lava is supported. */
    isLavaEnabled: boolean;

    /** Gets or sets the maximum number of recipients allowed before communication will need to be approved. */
    maximumRecipientsBeforeApprovalRequired: number;

    /** Gets or sets the options for the selected communication medium. */
    mediumOptions?: CommunicationEntryMediumOptionsBaseBag | null;

    /** Gets or sets the mediums for the tab control. */
    mediums?: ListItemBag[] | null;

    /** Gets or sets the mode. */
    mode: Mode;

    /** Gets or sets the navigation urls. */
    navigationUrls?: Record<string, string> | null;

    /** Gets or sets the security grant token. */
    securityGrantToken?: string | null;

    /** Gets or sets the title. */
    title?: string | null;
};
