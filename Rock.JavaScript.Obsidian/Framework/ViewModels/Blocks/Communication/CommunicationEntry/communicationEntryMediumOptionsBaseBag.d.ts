//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { MediumType } from "@Obsidian/Enums/Blocks/Communication/CommunicationEntry/mediumType";
import { Guid } from "@Obsidian/Types";
import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";

/** Bag containing basic information about a communication medium. */
export type CommunicationEntryMediumOptionsBaseBag = {
    /** Gets or sets a value indicating whether this medium has an active transport. */
    hasActiveTransport: boolean;

    /** Gets a value indicating whether this communication medium is unknown. */
    isUnknown: boolean;

    /** Gets or sets the medium entity type unique identifier. */
    mediumEntityTypeGuid: Guid;

    /** Gets the type of the medium. */
    mediumType: MediumType;

    /** Gets or sets the communication templates that can be selected. */
    templates?: ListItemBag[] | null;
};
