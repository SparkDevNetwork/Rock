//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { CommunicationType } from "@Obsidian/Enums/Blocks/Communication/CommunicationEntryWizard/communicationType";
import { PushOpenAction } from "@Obsidian/Enums/Blocks/Communication/CommunicationEntryWizard/pushOpenAction";
import { CommunicationStatus } from "@Obsidian/Enums/Communication/communicationStatus";
import { SegmentCriteria } from "@Obsidian/Enums/Communication/segmentCriteria";
import { Guid } from "@Obsidian/Types";
import { CommunicationEntryWizardPushNotificationOptionsBag } from "@Obsidian/ViewModels/Blocks/Communication/CommunicationEntryWizard/communicationEntryWizardPushNotificationOptionsBag";
import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";

/** Bag containing the communication information needed for the Communication Entry Wizard block. */
export type CommunicationEntryWizardCommunicationBag = {
    /** Gets or sets the BCC email addresses. */
    bccEmails?: string | null;

    /** Gets or sets the CC email addresses. */
    ccEmails?: string | null;

    /** Gets or sets the communication unique identifier. */
    communicationGuid: Guid;

    /** Gets or sets the communication identifier. */
    communicationId?: number | null;

    /** Gets or sets the communication list group unique identifier. */
    communicationListGroupGuid?: Guid | null;

    /** Gets or sets the communication name. */
    communicationName?: string | null;

    /** Gets or sets the communication template unique identifier. */
    communicationTemplateGuid?: Guid | null;

    /** Gets or sets the communication topic defined value. */
    communicationTopicValue?: ListItemBag | null;

    /** Gets or sets the communication type. */
    communicationType: CommunicationType;

    /** Gets or sets the email attachments. */
    emailAttachmentBinaryFiles?: ListItemBag[] | null;

    /** Gets or sets the enable Lava commands. */
    enabledLavaCommands?: string | null;

    /** Gets or sets whether to exclude duplicate recipient addresses from receiving this communication. */
    excludeDuplicateRecipientAddress: boolean;

    /** Gets or sets the sender email address. */
    fromEmail?: string | null;

    /** Gets or sets the sender name. */
    fromName?: string | null;

    /** Gets or sets the future send date time. */
    futureSendDateTime?: string | null;

    /** Gets or sets the individual recipient person alias unique identifiers. */
    individualRecipientPersonAliasGuids?: Guid[] | null;

    /** Gets or sets whether this is a bulk communication. */
    isBulkCommunication: boolean;

    /** Gets or sets the email message. */
    message?: string | null;

    /** Gets or sets the personalization segment identifiers that communication recipients must satisfy. */
    personalizationSegmentIds?: number[] | null;

    /** Gets or sets the push data. */
    pushData?: CommunicationEntryWizardPushNotificationOptionsBag | null;

    /** Gets or sets the push image binary file unique identifier. */
    pushImageBinaryFileGuid?: Guid | null;

    /** Gets or sets the push message. */
    pushMessage?: string | null;

    /** Gets or sets the push open action. */
    pushOpenAction?: PushOpenAction | null;

    /** Gets or sets the push open message. */
    pushOpenMessage?: string | null;

    /** Gets or sets the push open message JSON. */
    pushOpenMessageJson?: string | null;

    /** Gets or sets the push title. */
    pushTitle?: string | null;

    /** Gets or sets the reply-to email address. */
    replyToEmail?: string | null;

    /** Gets or sets the segment criterion. */
    segmentCriteria: SegmentCriteria;

    /** Gets or sets the SMS attachments. */
    smsAttachmentBinaryFiles?: ListItemBag[] | null;

    /** Gets or sets the SMS from system phone number unique identifier. */
    smsFromSystemPhoneNumberGuid?: Guid | null;

    /** Gets or sets the SMS message. */
    smsMessage?: string | null;

    /** Gets or sets the communication status. */
    status: CommunicationStatus;

    /** Gets or sets the communication subject. */
    subject?: string | null;

    /** Gets or sets the email address for testing the communication. */
    testEmailAddress?: string | null;

    /** Gets or sets the SMS phone number for testing the communication. */
    testSmsPhoneNumber?: string | null;
};
