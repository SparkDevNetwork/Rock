//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { CommunicationFlowTriggerType } from "@Obsidian/Enums/Communication/communicationFlowTriggerType";
import { ConversionGoalType } from "@Obsidian/Enums/Communication/conversionGoalType";
import { ExitConditionType } from "@Obsidian/Enums/Communication/exitConditionType";
import { CommunicationFlowCommunicationBag } from "@Obsidian/ViewModels/Blocks/Communication/CommunicationFlowDetail/communicationFlowCommunicationBag";
import { CommunicationFlowDetailConversionGoalSettingsBag } from "@Obsidian/ViewModels/Blocks/Communication/CommunicationFlowDetail/communicationFlowDetailConversionGoalSettingsBag";
import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";
import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** The item details for the Communication Flow Detail block. */
export type CommunicationFlowBag = {
    /** Gets or sets the attributes. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the attribute values. */
    attributeValues?: Record<string, string> | null;

    /** Gets or sets the Category. */
    category?: ListItemBag | null;

    /** Gets or sets the communications for this communication flow. */
    communications?: CommunicationFlowCommunicationBag[] | null;

    /** Gets or sets the conversion goal settings. */
    conversionGoalSettings?: CommunicationFlowDetailConversionGoalSettingsBag | null;

    /** Gets or sets the percentage of recipients expected to complete the conversion goal. */
    conversionGoalTargetPercent?: number | null;

    /** Gets or sets the timeframe (in days) for achieving the conversion goal. */
    conversionGoalTimeframeInDays?: number | null;

    /** Gets or sets the conversion goal type for this Communication Flow. */
    conversionGoalType?: ConversionGoalType | null;

    /** Gets or sets the description. */
    description?: string | null;

    /** Gets or sets the condition for when a recipient no longer receives messages from this Communication Flow. */
    exitConditionType: ExitConditionType;

    /** Gets or sets the iCalendar content that describes the schedule for this Communication Flow. */
    iCalendarContent?: string | null;

    /** Gets or sets the identifier key of this entity. */
    idKey?: string | null;

    /** Gets or sets a flag indicating if this is an active Communication Flow. */
    isActive: boolean;

    /** Gets or sets the name of the Communication Flow (maximum 100 characters). */
    name?: string | null;

    /** Gets or sets the Data View used to define the initial target audience for this Communication Flow. */
    targetAudienceDataView?: ListItemBag | null;

    /** Gets or sets a value indicating how this Communication Flow is triggered. */
    triggerType: CommunicationFlowTriggerType;

    /** Gets or sets the unsubscribe message (maximum 500 characters). */
    unsubscribeMessage?: string | null;
};
