//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { ConnectionRequestBoardConnectionOpportunityBag } from "@Obsidian/ViewModels/Blocks/Connection/ConnectionRequestBoard/connectionRequestBoardConnectionOpportunityBag";
import { ConnectionRequestBoardFilterOptionsBag } from "@Obsidian/ViewModels/Blocks/Connection/ConnectionRequestBoard/connectionRequestBoardFilterOptionsBag";
import { ConnectionRequestBoardFiltersBag } from "@Obsidian/ViewModels/Blocks/Connection/ConnectionRequestBoard/connectionRequestBoardFiltersBag";

/** A bag that contains selected connection opportunity information for the connection request board. */
export type ConnectionRequestBoardSelectedOpportunityBag = {
    /** Gets or sets the selected connection opportunity. */
    connectionOpportunity?: ConnectionRequestBoardConnectionOpportunityBag | null;

    /** Gets or sets the selected connection request identifier, if a specific request should be opened. */
    connectionRequestId?: number | null;

    /** Gets or sets the filter options that may be used to filter connection requests. */
    filterOptions?: ConnectionRequestBoardFilterOptionsBag | null;

    /** Gets or sets the selected filters to be used to initialize the connection request board. */
    filters?: ConnectionRequestBoardFiltersBag | null;

    /** Gets or sets whether the board is in card view mode. */
    isCardViewMode: boolean;

    /** Gets or sets whether connection request security is enabled. */
    isRequestSecurityEnabled: boolean;
};
