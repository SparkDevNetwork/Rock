//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";
import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** Following Event Type View Model */
export type FollowingEventTypeBag = {
    /** Gets or sets the attributes. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the attribute values. */
    attributeValues?: Record<string, string> | null;

    /** Gets or sets the user defined description of the FollowingEvent. */
    description?: string | null;

    /** Gets or sets how an entity should be formatted when included in the event notification to follower. */
    entityNotificationFormatLava?: string | null;

    /** Gets or sets the type of the event entity. */
    entityType?: ListItemBag | null;

    /** Gets or sets the type of the followed entity. */
    followedEntityType?: ListItemBag | null;

    /** Gets or sets the followed entity type identifier. */
    followedEntityTypeId?: number | null;

    /** Gets or sets the identifier key of this entity. */
    idKey?: string | null;

    /** Gets or sets a value indicating whether [include non public requests]. */
    includeNonPublicRequests: boolean;

    /** Gets or sets a value indicating whether this instance is active. */
    isActive: boolean;

    /** Gets or sets a value indicating whether this event is required. If not, followers will be able to optionally select if they want to be notified of this event */
    isNoticeRequired: boolean;

    /** Gets or sets the last check. */
    lastCheckDateTime?: string | null;

    /** Gets or sets the (internal) Name of the FollowingEvent. This property is required. */
    name?: string | null;

    /** Gets or sets the order. */
    order: number;

    /** Gets or sets a value indicating whether [send on weekends]. */
    sendOnWeekends: boolean;
};
