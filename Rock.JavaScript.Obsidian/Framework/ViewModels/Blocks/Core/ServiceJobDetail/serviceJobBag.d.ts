//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

export type ServiceJobBag = {
    /**
     * Gets or sets the Assembly name of the .dll file that contains the job class.
     * Set this to null to have Rock figure out the Assembly automatically.
     */
    assembly?: string | null;

    /** Gets or sets the attributes. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the attribute values. */
    attributeValues?: Record<string, string> | null;

    /** Gets or sets the fully qualified class name with Namespace of the Job class. This property is required. */
    class?: string | null;

    /** Gets or sets the cron description. */
    cronDescription?: string | null;

    /** Gets or sets the Cron Expression that is used to schedule the Job. This property is required. */
    cronExpression?: string | null;

    /** Gets or sets a user defined description of the Job. */
    description?: string | null;

    /** Gets or sets a value indicating whether jobs should be logged in ServiceJobHistory */
    enableHistory: boolean;

    /** Gets or sets the history count per job. */
    historyCount: number;

    /** Gets or sets the identifier key of this entity. */
    idKey?: string | null;

    /** Gets or sets a flag indicating if the Job is active. */
    isActive?: boolean | null;

    /** Gets or sets a flag indicating if this Job is part of the Rock core system/framework */
    isSystem: boolean;

    /**
     * Gets or sets the status message that was returned the last time that the job was run. In most cases this will be used
     * in the event of an exception to return the exception message.
     */
    lastStatusMessage?: string | null;

    /** Gets or sets the friendly Name of the Job. This property is required. */
    name?: string | null;

    /**
     * Gets or sets a comma delimited list of email address that should receive notification emails for this job. Notification
     * emails are sent to these email addresses based on the completion status of the Job and the Rock.Model.ServiceJob.NotificationStatus
     * property of this job.
     */
    notificationEmails?: string | null;

    /** Gets or sets the notification status. */
    notificationStatus?: string | null;
};
