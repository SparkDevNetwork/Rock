//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { FunctionType } from "@Obsidian/Enums/Core/AI/Agent/functionType";
import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** The item details for the AI Skill Function List block. */
export type AISkillFunctionBag = {
    /** Gets or sets the attributes. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the attribute values. */
    attributeValues?: Record<string, string> | null;

    /**
     * The description of the function, which provides additional context
     * or information about its intended purpose and functionality.
     */
    description?: string | null;

    /**
     * The type of function represented by this entity. This indicates
     * how the function will be configured and executed in the language
     * model.
     */
    functionType: FunctionType;

    /** Gets or sets the identifier key of this entity. */
    idKey?: string | null;

    /** The maximum number of tokens that the language model should consume. */
    maxTokens?: number | null;

    /**
     * The friendly name of the function that will be used to identify it
     * in the UI.
     */
    name?: string | null;

    /**
     * Indicates that the prompt should be rendered using Lava before being
     * send to the language model.
     */
    preRenderLava: boolean;

    /** The prompt text to be sent to the language model or executed by Lava. */
    prompt?: string | null;

    /** A JSON Schema object that defines the structure of input parameters. */
    promptParametersSchema?: string | null;

    /** Determines the randomness of the response. */
    temperature: number;

    /**
     * A concise, but descriptive, hint to the language model that provides
     * context about when this function should be used in response to an
     * individual's input.
     */
    usageHint?: string | null;
};
