//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";
import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** The item details for the AI Skill Detail block. */
export type AISkillBag = {
    /** Gets or sets the attributes. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the attribute values. */
    attributeValues?: Record<string, string> | null;

    /**
     * The entity type that represents the C# class that implements the
     * functions for this skill. If this is not null then the skill and
     * related functions should not allow editing beyond enabling or
     * disabling them.
     */
    codeEntityType?: ListItemBag | null;

    /**
     * The description of the skill, which provides additional context or
     * information about its intended purpose and functionality.
     */
    description?: string | null;

    /** Gets or sets the identifier key of this entity. */
    idKey?: string | null;

    /**
     * The friendly name of the skill that will be used to identify it in
     * the UI.
     */
    name?: string | null;

    /**
     * A concise, but descriptive, hint to the language model that provides
     * context about when this skill's functions should be used in response
     * to an individual's input.
     */
    usageHint?: string | null;
};
