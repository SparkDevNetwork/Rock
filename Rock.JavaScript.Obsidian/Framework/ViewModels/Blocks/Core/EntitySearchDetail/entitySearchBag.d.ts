//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";
import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** The item details for the Entity Search Detail block. */
export type EntitySearchBag = {
    /** Gets or sets the attributes. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the attribute values. */
    attributeValues?: Record<string, string> | null;

    /** Gets or sets the text that describes the purpose of this search. */
    description?: string | null;

    /** Gets or sets the Entity Type that will be queried by this search. */
    entityType?: ListItemBag | null;

    /**
     * Gets or sets the expression that will be used to group the results.
     * This is processed after Rock.Model.EntitySearch.WhereExpression.
     */
    groupByExpression?: string | null;

    /** Gets or sets the identifier key of this entity. */
    idKey?: string | null;

    /** Gets or sets the property paths to be included by Entity Framework. */
    includePaths?: string | null;

    /** Gets or sets a value indicating whether this search is active. */
    isActive: boolean;

    /**
     * Gets or sets a value indicating whether this search will
     * enforce entity security. Entity security has a pretty heafty
     * performance hit and should only be used when it is actually needed.
     */
    isEntitySecurityEnabled: boolean;

    /**
     * Gets or sets a value indicating whether search query will allow
     * custom refinement options in the form of an additional user query.
     */
    isRefinementAllowed: boolean;

    /**
     * Gets or sets the  key of this search. This is used to identify
     * this search item through the API and Lava. This value must be
     * unique for a given Rock.Model.EntitySearch.EntityTypeId. This property
     * is required.
     */
    key?: string | null;

    /**
     * Gets or sets the maximum number of results per query. More data can
     * be retrieved by subsequent queries that skip the first n items.
     */
    maximumResultsPerQuery?: number | null;

    /** Gets or sets the name of the search query. */
    name?: string | null;

    /**
     * Gets or sets the expression that will be used to define the structure
     * of the resulting items. This is processed after Rock.Model.EntitySearch.GroupByExpression.
     */
    selectExpression?: string | null;

    /**
     * Gets or sets the expression that will be used to define the structure
     * of the resulting items. This is processed after Rock.Model.EntitySearch.GroupByExpression.
     */
    selectManyExpression?: string | null;

    /**
     * Gets or sets the expression that will be used to sort the results.
     * This is processed after Rock.Model.EntitySearch.SelectExpression.
     */
    sortExpression?: string | null;

    /** Gets or sets the expression that will be used to filter the query. */
    whereExpression?: string | null;
};
