//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { Guid } from "@Obsidian/Types";

/** Contains the response data from launching a workflow. */
export type LaunchWorkflowResponseBag = {
    /** Will contain any errors that occurred while processing the workflow. */
    errors?: string[] | null;

    /**
     * The unique identifier of the launched workflow. Will be an empty
     * Guid value if the workflow was not waited or not set to persist.
     */
    guid: Guid;

    /**
     * The integer identifier of the launched workflow. Will be 0 if the
     * workflow was not waited or not set to persist.
     */
    id: number;

    /**
     * The identifier key of the launched workflow. Will be null if the
     * workflow was not waited or not set to persist.
     */
    idKey?: string | null;

    /**
     * If the workflow was waited and did not fully complete while
     * processing then this value will be true. For example, if the
     * workflow hit an Entry form it will stop processing but remain
     * active.
     */
    isActive: boolean;

    /**
     * The value of the status property for the workflow that was launched.
     * This will be null if the workflow was not waited.
     */
    status?: string | null;
};
