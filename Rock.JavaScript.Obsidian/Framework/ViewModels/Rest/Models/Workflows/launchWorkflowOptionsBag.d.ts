//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

/** Details about how the workflow should be launched. */
export type LaunchWorkflowOptionsBag = {
    /**
     * The attribute values that will be provided to the workflow. The
     * key should match the key of a workflow attribute. The value is the
     * raw database value that it will be set to.
     */
    attributeValues?: Record<string, string> | null;

    /**
     * The entity identifier as either an Id, Guid or IdKey value to
     * launch the workflow with.
     */
    entityId?: string | null;

    /**
     * The entity type identifier as either an Id, Guid, IdKey, or name
     * value. This will be used when loading the entity to launch the
     * workflow with.
     */
    entityTypeId?: string | null;

    /**
     * If true then the workflow will be launched immediately.
     * Otherwise the workflow is launched in the background and may take
     * up to one minute to be launched.
     */
    immediate: boolean;

    /**
     * If true then an error should be returned if the entity
     * was specified but could not be found.
     */
    isEntityRequired: boolean;

    /**
     * The name to set on the workflow. If not provided then a default
     * name will be used based on the workflow type name.
     */
    name?: string | null;

    /**
     * If true then the request will not return until the workflow
     * has launched and completed processing. This will also force
     * Rock.ViewModels.Rest.Models.Workflows.LaunchWorkflowOptionsBag.Immediate to be true.
     */
    wait: boolean;
};
