//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { InteractiveActionExceptionBag } from "@Obsidian/ViewModels/Workflow/interactiveActionExceptionBag";
import { InteractiveMessageBag } from "@Obsidian/ViewModels/Workflow/interactiveMessageBag";

/**
 * Describes how to construct the UI to display a workflow action or
 * display the result of its execution.
 */
export type InteractiveActionDataBag = {
    /**
     * The custom configuration options that will be sent to the component
     * to help it render correctly. These will not be sent back to the
     * server.
     */
    componentConfiguration?: Record<string, string> | null;

    /**
     * The custom data to pass to the component as data values that will
     * then be sent back to the server.
     */
    componentData?: Record<string, string> | null;

    /** The URL of a component to display on the workflow entry block. */
    componentUrl?: string | null;

    /**
     * Describes an error that occurred while processing the component
     * action. This is only valid to be returned during the UpdateAction
     * processing. If this is set, the component will be passed this
     * error and allowed to handle it internally.
     */
    exception?: InteractiveActionExceptionBag | null;

    /**
     * The message details to display to the individual. This may be null
     * to cause a generic message to be displayed, but that should be uncommon.
     */
    message?: InteractiveMessageBag | null;
};
