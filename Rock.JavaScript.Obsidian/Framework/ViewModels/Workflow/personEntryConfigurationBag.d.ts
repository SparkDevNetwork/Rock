//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { WorkflowActionFormPersonEntryOption } from "@Obsidian/Enums/Workflow/workflowActionFormPersonEntryOption";
import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";

/**
 * Defines the configuration information required to display the person entry
 * section inside a user entry form.
 */
export type PersonEntryConfigurationBag = {
    /**
     * Determines if the address field should be hidden, optional, or
     * required.
     */
    addressOption: WorkflowActionFormPersonEntryOption;

    /**
     * Determines if the birthdate field should be hidden, optional, or
     * required.
     */
    birthDateOption: WorkflowActionFormPersonEntryOption;

    /** The list of campuses to display in the campus picker. */
    campuses?: ListItemBag[] | null;

    /** The description to display just below the title. */
    description?: string | null;

    /**
     * Determines if the e-mail field should be hidden, optional, or
     * required.
     */
    emailOption: WorkflowActionFormPersonEntryOption;

    /**
     * Determines if the ethnicity field should be hidden, optional, or
     * required.
     */
    ethnicityOption: WorkflowActionFormPersonEntryOption;

    /**
     * Determines if the gender field should be hidden, optional, or
     * required.
     */
    genderOption: WorkflowActionFormPersonEntryOption;

    /** If true then the campus picker will be visible. */
    isCampusVisible: boolean;

    /** Determines if the SMS opt-in field should be visible. */
    isSmsVisible: boolean;

    /**
     * The list of marital status options to display in the marital status
     * picker.
     */
    maritalStatuses?: ListItemBag[] | null;

    /**
     * Determines if the marital status field should be hidden, optional,
     * or required.
     */
    maritalStatusOption: WorkflowActionFormPersonEntryOption;

    /**
     * Determines if the mobile phone field should be hidden, optional,
     * or required.
     */
    mobilePhoneOption: WorkflowActionFormPersonEntryOption;

    /** Custom HTML to display after the editable fields on the form. */
    postHtml?: string | null;

    /** Custom HTML to display before the editable fields on the form. */
    preHtml?: string | null;

    /**
     * Determines if the race field should be hidden, optional, or
     * required.
     */
    raceOption: WorkflowActionFormPersonEntryOption;

    /** The CSS class to apply to the div that wraps the entire form. */
    sectionCssClass?: string | null;

    /**
     * If true then a separator will be displayed between the
     * title/description and the rest of the form.
     */
    showHeadingSeparator: boolean;

    /**
     * The term to use for "Spouse". This will be used in the checkbox to
     * show/hide the spouse fields and also prefixed on the fields in the
     * spouse area.
     */
    spouseLabel?: string | null;

    /**
     * Determines if the spouse panel should be hidden, optional or
     * required.
     */
    spouseOption: WorkflowActionFormPersonEntryOption;

    /** The title to display at the top of the person entry form. */
    title?: string | null;
};
