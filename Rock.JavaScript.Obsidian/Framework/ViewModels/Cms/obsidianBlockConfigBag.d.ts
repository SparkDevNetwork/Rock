//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { Guid } from "@Obsidian/Types";
import { BlockCustomActionBag } from "@Obsidian/ViewModels/Cms/blockCustomActionBag";

/**
 * Contains the configuration required to initialize an Obsidian block in
 * the web browser.
 */
export type ObsidianBlockConfigBag = {
    /** Gets or sets the URL used to load the Obsidian block JavaScript file. */
    blockFileUrl?: string | null;

    /**
     * Gets or sets the unique identifier of the block that is being
     * represented by this configuration.
     */
    blockGuid?: Guid | null;

    /**
     * Gets or sets the custom configuration values for the block. This
     * object is made available to the block component.
     */
    configurationValues?: unknown;

    /**
     * Gets or sets the custom configuration actions that should be added
     * to the block's configuration bar.
     */
    customConfigurationActions?: BlockCustomActionBag[] | null;

    /**
     * Gets or sets the HTML element identifier that the block will be
     * mounted on as its root.
     */
    rootElementId?: string | null;
};
