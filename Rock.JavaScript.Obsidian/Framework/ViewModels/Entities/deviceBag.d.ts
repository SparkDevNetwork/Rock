//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** Device View Model */
export type DeviceBag = {
    /** Gets or sets the attributes. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the attribute values. */
    attributeValues?: Record<string, string> | null;

    /**
     * Gets or sets the camera barcode configuration.
     * This is currently only used for reading barcodes on iPads.
     */
    cameraBarcodeConfigurationType?: number | null;

    /** Gets or sets the created by person alias identifier. */
    createdByPersonAliasId?: number | null;

    /** Gets or sets the created date time. */
    createdDateTime?: string | null;

    /** Gets or sets a description of the device. */
    description?: string | null;

    /**
     * Gets or sets the Id of the DeviceType Rock.Model.DefinedValue that identifies
     * what type of device this is.
     */
    deviceTypeValueId: number;

    /**
     * Gets or sets a value indicating whether this instance has camera.
     * Only applies when Rock.Model.Device.DeviceTypeValueId is Checkin-Kiosk.
     */
    hasCamera: boolean;

    /** Gets or sets the identifier key of this entity. */
    idKey?: string | null;

    /** Gets or sets the IP address of the device. */
    iPAddress?: string | null;

    /** Gets or sets a value indicating whether this instance is active. */
    isActive: boolean;

    /**
     * The type of checkin client this Check-in Kiosk could be using.
     * Only applies when Rock.Model.Device.DeviceTypeValueId is Checkin-Kiosk.
     */
    kioskType?: number | null;

    /** Gets or sets the Id of the Rock.Model.Location where this device is located at. */
    locationId?: number | null;

    /** Gets or sets the modified by person alias identifier. */
    modifiedByPersonAliasId?: number | null;

    /** Gets or sets the modified date time. */
    modifiedDateTime?: string | null;

    /** Gets or sets the device name. This property is required. */
    name?: string | null;

    /** Gets or sets the DeviceId of the printer that is associated with this device. This is mostly used if this device is a kiosk. */
    printerDeviceId?: number | null;

    /** Gets or sets where print jobs for this device originates from. */
    printFrom: number;

    /** Gets or sets a flag that overrides which printer the print job is set to. */
    printToOverride: number;
};
