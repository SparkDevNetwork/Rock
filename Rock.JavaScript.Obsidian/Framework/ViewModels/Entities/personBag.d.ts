//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { Guid } from "@Obsidian/Types";
import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** Person View Model */
export type PersonBag = {
    /** Gets or sets the person's account protection profile, which is used by the duplication detection and merge processes. */
    accountProtectionProfile: number;

    /**
     * Gets or sets the age classification of the Person.
     * Note: This is computed on save, so any manual changes to this will be ignored.
     */
    ageClassification: number;

    /** Gets or sets the date of the Person's wedding anniversary.  This property is nullable if the Person is not married or their anniversary date is not known. */
    anniversaryDate?: string | null;

    /** Gets or sets the day of the month portion of the Person's birth date. */
    birthDay?: number | null;

    /** Gets or sets the month portion of the Person's birth date. */
    birthMonth?: number | null;

    /** Gets or sets the year portion of the Person's birth date. */
    birthYear?: number | null;

    /** Gets or sets the communication preference. */
    communicationPreference: number;

    /** Gets or sets the Id of the Defined Value Rock.Model.DefinedValue representing the connection status of the Person. */
    connectionStatusValueId?: number | null;

    /** Gets or sets the person's default financial account gift designation. */
    contributionFinancialAccountId?: number | null;

    /** Gets or sets the deceased date. */
    deceasedDate?: string | null;

    /** Gets or sets the Person's email address. */
    email?: string | null;

    /** Gets or sets a note about the Person's email address. */
    emailNote?: string | null;

    /** Gets or sets the email preference. */
    emailPreference: number;

    /** Gets or sets the first name of the Person. */
    firstName?: string | null;

    /** Gets or sets the gender of the Person. This property is required. */
    gender: number;

    /**
     * Gets or sets the giving group id.  If an individual would like their giving to be grouped with the rest of their family,
     * this will be the id of their family group.  If they elect to contribute on their own, this value will be null.
     */
    givingGroupId?: number | null;

    /**
     * Gets or sets the giving leader's Person Id.
     * Note: This is computed on save, so any manual changes to this will be ignored.
     */
    givingLeaderId: number;

    /** Gets or sets the date of the Person's projected or actual high school graduation year. This value is used to determine what grade a student is in. */
    graduationYear?: number | null;

    /** Gets or sets the Inactive Reason Note */
    inactiveReasonNote?: string | null;

    /** Gets or sets a flag indicating if the Person is deceased. */
    isDeceased: boolean;

    /** Gets or sets a flag indicating if the Person's email address is active. */
    isEmailActive: boolean;

    /** Gets or sets a flag indicating if the Person is locked as child. */
    isLockedAsChild: boolean;

    /** Gets or sets a flag indicating if this Person is part of the Rock core system/framework. This property is required. */
    isSystem: boolean;

    /** Gets or sets the last name (Sir Name) of the Person. */
    lastName?: string | null;

    /** Gets or sets Id of the Marital Status Rock.Model.DefinedValue representing the Person's marital status. */
    maritalStatusValueId?: number | null;

    /** Gets or sets the middle name of the Person. */
    middleName?: string | null;

    /** Gets or sets the nick name of the Person.  If a nickname was not entered, the first name is used. */
    nickName?: string | null;

    /** Gets or sets the Id of the Rock.Model.BinaryFile that contains the photo of the Person. */
    photoId?: number | null;

    /** Gets or sets the DefinedValueId of the Rock.Model.DefinedValue that represents the Preferred Language for this person. */
    preferredLanguageValueId?: number | null;

    /**
     * Gets or sets the campus id for the primary family.
     * Note: This is computed on save, so any manual changes to this will be ignored.
     */
    primaryCampusId?: number | null;

    /**
     * Gets or sets the group id for the Rock.Model.Person.PrimaryFamily.
     * Note: This is computed on save, so any manual changes to this will be ignored.
     */
    primaryFamilyId?: number | null;

    /** Gets or sets the record status last modified date time. */
    recordStatusLastModifiedDateTime?: string | null;

    /** Gets or sets the Id of the Record Status Reason Rock.Model.DefinedValue representing the reason why a person record status would have a set status. */
    recordStatusReasonValueId?: number | null;

    /** Gets or sets the Id of the Record Status Rock.Model.DefinedValue representing the status of this entity */
    recordStatusValueId?: number | null;

    /** Gets or sets the Id of the Person Record Type Rock.Model.DefinedValue representing what type of Person Record this is. */
    recordTypeValueId?: number | null;

    /** Gets or sets notes about why a person profile needs to be reviewed */
    reviewReasonNote?: string | null;

    /** Gets or sets the Id of the Defined Value Rock.Model.DefinedValue representing the reason a record needs to be reviewed. */
    reviewReasonValueId?: number | null;

    /** Gets or sets the Id of the Person's name Suffix Rock.Model.DefinedValue. */
    suffixValueId?: number | null;

    /** Gets or sets the System Note */
    systemNote?: string | null;

    /** Gets or sets Id of the (Salutation) Tile Rock.Model.DefinedValue that is associated with the Person */
    titleValueId?: number | null;

    /**
     * Gets or sets the name of the top signal color. This property is used to indicate the icon color
     * on a person if they have a related signal.
     */
    topSignalColor?: string | null;

    /**
     * Gets or sets the name of the top signal CSS class. This property is used to indicate which icon to display
     * on a person if they have a related signal.
     */
    topSignalIconCssClass?: string | null;

    /** Gets or sets the highest priority PersonSignal associated with this person. */
    topSignalId?: number | null;

    /** Gets or sets the count of the number of times that the Person has been viewed. */
    viewedCount?: number | null;

    /** Gets or sets the created date time. */
    createdDateTime?: string | null;

    /** Gets or sets the modified date time. */
    modifiedDateTime?: string | null;

    /** Gets or sets the created by person alias identifier. */
    createdByPersonAliasId?: number | null;

    /** Gets or sets the modified by person alias identifier. */
    modifiedByPersonAliasId?: number | null;

    /** Gets or sets the full name. */
    fullName?: string | null;

    /** Gets or sets the photo URL. */
    photoUrl?: string | null;

    /** Gets or sets the primary family unique identifier. */
    primaryFamilyGuid?: Guid | null;

    /** Gets or sets the identifier key of this entity. */
    idKey?: string | null;

    /** Gets or sets the attributes. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the attribute values. */
    attributeValues?: Record<string, string> | null;
};
