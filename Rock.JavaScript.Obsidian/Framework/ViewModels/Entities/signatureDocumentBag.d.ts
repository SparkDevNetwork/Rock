//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** SignatureDocument View Model */
export type SignatureDocumentBag = {
    /** Gets or sets the applies to person alias identifier. */
    appliesToPersonAliasId?: number | null;

    /** Gets or sets the assigned to person alias identifier. */
    assignedToPersonAliasId?: number | null;

    /** Gets or sets the attributes. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the attribute values. */
    attributeValues?: Record<string, string> | null;

    /** Gets or sets the binary file identifier. */
    binaryFileId?: number | null;

    /** The date and time the document completion email was sent. */
    completionEmailSentDateTime?: string | null;

    /** Gets or sets the created by person alias identifier. */
    createdByPersonAliasId?: number | null;

    /** Gets or sets the created date time. */
    createdDateTime?: string | null;

    /** Gets or sets the document key. */
    documentKey?: string | null;

    /** The ID of the entity to which the document is related. */
    entityId?: number | null;

    /** The EntityType that this document is related to (example Rock.Model.Registration) */
    entityTypeId?: number | null;

    /** Gets or sets the identifier key of this entity. */
    idKey?: string | null;

    /** Gets or sets the invite count. */
    inviteCount: number;

    /** Gets or sets the request date. */
    lastInviteDate?: string | null;

    /** Gets or sets the last status date. */
    lastStatusDate?: string | null;

    /** Gets or sets the modified by person alias identifier. */
    modifiedByPersonAliasId?: number | null;

    /** Gets or sets the modified date time. */
    modifiedDateTime?: string | null;

    /** Gets or sets the name. */
    name?: string | null;

    /**
     * The encrypted data that was collected during a drawn signature type.
     * Use Rock.Model.SignatureDocument.SignatureData to set this from the unencrypted drawn signature.
     */
    signatureDataEncrypted?: string | null;

    /** Gets or sets the SignatureDocumentTemplateId of the Rock.Model.SignatureDocumentTemplate that this SignatureDocument instance is executing. */
    signatureDocumentTemplateId: number;

    /**
     * The computed SHA1 hash for the SignedDocumentText, SignedClientIP address, SignedClientUserAgent, SignedDateTime, SignedByPersonAliasId, SignatureData, and SignedName.
     * This hash can be used to prove the authenticity of the unaltered signature document.
     * This is only calculated once during the pre-save event when the SignedDateTime was originally null/empty but now has a value.
     */
    signatureVerificationHash?: string | null;

    /** The email address that was used to send the completion receipt. */
    signedByEmail?: string | null;

    /** Gets or sets the signed by person alias identifier. */
    signedByPersonAliasId?: number | null;

    /** The observed IP address of the client system of the individual who signed the document. */
    signedClientIp?: string | null;

    /** The observed 'user agent' of the client system of the individual who signed the document. */
    signedClientUserAgent?: string | null;

    /** The date and time the document was signed. */
    signedDateTime?: string | null;

    /**
     * The resulting text/document using the Lava template from the Rock.Model.SignatureDocumentTemplate at the time the document was signed.
     * Does not include the signature data. It would be what they saw just prior to signing.
     */
    signedDocumentText?: string | null;

    /** The name of the individual who signed the document. */
    signedName?: string | null;

    /** Gets or sets the status. */
    status: number;
};
