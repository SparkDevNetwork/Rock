//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** Metric View Model */
export type MetricBag = {
    /** Gets or sets the admin person alias identifier. */
    adminPersonAliasId?: number | null;

    /** Gets or sets the attributes. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the attribute values. */
    attributeValues?: Record<string, string> | null;

    /** If set to true this feature will auto partition the individuals in the data view based on their primary campus. */
    autoPartitionOnPrimaryCampus: boolean;

    /** Gets or sets the created by person alias identifier. */
    createdByPersonAliasId?: number | null;

    /** Gets or sets the created date time. */
    createdDateTime?: string | null;

    /** Gets or sets the data view identifier. */
    dataViewId?: number | null;

    /** Gets or sets a user defined description of the Metric. */
    description?: string | null;

    /**
     * Gets or sets a value indicating whether [enable analytics].
     * If this is enabled, a SQL View named 'AnalyticsFactMetric{{Metric.Name}}' will be made available that can be used by Analytic tools, such as Power BI
     */
    enableAnalytics: boolean;

    /** Gets or sets the icon CSS class. */
    iconCssClass?: string | null;

    /** Gets or sets the identifier key of this entity. */
    idKey?: string | null;

    /** Gets or sets a value indicating whether [is cumulative]. */
    isCumulative: boolean;

    /** Gets or sets a flag indicating if this Metric is part of the Rock core system/framework. This property is required. */
    isSystem: boolean;

    /** For SQL or DataView based Metrics, this is the DateTime that the MetricValues where scheduled to be updated according to Schedule */
    lastRunDateTime?: string | null;

    /** Gets or sets the metric champion person alias identifier. */
    metricChampionPersonAliasId?: number | null;

    /** Gets or sets the modified by person alias identifier. */
    modifiedByPersonAliasId?: number | null;

    /** Gets or sets the modified date time. */
    modifiedDateTime?: string | null;

    /**
     * Gets or sets the type of the numeric data that the values represent. Although all values
     * are stored as a decimal, specifying the type here allows entry screens to use appropriate
     * controls/validation when entering values.
     */
    numericDataType: number;

    /** Gets or sets the schedule identifier. */
    scheduleId?: number | null;

    /** Gets or sets the Lava code that returns the data for the Metric. */
    sourceLava?: string | null;

    /** Gets or sets the SQL query that returns the data for the Metric. */
    sourceSql?: string | null;

    /** Gets or sets the source value type identifier. */
    sourceValueTypeId?: number | null;

    /** Gets or sets the Subtitle of the Metric. */
    subtitle?: string | null;

    /** Gets or sets the Title of this Metric. */
    title?: string | null;

    /** Gets or sets the type of the unit. */
    unitType: number;

    /**
     * Gets or sets the x axis label.
     * Note that in Rock, graphs typically actually use the MetricValue.MetricValueDateTime as the graph's X Axis.
     * Therefore, in most cases, Metric.XAxisLabel and MetricValue.XAxis are NOT used
     */
    xAxisLabel?: string | null;

    /** Gets or sets the y axis label. */
    yAxisLabel?: string | null;
};
