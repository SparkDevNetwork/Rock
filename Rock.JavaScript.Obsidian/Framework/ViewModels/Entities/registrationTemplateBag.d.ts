//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** RegistrationTemplate View Model */
export type RegistrationTemplateBag = {
    /** Gets or sets a value indicating whether a person note should be added when a person registers for this type of registration. */
    addPersonNote: boolean;

    /** Gets or sets a value indicating whether to allow external registration updates (should a person be able to update their registration on-line after submitting it). */
    allowExternalRegistrationUpdates: boolean;

    /** Gets or sets a value indicating whether [allow multiple registrants]. */
    allowMultipleRegistrants: boolean;

    /** Gets or sets the attributes. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the attribute values. */
    attributeValues?: Record<string, string> | null;

    /** Gets or sets the batch name prefix. */
    batchNamePrefix?: string | null;

    /** Gets or sets the category identifier. */
    categoryId?: number | null;

    /** Gets or sets the confirmation email text to send. */
    confirmationEmailTemplate?: string | null;

    /** Gets or sets the confirmation from email. */
    confirmationFromEmail?: string | null;

    /** Gets or sets the name of the confirmation from. */
    confirmationFromName?: string | null;

    /** Gets or sets the confirmation subject. */
    confirmationSubject?: string | null;

    /** Gets or sets the cost (if Rock.Model.RegistrationTemplate.SetCostOnInstance == false). */
    cost: number;

    /** Gets or sets the created by person alias identifier. */
    createdByPersonAliasId?: number | null;

    /** Gets or sets the created date time. */
    createdDateTime?: string | null;

    /**
     * Gets or sets the default amount to pay per registrant (if Rock.Model.RegistrationTemplate.SetCostOnInstance == false).
     * If this is null, the default payment will be the Rock.Model.RegistrationTemplate.Cost
     */
    defaultPayment?: number | null;

    /** Gets or sets the description of the Attribute. */
    description?: string | null;

    /** Gets or sets the term to use for discount code */
    discountCodeTerm?: string | null;

    /** Gets or sets the term to use for fee */
    feeTerm?: string | null;

    /** Gets or sets the financial gateway identifier. */
    financialGatewayId?: number | null;

    /** Gets or sets the group member role that registrants will be added to group as */
    groupMemberRoleId?: number | null;

    /** Gets or sets the group member status that registrants will be added to group with. */
    groupMemberStatus: number;

    /** Gets or sets the group type that this registration template applies to */
    groupTypeId?: number | null;

    /** Gets or sets the identifier key of this entity. */
    idKey?: string | null;

    /** Gets or sets a value indicating whether this instance is active. */
    isActive: boolean;

    /** Gets or sets a value indicating whether this instance is registration metering enabled. */
    isRegistrationMeteringEnabled: boolean;

    /** Gets or sets a value indicating whether [log in required]. */
    loginRequired: boolean;

    /** Gets or sets the maximum registrants. */
    maxRegistrants?: number | null;

    /** Gets or sets the minimum initial payment (if Rock.Model.RegistrationTemplate.SetCostOnInstance == false). */
    minimumInitialPayment?: number | null;

    /** Gets or sets the modified by person alias identifier. */
    modifiedByPersonAliasId?: number | null;

    /** Gets or sets the modified date time. */
    modifiedDateTime?: string | null;

    /** Gets or sets the name of the registration template */
    name?: string | null;

    /** Gets or sets the notify. */
    notify: number;

    /** Gets or sets the payment reminder email template. */
    paymentReminderEmailTemplate?: string | null;

    /** Gets or sets the payment reminder from email. */
    paymentReminderFromEmail?: string | null;

    /** Gets or sets the name of the payment reminder from. */
    paymentReminderFromName?: string | null;

    /** Gets or sets the payment reminder subject. */
    paymentReminderSubject?: string | null;

    /** Gets or sets the payment reminder time span in days. */
    paymentReminderTimeSpan?: number | null;

    /** Gets or sets the plural registrant term. */
    pluralRegistrantTerm?: string | null;

    /** Gets or sets flag indicating if registrants registered for this template are typically in same family. values are ( yes, no, ask ). */
    registrantsSameFamily: number;

    /** Gets or sets the term to use for registrant */
    registrantTerm?: string | null;

    /** Optional workflow type to launch for registrant */
    registrantWorkflowTypeId?: number | null;

    /** Gets or sets the registrar option. */
    registrarOption: number;

    /** Gets or sets the section title for attributes that are collected at the end of the registration entry process. */
    registrationAttributeTitleEnd?: string | null;

    /** Gets or sets the section title for attributes that are collected at the start of the registration entry process. */
    registrationAttributeTitleStart?: string | null;

    /** Gets or sets the registration instructions. */
    registrationInstructions?: string | null;

    /** Gets or sets the term to use for registration */
    registrationTerm?: string | null;

    /** Optional workflow type to launch at end of registration */
    registrationWorkflowTypeId?: number | null;

    /** Gets or sets the reminder email template. */
    reminderEmailTemplate?: string | null;

    /** Gets or sets the reminder from email. */
    reminderFromEmail?: string | null;

    /** Gets or sets the name of the reminder from. */
    reminderFromName?: string | null;

    /** Gets or sets the reminder subject. */
    reminderSubject?: string | null;

    /** Gets or sets the name of the request entry. */
    requestEntryName?: string | null;

    /** Gets or sets the required signature document type identifier. */
    requiredSignatureDocumentTemplateId?: number | null;

    /** Gets or sets the set cost on instance. */
    setCostOnInstance?: boolean | null;

    /** Gets or sets a value indicating whether [show current family members]. */
    showCurrentFamilyMembers: boolean;

    /** Gets or sets the signature documentation. */
    signatureDocumentAction: number;

    /** Gets or sets the success text. */
    successText?: string | null;

    /** Gets or sets the success title. */
    successTitle?: string | null;

    /** Gets or sets a value indicating whether a wait list is enabled for this event template */
    waitListEnabled: boolean;

    /** Gets or sets the wait list transition email template. */
    waitListTransitionEmailTemplate?: string | null;

    /** Gets or sets the wait list transition from email. */
    waitListTransitionFromEmail?: string | null;

    /** Gets or sets the name of the wait list transition from. */
    waitListTransitionFromName?: string | null;

    /** Gets or sets the wait list transition subject. */
    waitListTransitionSubject?: string | null;
};
