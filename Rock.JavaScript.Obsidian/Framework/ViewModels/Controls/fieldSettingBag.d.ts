//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { AttributeFormat } from "@Obsidian/Enums/Controls/attributeFormat";
import { FieldFormat } from "@Obsidian/Enums/Controls/fieldFormat";
import { FieldSource } from "@Obsidian/Enums/Controls/fieldSource";

/**
 * POCO to store the settings for the fields.
 * This is copied from Rock/Mobile/JsonFields/FieldSetting.cs. If any changes are made here,
 * they may need to be copied there as well.
 */
export type FieldSettingBag = {
    /** Gets or sets the attribute format. */
    attributeFormat: AttributeFormat;

    /** Gets or sets the field format. */
    fieldFormat: FieldFormat;

    /** Gets or sets the name of the property. */
    fieldName?: string | null;

    /** Gets or sets the field source. */
    fieldSource: FieldSource;

    /** Creates an identifier based off the key. This is used for grid operations. */
    id: number;

    /** Gets or sets the field key. */
    key?: string | null;

    /** Gets or sets the field value. */
    value?: string | null;
};
