//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

/**
 * Defines how processing will proceed after an interactive action has been
 * processed.
 */
export const InteractiveActionContinueMode = {
    /**
     * Workflow processing will stop after the current interactive action.
     * The action response details will be returned to the client.
     */
    Stop: 0,

    /**
     * Workflow processing will continue. If another interactive action
     * needs to be processed then it will be processed and replace the
     * current response details.
     */
    Continue: 1,

    /**
     * Workflow processing will continue but stop before another interactive
     * action is processed. The action response details will be returned to
     * the client.
     */
    ContinueWhileUnattended: 2
} as const;

/**
 * Defines how processing will proceed after an interactive action has been
 * processed.
 */
export const InteractiveActionContinueModeDescription: Record<number, string> = {
    0: "Stop",

    1: "Continue",

    2: "Continue While Unattended"
};

/**
 * Defines how processing will proceed after an interactive action has been
 * processed.
 */
export type InteractiveActionContinueMode = typeof InteractiveActionContinueMode[keyof typeof InteractiveActionContinueMode];
