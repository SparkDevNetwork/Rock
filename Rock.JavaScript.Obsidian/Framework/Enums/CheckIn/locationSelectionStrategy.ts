//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

/**
 * If a group has more than one available location how should one be
 * selected. Choosing an option other than "Ask" will auto select a location
 * for the attendee.
 */
export const LocationSelectionStrategy = {
    /**
     * The Ask strategy will present a list of rooms to the user so they
     * can select one. This is the default behavior.
     */
    Ask: 0,

    /**
     * The balance strategy will attempt to fill all locations with an
     * equal number of persons up to the soft threshold.
     */
    Balance: 1,

    /**
     * The Fill In Order strategy will fill in the locations in a group in
     * their sort order. When the location's soft threshold is reached the
     * next one is used untill it fills up.
     */
    FillInOrder: 2
} as const;

/**
 * If a group has more than one available location how should one be
 * selected. Choosing an option other than "Ask" will auto select a location
 * for the attendee.
 */
export const LocationSelectionStrategyDescription: Record<number, string> = {
    0: "Ask",

    1: "Balance",

    2: "Fill In Order"
};

/**
 * If a group has more than one available location how should one be
 * selected. Choosing an option other than "Ask" will auto select a location
 * for the attendee.
 */
export type LocationSelectionStrategy = typeof LocationSelectionStrategy[keyof typeof LocationSelectionStrategy];
