//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

/** The inferred status of a communication. */
export const InferredCommunicationStatus = {
    /**
     * Communication was created, but not yet edited by a user. (i.e. from data grid or report)
     * Transient communications more than a few hours old may be deleted by clean-up job.
     */
    Transient: 0,

    /** Communication is currently being drafted */
    Draft: 1,

    /** Communication has been submitted but not yet approved or denied */
    PendingApproval: 2,

    /** Communication has been approved for sending */
    Approved: 3,

    /** Communication has been denied */
    Denied: 4,

    /** The communication is in the process of being sent. */
    Sending: 5,

    /** The communication has been sent to all recipients. */
    Sent: 6
} as const;

/** The inferred status of a communication. */
export const InferredCommunicationStatusDescription: Record<number, string> = {
    0: "Transient",

    1: "Draft",

    2: "Pending Approval",

    3: "Approved",

    4: "Denied",

    5: "Sending",

    6: "Sent"
};

/** The inferred status of a communication. */
export type InferredCommunicationStatus = typeof InferredCommunicationStatus[keyof typeof InferredCommunicationStatus];
