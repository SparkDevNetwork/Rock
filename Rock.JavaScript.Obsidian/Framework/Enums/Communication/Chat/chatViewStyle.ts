//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

/** Represents the visual style of the chat experience. */
export const ChatViewStyle = {
    /**
     * A simple, text-message-style layout.
     * This mode emphasizes linear conversations and is ideal for one-on-one or small group chats.
     * Messages appear in a flowing, bubble-style format similar to traditional SMS or mobile messaging.
     */
    Conversational: 0,

    /**
     * A more structured layout for larger group communication.
     * This mode supports organized discussions with clear visual separation,
     * making it easier to follow multiple topics or conversations within a group.
     * Best suited for teams, communities, or discussions with multiple participants.
     */
    Community: 1
} as const;

/** Represents the visual style of the chat experience. */
export const ChatViewStyleDescription: Record<number, string> = {
    0: "Conversational",

    1: "Community"
};

/** Represents the visual style of the chat experience. */
export type ChatViewStyle = typeof ChatViewStyle[keyof typeof ChatViewStyle];
