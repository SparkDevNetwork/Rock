//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

/** The unsubscibe scope for a Communication Flow Instance Recipient. */
export const CommunicationFlowInstanceRecipientUnsubscribeScope = {
    /** The recipient unsubscribed from a Communication Flow Instance. They will not receive subsequent communications from this instance. */
    CommunicationFlowInstance: 1,

    /** The recipient has unsubscribed from a Communication Flow. They will not receive any communications from this instance, including any other instances of the flow. */
    CommunicationFlow: 2
} as const;

/** The unsubscibe scope for a Communication Flow Instance Recipient. */
export const CommunicationFlowInstanceRecipientUnsubscribeScopeDescription: Record<number, string> = {
    1: "Communication Flow Instance",

    2: "Communication Flow"
};

/** The unsubscibe scope for a Communication Flow Instance Recipient. */
export type CommunicationFlowInstanceRecipientUnsubscribeScope = typeof CommunicationFlowInstanceRecipientUnsubscribeScope[keyof typeof CommunicationFlowInstanceRecipientUnsubscribeScope];
